commit a12713c25b36cbbc1a3204b2a49a72f7bc8a8847
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Wed Jun 21 09:07:00 2017 +0200

    KVM: SVM: don't NMI singlestep over event injection
    
    Singlestepping is enabled by setting the TF flag and care must be
    taken to not let the guest see (and reuse at an inconvenient time)
    the modified rflag value. One such case is event injection, as part
    of which flags are pushed on the stack and restored later on iret.
    
    This commit disables singlestepping when we're about to inject an
    event and forces an immediate exit for us to re-evaluate the NMI
    related state.
    
    Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 6ac9bcd7f6f0..597337987a16 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -4823,6 +4823,22 @@ static void svm_vcpu_run(struct kvm_vcpu *vcpu)
 	if (unlikely(svm->nested.exit_required))
 		return;
 
+	/*
+	 * Disable singlestep if we're injecting an interrupt/exception.
+	 * We don't want our modified rflags to be pushed on the stack where
+	 * we might not be able to easily reset them if we disabled NMI
+	 * singlestep later.
+	 */
+	if (svm->nmi_singlestep && svm->vmcb->control.event_inj) {
+		/*
+		 * Event injection happens before external interrupts cause a
+		 * vmexit and interrupts are disabled here, so smp_send_reschedule
+		 * is enough to force an immediate vmexit.
+		 */
+		disable_nmi_singlestep(svm);
+		smp_send_reschedule(vcpu->cpu);
+	}
+
 	pre_svm_run(svm);
 
 	sync_lapic_to_cr8(vcpu);