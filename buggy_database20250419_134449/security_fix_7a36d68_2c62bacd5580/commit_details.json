{
  "hash": "7a36d680658ba5a0d350f2ad275b97156b8d4333",
  "hash_short": "7a36d680",
  "subject": "KVM: x86/xen: fix recursive deadlock in timer injection",
  "body": "The fast-path timer delivery introduced a recursive locking deadlock\nwhen userspace configures a timer which has already expired and is\ndelivered immediately. The call to kvm_xen_inject_timer_irqs() can\ncall to kvm_xen_set_evtchn() which may take kvm->arch.xen.xen_lock,\nwhich is already held in kvm_xen_vcpu_get_attr().\n\n ============================================\n WARNING: possible recursive locking detected\n 6.8.0-smp--5e10b4d51d77-drs #232 Tainted: G           O\n --------------------------------------------\n xen_shinfo_test/250013 is trying to acquire lock:\n ffff938c9930cc30 (&kvm->arch.xen.xen_lock){+.+.}-{3:3}, at: kvm_xen_set_evtchn+0x74/0x170 [kvm]\n\n but task is already holding lock:\n ffff938c9930cc30 (&kvm->arch.xen.xen_lock){+.+.}-{3:3}, at: kvm_xen_vcpu_get_attr+0x38/0x250 [kvm]\n\nNow that the gfn_to_pfn_cache has its own self-sufficient locking, its\ncallers no longer need to ensure serialization, so just stop taking\nkvm->arch.xen.xen_lock from kvm_xen_set_evtchn().\n\nFixes: 77c9b9dea4fb (\"KVM: x86/xen: Use fast path for Xen timer delivery\")\nSigned-off-by: David Woodhouse <dwmw@amazon.co.uk>\nReviewed-by: Paul Durrant <paul@xen.org>\nLink: https://lore.kernel.org/r/20240227115648.3104-6-dwmw2@infradead.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>",
  "full_message": "KVM: x86/xen: fix recursive deadlock in timer injection\n\nThe fast-path timer delivery introduced a recursive locking deadlock\nwhen userspace configures a timer which has already expired and is\ndelivered immediately. The call to kvm_xen_inject_timer_irqs() can\ncall to kvm_xen_set_evtchn() which may take kvm->arch.xen.xen_lock,\nwhich is already held in kvm_xen_vcpu_get_attr().\n\n ============================================\n WARNING: possible recursive locking detected\n 6.8.0-smp--5e10b4d51d77-drs #232 Tainted: G           O\n --------------------------------------------\n xen_shinfo_test/250013 is trying to acquire lock:\n ffff938c9930cc30 (&kvm->arch.xen.xen_lock){+.+.}-{3:3}, at: kvm_xen_set_evtchn+0x74/0x170 [kvm]\n\n but task is already holding lock:\n ffff938c9930cc30 (&kvm->arch.xen.xen_lock){+.+.}-{3:3}, at: kvm_xen_vcpu_get_attr+0x38/0x250 [kvm]\n\nNow that the gfn_to_pfn_cache has its own self-sufficient locking, its\ncallers no longer need to ensure serialization, so just stop taking\nkvm->arch.xen.xen_lock from kvm_xen_set_evtchn().\n\nFixes: 77c9b9dea4fb (\"KVM: x86/xen: Use fast path for Xen timer delivery\")\nSigned-off-by: David Woodhouse <dwmw@amazon.co.uk>\nReviewed-by: Paul Durrant <paul@xen.org>\nLink: https://lore.kernel.org/r/20240227115648.3104-6-dwmw2@infradead.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>",
  "author_name": "David Woodhouse",
  "author_email": "dwmw@amazon.co.uk",
  "author_date": "Tue Feb 27 11:49:19 2024 +0000",
  "author_date_iso": "2024-02-27T11:49:19+00:00",
  "committer_name": "Sean Christopherson",
  "committer_email": "seanjc@google.com",
  "committer_date": "Mon Mar 4 16:22:39 2024 -0800",
  "committer_date_iso": "2024-03-04T16:22:39-08:00",
  "files_changed": [
    "arch/x86/kvm/xen.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/xen.c",
      "insertions": 0,
      "deletions": 4
    }
  ],
  "total_insertions": 0,
  "total_deletions": 4,
  "total_changes": 4,
  "parents": [
    "6addfcf27139da1356493f2a440af1252b5b7dbe"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/xen.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}