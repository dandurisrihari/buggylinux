{
  "hash": "cb74e9775871f8c82a1297cf76209f10ab5bbe3d",
  "hash_short": "cb74e977",
  "subject": "cfg80211/nl80211: Offload OWE processing to user space in AP mode",
  "body": "This interface allows the host driver to offload OWE processing\nto user space. This intends to support OWE (Opportunistic Wireless\nEncryption) AKM by the drivers that implement SME but rely on the\nuser space for the cryptographic/OWE processing in AP mode. Such\ndrivers are not capable of processing/deriving the DH IE.\n\nA new NL80211 command - NL80211_CMD_UPDATE_OWE_INFO is introduced\nto send the request/event between the host driver and user space.\n\nDriver shall provide the OWE info (MAC address and DH IE) of\nthe peer to user space for cryptographic processing of the DH IE\nthrough the event. Accordingly, the user space shall update the\nOWE info/DH IE to the driver.\n\nFollowing is the sequence in AP mode for OWE authentication.\n\nDriver passes the OWE info obtained from the peer in the\nAssociation Request to the user space through the event\ncfg80211_update_owe_info_event. User space shall process the\nOWE info received and generate new OWE info. This OWE info is\npassed to the driver through NL80211_CMD_UPDATE_OWE_INFO\nrequest. Driver eventually uses this OWE info to send the\nAssociation Response to the peer.\n\nThis OWE info in the command interface carries the IEs that include\nPMKID of the peer if the PMKSA is still valid or an updated DH IE\nfor generating a new PMKSA with the peer.\n\nSigned-off-by: Liangwei Dong <liangwei@codeaurora.org>\nSigned-off-by: Sunil Dutt <usdutt@codeaurora.org>\nSigned-off-by: Srinivas Dasari <dasaris@codeaurora.org>\n[remove policy initialization - no longer exists]\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "full_message": "cfg80211/nl80211: Offload OWE processing to user space in AP mode\n\nThis interface allows the host driver to offload OWE processing\nto user space. This intends to support OWE (Opportunistic Wireless\nEncryption) AKM by the drivers that implement SME but rely on the\nuser space for the cryptographic/OWE processing in AP mode. Such\ndrivers are not capable of processing/deriving the DH IE.\n\nA new NL80211 command - NL80211_CMD_UPDATE_OWE_INFO is introduced\nto send the request/event between the host driver and user space.\n\nDriver shall provide the OWE info (MAC address and DH IE) of\nthe peer to user space for cryptographic processing of the DH IE\nthrough the event. Accordingly, the user space shall update the\nOWE info/DH IE to the driver.\n\nFollowing is the sequence in AP mode for OWE authentication.\n\nDriver passes the OWE info obtained from the peer in the\nAssociation Request to the user space through the event\ncfg80211_update_owe_info_event. User space shall process the\nOWE info received and generate new OWE info. This OWE info is\npassed to the driver through NL80211_CMD_UPDATE_OWE_INFO\nrequest. Driver eventually uses this OWE info to send the\nAssociation Response to the peer.\n\nThis OWE info in the command interface carries the IEs that include\nPMKID of the peer if the PMKSA is still valid or an updated DH IE\nfor generating a new PMKSA with the peer.\n\nSigned-off-by: Liangwei Dong <liangwei@codeaurora.org>\nSigned-off-by: Sunil Dutt <usdutt@codeaurora.org>\nSigned-off-by: Srinivas Dasari <dasaris@codeaurora.org>\n[remove policy initialization - no longer exists]\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "author_name": "Sunil Dutt",
  "author_email": "usdutt@codeaurora.org",
  "author_date": "Wed Feb 20 16:18:07 2019 +0530",
  "author_date_iso": "2019-02-20T16:18:07+05:30",
  "committer_name": "Johannes Berg",
  "committer_email": "johannes.berg@intel.com",
  "committer_date": "Mon Apr 8 14:32:23 2019 +0200",
  "committer_date_iso": "2019-04-08T14:32:23+02:00",
  "files_changed": [
    "include/net/cfg80211.h",
    "include/uapi/linux/nl80211.h",
    "net/wireless/nl80211.c",
    "net/wireless/rdev-ops.h",
    "net/wireless/trace.h"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "include/net/cfg80211.h",
      "insertions": 42,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/nl80211.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "net/wireless/nl80211.c",
      "insertions": 72,
      "deletions": 0
    },
    {
      "file": "net/wireless/rdev-ops.h",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "net/wireless/trace.h",
      "insertions": 38,
      "deletions": 0
    }
  ],
  "total_insertions": 172,
  "total_deletions": 0,
  "total_changes": 172,
  "parents": [
    "ab60633c7136c300f15a390f3469d7c4be15a055"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.2",
    "v5.2-rc1",
    "v5.2-rc2",
    "v5.2-rc3",
    "v5.2-rc4",
    "v5.2-rc5",
    "v5.2-rc6",
    "v5.2-rc7",
    "v5.3",
    "v5.3-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/net/cfg80211.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/linux/nl80211.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/wireless/nl80211.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/wireless/rdev-ops.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/wireless/trace.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}