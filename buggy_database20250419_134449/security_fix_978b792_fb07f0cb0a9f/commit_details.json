{
  "hash": "978b7922d3dca672b41bb4b8ce6c06ab77112741",
  "hash_short": "978b7922",
  "subject": "scsi: core: Fix a race between scsi_done() and scsi_timeout()",
  "body": "If there is a race between scsi_done() and scsi_timeout() and if\nscsi_timeout() loses the race, scsi_timeout() should not reset the request\ntimer. Hence change the return value for this case from BLK_EH_RESET_TIMER\ninto BLK_EH_DONE.\n\nAlthough the block layer holds a reference on a request (req->ref) while\ncalling a timeout handler, restarting the timer (blk_add_timer()) while a\nrequest is being completed is racy.\n\nReviewed-by: Mike Christie <michael.christie@oracle.com>\nCc: Keith Busch <kbusch@kernel.org>\nCc: Christoph Hellwig <hch@lst.de>\nCc: Ming Lei <ming.lei@redhat.com>\nCc: John Garry <john.garry@huawei.com>\nCc: Hannes Reinecke <hare@suse.de>\nReported-by: Adrian Hunter <adrian.hunter@intel.com>\nFixes: 15f73f5b3e59 (\"blk-mq: move failure injection out of blk_mq_complete_request\")\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>\nLink: https://lore.kernel.org/r/20221018202958.1902564-2-bvanassche@acm.org\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: core: Fix a race between scsi_done() and scsi_timeout()\n\nIf there is a race between scsi_done() and scsi_timeout() and if\nscsi_timeout() loses the race, scsi_timeout() should not reset the request\ntimer. Hence change the return value for this case from BLK_EH_RESET_TIMER\ninto BLK_EH_DONE.\n\nAlthough the block layer holds a reference on a request (req->ref) while\ncalling a timeout handler, restarting the timer (blk_add_timer()) while a\nrequest is being completed is racy.\n\nReviewed-by: Mike Christie <michael.christie@oracle.com>\nCc: Keith Busch <kbusch@kernel.org>\nCc: Christoph Hellwig <hch@lst.de>\nCc: Ming Lei <ming.lei@redhat.com>\nCc: John Garry <john.garry@huawei.com>\nCc: Hannes Reinecke <hare@suse.de>\nReported-by: Adrian Hunter <adrian.hunter@intel.com>\nFixes: 15f73f5b3e59 (\"blk-mq: move failure injection out of blk_mq_complete_request\")\nSigned-off-by: Bart Van Assche <bvanassche@acm.org>\nLink: https://lore.kernel.org/r/20221018202958.1902564-2-bvanassche@acm.org\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Bart Van Assche",
  "author_email": "bvanassche@acm.org",
  "author_date": "Tue Oct 18 13:29:49 2022 -0700",
  "author_date_iso": "2022-10-18T13:29:49-07:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Sat Oct 22 03:25:59 2022 +0000",
  "committer_date_iso": "2022-10-22T03:25:59+00:00",
  "files_changed": [
    "drivers/scsi/scsi_error.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/scsi_error.c",
      "insertions": 3,
      "deletions": 11
    }
  ],
  "total_insertions": 3,
  "total_deletions": 11,
  "total_changes": 14,
  "parents": [
    "24b3e45ca9c53185baec34488efcb75bbe162f7a"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/scsi_error.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}