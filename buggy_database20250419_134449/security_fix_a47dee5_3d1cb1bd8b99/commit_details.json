{
  "hash": "a47dee5513cd7b6d1e20dfecd458363f24a19cdc",
  "hash_short": "a47dee55",
  "subject": "KVM: arm64: Allow in-atomic injection of SPIs",
  "body": "On a system that uses SPIs to implement MSIs (as it would be\nthe case on a GICv2 system exposing a GICv2m to its guests),\nwe deny the possibility of injecting SPIs on the in-atomic\nfast-path.\n\nThis results in a very large amount of context-switches\n(roughly equivalent to twice the interrupt rate) on the host,\nand suboptimal performance for the guest (as measured with\na test workload involving a virtio interface backed by vhost-net).\nGiven that GICv2 systems are usually on the low-end of the spectrum\nperformance wise, they could do without the aggravation.\n\nWe solved this for GICv3+ITS by having a translation cache. But\nSPIs do not need any extra infrastructure, and can be immediately\ninjected in the virtual distributor as the locking is already\nheavy enough that we don't need to worry about anything.\n\nThis halves the number of context switches for the same workload.\n\nReviewed-by: Eric Auger <eric.auger@redhat.com>\nSigned-off-by: Marc Zyngier <maz@kernel.org>",
  "full_message": "KVM: arm64: Allow in-atomic injection of SPIs\n\nOn a system that uses SPIs to implement MSIs (as it would be\nthe case on a GICv2 system exposing a GICv2m to its guests),\nwe deny the possibility of injecting SPIs on the in-atomic\nfast-path.\n\nThis results in a very large amount of context-switches\n(roughly equivalent to twice the interrupt rate) on the host,\nand suboptimal performance for the guest (as measured with\na test workload involving a virtio interface backed by vhost-net).\nGiven that GICv2 systems are usually on the low-end of the spectrum\nperformance wise, they could do without the aggravation.\n\nWe solved this for GICv3+ITS by having a translation cache. But\nSPIs do not need any extra infrastructure, and can be immediately\ninjected in the virtual distributor as the locking is already\nheavy enough that we don't need to worry about anything.\n\nThis halves the number of context switches for the same workload.\n\nReviewed-by: Eric Auger <eric.auger@redhat.com>\nSigned-off-by: Marc Zyngier <maz@kernel.org>",
  "author_name": "Marc Zyngier",
  "author_email": "maz@kernel.org",
  "author_date": "Mon May 25 09:45:21 2020 +0100",
  "author_date_iso": "2020-05-25T09:45:21+01:00",
  "committer_name": "Marc Zyngier",
  "committer_email": "maz@kernel.org",
  "committer_date": "Sun Jul 5 17:26:15 2020 +0100",
  "committer_date_iso": "2020-07-05T17:26:15+01:00",
  "files_changed": [
    "arch/arm64/kvm/vgic/vgic-irqfd.c",
    "arch/arm64/kvm/vgic/vgic-its.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm64/kvm/vgic/vgic-irqfd.c",
      "insertions": 19,
      "deletions": 5
    },
    {
      "file": "arch/arm64/kvm/vgic/vgic-its.c",
      "insertions": 1,
      "deletions": 2
    }
  ],
  "total_insertions": 20,
  "total_deletions": 7,
  "total_changes": 27,
  "parents": [
    "b3a9e3b9622ae10064826dccb4f7a52bd88c7407"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/kvm/vgic/vgic-irqfd.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/vgic/vgic-its.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}