{
  "hash": "c3f0e5fd2d33d80c5a5a8b5e5d2bab2841709cc8",
  "hash_short": "c3f0e5fd",
  "subject": "KVM: s390: pv: don't present the ecall interrupt twice",
  "body": "When the SIGP interpretation facility is present and a VCPU sends an\necall to another VCPU in enabled wait, the sending VCPU receives a 56\nintercept (partial execution), so KVM can wake up the receiving CPU.\nNote that the SIGP interpretation facility will take care of the\ninterrupt delivery and KVM's only job is to wake the receiving VCPU.\n\nFor PV, the sending VCPU will receive a 108 intercept (pv notify) and\nshould continue like in the non-PV case, i.e. wake the receiving VCPU.\n\nFor PV and non-PV guests the interrupt delivery will occur through the\nSIGP interpretation facility on SIE entry when SIE finds the X bit in\nthe status field set.\n\nHowever, in handle_pv_notification(), there was no special handling for\nSIGP, which leads to interrupt injection being requested by KVM for the\nnext SIE entry. This results in the interrupt being delivered twice:\nonce by the SIGP interpretation facility and once by KVM through the\nIICTL.\n\nAdd the necessary special handling in handle_pv_notification(), similar\nto handle_partial_execution(), which simply wakes the receiving VCPU and\nleave interrupt delivery to the SIGP interpretation facility.\n\nIn contrast to external calls, emergency calls are not interpreted but\nalso cause a 108 intercept, which is why we still need to call\nhandle_instruction() for SIGP orders other than ecall.\n\nSince kvm_s390_handle_sigp_pei() is now called for all SIGP orders which\ncause a 108 intercept - even if they are actually handled by\nhandle_instruction() - move the tracepoint in kvm_s390_handle_sigp_pei()\nto avoid possibly confusing trace messages.\n\nSigned-off-by: Nico Boehr <nrb@linux.ibm.com>\nCc: <stable@vger.kernel.org> # 5.7\nFixes: da24a0cc58ed (\"KVM: s390: protvirt: Instruction emulation\")\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nReviewed-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Christian Borntraeger <borntraeger@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220718130434.73302-1-nrb@linux.ibm.com\nMessage-Id: <20220718130434.73302-1-nrb@linux.ibm.com>\nSigned-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>",
  "full_message": "KVM: s390: pv: don't present the ecall interrupt twice\n\nWhen the SIGP interpretation facility is present and a VCPU sends an\necall to another VCPU in enabled wait, the sending VCPU receives a 56\nintercept (partial execution), so KVM can wake up the receiving CPU.\nNote that the SIGP interpretation facility will take care of the\ninterrupt delivery and KVM's only job is to wake the receiving VCPU.\n\nFor PV, the sending VCPU will receive a 108 intercept (pv notify) and\nshould continue like in the non-PV case, i.e. wake the receiving VCPU.\n\nFor PV and non-PV guests the interrupt delivery will occur through the\nSIGP interpretation facility on SIE entry when SIE finds the X bit in\nthe status field set.\n\nHowever, in handle_pv_notification(), there was no special handling for\nSIGP, which leads to interrupt injection being requested by KVM for the\nnext SIE entry. This results in the interrupt being delivered twice:\nonce by the SIGP interpretation facility and once by KVM through the\nIICTL.\n\nAdd the necessary special handling in handle_pv_notification(), similar\nto handle_partial_execution(), which simply wakes the receiving VCPU and\nleave interrupt delivery to the SIGP interpretation facility.\n\nIn contrast to external calls, emergency calls are not interpreted but\nalso cause a 108 intercept, which is why we still need to call\nhandle_instruction() for SIGP orders other than ecall.\n\nSince kvm_s390_handle_sigp_pei() is now called for all SIGP orders which\ncause a 108 intercept - even if they are actually handled by\nhandle_instruction() - move the tracepoint in kvm_s390_handle_sigp_pei()\nto avoid possibly confusing trace messages.\n\nSigned-off-by: Nico Boehr <nrb@linux.ibm.com>\nCc: <stable@vger.kernel.org> # 5.7\nFixes: da24a0cc58ed (\"KVM: s390: protvirt: Instruction emulation\")\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nReviewed-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Christian Borntraeger <borntraeger@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220718130434.73302-1-nrb@linux.ibm.com\nMessage-Id: <20220718130434.73302-1-nrb@linux.ibm.com>\nSigned-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>",
  "author_name": "Nico Boehr",
  "author_email": "nrb@linux.ibm.com",
  "author_date": "Mon Jul 18 15:04:34 2022 +0200",
  "author_date_iso": "2022-07-18T15:04:34+02:00",
  "committer_name": "Claudio Imbrenda",
  "committer_email": "imbrenda@linux.ibm.com",
  "committer_date": "Tue Jul 19 15:48:14 2022 +0200",
  "committer_date_iso": "2022-07-19T15:48:14+02:00",
  "files_changed": [
    "arch/s390/kvm/intercept.c",
    "arch/s390/kvm/sigp.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/s390/kvm/intercept.c",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "arch/s390/kvm/sigp.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 17,
  "total_deletions": 2,
  "total_changes": 19,
  "parents": [
    "7746f735f55205176a447e737fe15a5ba7a4d2d4"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/s390/kvm/intercept.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/s390/kvm/sigp.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}