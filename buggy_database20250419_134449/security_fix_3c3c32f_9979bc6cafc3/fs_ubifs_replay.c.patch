commit 3c3c32f85b6cc05e5db78693457deff03ac0f434
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri May 1 22:59:45 2020 -0700

    ubifs: fix wrong use of crypto_shash_descsize()
    
    crypto_shash_descsize() returns the size of the shash_desc context
    needed to compute the hash, not the size of the hash itself.
    
    crypto_shash_digestsize() would be correct, or alternatively using
    c->hash_len and c->hmac_desc_len which already store the correct values.
    But actually it's simpler to just use stack arrays, so do that instead.
    
    Fixes: 49525e5eecca ("ubifs: Add helper functions for authentication support")
    Fixes: da8ef65f9573 ("ubifs: Authenticate replayed journal")
    Cc: <stable@vger.kernel.org> # v4.20+
    Cc: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Richard Weinberger <richard@nod.at>

diff --git a/fs/ubifs/replay.c b/fs/ubifs/replay.c
index b28ac4dfb407..01fcf7975047 100644
--- a/fs/ubifs/replay.c
+++ b/fs/ubifs/replay.c
@@ -601,18 +601,12 @@ static int authenticate_sleb(struct ubifs_info *c, struct ubifs_scan_leb *sleb,
 	struct ubifs_scan_node *snod;
 	int n_nodes = 0;
 	int err;
-	u8 *hash, *hmac;
+	u8 hash[UBIFS_HASH_ARR_SZ];
+	u8 hmac[UBIFS_HMAC_ARR_SZ];
 
 	if (!ubifs_authenticated(c))
 		return sleb->nodes_cnt;
 
-	hash = kmalloc(crypto_shash_descsize(c->hash_tfm), GFP_NOFS);
-	hmac = kmalloc(c->hmac_desc_len, GFP_NOFS);
-	if (!hash || !hmac) {
-		err = -ENOMEM;
-		goto out;
-	}
-
 	list_for_each_entry(snod, &sleb->nodes, list) {
 
 		n_nodes++;
@@ -662,9 +656,6 @@ static int authenticate_sleb(struct ubifs_info *c, struct ubifs_scan_leb *sleb,
 		err = 0;
 	}
 out:
-	kfree(hash);
-	kfree(hmac);
-
 	return err ? err : n_nodes - n_not_auth;
 }