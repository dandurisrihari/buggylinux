commit a031651ff2144a3d81d4916856c093bc1ea0a413
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Thu Mar 31 17:16:54 2022 +0200

    efi: Allow to enable EFI runtime services by default on RT
    
    Commit d9f283ae71af ("efi: Disable runtime services on RT") disabled EFI
    runtime services by default when the CONFIG_PREEMPT_RT option is enabled.
    
    The rationale for that commit is that some EFI calls could take too much
    time, leading to large latencies which is an issue for Real-Time kernels.
    
    But a side effect of that change was that now is not possible anymore to
    enable the EFI runtime services by default when CONFIG_PREEMPT_RT is set,
    without passing an efi=runtime command line parameter to the kernel.
    
    Instead, let's add a new EFI_DISABLE_RUNTIME boolean Kconfig option, that
    would be set to n by default but to y if CONFIG_PREEMPT_RT is enabled.
    
    That way, the current behaviour is preserved but gives users a mechanism
    to enable the EFI runtimes services in their kernels if that is required.
    For example, if the firmware could guarantee bounded time for EFI calls.
    
    Also, having a separate boolean config could allow users to disable the
    EFI runtime services by default even when CONFIG_PREEMPT_RT is not set.
    
    Reported-by: Alexander Larsson <alexl@redhat.com>
    Fixes: d9f283ae71af ("efi: Disable runtime services on RT")
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Link: https://lore.kernel.org/r/20220331151654.184433-1-javierm@redhat.com
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>

diff --git a/drivers/firmware/efi/efi.c b/drivers/firmware/efi/efi.c
index 5502e176d51b..ff57db8f8d05 100644
--- a/drivers/firmware/efi/efi.c
+++ b/drivers/firmware/efi/efi.c
@@ -66,7 +66,7 @@ struct mm_struct efi_mm = {
 
 struct workqueue_struct *efi_rts_wq;
 
-static bool disable_runtime = IS_ENABLED(CONFIG_PREEMPT_RT);
+static bool disable_runtime = IS_ENABLED(CONFIG_EFI_DISABLE_RUNTIME);
 static int __init setup_noefi(char *arg)
 {
 	disable_runtime = true;