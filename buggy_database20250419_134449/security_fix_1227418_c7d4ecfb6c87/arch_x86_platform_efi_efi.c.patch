commit 1227418989346af3af179742cf42ce842e0ad484
Author: Dov Murik <dovmurik@linux.ibm.com>
Date:   Tue Apr 12 21:21:24 2022 +0000

    efi: Save location of EFI confidential computing area
    
    Confidential computing (coco) hardware such as AMD SEV (Secure Encrypted
    Virtualization) allows a guest owner to inject secrets into the VMs
    memory without the host/hypervisor being able to read them.
    
    Firmware support for secret injection is available in OVMF, which
    reserves a memory area for secret injection and includes a pointer to it
    the in EFI config table entry LINUX_EFI_COCO_SECRET_TABLE_GUID.
    
    If EFI exposes such a table entry, uefi_init() will keep a pointer to
    the EFI config table entry in efi.coco_secret, so it can be used later
    by the kernel (specifically drivers/virt/coco/efi_secret).  It will also
    appear in the kernel log as "CocoSecret=ADDRESS"; for example:
    
        [    0.000000] efi: EFI v2.70 by EDK II
        [    0.000000] efi: CocoSecret=0x7f22e680 SMBIOS=0x7f541000 ACPI=0x7f77e000 ACPI 2.0=0x7f77e014 MEMATTR=0x7ea0c018
    
    The new functionality can be enabled with CONFIG_EFI_COCO_SECRET=y.
    
    Signed-off-by: Dov Murik <dovmurik@linux.ibm.com>
    Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>
    Link: https://lore.kernel.org/r/20220412212127.154182-2-dovmurik@linux.ibm.com
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>

diff --git a/arch/x86/platform/efi/efi.c b/arch/x86/platform/efi/efi.c
index 147c30a81f15..1591d67e0bcd 100644
--- a/arch/x86/platform/efi/efi.c
+++ b/arch/x86/platform/efi/efi.c
@@ -93,6 +93,9 @@ static const unsigned long * const efi_tables[] = {
 #ifdef CONFIG_LOAD_UEFI_KEYS
 	&efi.mokvar_table,
 #endif
+#ifdef CONFIG_EFI_COCO_SECRET
+	&efi.coco_secret,
+#endif
 };
 
 u64 efi_setup;		/* efi setup_data physical address */