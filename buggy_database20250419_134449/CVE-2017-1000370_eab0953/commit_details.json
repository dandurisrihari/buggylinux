{
  "hash": "eab09532d40090698b05a07c1c87f39fdbc5fab5",
  "hash_short": "eab09532",
  "subject": "binfmt_elf: use ELF_ET_DYN_BASE only for PIE",
  "body": "The ELF_ET_DYN_BASE position was originally intended to keep loaders\naway from ET_EXEC binaries.  (For example, running \"/lib/ld-linux.so.2\n/bin/cat\" might cause the subsequent load of /bin/cat into where the\nloader had been loaded.)\n\nWith the advent of PIE (ET_DYN binaries with an INTERP Program Header),\nELF_ET_DYN_BASE continued to be used since the kernel was only looking\nat ET_DYN.  However, since ELF_ET_DYN_BASE is traditionally set at the\ntop 1/3rd of the TASK_SIZE, a substantial portion of the address space\nis unused.\n\nFor 32-bit tasks when RLIMIT_STACK is set to RLIM_INFINITY, programs are\nloaded above the mmap region.  This means they can be made to collide\n(CVE-2017-1000370) or nearly collide (CVE-2017-1000371) with\npathological stack regions.\n\nLowering ELF_ET_DYN_BASE solves both by moving programs below the mmap\nregion in all cases, and will now additionally avoid programs falling\nback to the mmap region by enforcing MAP_FIXED for program loads (i.e.\nif it would have collided with the stack, now it will fail to load\ninstead of falling back to the mmap region).\n\nTo allow for a lower ELF_ET_DYN_BASE, loaders (ET_DYN without INTERP)\nare loaded into the mmap region, leaving space available for either an\nET_EXEC binary with a fixed location or PIE being loaded into mmap by\nthe loader.  Only PIE programs are loaded offset from ELF_ET_DYN_BASE,\nwhich means architectures can now safely lower their values without risk\nof loaders colliding with their subsequently loaded programs.\n\nFor 64-bit, ELF_ET_DYN_BASE is best set to 4GB to allow runtimes to use\nthe entire 32-bit address space for 32-bit pointers.\n\nThanks to PaX Team, Daniel Micay, and Rik van Riel for inspiration and\nsuggestions on how to implement this solution.\n\nFixes: d1fd836dcf00 (\"mm: split ET_DYN ASLR from mmap ASLR\")\nLink: http://lkml.kernel.org/r/20170621173201.GA114489@beast\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Rik van Riel <riel@redhat.com>\nCc: Daniel Micay <danielmicay@gmail.com>\nCc: Qualys Security Advisory <qsa@qualys.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Ingo Molnar <mingo@redhat.com>\nCc: \"H. Peter Anvin\" <hpa@zytor.com>\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: Dmitry Safonov <dsafonov@virtuozzo.com>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Grzegorz Andrejczuk <grzegorz.andrejczuk@intel.com>\nCc: Masahiro Yamada <yamada.masahiro@socionext.com>\nCc: Benjamin Herrenschmidt <benh@kernel.crashing.org>\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Heiko Carstens <heiko.carstens@de.ibm.com>\nCc: James Hogan <james.hogan@imgtec.com>\nCc: Martin Schwidefsky <schwidefsky@de.ibm.com>\nCc: Michael Ellerman <mpe@ellerman.id.au>\nCc: Paul Mackerras <paulus@samba.org>\nCc: Pratyush Anand <panand@redhat.com>\nCc: Russell King <linux@armlinux.org.uk>\nCc: Will Deacon <will.deacon@arm.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "binfmt_elf: use ELF_ET_DYN_BASE only for PIE\n\nThe ELF_ET_DYN_BASE position was originally intended to keep loaders\naway from ET_EXEC binaries.  (For example, running \"/lib/ld-linux.so.2\n/bin/cat\" might cause the subsequent load of /bin/cat into where the\nloader had been loaded.)\n\nWith the advent of PIE (ET_DYN binaries with an INTERP Program Header),\nELF_ET_DYN_BASE continued to be used since the kernel was only looking\nat ET_DYN.  However, since ELF_ET_DYN_BASE is traditionally set at the\ntop 1/3rd of the TASK_SIZE, a substantial portion of the address space\nis unused.\n\nFor 32-bit tasks when RLIMIT_STACK is set to RLIM_INFINITY, programs are\nloaded above the mmap region.  This means they can be made to collide\n(CVE-2017-1000370) or nearly collide (CVE-2017-1000371) with\npathological stack regions.\n\nLowering ELF_ET_DYN_BASE solves both by moving programs below the mmap\nregion in all cases, and will now additionally avoid programs falling\nback to the mmap region by enforcing MAP_FIXED for program loads (i.e.\nif it would have collided with the stack, now it will fail to load\ninstead of falling back to the mmap region).\n\nTo allow for a lower ELF_ET_DYN_BASE, loaders (ET_DYN without INTERP)\nare loaded into the mmap region, leaving space available for either an\nET_EXEC binary with a fixed location or PIE being loaded into mmap by\nthe loader.  Only PIE programs are loaded offset from ELF_ET_DYN_BASE,\nwhich means architectures can now safely lower their values without risk\nof loaders colliding with their subsequently loaded programs.\n\nFor 64-bit, ELF_ET_DYN_BASE is best set to 4GB to allow runtimes to use\nthe entire 32-bit address space for 32-bit pointers.\n\nThanks to PaX Team, Daniel Micay, and Rik van Riel for inspiration and\nsuggestions on how to implement this solution.\n\nFixes: d1fd836dcf00 (\"mm: split ET_DYN ASLR from mmap ASLR\")\nLink: http://lkml.kernel.org/r/20170621173201.GA114489@beast\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Rik van Riel <riel@redhat.com>\nCc: Daniel Micay <danielmicay@gmail.com>\nCc: Qualys Security Advisory <qsa@qualys.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Ingo Molnar <mingo@redhat.com>\nCc: \"H. Peter Anvin\" <hpa@zytor.com>\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: Dmitry Safonov <dsafonov@virtuozzo.com>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Grzegorz Andrejczuk <grzegorz.andrejczuk@intel.com>\nCc: Masahiro Yamada <yamada.masahiro@socionext.com>\nCc: Benjamin Herrenschmidt <benh@kernel.crashing.org>\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Heiko Carstens <heiko.carstens@de.ibm.com>\nCc: James Hogan <james.hogan@imgtec.com>\nCc: Martin Schwidefsky <schwidefsky@de.ibm.com>\nCc: Michael Ellerman <mpe@ellerman.id.au>\nCc: Paul Mackerras <paulus@samba.org>\nCc: Pratyush Anand <panand@redhat.com>\nCc: Russell King <linux@armlinux.org.uk>\nCc: Will Deacon <will.deacon@arm.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Mon Jul 10 15:52:37 2017 -0700",
  "author_date_iso": "2017-07-10T15:52:37-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Jul 10 16:32:36 2017 -0700",
  "committer_date_iso": "2017-07-10T16:32:36-07:00",
  "files_changed": [
    "arch/x86/include/asm/elf.h",
    "fs/binfmt_elf.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/include/asm/elf.h",
      "insertions": 7,
      "deletions": 6
    },
    {
      "file": "fs/binfmt_elf.c",
      "insertions": 51,
      "deletions": 8
    }
  ],
  "total_insertions": 58,
  "total_deletions": 14,
  "total_changes": 72,
  "parents": [
    "c257a340ede0104e902807f0f001799850343ae9"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.13",
    "v4.13-rc1",
    "v4.13-rc2",
    "v4.13-rc3",
    "v4.13-rc4",
    "v4.13-rc5",
    "v4.13-rc6",
    "v4.13-rc7",
    "v4.14",
    "v4.14-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2017-1000370",
      "CVE-2017-1000371"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/x86/include/asm/elf.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/binfmt_elf.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}