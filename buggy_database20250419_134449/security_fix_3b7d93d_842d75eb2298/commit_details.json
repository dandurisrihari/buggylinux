{
  "hash": "3b7d93db450e9d8ead80d75e2a303248f1528c35",
  "hash_short": "3b7d93db",
  "subject": "ceph: fix memory leak in ceph_mds_auth_match()",
  "body": "We now free the temporary target path substring allocation on every\npossible branch, instead of omitting the default branch.  In some\ncases, a memory leak occured, which could rapidly crash the system\n(depending on how many file accesses were attempted).\n\nThis was detected in production because it caused a continuous memory\ngrowth, eventually triggering kernel OOM and completely hard-locking\nthe kernel.\n\nRelevant kmemleak stacktrace:\n\n    unreferenced object 0xffff888131e69900 (size 128):\n      comm \"git\", pid 66104, jiffies 4295435999\n      hex dump (first 32 bytes):\n        76 6f 6c 75 6d 65 73 2f 63 6f 6e 74 61 69 6e 65  volumes/containe\n        72 73 2f 67 69 74 65 61 2f 67 69 74 65 61 2f 67  rs/gitea/gitea/g\n      backtrace (crc 2f3bb450):\n        [<ffffffffaa68fb49>] __kmalloc_noprof+0x359/0x510\n        [<ffffffffc32bf1df>] ceph_mds_check_access+0x5bf/0x14e0 [ceph]\n        [<ffffffffc3235722>] ceph_open+0x312/0xd80 [ceph]\n        [<ffffffffaa7dd786>] do_dentry_open+0x456/0x1120\n        [<ffffffffaa7e3729>] vfs_open+0x79/0x360\n        [<ffffffffaa832875>] path_openat+0x1de5/0x4390\n        [<ffffffffaa834fcc>] do_filp_open+0x19c/0x3c0\n        [<ffffffffaa7e44a1>] do_sys_openat2+0x141/0x180\n        [<ffffffffaa7e4945>] __x64_sys_open+0xe5/0x1a0\n        [<ffffffffac2cc2f7>] do_syscall_64+0xb7/0x210\n        [<ffffffffac400130>] entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nIt can be triggered by mouting a subdirectory of a CephFS filesystem,\nand then trying to access files on this subdirectory with an auth token\nusing a path-scoped capability:\n\n    $ ceph auth get client.services\n    [client.services]\n            key = REDACTED\n            caps mds = \"allow rw fsname=cephfs path=/volumes/\"\n            caps mon = \"allow r fsname=cephfs\"\n            caps osd = \"allow rw tag cephfs data=cephfs\"\n\n    $ cat /proc/self/mounts\n    services@[REDACTED].cephfs=/volumes/containers /ceph/containers ceph rw,noatime,name=services,secret=<hidden>,ms_mode=prefer-crc,mount_timeout=300,acl,mon_addr=[REDACTED]:3300,recover_session=clean 0 0\n\n    $ seq 1 1000000 | xargs -P32 --replace={} touch /ceph/containers/file-{} && \\\n    seq 1 1000000 | xargs -P32 --replace={} cat /ceph/containers/file-{}\n\n[ idryomov: combine if statements, rename rc to path_matched and make\n            it a bool, formatting ]\n\nCc: stable@vger.kernel.org\nFixes: 596afb0b8933 (\"ceph: add ceph_mds_check_access() helper\")\nSigned-off-by: Antoine Viallon <antoine@lesviallon.fr>\nReviewed-by: Viacheslav Dubeyko <Slava.Dubeyko@ibm.com>\nSigned-off-by: Ilya Dryomov <idryomov@gmail.com>",
  "full_message": "ceph: fix memory leak in ceph_mds_auth_match()\n\nWe now free the temporary target path substring allocation on every\npossible branch, instead of omitting the default branch.  In some\ncases, a memory leak occured, which could rapidly crash the system\n(depending on how many file accesses were attempted).\n\nThis was detected in production because it caused a continuous memory\ngrowth, eventually triggering kernel OOM and completely hard-locking\nthe kernel.\n\nRelevant kmemleak stacktrace:\n\n    unreferenced object 0xffff888131e69900 (size 128):\n      comm \"git\", pid 66104, jiffies 4295435999\n      hex dump (first 32 bytes):\n        76 6f 6c 75 6d 65 73 2f 63 6f 6e 74 61 69 6e 65  volumes/containe\n        72 73 2f 67 69 74 65 61 2f 67 69 74 65 61 2f 67  rs/gitea/gitea/g\n      backtrace (crc 2f3bb450):\n        [<ffffffffaa68fb49>] __kmalloc_noprof+0x359/0x510\n        [<ffffffffc32bf1df>] ceph_mds_check_access+0x5bf/0x14e0 [ceph]\n        [<ffffffffc3235722>] ceph_open+0x312/0xd80 [ceph]\n        [<ffffffffaa7dd786>] do_dentry_open+0x456/0x1120\n        [<ffffffffaa7e3729>] vfs_open+0x79/0x360\n        [<ffffffffaa832875>] path_openat+0x1de5/0x4390\n        [<ffffffffaa834fcc>] do_filp_open+0x19c/0x3c0\n        [<ffffffffaa7e44a1>] do_sys_openat2+0x141/0x180\n        [<ffffffffaa7e4945>] __x64_sys_open+0xe5/0x1a0\n        [<ffffffffac2cc2f7>] do_syscall_64+0xb7/0x210\n        [<ffffffffac400130>] entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nIt can be triggered by mouting a subdirectory of a CephFS filesystem,\nand then trying to access files on this subdirectory with an auth token\nusing a path-scoped capability:\n\n    $ ceph auth get client.services\n    [client.services]\n            key = REDACTED\n            caps mds = \"allow rw fsname=cephfs path=/volumes/\"\n            caps mon = \"allow r fsname=cephfs\"\n            caps osd = \"allow rw tag cephfs data=cephfs\"\n\n    $ cat /proc/self/mounts\n    services@[REDACTED].cephfs=/volumes/containers /ceph/containers ceph rw,noatime,name=services,secret=<hidden>,ms_mode=prefer-crc,mount_timeout=300,acl,mon_addr=[REDACTED]:3300,recover_session=clean 0 0\n\n    $ seq 1 1000000 | xargs -P32 --replace={} touch /ceph/containers/file-{} && \\\n    seq 1 1000000 | xargs -P32 --replace={} cat /ceph/containers/file-{}\n\n[ idryomov: combine if statements, rename rc to path_matched and make\n            it a bool, formatting ]\n\nCc: stable@vger.kernel.org\nFixes: 596afb0b8933 (\"ceph: add ceph_mds_check_access() helper\")\nSigned-off-by: Antoine Viallon <antoine@lesviallon.fr>\nReviewed-by: Viacheslav Dubeyko <Slava.Dubeyko@ibm.com>\nSigned-off-by: Ilya Dryomov <idryomov@gmail.com>",
  "author_name": "Antoine Viallon",
  "author_email": "antoine@lesviallon.fr",
  "author_date": "Tue Jan 14 23:45:14 2025 +0100",
  "author_date_iso": "2025-01-14T23:45:14+01:00",
  "committer_name": "Ilya Dryomov",
  "committer_email": "idryomov@gmail.com",
  "committer_date": "Wed Jan 15 20:35:06 2025 +0100",
  "committer_date_iso": "2025-01-15T20:35:06+01:00",
  "files_changed": [
    "fs/ceph/mds_client.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/ceph/mds_client.c",
      "insertions": 8,
      "deletions": 8
    }
  ],
  "total_insertions": 8,
  "total_deletions": 8,
  "total_changes": 16,
  "parents": [
    "5bc55a333a2f7316b58edc7573e8e893f7acb532"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "auth"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/ceph/mds_client.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}