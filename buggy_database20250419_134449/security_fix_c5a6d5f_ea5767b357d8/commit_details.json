{
  "hash": "c5a6d5f7faad8549bb5ff7e3e5792e33933c5b9f",
  "hash_short": "c5a6d5f7",
  "subject": "KVM: nVMX: Fix the NMI IDT-vectoring handling",
  "body": "Run kvm-unit-tests/eventinj.flat in L1:\n\nSending NMI to self\nAfter NMI to self\nFAIL: NMI\n\nThis test scenario is to test whether VMM can handle NMI IDT-vectoring info correctly.\n\nAt the beginning, L2 writes LAPIC to send a self NMI, the EPT page tables on both L1\nand L0 are empty so:\n\n- The L2 accesses memory can generate EPT violation which can be intercepted by L0.\n\n  The EPT violation vmexit occurred during delivery of this NMI, and the NMI info is\n  recorded in vmcs02's IDT-vectoring info.\n\n- L0 walks L1's EPT12 and L0 sees the mapping is invalid, it injects the EPT violation into L1.\n\n  The vmcs02's IDT-vectoring info is reflected to vmcs12's IDT-vectoring info since\n  it is a nested vmexit.\n\n- L1 receives the EPT violation, then fixes its EPT12.\n- L1 executes VMRESUME to resume L2 which generates vmexit and causes L1 exits to L0.\n- L0 emulates VMRESUME which is called from L1, then return to L2.\n\n  L0 merges the requirement of vmcs12's IDT-vectoring info and injects it to L2 through\n  vmcs02.\n\n- The L2 re-executes the fault instruction and cause EPT violation again.\n- Since the L1's EPT12 is valid, L0 can fix its EPT02\n- L0 resume L2\n\n  The EPT violation vmexit occurred during delivery of this NMI again, and the NMI info\n  is recorded in vmcs02's IDT-vectoring info. L0 should inject the NMI through vmentry\n  event injection since it is caused by EPT02's EPT violation.\n\nHowever, vmx_inject_nmi() refuses to inject NMI from IDT-vectoring info if vCPU is in\nguest mode, this patch fix it by permitting to inject NMI from IDT-vectoring if it is\nthe L0's responsibility to inject NMI from IDT-vectoring info to L2.\n\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>\nCc: Jan Kiszka <jan.kiszka@siemens.com>\nCc: Bandan Das <bsd@redhat.com>\nSigned-off-by: Wanpeng Li <wanpeng.li@hotmail.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
  "full_message": "KVM: nVMX: Fix the NMI IDT-vectoring handling\n\nRun kvm-unit-tests/eventinj.flat in L1:\n\nSending NMI to self\nAfter NMI to self\nFAIL: NMI\n\nThis test scenario is to test whether VMM can handle NMI IDT-vectoring info correctly.\n\nAt the beginning, L2 writes LAPIC to send a self NMI, the EPT page tables on both L1\nand L0 are empty so:\n\n- The L2 accesses memory can generate EPT violation which can be intercepted by L0.\n\n  The EPT violation vmexit occurred during delivery of this NMI, and the NMI info is\n  recorded in vmcs02's IDT-vectoring info.\n\n- L0 walks L1's EPT12 and L0 sees the mapping is invalid, it injects the EPT violation into L1.\n\n  The vmcs02's IDT-vectoring info is reflected to vmcs12's IDT-vectoring info since\n  it is a nested vmexit.\n\n- L1 receives the EPT violation, then fixes its EPT12.\n- L1 executes VMRESUME to resume L2 which generates vmexit and causes L1 exits to L0.\n- L0 emulates VMRESUME which is called from L1, then return to L2.\n\n  L0 merges the requirement of vmcs12's IDT-vectoring info and injects it to L2 through\n  vmcs02.\n\n- The L2 re-executes the fault instruction and cause EPT violation again.\n- Since the L1's EPT12 is valid, L0 can fix its EPT02\n- L0 resume L2\n\n  The EPT violation vmexit occurred during delivery of this NMI again, and the NMI info\n  is recorded in vmcs02's IDT-vectoring info. L0 should inject the NMI through vmentry\n  event injection since it is caused by EPT02's EPT violation.\n\nHowever, vmx_inject_nmi() refuses to inject NMI from IDT-vectoring info if vCPU is in\nguest mode, this patch fix it by permitting to inject NMI from IDT-vectoring if it is\nthe L0's responsibility to inject NMI from IDT-vectoring info to L2.\n\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>\nCc: Jan Kiszka <jan.kiszka@siemens.com>\nCc: Bandan Das <bsd@redhat.com>\nSigned-off-by: Wanpeng Li <wanpeng.li@hotmail.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
  "author_name": "Wanpeng Li",
  "author_email": "wanpeng.li@hotmail.com",
  "author_date": "Thu Sep 22 17:55:54 2016 +0800",
  "author_date_iso": "2016-09-22T17:55:54+08:00",
  "committer_name": "Radim Kr\u010dm\u00e1\u0159",
  "committer_email": "rkrcmar@redhat.com",
  "committer_date": "Fri Sep 23 01:08:15 2016 +0200",
  "committer_date_iso": "2016-09-23T01:08:15+02:00",
  "files_changed": [
    "arch/x86/kvm/vmx.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/vmx.c",
      "insertions": 16,
      "deletions": 15
    }
  ],
  "total_insertions": 16,
  "total_deletions": 15,
  "total_changes": 31,
  "parents": [
    "f6e90f9e0ee3df5010e7f378e669d6838b9a25bf"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/vmx.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}