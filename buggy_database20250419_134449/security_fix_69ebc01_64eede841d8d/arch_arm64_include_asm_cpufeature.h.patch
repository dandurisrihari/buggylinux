commit 69ebc0182406541f0be0f086cdfff13ac56e7385
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Tue Mar 12 20:00:20 2024 +0000

    Revert "arm64: mm: add support for WXN memory translation attribute"
    
    This reverts commit 50e3ed0f93f4f62ed2aa83de5db6cb84ecdd5707.
    
    The SCTLR_EL1.WXN control forces execute-never when a page has write
    permissions. While the idea of hardening such write/exec combinations is
    good, with permissions indirection enabled (FEAT_PIE) this control
    becomes RES0. FEAT_PIE introduces a slightly different form of WXN which
    only has an effect when the base permission is RWX and the write is
    toggled by the permission overlay (FEAT_POE, not yet supported by the
    arm64 kernel). Revert the patch for now.
    
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Link: https://lore.kernel.org/r/ZfGESD3a91lxH367@arm.com

diff --git a/arch/arm64/include/asm/cpufeature.h b/arch/arm64/include/asm/cpufeature.h
index 66ba0801f7b7..6d86ad37c615 100644
--- a/arch/arm64/include/asm/cpufeature.h
+++ b/arch/arm64/include/asm/cpufeature.h
@@ -18,7 +18,6 @@
 #define ARM64_SW_FEATURE_OVERRIDE_NOKASLR	0
 #define ARM64_SW_FEATURE_OVERRIDE_HVHE		4
 #define ARM64_SW_FEATURE_OVERRIDE_RODATA_OFF	8
-#define ARM64_SW_FEATURE_OVERRIDE_NOWXN		12
 
 #ifndef __ASSEMBLY__
 
@@ -968,13 +967,6 @@ static inline bool kaslr_disabled_cmdline(void)
 	return arm64_test_sw_feature_override(ARM64_SW_FEATURE_OVERRIDE_NOKASLR);
 }
 
-static inline bool arm64_wxn_enabled(void)
-{
-	if (!IS_ENABLED(CONFIG_ARM64_WXN))
-		return false;
-	return !arm64_test_sw_feature_override(ARM64_SW_FEATURE_OVERRIDE_NOWXN);
-}
-
 u32 get_kvm_ipa_limit(void);
 void dump_cpu_features(void);