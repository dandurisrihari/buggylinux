{
  "hash": "69ebc0182406541f0be0f086cdfff13ac56e7385",
  "hash_short": "69ebc018",
  "subject": "Revert \"arm64: mm: add support for WXN memory translation attribute\"",
  "body": "This reverts commit 50e3ed0f93f4f62ed2aa83de5db6cb84ecdd5707.\n\nThe SCTLR_EL1.WXN control forces execute-never when a page has write\npermissions. While the idea of hardening such write/exec combinations is\ngood, with permissions indirection enabled (FEAT_PIE) this control\nbecomes RES0. FEAT_PIE introduces a slightly different form of WXN which\nonly has an effect when the base permission is RWX and the write is\ntoggled by the permission overlay (FEAT_POE, not yet supported by the\narm64 kernel). Revert the patch for now.\n\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>\nLink: https://lore.kernel.org/r/ZfGESD3a91lxH367@arm.com",
  "full_message": "Revert \"arm64: mm: add support for WXN memory translation attribute\"\n\nThis reverts commit 50e3ed0f93f4f62ed2aa83de5db6cb84ecdd5707.\n\nThe SCTLR_EL1.WXN control forces execute-never when a page has write\npermissions. While the idea of hardening such write/exec combinations is\ngood, with permissions indirection enabled (FEAT_PIE) this control\nbecomes RES0. FEAT_PIE introduces a slightly different form of WXN which\nonly has an effect when the base permission is RWX and the write is\ntoggled by the permission overlay (FEAT_POE, not yet supported by the\narm64 kernel). Revert the patch for now.\n\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>\nLink: https://lore.kernel.org/r/ZfGESD3a91lxH367@arm.com",
  "author_name": "Catalin Marinas",
  "author_email": "catalin.marinas@arm.com",
  "author_date": "Tue Mar 12 20:00:20 2024 +0000",
  "author_date_iso": "2024-03-12T20:00:20+00:00",
  "committer_name": "Catalin Marinas",
  "committer_email": "catalin.marinas@arm.com",
  "committer_date": "Wed Mar 13 10:53:20 2024 +0000",
  "committer_date_iso": "2024-03-13T10:53:20+00:00",
  "files_changed": [
    "arch/arm64/Kconfig",
    "arch/arm64/include/asm/cpufeature.h",
    "arch/arm64/include/asm/mman.h",
    "arch/arm64/include/asm/mmu_context.h",
    "arch/arm64/kernel/pi/idreg-override.c",
    "arch/arm64/kernel/pi/map_kernel.c",
    "arch/arm64/mm/proc.S"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "arch/arm64/Kconfig",
      "insertions": 0,
      "deletions": 11
    },
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "insertions": 0,
      "deletions": 8
    },
    {
      "file": "arch/arm64/include/asm/mman.h",
      "insertions": 0,
      "deletions": 36
    },
    {
      "file": "arch/arm64/include/asm/mmu_context.h",
      "insertions": 1,
      "deletions": 29
    },
    {
      "file": "arch/arm64/kernel/pi/idreg-override.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kernel/pi/map_kernel.c",
      "insertions": 0,
      "deletions": 23
    },
    {
      "file": "arch/arm64/mm/proc.S",
      "insertions": 0,
      "deletions": 6
    }
  ],
  "total_insertions": 2,
  "total_deletions": 116,
  "total_changes": 118,
  "parents": [
    "f1bbc4e9cfa4c0f29883171e9d01c01cbe94becc"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/mman.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/pi/map_kernel.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/Kconfig",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/pi/idreg-override.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/mm/proc.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/mmu_context.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}