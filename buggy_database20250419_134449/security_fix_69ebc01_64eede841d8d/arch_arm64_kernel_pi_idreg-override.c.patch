commit 69ebc0182406541f0be0f086cdfff13ac56e7385
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Tue Mar 12 20:00:20 2024 +0000

    Revert "arm64: mm: add support for WXN memory translation attribute"
    
    This reverts commit 50e3ed0f93f4f62ed2aa83de5db6cb84ecdd5707.
    
    The SCTLR_EL1.WXN control forces execute-never when a page has write
    permissions. While the idea of hardening such write/exec combinations is
    good, with permissions indirection enabled (FEAT_PIE) this control
    becomes RES0. FEAT_PIE introduces a slightly different form of WXN which
    only has an effect when the base permission is RWX and the write is
    toggled by the permission overlay (FEAT_POE, not yet supported by the
    arm64 kernel). Revert the patch for now.
    
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Link: https://lore.kernel.org/r/ZfGESD3a91lxH367@arm.com

diff --git a/arch/arm64/kernel/pi/idreg-override.c b/arch/arm64/kernel/pi/idreg-override.c
index bccfee34f62f..aad399796e81 100644
--- a/arch/arm64/kernel/pi/idreg-override.c
+++ b/arch/arm64/kernel/pi/idreg-override.c
@@ -189,7 +189,6 @@ static const struct ftr_set_desc sw_features __prel64_initconst = {
 		FIELD("nokaslr", ARM64_SW_FEATURE_OVERRIDE_NOKASLR, NULL),
 		FIELD("hvhe", ARM64_SW_FEATURE_OVERRIDE_HVHE, hvhe_filter),
 		FIELD("rodataoff", ARM64_SW_FEATURE_OVERRIDE_RODATA_OFF, NULL),
-		FIELD("nowxn", ARM64_SW_FEATURE_OVERRIDE_NOWXN, NULL),
 		{}
 	},
 };
@@ -222,9 +221,8 @@ static const struct {
 	{ "arm64.nomops",		"id_aa64isar2.mops=0" },
 	{ "arm64.nomte",		"id_aa64pfr1.mte=0" },
 	{ "nokaslr",			"arm64_sw.nokaslr=1" },
-	{ "rodata=off",			"arm64_sw.rodataoff=1 arm64_sw.nowxn=1" },
+	{ "rodata=off",			"arm64_sw.rodataoff=1" },
 	{ "arm64.nolva",		"id_aa64mmfr2.varange=0" },
-	{ "arm64.nowxn",		"arm64_sw.nowxn=1" },
 };
 
 static int __init parse_hexdigit(const char *p, u64 *v)