{
  "hash": "dc6e71c9d9cfef98b95cb6e7e91ed2bb64b63e76",
  "hash_short": "dc6e71c9",
  "subject": "crypto: picoxcell - permit asynchronous skcipher as fallback",
  "body": "Even though the picoxcell driver implements asynchronous versions of\necb(aes) and cbc(aes), the fallbacks it allocates are required to be\nsynchronous. Given that SIMD based software implementations are usually\nasynchronous as well, even though they rarely complete asynchronously\n(this typically only happens in cases where the request was made from\nsoftirq context, while SIMD was already in use in the task context that\nit interrupted), these implementations are disregarded, and either the\ngeneric C version or another table based version implemented in assembler\nis selected instead.\n\nSince falling back to synchronous AES is not only a performance issue, but\npotentially a security issue as well (due to the fact that table based AES\nis not time invariant), let's fix this, by allocating an ordinary skcipher\nas the fallback, and invoke it with the completion routine that was given\nto the outer request.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Jamie Iles <jamie@jamieiles.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "full_message": "crypto: picoxcell - permit asynchronous skcipher as fallback\n\nEven though the picoxcell driver implements asynchronous versions of\necb(aes) and cbc(aes), the fallbacks it allocates are required to be\nsynchronous. Given that SIMD based software implementations are usually\nasynchronous as well, even though they rarely complete asynchronously\n(this typically only happens in cases where the request was made from\nsoftirq context, while SIMD was already in use in the task context that\nit interrupted), these implementations are disregarded, and either the\ngeneric C version or another table based version implemented in assembler\nis selected instead.\n\nSince falling back to synchronous AES is not only a performance issue, but\npotentially a security issue as well (due to the fact that table based AES\nis not time invariant), let's fix this, by allocating an ordinary skcipher\nas the fallback, and invoke it with the completion routine that was given\nto the outer request.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Jamie Iles <jamie@jamieiles.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "author_name": "Ard Biesheuvel",
  "author_email": "ardb@kernel.org",
  "author_date": "Tue Jul 7 09:32:00 2020 +0300",
  "author_date_iso": "2020-07-07T09:32:00+03:00",
  "committer_name": "Herbert Xu",
  "committer_email": "herbert@gondor.apana.org.au",
  "committer_date": "Thu Jul 16 21:49:03 2020 +1000",
  "committer_date_iso": "2020-07-16T21:49:03+10:00",
  "files_changed": [
    "drivers/crypto/picoxcell_crypto.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/crypto/picoxcell_crypto.c",
      "insertions": 22,
      "deletions": 16
    }
  ],
  "total_insertions": 22,
  "total_deletions": 16,
  "total_changes": 38,
  "parents": [
    "c9598d4e13ca0a6747235257a8e38cdef6973d8e"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/crypto/picoxcell_crypto.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}