{
  "hash": "e2b5b21d3a815b7d88fc4c90e9ccc42ea9bac4f0",
  "hash_short": "e2b5b21d",
  "subject": "KVM: x86/mmu: Add dedicated helper to zap TDP MMU root shadow page",
  "body": "Add a dedicated helper for zapping a TDP MMU root, and use it in the three\nflows that do \"zap_all\" and intentionally do not do a TLB flush if SPTEs\nare zapped (zapping an entire root is safe if and only if it cannot be in\nuse by any vCPU).  Because a TLB flush is never required, unconditionally\npass \"false\" to tdp_mmu_iter_cond_resched() when potentially yielding.\n\nOpportunistically document why KVM must not yield when zapping roots that\nare being zapped by kvm_tdp_mmu_put_root(), i.e. roots whose refcount has\nreached zero, and further harden the flow to detect improper KVM behavior\nwith respect to roots that are supposed to be unreachable.\n\nIn addition to hardening zapping of roots, isolating zapping of roots\nwill allow future simplification of zap_gfn_range() by having it zap only\nleaf SPTEs, and by removing its tricky \"zap all\" heuristic.  By having\nall paths that truly need to free _all_ SPs flow through the dedicated\nroot zapper, the generic zapper can be freed of those concerns.\n\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nReviewed-by: Ben Gardon <bgardon@google.com>\nMessage-Id: <20220226001546.360188-16-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: x86/mmu: Add dedicated helper to zap TDP MMU root shadow page\n\nAdd a dedicated helper for zapping a TDP MMU root, and use it in the three\nflows that do \"zap_all\" and intentionally do not do a TLB flush if SPTEs\nare zapped (zapping an entire root is safe if and only if it cannot be in\nuse by any vCPU).  Because a TLB flush is never required, unconditionally\npass \"false\" to tdp_mmu_iter_cond_resched() when potentially yielding.\n\nOpportunistically document why KVM must not yield when zapping roots that\nare being zapped by kvm_tdp_mmu_put_root(), i.e. roots whose refcount has\nreached zero, and further harden the flow to detect improper KVM behavior\nwith respect to roots that are supposed to be unreachable.\n\nIn addition to hardening zapping of roots, isolating zapping of roots\nwill allow future simplification of zap_gfn_range() by having it zap only\nleaf SPTEs, and by removing its tricky \"zap all\" heuristic.  By having\nall paths that truly need to free _all_ SPs flow through the dedicated\nroot zapper, the generic zapper can be freed of those concerns.\n\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nReviewed-by: Ben Gardon <bgardon@google.com>\nMessage-Id: <20220226001546.360188-16-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Sat Feb 26 00:15:33 2022 +0000",
  "author_date_iso": "2022-02-26T00:15:33+00:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Tue Mar 8 09:31:55 2022 -0500",
  "committer_date_iso": "2022-03-08T09:31:55-05:00",
  "files_changed": [
    "arch/x86/kvm/mmu/tdp_mmu.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/mmu/tdp_mmu.c",
      "insertions": 82,
      "deletions": 16
    }
  ],
  "total_insertions": 82,
  "total_deletions": 16,
  "total_changes": 98,
  "parents": [
    "77c8cd6b85af8840878063eb2df39780e808f74b"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/mmu/tdp_mmu.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}