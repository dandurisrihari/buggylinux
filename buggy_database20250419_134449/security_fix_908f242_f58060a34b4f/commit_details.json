{
  "hash": "908f24270d9ccbe120b91e7029b372f3dcd18290",
  "hash_short": "908f2427",
  "subject": "crypto: qat - add check to validate firmware images",
  "body": "The function qat_uclo_check_image() validates the MMP and AE firmware\nimages. If the QAT device supports firmware authentication (indicated\nby the handle to firmware loader), the input signed binary MMP and AE\nimages are validated by parsing the following information:\n- Header length\n- Full size of the binary\n- Type of binary image (MMP or AE Firmware)\n\nFirmware binaries use RSA3K for signing and verification.\nThe header length for the RSA3k is 0x384 bytes.\n\nAll the size field values in the binary are quantified\nas DWORDS (1 DWORD = 4bytes).\n\nOn an invalid value the function prints an error message and returns\nwith an error code \"EINVAL\".\n\nSigned-off-by: Srinivas Kerekare <srinivas.kerekare@intel.com>\nReviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>\nReviewed-by: Wojciech Ziemba <wojciech.ziemba@intel.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "full_message": "crypto: qat - add check to validate firmware images\n\nThe function qat_uclo_check_image() validates the MMP and AE firmware\nimages. If the QAT device supports firmware authentication (indicated\nby the handle to firmware loader), the input signed binary MMP and AE\nimages are validated by parsing the following information:\n- Header length\n- Full size of the binary\n- Type of binary image (MMP or AE Firmware)\n\nFirmware binaries use RSA3K for signing and verification.\nThe header length for the RSA3k is 0x384 bytes.\n\nAll the size field values in the binary are quantified\nas DWORDS (1 DWORD = 4bytes).\n\nOn an invalid value the function prints an error message and returns\nwith an error code \"EINVAL\".\n\nSigned-off-by: Srinivas Kerekare <srinivas.kerekare@intel.com>\nReviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>\nReviewed-by: Wojciech Ziemba <wojciech.ziemba@intel.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "author_name": "Srinivas Kerekare",
  "author_email": "srinivas.kerekare@intel.com",
  "author_date": "Mon Jul 25 11:40:09 2022 +0100",
  "author_date_iso": "2022-07-25T11:40:09+01:00",
  "committer_name": "Herbert Xu",
  "committer_email": "herbert@gondor.apana.org.au",
  "committer_date": "Fri Aug 19 18:39:33 2022 +0800",
  "committer_date_iso": "2022-08-19T18:39:33+08:00",
  "files_changed": [
    "drivers/crypto/qat/qat_common/icp_qat_uclo.h",
    "drivers/crypto/qat/qat_common/qat_uclo.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/crypto/qat/qat_common/icp_qat_uclo.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "drivers/crypto/qat/qat_common/qat_uclo.c",
      "insertions": 55,
      "deletions": 1
    }
  ],
  "total_insertions": 57,
  "total_deletions": 2,
  "total_changes": 59,
  "parents": [
    "108586eba094b318e6a831f977f4ddcc403a15da"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/crypto/qat/qat_common/icp_qat_uclo.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/crypto/qat/qat_common/qat_uclo.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}