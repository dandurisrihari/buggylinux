{
  "hash": "61850725779709369c7e907ae8c7c75dc7cec4f3",
  "hash_short": "61850725",
  "subject": "i3c: master: svc: Fix use after free vulnerability in svc_i3c_master Driver Due to Race Condition",
  "body": "In the svc_i3c_master_probe function, &master->hj_work is bound with\nsvc_i3c_master_hj_work, &master->ibi_work is bound with\nsvc_i3c_master_ibi_work. And svc_i3c_master_ibi_work  can start the\nhj_work, svc_i3c_master_irq_handler can start the ibi_work.\n\nIf we remove the module which will call svc_i3c_master_remove to\nmake cleanup, it will free master->base through i3c_master_unregister\nwhile the work mentioned above will be used. The sequence of operations\nthat may lead to a UAF bug is as follows:\n\nCPU0                                         CPU1\n\n                                    | svc_i3c_master_hj_work\nsvc_i3c_master_remove               |\ni3c_master_unregister(&master->base)|\ndevice_unregister(&master->dev)     |\ndevice_release                      |\n//free master->base                 |\n                                    | i3c_master_do_daa(&master->base)\n                                    | //use master->base\n\nFix it by ensuring that the work is canceled before proceeding with the\ncleanup in svc_i3c_master_remove.\n\nFixes: 0f74f8b6675c (\"i3c: Make i3c_master_unregister() return void\")\nCc: stable@vger.kernel.org\nSigned-off-by: Kaixin Wang <kxwang23@m.fudan.edu.cn>\nReviewed-by: Miquel Raynal <miquel.raynal@bootlin.com>\nReviewed-by: Frank Li <Frank.Li@nxp.com>\nLink: https://lore.kernel.org/stable/20240914154030.180-1-kxwang23%40m.fudan.edu.cn\nLink: https://lore.kernel.org/r/20240914163932.253-1-kxwang23@m.fudan.edu.cn\nSigned-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>",
  "full_message": "i3c: master: svc: Fix use after free vulnerability in svc_i3c_master Driver Due to Race Condition\n\nIn the svc_i3c_master_probe function, &master->hj_work is bound with\nsvc_i3c_master_hj_work, &master->ibi_work is bound with\nsvc_i3c_master_ibi_work. And svc_i3c_master_ibi_work  can start the\nhj_work, svc_i3c_master_irq_handler can start the ibi_work.\n\nIf we remove the module which will call svc_i3c_master_remove to\nmake cleanup, it will free master->base through i3c_master_unregister\nwhile the work mentioned above will be used. The sequence of operations\nthat may lead to a UAF bug is as follows:\n\nCPU0                                         CPU1\n\n                                    | svc_i3c_master_hj_work\nsvc_i3c_master_remove               |\ni3c_master_unregister(&master->base)|\ndevice_unregister(&master->dev)     |\ndevice_release                      |\n//free master->base                 |\n                                    | i3c_master_do_daa(&master->base)\n                                    | //use master->base\n\nFix it by ensuring that the work is canceled before proceeding with the\ncleanup in svc_i3c_master_remove.\n\nFixes: 0f74f8b6675c (\"i3c: Make i3c_master_unregister() return void\")\nCc: stable@vger.kernel.org\nSigned-off-by: Kaixin Wang <kxwang23@m.fudan.edu.cn>\nReviewed-by: Miquel Raynal <miquel.raynal@bootlin.com>\nReviewed-by: Frank Li <Frank.Li@nxp.com>\nLink: https://lore.kernel.org/stable/20240914154030.180-1-kxwang23%40m.fudan.edu.cn\nLink: https://lore.kernel.org/r/20240914163932.253-1-kxwang23@m.fudan.edu.cn\nSigned-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>",
  "author_name": "Kaixin Wang",
  "author_email": "kxwang23@m.fudan.edu.cn",
  "author_date": "Sun Sep 15 00:39:33 2024 +0800",
  "author_date_iso": "2024-09-15T00:39:33+08:00",
  "committer_name": "Alexandre Belloni",
  "committer_email": "alexandre.belloni@bootlin.com",
  "committer_date": "Tue Sep 17 16:51:45 2024 +0200",
  "committer_date_iso": "2024-09-17T16:51:45+02:00",
  "files_changed": [
    "drivers/i3c/master/svc-i3c-master.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/i3c/master/svc-i3c-master.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 1,
  "total_deletions": 0,
  "total_changes": 1,
  "parents": [
    "609366e7a06d035990df78f1562291c3bf0d4a12"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/i3c/master/svc-i3c-master.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}