{
  "hash": "325f9c649c8a4e447e4d3babacc7a60b75012d5d",
  "hash_short": "325f9c64",
  "subject": "KVM: arm/arm64: use vcpu requests for irq injection",
  "body": "Don't use request-less VCPU kicks when injecting IRQs, as a VCPU\nkick meant to trigger the interrupt injection could be sent while\nthe VCPU is outside guest mode, which means no IPI is sent, and\nafter it has called kvm_vgic_flush_hwstate(), meaning it won't see\nthe updated GIC state until its next exit some time later for some\nother reason.  The receiving VCPU only needs to check this request\nin VCPU RUN to handle it.  By checking it, if it's pending, a\nmemory barrier will be issued that ensures all state is visible.\nSee \"Ensuring Requests Are Seen\" of\nDocumentation/virtual/kvm/vcpu-requests.rst\n\nSigned-off-by: Andrew Jones <drjones@redhat.com>\nReviewed-by: Christoffer Dall <cdall@linaro.org>\nSigned-off-by: Christoffer Dall <cdall@linaro.org>",
  "full_message": "KVM: arm/arm64: use vcpu requests for irq injection\n\nDon't use request-less VCPU kicks when injecting IRQs, as a VCPU\nkick meant to trigger the interrupt injection could be sent while\nthe VCPU is outside guest mode, which means no IPI is sent, and\nafter it has called kvm_vgic_flush_hwstate(), meaning it won't see\nthe updated GIC state until its next exit some time later for some\nother reason.  The receiving VCPU only needs to check this request\nin VCPU RUN to handle it.  By checking it, if it's pending, a\nmemory barrier will be issued that ensures all state is visible.\nSee \"Ensuring Requests Are Seen\" of\nDocumentation/virtual/kvm/vcpu-requests.rst\n\nSigned-off-by: Andrew Jones <drjones@redhat.com>\nReviewed-by: Christoffer Dall <cdall@linaro.org>\nSigned-off-by: Christoffer Dall <cdall@linaro.org>",
  "author_name": "Andrew Jones",
  "author_email": "drjones@redhat.com",
  "author_date": "Sun Jun 4 14:43:59 2017 +0200",
  "author_date_iso": "2017-06-04T14:43:59+02:00",
  "committer_name": "Christoffer Dall",
  "committer_email": "cdall@linaro.org",
  "committer_date": "Sun Jun 4 16:53:56 2017 +0200",
  "committer_date_iso": "2017-06-04T16:53:56+02:00",
  "files_changed": [
    "arch/arm/include/asm/kvm_host.h",
    "arch/arm64/include/asm/kvm_host.h",
    "virt/kvm/arm/arm.c",
    "virt/kvm/arm/vgic/vgic.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/arm/include/asm/kvm_host.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/kvm_host.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "virt/kvm/arm/arm.c",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "virt/kvm/arm/vgic/vgic.c",
      "insertions": 7,
      "deletions": 2
    }
  ],
  "total_insertions": 16,
  "total_deletions": 2,
  "total_changes": 18,
  "parents": [
    "7b244e2be654d90d77800015d23395357dbc82ba"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.13",
    "v4.13-rc1",
    "v4.13-rc2",
    "v4.13-rc3",
    "v4.13-rc4",
    "v4.13-rc5",
    "v4.13-rc6",
    "v4.13-rc7",
    "v4.14",
    "v4.14-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm/include/asm/kvm_host.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/kvm_host.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "virt/kvm/arm/arm.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "virt/kvm/arm/vgic/vgic.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}