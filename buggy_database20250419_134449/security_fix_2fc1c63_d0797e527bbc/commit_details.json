{
  "hash": "2fc1c63d2763ad7562ea7d241da79b42538a557b",
  "hash_short": "2fc1c63d",
  "subject": "powerpc/highmem: Properly handle fragmented memory",
  "body": "In addition to checking whether a page is reserved before allocating\nit to highmem, verify that it is valid memory.\n\nOtherwise the kernel Oopses as below:\n\n  mem auto-init: stack:off, heap alloc:off, heap free:off\n  Kernel attempted to read user page (7df58) - exploit attempt? (uid: 0)\n  BUG: Unable to handle kernel data access on read at 0x0007df58\n  Faulting instruction address: 0xc01c8348\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  BE PAGE_SIZE=4K SMP NR_CPUS=2 P2020RDB-PC\n  Modules linked in:\n  CPU: 0 PID: 0 Comm: swapper Not tainted 6.0.0-rc2-0caacb197b677410bdac81bc34f05235+ #121\n  NIP:  c01c8348 LR: c01cb2bc CTR: 0000000a\n  REGS: c10d7e20 TRAP: 0300   Not tainted  (6.0.0-rc2-0caacb197b677410bdac81bc34f05235+)\n  MSR:  00021000 <CE,ME>  CR: 48044224  XER: 00000000\n  DEAR: 0007df58 ESR: 00000000\n  GPR00: c01cb294 c10d7f10 c1045340 00000001 00000004 c112bcc0 00000015 eedf1000\n  GPR08: 00000003 0007df58 00000000 f0000000 28044228 00000200 00000000 00000000\n  GPR16: 00000000 00000000 00000000 0275cb7a c0000000 00000001 0000075f 00000000\n  GPR24: c1031004 00000000 00000000 00000001 c10f0000 eedf1000 00080000 00080000\n  NIP free_unref_page_prepare.part.93+0x48/0x60\n  LR  free_unref_page+0x84/0x4b8\n  Call Trace:\n    0xeedf1000 (unreliable)\n    free_unref_page+0x5c/0x4b8\n    mem_init+0xd0/0x194\n    start_kernel+0x4c0/0x6d0\n    set_ivor+0x13c/0x178\n\nReported-by: Pali Roh\u00e1r <pali@kernel.org>\nSigned-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>\nFixes: b0e0d68b1c52 (\"powerpc/32: Allow fragmented physical memory\")\nTested-by: Pali Roh\u00e1r <pali@kernel.org>\n[mpe: Trim oops]\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/f08cca5c46d67399c53262eca48e015dcf1841f9.1663695394.git.christophe.leroy@csgroup.eu",
  "full_message": "powerpc/highmem: Properly handle fragmented memory\n\nIn addition to checking whether a page is reserved before allocating\nit to highmem, verify that it is valid memory.\n\nOtherwise the kernel Oopses as below:\n\n  mem auto-init: stack:off, heap alloc:off, heap free:off\n  Kernel attempted to read user page (7df58) - exploit attempt? (uid: 0)\n  BUG: Unable to handle kernel data access on read at 0x0007df58\n  Faulting instruction address: 0xc01c8348\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  BE PAGE_SIZE=4K SMP NR_CPUS=2 P2020RDB-PC\n  Modules linked in:\n  CPU: 0 PID: 0 Comm: swapper Not tainted 6.0.0-rc2-0caacb197b677410bdac81bc34f05235+ #121\n  NIP:  c01c8348 LR: c01cb2bc CTR: 0000000a\n  REGS: c10d7e20 TRAP: 0300   Not tainted  (6.0.0-rc2-0caacb197b677410bdac81bc34f05235+)\n  MSR:  00021000 <CE,ME>  CR: 48044224  XER: 00000000\n  DEAR: 0007df58 ESR: 00000000\n  GPR00: c01cb294 c10d7f10 c1045340 00000001 00000004 c112bcc0 00000015 eedf1000\n  GPR08: 00000003 0007df58 00000000 f0000000 28044228 00000200 00000000 00000000\n  GPR16: 00000000 00000000 00000000 0275cb7a c0000000 00000001 0000075f 00000000\n  GPR24: c1031004 00000000 00000000 00000001 c10f0000 eedf1000 00080000 00080000\n  NIP free_unref_page_prepare.part.93+0x48/0x60\n  LR  free_unref_page+0x84/0x4b8\n  Call Trace:\n    0xeedf1000 (unreliable)\n    free_unref_page+0x5c/0x4b8\n    mem_init+0xd0/0x194\n    start_kernel+0x4c0/0x6d0\n    set_ivor+0x13c/0x178\n\nReported-by: Pali Roh\u00e1r <pali@kernel.org>\nSigned-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>\nFixes: b0e0d68b1c52 (\"powerpc/32: Allow fragmented physical memory\")\nTested-by: Pali Roh\u00e1r <pali@kernel.org>\n[mpe: Trim oops]\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/f08cca5c46d67399c53262eca48e015dcf1841f9.1663695394.git.christophe.leroy@csgroup.eu",
  "author_name": "Christophe Leroy",
  "author_email": "christophe.leroy@csgroup.eu",
  "author_date": "Tue Sep 20 19:36:42 2022 +0200",
  "author_date_iso": "2022-09-20T19:36:42+02:00",
  "committer_name": "Michael Ellerman",
  "committer_email": "mpe@ellerman.id.au",
  "committer_date": "Mon Sep 26 20:58:19 2022 +1000",
  "committer_date_iso": "2022-09-26T20:58:19+10:00",
  "files_changed": [
    "arch/powerpc/mm/mem.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/powerpc/mm/mem.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "c4167aec98524fa4511b3222303a758b532b6009"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/powerpc/mm/mem.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}