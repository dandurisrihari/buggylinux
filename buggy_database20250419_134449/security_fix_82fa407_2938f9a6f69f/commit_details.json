{
  "hash": "82fa407da081d05323171577d86f62d77df17465",
  "hash_short": "82fa407d",
  "subject": "Merge branch 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm",
  "body": "Pull ARM updates from Russell King:\n\n - Correct ARMs dma-mapping to use the correct printk format strings.\n\n - Avoid defining OBJCOPYFLAGS globally which upsets lkdtm rodata\n   testing.\n\n - Cleanups to ARMs asm/memory.h include.\n\n - L2 cache cleanups.\n\n - Allow flat nommu binaries to be executed on ARM MMU systems.\n\n - Kernel hardening - add more read-only after init annotations,\n   including making some kernel vdso variables const.\n\n - Ensure AMBA primecell clocks are appropriately defaulted.\n\n - ARM breakpoint cleanup.\n\n - Various StrongARM 11x0 and companion chip (SA1111) updates to bring\n   this legacy platform to use more modern APIs for (eg) GPIOs and\n   interrupts, which will allow us in the future to reduce some of the\n   board-level driver clutter and elimate function callbacks into board\n   code via platform data. There still appears to be interest in these\n   platforms!\n\n - Remove the now redundant secure_flush_area() API.\n\n - Module PLT relocation optimisations. Ard says: This series of 4\n   patches optimizes the ARM PLT generation code that is invoked at\n   module load time, to get rid of the O(n^2) algorithm that results in\n   pathological load times of 10 seconds or more for large modules on\n   certain STB platforms.\n\n - ARMv7M cache maintanence support.\n\n - L2 cache PMU support\n\n* 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm: (35 commits)\n  ARM: sa1111: provide to_sa1111_device() macro\n  ARM: sa1111: add sa1111_get_irq()\n  ARM: sa1111: clean up duplication in IRQ chip implementation\n  ARM: sa1111: implement a gpio_chip for SA1111 GPIOs\n  ARM: sa1111: move irq cleanup to separate function\n  ARM: sa1111: use devm_clk_get()\n  ARM: sa1111: use devm_kzalloc()\n  ARM: sa1111: ensure we only touch RAB bus type devices when removing\n  ARM: 8611/1: l2x0: add PMU support\n  ARM: 8610/1: V7M: Add dsb before jumping in handler mode\n  ARM: 8609/1: V7M: Add support for the Cortex-M7 processor\n  ARM: 8608/1: V7M: Indirect proc_info construction for V7M CPUs\n  ARM: 8607/1: V7M: Wire up caches for V7M processors with cache support.\n  ARM: 8606/1: V7M: introduce cache operations\n  ARM: 8605/1: V7M: fix notrace variant of save_and_disable_irqs\n  ARM: 8604/1: V7M: Add support for reading the CTR with read_cpuid_cachetype()\n  ARM: 8603/1: V7M: Add addresses for mem-mapped V7M cache operations\n  ARM: 8602/1: factor out CSSELR/CCSIDR operations that use cp15 directly\n  ARM: kernel: avoid brute force search on PLT generation\n  ARM: kernel: sort relocation sections before allocating PLTs\n  ...",
  "full_message": "Merge branch 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm\n\nPull ARM updates from Russell King:\n\n - Correct ARMs dma-mapping to use the correct printk format strings.\n\n - Avoid defining OBJCOPYFLAGS globally which upsets lkdtm rodata\n   testing.\n\n - Cleanups to ARMs asm/memory.h include.\n\n - L2 cache cleanups.\n\n - Allow flat nommu binaries to be executed on ARM MMU systems.\n\n - Kernel hardening - add more read-only after init annotations,\n   including making some kernel vdso variables const.\n\n - Ensure AMBA primecell clocks are appropriately defaulted.\n\n - ARM breakpoint cleanup.\n\n - Various StrongARM 11x0 and companion chip (SA1111) updates to bring\n   this legacy platform to use more modern APIs for (eg) GPIOs and\n   interrupts, which will allow us in the future to reduce some of the\n   board-level driver clutter and elimate function callbacks into board\n   code via platform data. There still appears to be interest in these\n   platforms!\n\n - Remove the now redundant secure_flush_area() API.\n\n - Module PLT relocation optimisations. Ard says: This series of 4\n   patches optimizes the ARM PLT generation code that is invoked at\n   module load time, to get rid of the O(n^2) algorithm that results in\n   pathological load times of 10 seconds or more for large modules on\n   certain STB platforms.\n\n - ARMv7M cache maintanence support.\n\n - L2 cache PMU support\n\n* 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm: (35 commits)\n  ARM: sa1111: provide to_sa1111_device() macro\n  ARM: sa1111: add sa1111_get_irq()\n  ARM: sa1111: clean up duplication in IRQ chip implementation\n  ARM: sa1111: implement a gpio_chip for SA1111 GPIOs\n  ARM: sa1111: move irq cleanup to separate function\n  ARM: sa1111: use devm_clk_get()\n  ARM: sa1111: use devm_kzalloc()\n  ARM: sa1111: ensure we only touch RAB bus type devices when removing\n  ARM: 8611/1: l2x0: add PMU support\n  ARM: 8610/1: V7M: Add dsb before jumping in handler mode\n  ARM: 8609/1: V7M: Add support for the Cortex-M7 processor\n  ARM: 8608/1: V7M: Indirect proc_info construction for V7M CPUs\n  ARM: 8607/1: V7M: Wire up caches for V7M processors with cache support.\n  ARM: 8606/1: V7M: introduce cache operations\n  ARM: 8605/1: V7M: fix notrace variant of save_and_disable_irqs\n  ARM: 8604/1: V7M: Add support for reading the CTR with read_cpuid_cachetype()\n  ARM: 8603/1: V7M: Add addresses for mem-mapped V7M cache operations\n  ARM: 8602/1: factor out CSSELR/CCSIDR operations that use cp15 directly\n  ARM: kernel: avoid brute force search on PLT generation\n  ARM: kernel: sort relocation sections before allocating PLTs\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Thu Oct 6 07:59:37 2016 -0700",
  "author_date_iso": "2016-10-06T07:59:37-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Oct 6 07:59:37 2016 -0700",
  "committer_date_iso": "2016-10-06T07:59:37-07:00",
  "files_changed": [
    "arch/arm/kernel/vdso.c",
    "include/linux/cpuhotplug.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm/Makefile",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/arm/boot/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/arm/common/sa1111.c",
      "insertions": 257,
      "deletions": 177
    },
    {
      "file": "arch/arm/include/asm/assembler.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/arm/include/asm/cacheflush.h",
      "insertions": 0,
      "deletions": 17
    },
    {
      "file": "arch/arm/include/asm/cachetype.h",
      "insertions": 39,
      "deletions": 0
    },
    {
      "file": "arch/arm/include/asm/cputype.h",
      "insertions": 31,
      "deletions": 5
    },
    {
      "file": "arch/arm/include/asm/flat.h",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "arch/arm/include/asm/glue-cache.h",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "arch/arm/include/asm/hardware/cache-l2x0.h",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "arch/arm/include/asm/hardware/sa1111.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "arch/arm/include/asm/hw_breakpoint.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/arm/include/asm/memory.h",
      "insertions": 3,
      "deletions": 12
    },
    {
      "file": "arch/arm/include/asm/module.h",
      "insertions": 2,
      "deletions": 4
    },
    {
      "file": "arch/arm/include/asm/v7m.h",
      "insertions": 22,
      "deletions": 0
    },
    {
      "file": "arch/arm/kernel/cpuidle.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm/kernel/head-nommu.S",
      "insertions": 15,
      "deletions": 1
    },
    {
      "file": "arch/arm/kernel/module-plts.c",
      "insertions": 144,
      "deletions": 99
    },
    {
      "file": "arch/arm/kernel/module.lds",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "arch/arm/kernel/setup.c",
      "insertions": 12,
      "deletions": 14
    },
    {
      "file": "arch/arm/kernel/smp.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm/kernel/vdso.c",
      "insertions": 6,
      "deletions": 5
    },
    {
      "file": "arch/arm/lib/delay.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm/mach-footbridge/include/mach/hardware.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm/mach-rpc/include/mach/hardware.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm/mach-sa1100/include/mach/hardware.h",
      "insertions": 1,
      "deletions": 19
    },
    {
      "file": "arch/arm/mm/Kconfig",
      "insertions": 14,
      "deletions": 3
    },
    {
      "file": "arch/arm/mm/Makefile",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm/mm/cache-l2x0-pmu.c",
      "insertions": 584,
      "deletions": 0
    },
    {
      "file": "arch/arm/mm/cache-l2x0.c",
      "insertions": 8,
      "deletions": 3
    },
    {
      "file": "arch/arm/mm/cache-v7m.S",
      "insertions": 453,
      "deletions": 0
    },
    {
      "file": "arch/arm/mm/dma-mapping.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm/mm/mmu.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm/mm/proc-macros.S",
      "insertions": 16,
      "deletions": 0
    },
    {
      "file": "arch/arm/mm/proc-v7m.S",
      "insertions": 94,
      "deletions": 14
    },
    {
      "file": "drivers/amba/bus.c",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "drivers/cpufreq/sa1110-cpufreq.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/Kconfig.binfmt",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "include/linux/cpuhotplug.h",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 1752,
  "total_deletions": 394,
  "total_changes": 2146,
  "parents": [
    "c7f5d36a3cc26e5068f4444aa22c4579e5eac85f",
    "81a63001862f92d47c8c40a7fad870d5fbd8680b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm/kernel/vdso.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/cpuhotplug.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}