commit 82fa407da081d05323171577d86f62d77df17465
Merge: c7f5d36a3cc2 81a63001862f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 6 07:59:37 2016 -0700

    Merge branch 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm
    
    Pull ARM updates from Russell King:
    
     - Correct ARMs dma-mapping to use the correct printk format strings.
    
     - Avoid defining OBJCOPYFLAGS globally which upsets lkdtm rodata
       testing.
    
     - Cleanups to ARMs asm/memory.h include.
    
     - L2 cache cleanups.
    
     - Allow flat nommu binaries to be executed on ARM MMU systems.
    
     - Kernel hardening - add more read-only after init annotations,
       including making some kernel vdso variables const.
    
     - Ensure AMBA primecell clocks are appropriately defaulted.
    
     - ARM breakpoint cleanup.
    
     - Various StrongARM 11x0 and companion chip (SA1111) updates to bring
       this legacy platform to use more modern APIs for (eg) GPIOs and
       interrupts, which will allow us in the future to reduce some of the
       board-level driver clutter and elimate function callbacks into board
       code via platform data. There still appears to be interest in these
       platforms!
    
     - Remove the now redundant secure_flush_area() API.
    
     - Module PLT relocation optimisations. Ard says: This series of 4
       patches optimizes the ARM PLT generation code that is invoked at
       module load time, to get rid of the O(n^2) algorithm that results in
       pathological load times of 10 seconds or more for large modules on
       certain STB platforms.
    
     - ARMv7M cache maintanence support.
    
     - L2 cache PMU support
    
    * 'for-linus' of git://git.armlinux.org.uk/~rmk/linux-arm: (35 commits)
      ARM: sa1111: provide to_sa1111_device() macro
      ARM: sa1111: add sa1111_get_irq()
      ARM: sa1111: clean up duplication in IRQ chip implementation
      ARM: sa1111: implement a gpio_chip for SA1111 GPIOs
      ARM: sa1111: move irq cleanup to separate function
      ARM: sa1111: use devm_clk_get()
      ARM: sa1111: use devm_kzalloc()
      ARM: sa1111: ensure we only touch RAB bus type devices when removing
      ARM: 8611/1: l2x0: add PMU support
      ARM: 8610/1: V7M: Add dsb before jumping in handler mode
      ARM: 8609/1: V7M: Add support for the Cortex-M7 processor
      ARM: 8608/1: V7M: Indirect proc_info construction for V7M CPUs
      ARM: 8607/1: V7M: Wire up caches for V7M processors with cache support.
      ARM: 8606/1: V7M: introduce cache operations
      ARM: 8605/1: V7M: fix notrace variant of save_and_disable_irqs
      ARM: 8604/1: V7M: Add support for reading the CTR with read_cpuid_cachetype()
      ARM: 8603/1: V7M: Add addresses for mem-mapped V7M cache operations
      ARM: 8602/1: factor out CSSELR/CCSIDR operations that use cp15 directly
      ARM: kernel: avoid brute force search on PLT generation
      ARM: kernel: sort relocation sections before allocating PLTs
      ...