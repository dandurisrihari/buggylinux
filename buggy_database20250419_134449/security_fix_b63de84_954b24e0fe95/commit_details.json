{
  "hash": "b63de8400a6e1001b5732286cf6f5ec27799b7b4",
  "hash_short": "b63de840",
  "subject": "nvme: Revert: Fix controller creation races with teardown flow",
  "body": "The indicated patch introduced a barrier in the sysfs_delete attribute\nfor the controller that rejects the request if the controller isn't\ncreated. \"Created\" is defined as at least 1 call to nvme_start_ctrl().\n\nThis is problematic in error-injection testing.  If an error occurs on\nthe initial attempt to create an association and the controller enters\nreconnect(s) attempts, the admin cannot delete the controller until\neither there is a successful association created or ctrl_loss_tmo\ntimes out.\n\nWhere this issue is particularly hurtful is when the \"admin\" is the\nnvme-cli, it is performing a connection to a discovery controller, and\nit is initiated via auto-connect scripts.  With the FC transport, if the\nfirst connection attempt fails, the controller enters a normal reconnect\nstate but returns control to the cli thread that created the controller.\nIn this scenario, the cli attempts to read the discovery log via ioctl,\nwhich fails, causing the cli to see it as an empty log and then proceeds\nto delete the discovery controller. The delete is rejected and the\ncontroller is left live. If the discovery controller reconnect then\nsucceeds, there is no action to delete it, and it sits live doing nothing.\n\nCc: <stable@vger.kernel.org> # v5.7+\nFixes: ce1518139e69 (\"nvme: Fix controller creation races with teardown flow\")\nSigned-off-by: James Smart <james.smart@broadcom.com>\nCC: Israel Rukshin <israelr@mellanox.com>\nCC: Max Gurtovoy <maxg@mellanox.com>\nCC: Christoph Hellwig <hch@lst.de>\nCC: Keith Busch <kbusch@kernel.org>\nCC: Sagi Grimberg <sagi@grimberg.me>\nSigned-off-by: Christoph Hellwig <hch@lst.de>",
  "full_message": "nvme: Revert: Fix controller creation races with teardown flow\n\nThe indicated patch introduced a barrier in the sysfs_delete attribute\nfor the controller that rejects the request if the controller isn't\ncreated. \"Created\" is defined as at least 1 call to nvme_start_ctrl().\n\nThis is problematic in error-injection testing.  If an error occurs on\nthe initial attempt to create an association and the controller enters\nreconnect(s) attempts, the admin cannot delete the controller until\neither there is a successful association created or ctrl_loss_tmo\ntimes out.\n\nWhere this issue is particularly hurtful is when the \"admin\" is the\nnvme-cli, it is performing a connection to a discovery controller, and\nit is initiated via auto-connect scripts.  With the FC transport, if the\nfirst connection attempt fails, the controller enters a normal reconnect\nstate but returns control to the cli thread that created the controller.\nIn this scenario, the cli attempts to read the discovery log via ioctl,\nwhich fails, causing the cli to see it as an empty log and then proceeds\nto delete the discovery controller. The delete is rejected and the\ncontroller is left live. If the discovery controller reconnect then\nsucceeds, there is no action to delete it, and it sits live doing nothing.\n\nCc: <stable@vger.kernel.org> # v5.7+\nFixes: ce1518139e69 (\"nvme: Fix controller creation races with teardown flow\")\nSigned-off-by: James Smart <james.smart@broadcom.com>\nCC: Israel Rukshin <israelr@mellanox.com>\nCC: Max Gurtovoy <maxg@mellanox.com>\nCC: Christoph Hellwig <hch@lst.de>\nCC: Keith Busch <kbusch@kernel.org>\nCC: Sagi Grimberg <sagi@grimberg.me>\nSigned-off-by: Christoph Hellwig <hch@lst.de>",
  "author_name": "James Smart",
  "author_email": "james.smart@broadcom.com",
  "author_date": "Fri Aug 28 12:01:50 2020 -0700",
  "author_date_iso": "2020-08-28T12:01:50-07:00",
  "committer_name": "Christoph Hellwig",
  "committer_email": "hch@lst.de",
  "committer_date": "Tue Sep 8 19:46:28 2020 +0200",
  "committer_date_iso": "2020-09-08T19:46:28+02:00",
  "files_changed": [
    "drivers/nvme/host/core.c",
    "drivers/nvme/host/nvme.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/nvme/host/core.c",
      "insertions": 0,
      "deletions": 5
    },
    {
      "file": "drivers/nvme/host/nvme.h",
      "insertions": 0,
      "deletions": 1
    }
  ],
  "total_insertions": 0,
  "total_deletions": 6,
  "total_changes": 6,
  "parents": [
    "88ce2a530cc9865a894454b2e40eba5957a60e1a"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/nvme/host/core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/nvme/host/nvme.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}