{
  "hash": "fab9963a69dbd71304357dbfe4ec5345f14cebdd",
  "hash_short": "fab9963a",
  "subject": "mm: fault-inject take over bootstrap kmem_cache check",
  "body": "Remove the SLAB specific function slab_should_failslab(), by moving the\ncheck against fault-injection for the bootstrap slab, into the shared\nfunction should_failslab() (used by both SLAB and SLUB).\n\nThis is a step towards sharing alloc_hook's between SLUB and SLAB.\n\nThis bootstrap slab \"kmem_cache\" is used for allocating struct\nkmem_cache objects to the allocator itself.\n\nSigned-off-by: Jesper Dangaard Brouer <brouer@redhat.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Vladimir Davydov <vdavydov@virtuozzo.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "mm: fault-inject take over bootstrap kmem_cache check\n\nRemove the SLAB specific function slab_should_failslab(), by moving the\ncheck against fault-injection for the bootstrap slab, into the shared\nfunction should_failslab() (used by both SLAB and SLUB).\n\nThis is a step towards sharing alloc_hook's between SLUB and SLAB.\n\nThis bootstrap slab \"kmem_cache\" is used for allocating struct\nkmem_cache objects to the allocator itself.\n\nSigned-off-by: Jesper Dangaard Brouer <brouer@redhat.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Vladimir Davydov <vdavydov@virtuozzo.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Jesper Dangaard Brouer",
  "author_email": "brouer@redhat.com",
  "author_date": "Tue Mar 15 14:53:38 2016 -0700",
  "author_date_iso": "2016-03-15T14:53:38-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Tue Mar 15 16:55:16 2016 -0700",
  "committer_date_iso": "2016-03-15T16:55:16-07:00",
  "files_changed": [
    "include/linux/fault-inject.h",
    "mm/failslab.c",
    "mm/slab.c",
    "mm/slab.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "include/linux/fault-inject.h",
      "insertions": 2,
      "deletions": 3
    },
    {
      "file": "mm/failslab.c",
      "insertions": 9,
      "deletions": 3
    },
    {
      "file": "mm/slab.c",
      "insertions": 2,
      "deletions": 10
    },
    {
      "file": "mm/slab.h",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 14,
  "total_deletions": 17,
  "total_changes": 31,
  "parents": [
    "11c7aec2a9b4e685bbf6a15148e7841b3525fc0c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/fault-inject.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/failslab.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slab.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slab.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}