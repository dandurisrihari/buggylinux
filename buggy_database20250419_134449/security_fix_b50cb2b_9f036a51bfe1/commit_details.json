{
  "hash": "b50cb2b1555d8714e12a566b9b49fcac56a04a3f",
  "hash_short": "b50cb2b1",
  "subject": "KVM: x86: Use a dedicated flow for queueing re-injected exceptions",
  "body": "Open code the filling of vcpu->arch.exception in kvm_requeue_exception()\ninstead of bouncing through kvm_multiple_exception(), as re-injection\ndoesn't actually share that much code with \"normal\" injection, e.g. the\nVM-Exit interception check, payload delivery, and nested exception code\nis all bypassed as those flows only apply during initial injection.\n\nWhen FRED comes along, the special casing will only get worse, as FRED\nexplicitly tracks nested exceptions and essentially delivers the payload\non the stack frame, i.e. re-injection will need more inputs, and normal\ninjection will have yet more code that needs to be bypassed when KVM is\nre-injecting an exception.\n\nNo functional change intended.\n\nSigned-off-by: Xin Li (Intel) <xin@zytor.com>\nTested-by: Shan Kang <shan.kang@intel.com>\nLink: https://lore.kernel.org/r/20241001050110.3643764-2-xin@zytor.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>",
  "full_message": "KVM: x86: Use a dedicated flow for queueing re-injected exceptions\n\nOpen code the filling of vcpu->arch.exception in kvm_requeue_exception()\ninstead of bouncing through kvm_multiple_exception(), as re-injection\ndoesn't actually share that much code with \"normal\" injection, e.g. the\nVM-Exit interception check, payload delivery, and nested exception code\nis all bypassed as those flows only apply during initial injection.\n\nWhen FRED comes along, the special casing will only get worse, as FRED\nexplicitly tracks nested exceptions and essentially delivers the payload\non the stack frame, i.e. re-injection will need more inputs, and normal\ninjection will have yet more code that needs to be bypassed when KVM is\nre-injecting an exception.\n\nNo functional change intended.\n\nSigned-off-by: Xin Li (Intel) <xin@zytor.com>\nTested-by: Shan Kang <shan.kang@intel.com>\nLink: https://lore.kernel.org/r/20241001050110.3643764-2-xin@zytor.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Mon Sep 30 22:00:44 2024 -0700",
  "author_date_iso": "2024-09-30T22:00:44-07:00",
  "committer_name": "Sean Christopherson",
  "committer_email": "seanjc@google.com",
  "committer_date": "Tue Feb 25 07:23:07 2025 -0800",
  "committer_date_iso": "2025-02-25T07:23:07-08:00",
  "files_changed": [
    "arch/x86/include/asm/kvm_host.h",
    "arch/x86/kvm/svm/svm.c",
    "arch/x86/kvm/vmx/vmx.c",
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "insertions": 9,
      "deletions": 6
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "insertions": 10,
      "deletions": 6
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 42,
      "deletions": 47
    }
  ],
  "total_insertions": 63,
  "total_deletions": 61,
  "total_changes": 124,
  "parents": [
    "4fa0efb43a781055d146298a7ae886d529488d82"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}