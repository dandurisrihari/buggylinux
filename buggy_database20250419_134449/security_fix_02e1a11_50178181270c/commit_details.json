{
  "hash": "02e1a114fdb71e59ee6770294166c30d437bf86a",
  "hash_short": "02e1a114",
  "subject": "nfp: fix use-after-free in area_cache_get()",
  "body": "area_cache_get() is used to distribute cache->area and set cache->id,\n and if cache->id is not 0 and cache->area->kref refcount is 0, it will\n release the cache->area by nfp_cpp_area_release(). area_cache_get()\n set cache->id before cpp->op->area_init() and nfp_cpp_area_acquire().\n\nBut if area_init() or nfp_cpp_area_acquire() fails, the cache->id is\n is already set but the refcount is not increased as expected. At this\n time, calling the nfp_cpp_area_release() will cause use-after-free.\n\nTo avoid the use-after-free, set cache->id after area_init() and\n nfp_cpp_area_acquire() complete successfully.\n\nNote: This vulnerability is triggerable by providing emulated device\n equipped with specified configuration.\n\n BUG: KASAN: use-after-free in nfp6000_area_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:760)\n  Write of size 4 at addr ffff888005b7f4a0 by task swapper/0/1\n\n Call Trace:\n  <TASK>\n nfp6000_area_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:760)\n area_cache_get.constprop.8 (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:884)\n\n Allocated by task 1:\n nfp_cpp_area_alloc_with_name (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:303)\n nfp_cpp_area_cache_add (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:802)\n nfp6000_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:1230)\n nfp_cpp_from_operations (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:1215)\n nfp_pci_probe (drivers/net/ethernet/netronome/nfp/nfp_main.c:744)\n\n Freed by task 1:\n kfree (mm/slub.c:4562)\n area_cache_get.constprop.8 (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:873)\n nfp_cpp_read (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:924 drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:973)\n nfp_cpp_readl (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cpplib.c:48)\n\nSigned-off-by: Jialiang Wang <wangjialiang0806@163.com>\nReviewed-by: Yinjun Zhang <yinjun.zhang@corigine.com>\nAcked-by: Simon Horman <simon.horman@corigine.com>\nLink: https://lore.kernel.org/r/20220810073057.4032-1-wangjialiang0806@163.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "nfp: fix use-after-free in area_cache_get()\n\narea_cache_get() is used to distribute cache->area and set cache->id,\n and if cache->id is not 0 and cache->area->kref refcount is 0, it will\n release the cache->area by nfp_cpp_area_release(). area_cache_get()\n set cache->id before cpp->op->area_init() and nfp_cpp_area_acquire().\n\nBut if area_init() or nfp_cpp_area_acquire() fails, the cache->id is\n is already set but the refcount is not increased as expected. At this\n time, calling the nfp_cpp_area_release() will cause use-after-free.\n\nTo avoid the use-after-free, set cache->id after area_init() and\n nfp_cpp_area_acquire() complete successfully.\n\nNote: This vulnerability is triggerable by providing emulated device\n equipped with specified configuration.\n\n BUG: KASAN: use-after-free in nfp6000_area_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:760)\n  Write of size 4 at addr ffff888005b7f4a0 by task swapper/0/1\n\n Call Trace:\n  <TASK>\n nfp6000_area_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:760)\n area_cache_get.constprop.8 (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:884)\n\n Allocated by task 1:\n nfp_cpp_area_alloc_with_name (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:303)\n nfp_cpp_area_cache_add (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:802)\n nfp6000_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:1230)\n nfp_cpp_from_operations (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:1215)\n nfp_pci_probe (drivers/net/ethernet/netronome/nfp/nfp_main.c:744)\n\n Freed by task 1:\n kfree (mm/slub.c:4562)\n area_cache_get.constprop.8 (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:873)\n nfp_cpp_read (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:924 drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:973)\n nfp_cpp_readl (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cpplib.c:48)\n\nSigned-off-by: Jialiang Wang <wangjialiang0806@163.com>\nReviewed-by: Yinjun Zhang <yinjun.zhang@corigine.com>\nAcked-by: Simon Horman <simon.horman@corigine.com>\nLink: https://lore.kernel.org/r/20220810073057.4032-1-wangjialiang0806@163.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Jialiang Wang",
  "author_email": "wangjialiang0806@163.com",
  "author_date": "Wed Aug 10 15:30:57 2022 +0800",
  "author_date_iso": "2022-08-10T15:30:57+08:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Thu Aug 11 09:02:26 2022 -0700",
  "committer_date_iso": "2022-08-11T09:02:26-07:00",
  "files_changed": [
    "drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 2,
  "total_deletions": 1,
  "total_changes": 3,
  "parents": [
    "cef8e3261b4c8003f8a28276f8c74d7d0223e289"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}