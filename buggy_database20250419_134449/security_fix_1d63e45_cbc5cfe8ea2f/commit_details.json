{
  "hash": "1d63e4557f0d11fd795c7acd50a241da2d8bf89f",
  "hash_short": "1d63e455",
  "subject": "crypto: amlogic-gxl - permit async skcipher as fallback",
  "body": "Even though the amlogic-gxl driver implements asynchronous versions of\necb(aes) and cbc(aes), the fallbacks it allocates are required to be\nsynchronous. Given that SIMD based software implementations are usually\nasynchronous as well, even though they rarely complete asynchronously\n(this typically only happens in cases where the request was made from\nsoftirq context, while SIMD was already in use in the task context that\nit interrupted), these implementations are disregarded, and either the\ngeneric C version or another table based version implemented in assembler\nis selected instead.\n\nSince falling back to synchronous AES is not only a performance issue,\nbut potentially a security issue as well (due to the fact that table\nbased AES is not time invariant), let's fix this, by allocating an\nordinary skcipher as the fallback, and invoke it with the completion\nroutine that was given to the outer request.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nTested-by: Corentin Labbe <clabbe@baylibre.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "full_message": "crypto: amlogic-gxl - permit async skcipher as fallback\n\nEven though the amlogic-gxl driver implements asynchronous versions of\necb(aes) and cbc(aes), the fallbacks it allocates are required to be\nsynchronous. Given that SIMD based software implementations are usually\nasynchronous as well, even though they rarely complete asynchronously\n(this typically only happens in cases where the request was made from\nsoftirq context, while SIMD was already in use in the task context that\nit interrupted), these implementations are disregarded, and either the\ngeneric C version or another table based version implemented in assembler\nis selected instead.\n\nSince falling back to synchronous AES is not only a performance issue,\nbut potentially a security issue as well (due to the fact that table\nbased AES is not time invariant), let's fix this, by allocating an\nordinary skcipher as the fallback, and invoke it with the completion\nroutine that was given to the outer request.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nTested-by: Corentin Labbe <clabbe@baylibre.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "author_name": "Ard Biesheuvel",
  "author_email": "ardb@kernel.org",
  "author_date": "Tue Jul 7 09:31:52 2020 +0300",
  "author_date_iso": "2020-07-07T09:31:52+03:00",
  "committer_name": "Herbert Xu",
  "committer_email": "herbert@gondor.apana.org.au",
  "committer_date": "Thu Jul 16 21:49:02 2020 +1000",
  "committer_date_iso": "2020-07-16T21:49:02+10:00",
  "files_changed": [
    "drivers/crypto/amlogic/amlogic-gxl-cipher.c",
    "drivers/crypto/amlogic/amlogic-gxl.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/crypto/amlogic/amlogic-gxl-cipher.c",
      "insertions": 13,
      "deletions": 14
    },
    {
      "file": "drivers/crypto/amlogic/amlogic-gxl.h",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 15,
  "total_deletions": 15,
  "total_changes": 30,
  "parents": [
    "3f368b886e95080daf811d228795c28716495279"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/crypto/amlogic/amlogic-gxl-cipher.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/crypto/amlogic/amlogic-gxl.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}