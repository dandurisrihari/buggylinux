Commit Hash: bd49e16e3339f052fae05fb3e955c5db0c9c6445
Subject: x86/vsyscall: Add a new vsyscall=xonly mode


Security Keywords:
- hardening

Full commit message:
x86/vsyscall: Add a new vsyscall=xonly mode

With vsyscall emulation on, a readable vsyscall page is still exposed that
contains syscall instructions that validly implement the vsyscalls.

This is required because certain dynamic binary instrumentation tools
attempt to read the call targets of call instructions in the instrumented
code.  If the instrumented code uses vsyscalls, then the vsyscall page needs
to contain readable code.

Unfortunately, leaving readable memory at a deterministic address can be
used to help various ASLR bypasses, so some hardening value can be gained
by disallowing vsyscall reads.

Given how rarely the vsyscall page needs to be readable, add a mechanism to
make the vsyscall page be execute only.

Signed-off-by: Andy Lutomirski <luto@kernel.org>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Reviewed-by: Kees Cook <keescook@chromium.org>
Cc: Florian Weimer <fweimer@redhat.com>
Cc: Jann Horn <jannh@google.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Kernel Hardening <kernel-hardening@lists.openwall.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Link: https://lkml.kernel.org/r/d17655777c21bc09a7af1bbcf74e6f2b69a51152.1561610354.git.luto@kernel.org

Metadata:
Author: Andy Lutomirski <luto@kernel.org>
Author Date: Wed Jun 26 21:45:03 2019 -0700
Committer: Thomas Gleixner <tglx@linutronix.de>
Commit Date: Fri Jun 28 00:04:38 2019 +0200

Files Changed: 3
Lines Added: 44
Lines Removed: 12
Total Changes: 56
