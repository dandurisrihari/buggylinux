{
  "hash": "ba17674fe02909fef049fd4b620a2805bdb8c693",
  "hash_short": "ba17674f",
  "subject": "9p: attach-per-user",
  "body": "The 9P2000 protocol requires the authentication and permission checks to be\ndone in the file server. For that reason every user that accesses the file\nserver tree has to authenticate and attach to the server separately.\nMultiple users can share the same connection to the server.\n\nCurrently v9fs does a single attach and executes all I/O operations as a\nsingle user. This makes using v9fs in multiuser environment unsafe as it\ndepends on the client doing the permission checking.\n\nThis patch improves the 9P2000 support by allowing every user to attach\nseparately. The patch defines three modes of access (new mount option\n'access'):\n\n- attach-per-user (access=user) (default mode for 9P2000.u)\n If a user tries to access a file served by v9fs for the first time, v9fs\n sends an attach command to the server (Tattach) specifying the user. If\n the attach succeeds, the user can access the v9fs tree.\n As there is no uname->uid (string->integer) mapping yet, this mode works\n only with the 9P2000.u dialect.\n\n- allow only one user to access the tree (access=<uid>)\n Only the user with uid can access the v9fs tree. Other users that attempt\n to access it will get EPERM error.\n\n- do all operations as a single user (access=any) (default for 9P2000)\n V9fs does a single attach and all operations are done as a single user.\n If this mode is selected, the v9fs behavior is identical with the current\n one.\n\nSigned-off-by: Latchesar Ionkov <lucho@ionkov.net>\nSigned-off-by: Eric Van Hensbergen <ericvh@gmail.com>",
  "full_message": "9p: attach-per-user\n\nThe 9P2000 protocol requires the authentication and permission checks to be\ndone in the file server. For that reason every user that accesses the file\nserver tree has to authenticate and attach to the server separately.\nMultiple users can share the same connection to the server.\n\nCurrently v9fs does a single attach and executes all I/O operations as a\nsingle user. This makes using v9fs in multiuser environment unsafe as it\ndepends on the client doing the permission checking.\n\nThis patch improves the 9P2000 support by allowing every user to attach\nseparately. The patch defines three modes of access (new mount option\n'access'):\n\n- attach-per-user (access=user) (default mode for 9P2000.u)\n If a user tries to access a file served by v9fs for the first time, v9fs\n sends an attach command to the server (Tattach) specifying the user. If\n the attach succeeds, the user can access the v9fs tree.\n As there is no uname->uid (string->integer) mapping yet, this mode works\n only with the 9P2000.u dialect.\n\n- allow only one user to access the tree (access=<uid>)\n Only the user with uid can access the v9fs tree. Other users that attempt\n to access it will get EPERM error.\n\n- do all operations as a single user (access=any) (default for 9P2000)\n V9fs does a single attach and all operations are done as a single user.\n If this mode is selected, the v9fs behavior is identical with the current\n one.\n\nSigned-off-by: Latchesar Ionkov <lucho@ionkov.net>\nSigned-off-by: Eric Van Hensbergen <ericvh@gmail.com>",
  "author_name": "Latchesar Ionkov",
  "author_email": "lucho@ionkov.net",
  "author_date": "Wed Oct 17 14:31:07 2007 -0500",
  "author_date_iso": "2007-10-17T14:31:07-05:00",
  "committer_name": "Eric Van Hensbergen",
  "committer_email": "ericvh@ericvh-desktop.austin.ibm.com",
  "committer_date": "Wed Oct 17 14:31:07 2007 -0500",
  "committer_date_iso": "2007-10-17T14:31:07-05:00",
  "files_changed": [
    "Documentation/filesystems/9p.txt",
    "fs/9p/fid.c",
    "fs/9p/v9fs.c",
    "fs/9p/v9fs.h",
    "fs/9p/vfs_inode.c",
    "include/net/9p/9p.h",
    "include/net/9p/client.h",
    "net/9p/client.c",
    "net/9p/conv.c"
  ],
  "files_changed_count": 9,
  "stats": [
    {
      "file": "Documentation/filesystems/9p.txt",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "fs/9p/fid.c",
      "insertions": 125,
      "deletions": 32
    },
    {
      "file": "fs/9p/v9fs.c",
      "insertions": 52,
      "deletions": 15
    },
    {
      "file": "fs/9p/v9fs.h",
      "insertions": 8,
      "deletions": 3
    },
    {
      "file": "fs/9p/vfs_inode.c",
      "insertions": 10,
      "deletions": 10
    },
    {
      "file": "include/net/9p/9p.h",
      "insertions": 5,
      "deletions": 2
    },
    {
      "file": "include/net/9p/client.h",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "net/9p/client.c",
      "insertions": 6,
      "deletions": 4
    },
    {
      "file": "net/9p/conv.c",
      "insertions": 28,
      "deletions": 4
    }
  ],
  "total_insertions": 247,
  "total_deletions": 72,
  "total_changes": 319,
  "parents": [
    "bd32b82df9876af439f1760a599c0e2da9198bda"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.24",
    "v2.6.24-rc1",
    "v2.6.24-rc2",
    "v2.6.24-rc3",
    "v2.6.24-rc4",
    "v2.6.24-rc5",
    "v2.6.24-rc6",
    "v2.6.24-rc7",
    "v2.6.24-rc8",
    "v2.6.25"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/filesystems/9p.txt",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/9p/v9fs.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/9p/fid.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/9p/client.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/net/9p/9p.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/net/9p/client.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/9p/v9fs.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/9p/conv.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/9p/vfs_inode.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}