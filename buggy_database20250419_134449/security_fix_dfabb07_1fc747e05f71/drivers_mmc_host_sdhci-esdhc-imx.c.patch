commit dfabb077d62552797ca0ae7756cb30d3e195ead5
Merge: 5b67fbfc32b5 92075d98abf0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 31 16:13:09 2020 -0700

    Merge tag 'mmc-v5.7' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc
    
    Pull MMC updates from Ulf Hansson:
     "MMC core:
       - Add support for host software queue for (e)MMC/SD
       - Throttle polling rate for CMD6
       - Update CMD13 busy condition check for CMD6 commands
       - Improve busy detect polling for erase/trim/discard/HPI
       - Fixup support for HW busy detection for HPI commands
       - Re-work and improve support for eMMC sanitize commands
    
      MMC host:
       - mmci:
           * Add support for sdmmc variant revision 2.0
       - mmci_sdmmc:
           * Improve support for busyend detection
           * Fixup support for signal voltage switch
           * Add support for tuning with delay block
       - mtk-sd:
           * Fix another SDIO irq issue
       - sdhci:
           * Disable native card detect when GPIO based type exist
       - sdhci:
           * Add option to defer request completion
       - sdhci_am654:
           * Add support to set a tap value per speed mode
       - sdhci-esdhc-imx:
           * Add support for i.MX8MM based variant
           * Fixup support for standard tuning on i.MX8 usdhc
           * Optimize for strobe/clock dll settings
           * Fixup support for system and runtime suspend/resume
       - sdhci-iproc:
           * Update regulator/bus-voltage management for bcm2711
       - sdhci-msm:
           * Prevent clock gating with PWRSAVE_DLL on broken variants
           * Fix management of CQE during SDHCI reset
       - sdhci-of-arasan:
           * Add support for auto tuning on ZynqMP based platforms
       - sdhci-omap:
           * Add support for system suspend/resume
       - sdhci-sprd:
           * Add support for HW busy detection
           * Enable support host software queue
       - sdhci-tegra:
           * Add support for HW busy detection
       - tmio/renesas_sdhi:
           * Enforce retune after runtime suspend
       - renesas_sdhi:
           * Use manual tap correction for HS400 on some variants
           * Add support for manual correction of tap values for tunings"
    
    * tag 'mmc-v5.7' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc: (86 commits)
      mmc: cavium-octeon: remove nonsense variable coercion
      mmc: mediatek: fix SDIO irq issue
      mmc: mmci_sdmmc: Fix clear busyd0end irq flag
      dt-bindings: mmc: Fix node name in an example
      mmc: core: Re-work the code for eMMC sanitize
      mmc: sdhci: use FIELD_GET for preset value bit masks
      mmc: sdhci-of-at91: Display clock changes for debug purpose only
      mmc: sdhci: iproc: Add custom set_power() callback for bcm2711
      mmc: sdhci: am654: Use sdhci_set_power_and_voltage()
      mmc: sdhci: at91: Use sdhci_set_power_and_voltage()
      mmc: sdhci: milbeaut: Use sdhci_set_power_and_voltage()
      mmc: sdhci: arasan: Use sdhci_set_power_and_voltage()
      mmc: sdhci: Introduce sdhci_set_power_and_bus_voltage()
      mmc: vub300: Use scnprintf() for avoiding potential buffer overflow
      dt-bindings: mmc: synopsys-dw-mshc: fix clock-freq-min-max in example
      sdhci: tegra: Enable MMC_CAP_WAIT_WHILE_BUSY host capability
      sdhci: tegra: Implement Tegra specific set_timeout callback
      mmc: sdhci-omap: Add Support for Suspend/Resume
      mmc: renesas_sdhi: simplify execute_tuning
      mmc: renesas_sdhi: Use BITS_PER_LONG helper
      ...

diff --cc drivers/mmc/host/sdhci-esdhc-imx.c
index b2bdf5012c55,b38b9d7f0a0d..5ec8e4bf1ac7
--- a/drivers/mmc/host/sdhci-esdhc-imx.c
+++ b/drivers/mmc/host/sdhci-esdhc-imx.c
@@@ -1679,8 -1802,12 +1801,11 @@@ static int sdhci_esdhc_runtime_resume(s
  	int err;
  
  	if (imx_data->socdata->flags & ESDHC_FLAG_PMQOS)
 -		pm_qos_add_request(&imx_data->pm_qos_req,
 -			PM_QOS_CPU_DMA_LATENCY, 0);
 +		cpu_latency_qos_add_request(&imx_data->pm_qos_req, 0);
  
+ 	if (imx_data->socdata->flags & ESDHC_FLAG_CLK_RATE_LOST_IN_PM_RUNTIME)
+ 		clk_set_rate(imx_data->clk_per, pltfm_host->clock);
+ 
  	err = clk_prepare_enable(imx_data->clk_ahb);
  	if (err)
  		goto remove_pm_qos_request;