commit af3b854492f351d1ff3b4744a83bf5ff7eed4920
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Dec 28 00:39:23 2018 -0800

    mm/page_alloc.c: allow error injection
    
    Model call chain after should_failslab().  Likewise, we can now use a
    kprobe to override the return value of should_fail_alloc_page() and inject
    allocation failures into alloc_page*().
    
    This will allow injecting allocation failures using the BCC tools even
    without building kernel with CONFIG_FAIL_PAGE_ALLOC and booting it with a
    fail_page_alloc= parameter, which incurs some overhead even when failures
    are not being injected.  On the other hand, this patch adds an
    unconditional call to should_fail_alloc_page() from page allocation
    hotpath.  That overhead should be rather negligible with
    CONFIG_FAIL_PAGE_ALLOC=n when there's no kprobe attached, though.
    
    [vbabka@suse.cz: changelog addition]
    Link: http://lkml.kernel.org/r/20181214074330.18917-1-bpoirier@suse.com
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Pavel Tatashin <pavel.tatashin@microsoft.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Alexander Duyck <alexander.h.duyck@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/asm-generic/error-injection.h b/include/asm-generic/error-injection.h
index 296c65442f00..95a159a4137f 100644
--- a/include/asm-generic/error-injection.h
+++ b/include/asm-generic/error-injection.h
@@ -8,6 +8,7 @@ enum {
 	EI_ETYPE_NULL,		/* Return NULL if failure */
 	EI_ETYPE_ERRNO,		/* Return -ERRNO if failure */
 	EI_ETYPE_ERRNO_NULL,	/* Return -ERRNO or NULL if failure */
+	EI_ETYPE_TRUE,		/* Return true if failure */
 };
 
 struct error_injection_entry {