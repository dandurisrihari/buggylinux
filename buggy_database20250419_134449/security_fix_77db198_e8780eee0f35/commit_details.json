{
  "hash": "77db1980565626471a980f0d2d17299e4bd5e7a5",
  "hash_short": "77db1980",
  "subject": "[Bluetooth] Enforce security for outgoing RFCOMM connections",
  "body": "Recent tests with various Bluetooth headsets have shown that some of\nthem don't enforce authentication and encryption when connecting. All\nof them leave it up to the host stack to enforce it. Non of them should\nallow unencrypted connections, but that is how it is. So in case the\nlink mode settings require authentication and/or encryption it will now\nalso be enforced on outgoing RFCOMM connections. Previously this was\nonly done for incoming connections.\n\nThis support has a small drawback from a protocol level point of view\nsince the host stack can't really tell with 100% certainty if a remote\nside is already authenticated or not. So if both sides are configured\nto enforce authentication it will be requested twice. Most Bluetooth\nchips are caching this information and thus no extra authentication\nprocedure has to be triggered over-the-air, but it can happen.\n\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>",
  "full_message": "[Bluetooth] Enforce security for outgoing RFCOMM connections\n\nRecent tests with various Bluetooth headsets have shown that some of\nthem don't enforce authentication and encryption when connecting. All\nof them leave it up to the host stack to enforce it. Non of them should\nallow unencrypted connections, but that is how it is. So in case the\nlink mode settings require authentication and/or encryption it will now\nalso be enforced on outgoing RFCOMM connections. Previously this was\nonly done for incoming connections.\n\nThis support has a small drawback from a protocol level point of view\nsince the host stack can't really tell with 100% certainty if a remote\nside is already authenticated or not. So if both sides are configured\nto enforce authentication it will be requested twice. Most Bluetooth\nchips are caching this information and thus no extra authentication\nprocedure has to be triggered over-the-air, but it can happen.\n\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>",
  "author_name": "Marcel Holtmann",
  "author_email": "marcel@holtmann.org",
  "author_date": "Mon Jul 14 20:13:45 2008 +0200",
  "author_date_iso": "2008-07-14T20:13:45+02:00",
  "committer_name": "Marcel Holtmann",
  "committer_email": "marcel@holtmann.org",
  "committer_date": "Mon Jul 14 20:13:45 2008 +0200",
  "committer_date_iso": "2008-07-14T20:13:45+02:00",
  "files_changed": [
    "include/net/bluetooth/rfcomm.h",
    "net/bluetooth/rfcomm/core.c",
    "net/bluetooth/rfcomm/sock.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "include/net/bluetooth/rfcomm.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/bluetooth/rfcomm/core.c",
      "insertions": 46,
      "deletions": 31
    },
    {
      "file": "net/bluetooth/rfcomm/sock.c",
      "insertions": 5,
      "deletions": 3
    }
  ],
  "total_insertions": 52,
  "total_deletions": 34,
  "total_changes": 86,
  "parents": [
    "79d554a6976a295aa9212172b218f29ca71c3b3d"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.27",
    "v2.6.27-rc1",
    "v2.6.27-rc2",
    "v2.6.27-rc3",
    "v2.6.27-rc4",
    "v2.6.27-rc5",
    "v2.6.27-rc6",
    "v2.6.27-rc7",
    "v2.6.27-rc8",
    "v2.6.27-rc9"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/net/bluetooth/rfcomm.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/bluetooth/rfcomm/core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/bluetooth/rfcomm/sock.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}