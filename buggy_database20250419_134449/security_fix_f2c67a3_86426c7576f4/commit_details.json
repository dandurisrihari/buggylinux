{
  "hash": "f2c67a3e60d1071b65848efaa8c3b66c363dd025",
  "hash_short": "f2c67a3e",
  "subject": "bpf: Disable preemption in bpf_perf_event_output",
  "body": "The nesting protection in bpf_perf_event_output relies on disabled\npreemption, which is guaranteed for kprobes and tracepoints.\n\nHowever bpf_perf_event_output can be also called from uprobes context\nthrough bpf_prog_run_array_sleepable function which disables migration,\nbut keeps preemption enabled.\n\nThis can cause task to be preempted by another one inside the nesting\nprotection and lead eventually to two tasks using same perf_sample_data\nbuffer and cause crashes like:\n\n  kernel tried to execute NX-protected page - exploit attempt? (uid: 0)\n  BUG: unable to handle page fault for address: ffffffff82be3eea\n  ...\n  Call Trace:\n   ? __die+0x1f/0x70\n   ? page_fault_oops+0x176/0x4d0\n   ? exc_page_fault+0x132/0x230\n   ? asm_exc_page_fault+0x22/0x30\n   ? perf_output_sample+0x12b/0x910\n   ? perf_event_output+0xd0/0x1d0\n   ? bpf_perf_event_output+0x162/0x1d0\n   ? bpf_prog_c6271286d9a4c938_krava1+0x76/0x87\n   ? __uprobe_perf_func+0x12b/0x540\n   ? uprobe_dispatcher+0x2c4/0x430\n   ? uprobe_notify_resume+0x2da/0xce0\n   ? atomic_notifier_call_chain+0x7b/0x110\n   ? exit_to_user_mode_prepare+0x13e/0x290\n   ? irqentry_exit_to_user_mode+0x5/0x30\n   ? asm_exc_int3+0x35/0x40\n\nFixing this by disabling preemption in bpf_perf_event_output.\n\nCc: stable@vger.kernel.org\nFixes: 8c7dcb84e3b7 (\"bpf: implement sleepable uprobes by chaining gps\")\nAcked-by: Hou Tao <houtao1@huawei.com>\nSigned-off-by: Jiri Olsa <jolsa@kernel.org>\nLink: https://lore.kernel.org/r/20230725084206.580930-2-jolsa@kernel.org\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>",
  "full_message": "bpf: Disable preemption in bpf_perf_event_output\n\nThe nesting protection in bpf_perf_event_output relies on disabled\npreemption, which is guaranteed for kprobes and tracepoints.\n\nHowever bpf_perf_event_output can be also called from uprobes context\nthrough bpf_prog_run_array_sleepable function which disables migration,\nbut keeps preemption enabled.\n\nThis can cause task to be preempted by another one inside the nesting\nprotection and lead eventually to two tasks using same perf_sample_data\nbuffer and cause crashes like:\n\n  kernel tried to execute NX-protected page - exploit attempt? (uid: 0)\n  BUG: unable to handle page fault for address: ffffffff82be3eea\n  ...\n  Call Trace:\n   ? __die+0x1f/0x70\n   ? page_fault_oops+0x176/0x4d0\n   ? exc_page_fault+0x132/0x230\n   ? asm_exc_page_fault+0x22/0x30\n   ? perf_output_sample+0x12b/0x910\n   ? perf_event_output+0xd0/0x1d0\n   ? bpf_perf_event_output+0x162/0x1d0\n   ? bpf_prog_c6271286d9a4c938_krava1+0x76/0x87\n   ? __uprobe_perf_func+0x12b/0x540\n   ? uprobe_dispatcher+0x2c4/0x430\n   ? uprobe_notify_resume+0x2da/0xce0\n   ? atomic_notifier_call_chain+0x7b/0x110\n   ? exit_to_user_mode_prepare+0x13e/0x290\n   ? irqentry_exit_to_user_mode+0x5/0x30\n   ? asm_exc_int3+0x35/0x40\n\nFixing this by disabling preemption in bpf_perf_event_output.\n\nCc: stable@vger.kernel.org\nFixes: 8c7dcb84e3b7 (\"bpf: implement sleepable uprobes by chaining gps\")\nAcked-by: Hou Tao <houtao1@huawei.com>\nSigned-off-by: Jiri Olsa <jolsa@kernel.org>\nLink: https://lore.kernel.org/r/20230725084206.580930-2-jolsa@kernel.org\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>",
  "author_name": "Jiri Olsa",
  "author_email": "jolsa@kernel.org",
  "author_date": "Tue Jul 25 10:42:05 2023 +0200",
  "author_date_iso": "2023-07-25T10:42:05+02:00",
  "committer_name": "Alexei Starovoitov",
  "committer_email": "ast@kernel.org",
  "committer_date": "Tue Jul 25 17:05:53 2023 -0700",
  "committer_date_iso": "2023-07-25T17:05:53-07:00",
  "files_changed": [
    "kernel/trace/bpf_trace.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/trace/bpf_trace.c",
      "insertions": 7,
      "deletions": 4
    }
  ],
  "total_insertions": 7,
  "total_deletions": 4,
  "total_changes": 11,
  "parents": [
    "284779dbf4e98753458708783af8c35630674a21"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/trace/bpf_trace.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}