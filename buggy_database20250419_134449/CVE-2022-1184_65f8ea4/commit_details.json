{
  "hash": "65f8ea4cd57dbd46ea13b41dc8bac03176b04233",
  "hash_short": "65f8ea4c",
  "subject": "ext4: check if directory block is within i_size",
  "body": "Currently ext4 directory handling code implicitly assumes that the\ndirectory blocks are always within the i_size. In fact ext4_append()\nwill attempt to allocate next directory block based solely on i_size and\nthe i_size is then appropriately increased after a successful\nallocation.\n\nHowever, for this to work it requires i_size to be correct. If, for any\nreason, the directory inode i_size is corrupted in a way that the\ndirectory tree refers to a valid directory block past i_size, we could\nend up corrupting parts of the directory tree structure by overwriting\nalready used directory blocks when modifying the directory.\n\nFix it by catching the corruption early in __ext4_read_dirblock().\n\nAddresses Red-Hat-Bugzilla: #2070205\nCVE: CVE-2022-1184\nSigned-off-by: Lukas Czerner <lczerner@redhat.com>\nCc: stable@vger.kernel.org\nReviewed-by: Andreas Dilger <adilger@dilger.ca>\nLink: https://lore.kernel.org/r/20220704142721.157985-1-lczerner@redhat.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
  "full_message": "ext4: check if directory block is within i_size\n\nCurrently ext4 directory handling code implicitly assumes that the\ndirectory blocks are always within the i_size. In fact ext4_append()\nwill attempt to allocate next directory block based solely on i_size and\nthe i_size is then appropriately increased after a successful\nallocation.\n\nHowever, for this to work it requires i_size to be correct. If, for any\nreason, the directory inode i_size is corrupted in a way that the\ndirectory tree refers to a valid directory block past i_size, we could\nend up corrupting parts of the directory tree structure by overwriting\nalready used directory blocks when modifying the directory.\n\nFix it by catching the corruption early in __ext4_read_dirblock().\n\nAddresses Red-Hat-Bugzilla: #2070205\nCVE: CVE-2022-1184\nSigned-off-by: Lukas Czerner <lczerner@redhat.com>\nCc: stable@vger.kernel.org\nReviewed-by: Andreas Dilger <adilger@dilger.ca>\nLink: https://lore.kernel.org/r/20220704142721.157985-1-lczerner@redhat.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
  "author_name": "Lukas Czerner",
  "author_email": "lczerner@redhat.com",
  "author_date": "Mon Jul 4 16:27:20 2022 +0200",
  "author_date_iso": "2022-07-04T16:27:20+02:00",
  "committer_name": "Theodore Ts'o",
  "committer_email": "tytso@mit.edu",
  "committer_date": "Tue Aug 2 23:56:17 2022 -0400",
  "committer_date_iso": "2022-08-02T23:56:17-04:00",
  "files_changed": [
    "fs/ext4/namei.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/ext4/namei.c",
      "insertions": 7,
      "deletions": 0
    }
  ],
  "total_insertions": 7,
  "total_deletions": 0,
  "total_changes": 7,
  "parents": [
    "3fa5d23e68a34dae9df2be168750dc5e03e0e40d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2022-1184"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "fs/ext4/namei.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}