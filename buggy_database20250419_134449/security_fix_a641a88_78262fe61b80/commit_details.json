{
  "hash": "a641a88e5d6864f20b2608cb01165c756794e645",
  "hash_short": "a641a88e",
  "subject": "Merge tag 'f2fs-for-5.3' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs",
  "body": "Pull f2fs updates from Jaegeuk Kim:\n \"In this round, we've introduced native swap file support which can\n  exploit DIO, enhanced existing checkpoint=disable feature with\n  additional mount option to tune the triggering condition, and allowed\n  user to preallocate physical blocks in a pinned file which will be\n  useful to avoid f2fs fragmentation in append-only workloads. In\n  addition, we've fixed subtle quota corruption issue.\n\n  Enhancements:\n   - add swap file support which uses DIO\n   - allocate blocks for pinned file\n   - allow SSR and mount option to enhance checkpoint=disable\n   - enhance IPU IOs\n   - add more sanity checks such as memory boundary access\n\n  Bug fixes:\n   - quota corruption in very corner case of error-injected SPO case\n   - fix root_reserved on remount and some wrong counts\n   - add missing fsck flag\n\n  Some patches were also introduced to clean up ambiguous i_flags and\n  debugging messages codes\"\n\n* tag 'f2fs-for-5.3' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (33 commits)\n  f2fs: improve print log in f2fs_sanity_check_ckpt()\n  f2fs: avoid out-of-range memory access\n  f2fs: fix to avoid long latency during umount\n  f2fs: allow all the users to pin a file\n  f2fs: support swap file w/ DIO\n  f2fs: allocate blocks for pinned file\n  f2fs: fix is_idle() check for discard type\n  f2fs: add a rw_sem to cover quota flag changes\n  f2fs: set SBI_NEED_FSCK for xattr corruption case\n  f2fs: use generic EFSBADCRC/EFSCORRUPTED\n  f2fs: Use DIV_ROUND_UP() instead of open-coding\n  f2fs: print kernel message if filesystem is inconsistent\n  f2fs: introduce f2fs_<level> macros to wrap f2fs_printk()\n  f2fs: avoid get_valid_blocks() for cleanup\n  f2fs: ioctl for removing a range from F2FS\n  f2fs: only set project inherit bit for directory\n  f2fs: separate f2fs i_flags from fs_flags and ext4 i_flags\n  f2fs: replace ktype default_attrs with default_groups\n  f2fs: Add option to limit required GC for checkpoint=disable\n  f2fs: Fix accounting for unusable blocks\n  ...",
  "full_message": "Merge tag 'f2fs-for-5.3' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, we've introduced native swap file support which can\n  exploit DIO, enhanced existing checkpoint=disable feature with\n  additional mount option to tune the triggering condition, and allowed\n  user to preallocate physical blocks in a pinned file which will be\n  useful to avoid f2fs fragmentation in append-only workloads. In\n  addition, we've fixed subtle quota corruption issue.\n\n  Enhancements:\n   - add swap file support which uses DIO\n   - allocate blocks for pinned file\n   - allow SSR and mount option to enhance checkpoint=disable\n   - enhance IPU IOs\n   - add more sanity checks such as memory boundary access\n\n  Bug fixes:\n   - quota corruption in very corner case of error-injected SPO case\n   - fix root_reserved on remount and some wrong counts\n   - add missing fsck flag\n\n  Some patches were also introduced to clean up ambiguous i_flags and\n  debugging messages codes\"\n\n* tag 'f2fs-for-5.3' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (33 commits)\n  f2fs: improve print log in f2fs_sanity_check_ckpt()\n  f2fs: avoid out-of-range memory access\n  f2fs: fix to avoid long latency during umount\n  f2fs: allow all the users to pin a file\n  f2fs: support swap file w/ DIO\n  f2fs: allocate blocks for pinned file\n  f2fs: fix is_idle() check for discard type\n  f2fs: add a rw_sem to cover quota flag changes\n  f2fs: set SBI_NEED_FSCK for xattr corruption case\n  f2fs: use generic EFSBADCRC/EFSCORRUPTED\n  f2fs: Use DIV_ROUND_UP() instead of open-coding\n  f2fs: print kernel message if filesystem is inconsistent\n  f2fs: introduce f2fs_<level> macros to wrap f2fs_printk()\n  f2fs: avoid get_valid_blocks() for cleanup\n  f2fs: ioctl for removing a range from F2FS\n  f2fs: only set project inherit bit for directory\n  f2fs: separate f2fs i_flags from fs_flags and ext4 i_flags\n  f2fs: replace ktype default_attrs with default_groups\n  f2fs: Add option to limit required GC for checkpoint=disable\n  f2fs: Fix accounting for unusable blocks\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Fri Jul 12 17:28:24 2019 -0700",
  "author_date_iso": "2019-07-12T17:28:24-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Jul 12 17:28:24 2019 -0700",
  "committer_date_iso": "2019-07-12T17:28:24-07:00",
  "files_changed": [
    "fs/f2fs/data.c",
    "include/trace/events/f2fs.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-fs-f2fs",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "Documentation/filesystems/f2fs.txt",
      "insertions": 123,
      "deletions": 10
    },
    {
      "file": "fs/f2fs/checkpoint.c",
      "insertions": 46,
      "deletions": 61
    },
    {
      "file": "fs/f2fs/data.c",
      "insertions": 224,
      "deletions": 25
    },
    {
      "file": "fs/f2fs/debug.c",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/dir.c",
      "insertions": 7,
      "deletions": 9
    },
    {
      "file": "fs/f2fs/extent_cache.c",
      "insertions": 3,
      "deletions": 4
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "insertions": 65,
      "deletions": 64
    },
    {
      "file": "fs/f2fs/file.c",
      "insertions": 201,
      "deletions": 101
    },
    {
      "file": "fs/f2fs/gc.c",
      "insertions": 185,
      "deletions": 11
    },
    {
      "file": "fs/f2fs/inline.c",
      "insertions": 6,
      "deletions": 10
    },
    {
      "file": "fs/f2fs/inode.c",
      "insertions": 30,
      "deletions": 48
    },
    {
      "file": "fs/f2fs/namei.c",
      "insertions": 4,
      "deletions": 6
    },
    {
      "file": "fs/f2fs/node.c",
      "insertions": 16,
      "deletions": 22
    },
    {
      "file": "fs/f2fs/recovery.c",
      "insertions": 18,
      "deletions": 25
    },
    {
      "file": "fs/f2fs/segment.c",
      "insertions": 134,
      "deletions": 36
    },
    {
      "file": "fs/f2fs/segment.h",
      "insertions": 7,
      "deletions": 9
    },
    {
      "file": "fs/f2fs/super.c",
      "insertions": 289,
      "deletions": 321
    },
    {
      "file": "fs/f2fs/sysfs.c",
      "insertions": 18,
      "deletions": 4
    },
    {
      "file": "fs/f2fs/xattr.c",
      "insertions": 8,
      "deletions": 2
    },
    {
      "file": "include/trace/events/f2fs.h",
      "insertions": 6,
      "deletions": 5
    }
  ],
  "total_insertions": 1405,
  "total_deletions": 773,
  "total_changes": 2178,
  "parents": [
    "4ce9d181ebe53abbca5f450b8a2984b8c3a38f26",
    "2d008835ec2fcf6eef3285e41e62a5eabd1fe76b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.3",
    "v5.3-rc1",
    "v5.3-rc2",
    "v5.3-rc3",
    "v5.3-rc4",
    "v5.3-rc5",
    "v5.3-rc6",
    "v5.3-rc7",
    "v5.3-rc8",
    "v5.4"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/f2fs/data.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/trace/events/f2fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}