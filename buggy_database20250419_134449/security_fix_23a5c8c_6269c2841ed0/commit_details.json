{
  "hash": "23a5c8cb7a91939cb08bc2dc880a7aa882bc6241",
  "hash_short": "23a5c8cb",
  "subject": "mm: init: report memory auto-initialization features at boot time",
  "body": "Print the currently enabled stack and heap initialization modes.\n\nStack initialization is enabled by a config flag, while heap\ninitialization is configured at boot time with defaults being set in the\nconfig.  It's more convenient for the user to have all information about\nthese hardening measures in one place at boot, so the user can reason\nabout the expected behavior of the running system.\n\nThe possible options for stack are:\n - \"all\" for CONFIG_INIT_STACK_ALL;\n - \"byref_all\" for CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF_ALL;\n - \"byref\" for CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF;\n - \"__user\" for CONFIG_GCC_PLUGIN_STRUCTLEAK_USER;\n - \"off\" otherwise.\n\nDepending on the values of init_on_alloc and init_on_free boottime options\nwe also report \"heap alloc\" and \"heap free\" as \"on\"/\"off\".\n\nIn the init_on_free mode initializing pages at boot time may take a while,\nso print a notice about that as well.  This depends on how much memory is\ninstalled, the memory bandwidth, etc.  On a relatively modern x86 system,\nit takes about 0.75s/GB to wipe all memory:\n\n  [    0.418722] mem auto-init: stack:byref_all, heap alloc:off, heap free:on\n  [    0.419765] mem auto-init: clearing system memory may take some time...\n  [   12.376605] Memory: 16408564K/16776672K available (14339K kernel code, 1397K rwdata, 3756K rodata, 1636K init, 11460K bss, 368108K reserved, 0K cma-reserved)\n\nLink: http://lkml.kernel.org/r/20190617151050.92663-3-glider@google.com\nSigned-off-by: Alexander Potapenko <glider@google.com>\nSuggested-by: Kees Cook <keescook@chromium.org>\nAcked-by: Kees Cook <keescook@chromium.org>\nCc: Christoph Lameter <cl@linux.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: James Morris <jmorris@namei.org>\nCc: Jann Horn <jannh@google.com>\nCc: Kostya Serebryany <kcc@google.com>\nCc: Laura Abbott <labbott@redhat.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: Masahiro Yamada <yamada.masahiro@socionext.com>\nCc: Matthew Wilcox <willy@infradead.org>\nCc: Nick Desaulniers <ndesaulniers@google.com>\nCc: Randy Dunlap <rdunlap@infradead.org>\nCc: Sandeep Patil <sspatil@android.com>\nCc: \"Serge E. Hallyn\" <serge@hallyn.com>\nCc: Souptick Joarder <jrdr.linux@gmail.com>\nCc: Marco Elver <elver@google.com>\nCc: Kaiwan N Billimoria <kaiwan@kaiwantech.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "mm: init: report memory auto-initialization features at boot time\n\nPrint the currently enabled stack and heap initialization modes.\n\nStack initialization is enabled by a config flag, while heap\ninitialization is configured at boot time with defaults being set in the\nconfig.  It's more convenient for the user to have all information about\nthese hardening measures in one place at boot, so the user can reason\nabout the expected behavior of the running system.\n\nThe possible options for stack are:\n - \"all\" for CONFIG_INIT_STACK_ALL;\n - \"byref_all\" for CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF_ALL;\n - \"byref\" for CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF;\n - \"__user\" for CONFIG_GCC_PLUGIN_STRUCTLEAK_USER;\n - \"off\" otherwise.\n\nDepending on the values of init_on_alloc and init_on_free boottime options\nwe also report \"heap alloc\" and \"heap free\" as \"on\"/\"off\".\n\nIn the init_on_free mode initializing pages at boot time may take a while,\nso print a notice about that as well.  This depends on how much memory is\ninstalled, the memory bandwidth, etc.  On a relatively modern x86 system,\nit takes about 0.75s/GB to wipe all memory:\n\n  [    0.418722] mem auto-init: stack:byref_all, heap alloc:off, heap free:on\n  [    0.419765] mem auto-init: clearing system memory may take some time...\n  [   12.376605] Memory: 16408564K/16776672K available (14339K kernel code, 1397K rwdata, 3756K rodata, 1636K init, 11460K bss, 368108K reserved, 0K cma-reserved)\n\nLink: http://lkml.kernel.org/r/20190617151050.92663-3-glider@google.com\nSigned-off-by: Alexander Potapenko <glider@google.com>\nSuggested-by: Kees Cook <keescook@chromium.org>\nAcked-by: Kees Cook <keescook@chromium.org>\nCc: Christoph Lameter <cl@linux.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: James Morris <jmorris@namei.org>\nCc: Jann Horn <jannh@google.com>\nCc: Kostya Serebryany <kcc@google.com>\nCc: Laura Abbott <labbott@redhat.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: Masahiro Yamada <yamada.masahiro@socionext.com>\nCc: Matthew Wilcox <willy@infradead.org>\nCc: Nick Desaulniers <ndesaulniers@google.com>\nCc: Randy Dunlap <rdunlap@infradead.org>\nCc: Sandeep Patil <sspatil@android.com>\nCc: \"Serge E. Hallyn\" <serge@hallyn.com>\nCc: Souptick Joarder <jrdr.linux@gmail.com>\nCc: Marco Elver <elver@google.com>\nCc: Kaiwan N Billimoria <kaiwan@kaiwantech.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Alexander Potapenko",
  "author_email": "glider@google.com",
  "author_date": "Thu Jul 11 20:59:23 2019 -0700",
  "author_date_iso": "2019-07-11T20:59:23-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Jul 12 11:05:46 2019 -0700",
  "committer_date_iso": "2019-07-12T11:05:46-07:00",
  "files_changed": [
    "init/main.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "init/main.c",
      "insertions": 24,
      "deletions": 0
    }
  ],
  "total_insertions": 24,
  "total_deletions": 0,
  "total_changes": 24,
  "parents": [
    "6471384af2a6530696fc0203bafe4de41a23c9ef"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.3",
    "v5.3-rc1",
    "v5.3-rc2",
    "v5.3-rc3",
    "v5.3-rc4",
    "v5.3-rc5",
    "v5.3-rc6",
    "v5.3-rc7",
    "v5.3-rc8",
    "v5.4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "init/main.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}