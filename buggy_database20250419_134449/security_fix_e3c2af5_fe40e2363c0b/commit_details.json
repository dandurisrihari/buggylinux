{
  "hash": "e3c2af5d49bb96ad460ef6aa873975fb0f7c7f17",
  "hash_short": "e3c2af5d",
  "subject": "power: supply: bq2515x: replace deprecated strncpy with strscpy",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect bq2515x->model_name to be NUL-terminated based on its usage with\nsysfs_emit and format strings:\n\nval->strval is assigned to bq2515x->model_name in\nbq2515x_mains_get_property():\n|       val->strval = bq2515x->model_name;\n\n... then in power_supply_sysfs.c we use value.strval with a format string:\n|       ret = sysfs_emit(buf, \"%s\\n\", value.strval);\n\nwe assigned value.strval via:\n|       ret = power_supply_get_property(psy, psp, &value);\n... which invokes psy->desc->get_property():\n|       return psy->desc->get_property(psy, psp, val);\n\nwith bq2515x_mains_get_property():\n|       static const struct power_supply_desc bq2515x_mains_desc = {\n...\n|       \t.get_property\t\t= bq2515x_mains_get_property,\n\nMoreover, no NUL-padding is required as bq2515x is zero-allocated in\nbq2515x_charger.c:\n|       bq2515x = devm_kzalloc(dev, sizeof(*bq2515x), GFP_KERNEL);\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nLet's also opt to use the more idiomatic strscpy() usage of (dest, src,\nsizeof(dest)) as this more closely ties the destination buffer and the\nlength.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nSimilar-to: https://lore.kernel.org/all/20231020-strncpy-drivers-power-supply-bq24190_charger-c-v1-1-e896223cb795@google.com/\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20231020-strncpy-drivers-power-supply-bq2515x_charger-c-v1-1-46664c6edf78@google.com\nSigned-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>",
  "full_message": "power: supply: bq2515x: replace deprecated strncpy with strscpy\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect bq2515x->model_name to be NUL-terminated based on its usage with\nsysfs_emit and format strings:\n\nval->strval is assigned to bq2515x->model_name in\nbq2515x_mains_get_property():\n|       val->strval = bq2515x->model_name;\n\n... then in power_supply_sysfs.c we use value.strval with a format string:\n|       ret = sysfs_emit(buf, \"%s\\n\", value.strval);\n\nwe assigned value.strval via:\n|       ret = power_supply_get_property(psy, psp, &value);\n... which invokes psy->desc->get_property():\n|       return psy->desc->get_property(psy, psp, val);\n\nwith bq2515x_mains_get_property():\n|       static const struct power_supply_desc bq2515x_mains_desc = {\n...\n|       \t.get_property\t\t= bq2515x_mains_get_property,\n\nMoreover, no NUL-padding is required as bq2515x is zero-allocated in\nbq2515x_charger.c:\n|       bq2515x = devm_kzalloc(dev, sizeof(*bq2515x), GFP_KERNEL);\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nLet's also opt to use the more idiomatic strscpy() usage of (dest, src,\nsizeof(dest)) as this more closely ties the destination buffer and the\nlength.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nSimilar-to: https://lore.kernel.org/all/20231020-strncpy-drivers-power-supply-bq24190_charger-c-v1-1-e896223cb795@google.com/\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20231020-strncpy-drivers-power-supply-bq2515x_charger-c-v1-1-46664c6edf78@google.com\nSigned-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Fri Oct 20 18:59:34 2023 +0000",
  "author_date_iso": "2023-10-20T18:59:34+00:00",
  "committer_name": "Sebastian Reichel",
  "committer_email": "sebastian.reichel@collabora.com",
  "committer_date": "Sat Oct 21 00:26:51 2023 +0200",
  "committer_date_iso": "2023-10-21T00:26:51+02:00",
  "files_changed": [
    "drivers/power/supply/bq2515x_charger.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/power/supply/bq2515x_charger.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "b0009b8bed98bd5d59449af48781703df261c247"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/power/supply/bq2515x_charger.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}