{
  "hash": "a73914c35b05d80f8ce78288e10056c91090b666",
  "hash_short": "a73914c3",
  "subject": "[SCSI] libsas: fix panic when single phy is disabled on a wide port",
  "body": "When a wide port is being utilized to a target, if one disables only one\nof the\nphys, we get an OS crash:\n\nBUG: unable to handle kernel NULL pointer dereference at\n0000000000000238\nIP: [<ffffffff814ca9b1>] mutex_lock+0x21/0x50\nPGD 4103f5067 PUD 41dba9067 PMD 0\nOops: 0002 [#1] SMP\nlast sysfs file: /sys/bus/pci/slots/5/address\nCPU 0\nModules linked in: pm8001(U) ses enclosure fuse nfsd exportfs autofs4\nipmi_devintf ipmi_si ipmi_msghandler nfs lockd fscache nfs_acl\nauth_rpcgss 8021q fcoe libfcoe garp libfc scsi_transport_fc stp scsi_tgt\nllc sunrpc cpufreq_ondemand acpi_cpufreq freq_table ipv6 sr_mod cdrom\ndm_mirror dm_region_hash dm_log uinput sg i2c_i801 i2c_core iTCO_wdt\niTCO_vendor_support e1000e mlx4_ib ib_mad ib_core mlx4_en mlx4_core ext3\njbd mbcache sd_mod crc_t10dif usb_storage ata_generic pata_acpi ata_piix\nlibsas(U) scsi_transport_sas dm_mod [last unloaded: pm8001]\n\nModules linked in: pm8001(U) ses enclosure fuse nfsd exportfs autofs4\nipmi_devintf ipmi_si ipmi_msghandler nfs lockd fscache nfs_acl\nauth_rpcgss 8021q fcoe libfcoe garp libfc scsi_transport_fc stp scsi_tgt\nllc sunrpc cpufreq_ondemand acpi_cpufreq freq_table ipv6 sr_mod cdrom\ndm_mirror dm_region_hash dm_log uinput sg i2c_i801 i2c_core iTCO_wdt\niTCO_vendor_support e1000e mlx4_ib ib_mad ib_core mlx4_en mlx4_core ext3\njbd mbcache sd_mod crc_t10dif usb_storage ata_generic pata_acpi ata_piix\nlibsas(U) scsi_transport_sas dm_mod [last unloaded: pm8001]\nPid: 5146, comm: scsi_wq_5 Not tainted\n2.6.32-71.29.1.el6.lustre.7.x86_64 #1 Storage Server\nRIP: 0010:[<ffffffff814ca9b1>]  [<ffffffff814ca9b1>]\nmutex_lock+0x21/0x50\nRSP: 0018:ffff8803e4e33d30  EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000238 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffff8803e664c800 RDI: 0000000000000238\nRBP: ffff8803e4e33d40 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000\nR13: 0000000000000238 R14: ffff88041acb7200 R15: ffff88041c51ada0\nFS:  0000000000000000(0000) GS:ffff880028200000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b\nCR2: 0000000000000238 CR3: 0000000410143000 CR4: 00000000000006f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\nProcess scsi_wq_5 (pid: 5146, threadinfo ffff8803e4e32000, task\nffff8803e4e294a0)\nStack:\n ffff8803e664c800 0000000000000000 ffff8803e4e33d70 ffffffffa001f06e\n<0> ffff8803e4e33d60 ffff88041c51ada0 ffff88041acb7200 ffff88041bc0aa00\n<0> ffff8803e4e33d90 ffffffffa0032b6c 0000000000000014 ffff88041acb7200\nCall Trace:\n [<ffffffffa001f06e>] sas_port_delete_phy+0x2e/0xa0 [scsi_transport_sas]\n [<ffffffffa0032b6c>] sas_unregister_devs_sas_addr+0xac/0xe0 [libsas]\n [<ffffffffa0034914>] sas_ex_revalidate_domain+0x204/0x330 [libsas]\n [<ffffffffa00307f0>] ? sas_revalidate_domain+0x0/0x90 [libsas]\n [<ffffffffa0030855>] sas_revalidate_domain+0x65/0x90 [libsas]\n [<ffffffff8108c7d0>] worker_thread+0x170/0x2a0\n [<ffffffff81091ea0>] ? autoremove_wake_function+0x0/0x40\n [<ffffffff8108c660>] ? worker_thread+0x0/0x2a0\n [<ffffffff81091b36>] kthread+0x96/0xa0\n [<ffffffff810141ca>] child_rip+0xa/0x20\n [<ffffffff81091aa0>] ? kthread+0x0/0xa0\n [<ffffffff810141c0>] ? child_rip+0x0/0x20\nCode: ff ff 85 c0 75 ed eb d6 66 90 55 48 89 e5 48 83 ec 10 48 89 1c 24\n4c 89 64 24 08 0f 1f 44 00 00 48 89 fb e8 92 f4 ff ff 48 89 df <f0> ff\n0f 79 05 e8 25 00 00 00 65 48 8b 04 25 08 cc 00 00 48 2d\nRIP  [<ffffffff814ca9b1>] mutex_lock+0x21/0x50\n RSP <ffff8803e4e33d30>\nCR2: 0000000000000238\n\nThe following patch is admittedly a band-aid, and does not solve the\nroot cause, but it still is a good candidate for hardening as a pointer\ncheck before reference.\n\nSigned-off-by: Mark Salyzyn <mark_salyzyn@us.xyratex.com>\nTested-by: Jack Wang <jack_wang@usish.com>\nCc: stable@kernel.org\nSigned-off-by: James Bottomley <JBottomley@Parallels.com>",
  "full_message": "[SCSI] libsas: fix panic when single phy is disabled on a wide port\n\nWhen a wide port is being utilized to a target, if one disables only one\nof the\nphys, we get an OS crash:\n\nBUG: unable to handle kernel NULL pointer dereference at\n0000000000000238\nIP: [<ffffffff814ca9b1>] mutex_lock+0x21/0x50\nPGD 4103f5067 PUD 41dba9067 PMD 0\nOops: 0002 [#1] SMP\nlast sysfs file: /sys/bus/pci/slots/5/address\nCPU 0\nModules linked in: pm8001(U) ses enclosure fuse nfsd exportfs autofs4\nipmi_devintf ipmi_si ipmi_msghandler nfs lockd fscache nfs_acl\nauth_rpcgss 8021q fcoe libfcoe garp libfc scsi_transport_fc stp scsi_tgt\nllc sunrpc cpufreq_ondemand acpi_cpufreq freq_table ipv6 sr_mod cdrom\ndm_mirror dm_region_hash dm_log uinput sg i2c_i801 i2c_core iTCO_wdt\niTCO_vendor_support e1000e mlx4_ib ib_mad ib_core mlx4_en mlx4_core ext3\njbd mbcache sd_mod crc_t10dif usb_storage ata_generic pata_acpi ata_piix\nlibsas(U) scsi_transport_sas dm_mod [last unloaded: pm8001]\n\nModules linked in: pm8001(U) ses enclosure fuse nfsd exportfs autofs4\nipmi_devintf ipmi_si ipmi_msghandler nfs lockd fscache nfs_acl\nauth_rpcgss 8021q fcoe libfcoe garp libfc scsi_transport_fc stp scsi_tgt\nllc sunrpc cpufreq_ondemand acpi_cpufreq freq_table ipv6 sr_mod cdrom\ndm_mirror dm_region_hash dm_log uinput sg i2c_i801 i2c_core iTCO_wdt\niTCO_vendor_support e1000e mlx4_ib ib_mad ib_core mlx4_en mlx4_core ext3\njbd mbcache sd_mod crc_t10dif usb_storage ata_generic pata_acpi ata_piix\nlibsas(U) scsi_transport_sas dm_mod [last unloaded: pm8001]\nPid: 5146, comm: scsi_wq_5 Not tainted\n2.6.32-71.29.1.el6.lustre.7.x86_64 #1 Storage Server\nRIP: 0010:[<ffffffff814ca9b1>]  [<ffffffff814ca9b1>]\nmutex_lock+0x21/0x50\nRSP: 0018:ffff8803e4e33d30  EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000238 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffff8803e664c800 RDI: 0000000000000238\nRBP: ffff8803e4e33d40 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000\nR13: 0000000000000238 R14: ffff88041acb7200 R15: ffff88041c51ada0\nFS:  0000000000000000(0000) GS:ffff880028200000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b\nCR2: 0000000000000238 CR3: 0000000410143000 CR4: 00000000000006f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\nProcess scsi_wq_5 (pid: 5146, threadinfo ffff8803e4e32000, task\nffff8803e4e294a0)\nStack:\n ffff8803e664c800 0000000000000000 ffff8803e4e33d70 ffffffffa001f06e\n<0> ffff8803e4e33d60 ffff88041c51ada0 ffff88041acb7200 ffff88041bc0aa00\n<0> ffff8803e4e33d90 ffffffffa0032b6c 0000000000000014 ffff88041acb7200\nCall Trace:\n [<ffffffffa001f06e>] sas_port_delete_phy+0x2e/0xa0 [scsi_transport_sas]\n [<ffffffffa0032b6c>] sas_unregister_devs_sas_addr+0xac/0xe0 [libsas]\n [<ffffffffa0034914>] sas_ex_revalidate_domain+0x204/0x330 [libsas]\n [<ffffffffa00307f0>] ? sas_revalidate_domain+0x0/0x90 [libsas]\n [<ffffffffa0030855>] sas_revalidate_domain+0x65/0x90 [libsas]\n [<ffffffff8108c7d0>] worker_thread+0x170/0x2a0\n [<ffffffff81091ea0>] ? autoremove_wake_function+0x0/0x40\n [<ffffffff8108c660>] ? worker_thread+0x0/0x2a0\n [<ffffffff81091b36>] kthread+0x96/0xa0\n [<ffffffff810141ca>] child_rip+0xa/0x20\n [<ffffffff81091aa0>] ? kthread+0x0/0xa0\n [<ffffffff810141c0>] ? child_rip+0x0/0x20\nCode: ff ff 85 c0 75 ed eb d6 66 90 55 48 89 e5 48 83 ec 10 48 89 1c 24\n4c 89 64 24 08 0f 1f 44 00 00 48 89 fb e8 92 f4 ff ff 48 89 df <f0> ff\n0f 79 05 e8 25 00 00 00 65 48 8b 04 25 08 cc 00 00 48 2d\nRIP  [<ffffffff814ca9b1>] mutex_lock+0x21/0x50\n RSP <ffff8803e4e33d30>\nCR2: 0000000000000238\n\nThe following patch is admittedly a band-aid, and does not solve the\nroot cause, but it still is a good candidate for hardening as a pointer\ncheck before reference.\n\nSigned-off-by: Mark Salyzyn <mark_salyzyn@us.xyratex.com>\nTested-by: Jack Wang <jack_wang@usish.com>\nCc: stable@kernel.org\nSigned-off-by: James Bottomley <JBottomley@Parallels.com>",
  "author_name": "Mark Salyzyn",
  "author_email": "mark_salyzyn@us.xyratex.com",
  "author_date": "Thu Sep 22 08:32:23 2011 -0700",
  "author_date_iso": "2011-09-22T08:32:23-07:00",
  "committer_name": "James Bottomley",
  "committer_email": "JBottomley@Parallels.com",
  "committer_date": "Sun Oct 2 13:28:55 2011 -0500",
  "committer_date_iso": "2011-10-02T13:28:55-05:00",
  "files_changed": [
    "drivers/scsi/libsas/sas_expander.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/libsas/sas_expander.c",
      "insertions": 6,
      "deletions": 4
    }
  ],
  "total_insertions": 6,
  "total_deletions": 4,
  "total_changes": 10,
  "parents": [
    "9bfacd01dc9b7519e1e6da12b01963550b9d09a2"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.1",
    "v3.1-rc10",
    "v3.10",
    "v3.10-rc1",
    "v3.10-rc2",
    "v3.10-rc3",
    "v3.10-rc4",
    "v3.10-rc5",
    "v3.10-rc6",
    "v3.10-rc7"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/libsas/sas_expander.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}