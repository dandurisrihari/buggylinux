{
  "hash": "89fb00f245681d0c951cd889d3d165cf9959d70c",
  "hash_short": "89fb00f2",
  "subject": "crypto: sun4i - permit asynchronous skcipher as fallback",
  "body": "Even though the sun4i driver implements asynchronous versions of ecb(aes)\nand cbc(aes), the fallbacks it allocates are required to be synchronous.\nGiven that SIMD based software implementations are usually asynchronous\nas well, even though they rarely complete asynchronously (this typically\nonly happens in cases where the request was made from softirq context,\nwhile SIMD was already in use in the task context that it interrupted),\nthese implementations are disregarded, and either the generic C version\nor another table based version implemented in assembler is selected\ninstead.\n\nSince falling back to synchronous AES is not only a performance issue, but\npotentially a security issue as well (due to the fact that table based AES\nis not time invariant), let's fix this, by allocating an ordinary skcipher\nas the fallback, and invoke it with the completion routine that was given\nto the outer request.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nTested-by: Corentin Labbe <clabbe.montjoie@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "full_message": "crypto: sun4i - permit asynchronous skcipher as fallback\n\nEven though the sun4i driver implements asynchronous versions of ecb(aes)\nand cbc(aes), the fallbacks it allocates are required to be synchronous.\nGiven that SIMD based software implementations are usually asynchronous\nas well, even though they rarely complete asynchronously (this typically\nonly happens in cases where the request was made from softirq context,\nwhile SIMD was already in use in the task context that it interrupted),\nthese implementations are disregarded, and either the generic C version\nor another table based version implemented in assembler is selected\ninstead.\n\nSince falling back to synchronous AES is not only a performance issue, but\npotentially a security issue as well (due to the fact that table based AES\nis not time invariant), let's fix this, by allocating an ordinary skcipher\nas the fallback, and invoke it with the completion routine that was given\nto the outer request.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nTested-by: Corentin Labbe <clabbe.montjoie@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "author_name": "Ard Biesheuvel",
  "author_email": "ardb@kernel.org",
  "author_date": "Tue Jul 7 09:31:54 2020 +0300",
  "author_date_iso": "2020-07-07T09:31:54+03:00",
  "committer_name": "Herbert Xu",
  "committer_email": "herbert@gondor.apana.org.au",
  "committer_date": "Thu Jul 16 21:49:02 2020 +1000",
  "committer_date_iso": "2020-07-16T21:49:02+10:00",
  "files_changed": [
    "drivers/crypto/allwinner/sun4i-ss/sun4i-ss-cipher.c",
    "drivers/crypto/allwinner/sun4i-ss/sun4i-ss.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/crypto/allwinner/sun4i-ss/sun4i-ss-cipher.c",
      "insertions": 23,
      "deletions": 23
    },
    {
      "file": "drivers/crypto/allwinner/sun4i-ss/sun4i-ss.h",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 25,
  "total_deletions": 24,
  "total_changes": 49,
  "parents": [
    "6a99d7a2d73cbeaa0b93551fc8ec887295821bbe"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/crypto/allwinner/sun4i-ss/sun4i-ss-cipher.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/crypto/allwinner/sun4i-ss/sun4i-ss.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}