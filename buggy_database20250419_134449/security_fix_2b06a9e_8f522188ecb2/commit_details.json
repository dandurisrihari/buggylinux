{
  "hash": "2b06a9e336170d7e3c807c21d5cd85cbc92fff4e",
  "hash_short": "2b06a9e3",
  "subject": "exofs: Define usercopy region in exofs_inode_cache slab cache",
  "body": "The exofs short symlink names, stored in struct exofs_i_info.i_data and\ntherefore contained in the exofs_inode_cache slab cache, need to be copied\nto/from userspace.\n\ncache object allocation:\n    fs/exofs/super.c:\n        exofs_alloc_inode(...):\n            ...\n            oi = kmem_cache_alloc(exofs_inode_cachep, GFP_KERNEL);\n            ...\n            return &oi->vfs_inode;\n\n    fs/exofs/namei.c:\n        exofs_symlink(...):\n            ...\n            inode->i_link = (char *)oi->i_data;\n\nexample usage trace:\n    readlink_copy+0x43/0x70\n    vfs_readlink+0x62/0x110\n    SyS_readlinkat+0x100/0x130\n\n    fs/namei.c:\n        readlink_copy(..., link):\n            ...\n            copy_to_user(..., link, len);\n\n        (inlined in vfs_readlink)\n        generic_readlink(dentry, ...):\n            struct inode *inode = d_inode(dentry);\n            const char *link = inode->i_link;\n            ...\n            readlink_copy(..., link);\n\nIn support of usercopy hardening, this patch defines a region in the\nexofs_inode_cache slab cache in which userspace copy operations are\nallowed.\n\nThis region is known as the slab cache's usercopy region. Slab caches\ncan now check that each dynamically sized copy operation involving\ncache-managed memory falls entirely within the slab's usercopy region.\n\nThis patch is modified from Brad Spengler/PaX Team's PAX_USERCOPY\nwhitelisting code in the last public patch of grsecurity/PaX based on my\nunderstanding of the code. Changes or omissions from the original code are\nmine and don't reflect the original grsecurity/PaX code.\n\nSigned-off-by: David Windsor <dave@nullcore.net>\n[kees: adjust commit log, provide usage trace]\nCc: Boaz Harrosh <ooo@electrozaur.com>\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "exofs: Define usercopy region in exofs_inode_cache slab cache\n\nThe exofs short symlink names, stored in struct exofs_i_info.i_data and\ntherefore contained in the exofs_inode_cache slab cache, need to be copied\nto/from userspace.\n\ncache object allocation:\n    fs/exofs/super.c:\n        exofs_alloc_inode(...):\n            ...\n            oi = kmem_cache_alloc(exofs_inode_cachep, GFP_KERNEL);\n            ...\n            return &oi->vfs_inode;\n\n    fs/exofs/namei.c:\n        exofs_symlink(...):\n            ...\n            inode->i_link = (char *)oi->i_data;\n\nexample usage trace:\n    readlink_copy+0x43/0x70\n    vfs_readlink+0x62/0x110\n    SyS_readlinkat+0x100/0x130\n\n    fs/namei.c:\n        readlink_copy(..., link):\n            ...\n            copy_to_user(..., link, len);\n\n        (inlined in vfs_readlink)\n        generic_readlink(dentry, ...):\n            struct inode *inode = d_inode(dentry);\n            const char *link = inode->i_link;\n            ...\n            readlink_copy(..., link);\n\nIn support of usercopy hardening, this patch defines a region in the\nexofs_inode_cache slab cache in which userspace copy operations are\nallowed.\n\nThis region is known as the slab cache's usercopy region. Slab caches\ncan now check that each dynamically sized copy operation involving\ncache-managed memory falls entirely within the slab's usercopy region.\n\nThis patch is modified from Brad Spengler/PaX Team's PAX_USERCOPY\nwhitelisting code in the last public patch of grsecurity/PaX based on my\nunderstanding of the code. Changes or omissions from the original code are\nmine and don't reflect the original grsecurity/PaX code.\n\nSigned-off-by: David Windsor <dave@nullcore.net>\n[kees: adjust commit log, provide usage trace]\nCc: Boaz Harrosh <ooo@electrozaur.com>\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "David Windsor",
  "author_email": "dave@nullcore.net",
  "author_date": "Sat Jun 10 22:50:34 2017 -0400",
  "author_date_iso": "2017-06-10T22:50:34-04:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Mon Jan 15 12:07:55 2018 -0800",
  "committer_date_iso": "2018-01-15T12:07:55-08:00",
  "files_changed": [
    "fs/exofs/super.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/exofs/super.c",
      "insertions": 5,
      "deletions": 2
    }
  ],
  "total_insertions": 5,
  "total_deletions": 2,
  "total_changes": 7,
  "parents": [
    "0fc256d3ad76f2552de0db781854506bb623715a"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc1",
    "v4.16-rc2",
    "v4.16-rc3",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/exofs/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}