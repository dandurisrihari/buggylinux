commit e76d30e20be5fca46c185a1470b045b89f95edcb
Author: Wanpeng Li <liwanp@linux.vnet.ibm.com>
Date:   Mon Sep 30 13:45:22 2013 -0700

    mm/hwpoison: fix test for a transparent huge page
    
    PageTransHuge() can't guarantee the page is a transparent huge page
    since it returns true for both transparent huge and hugetlbfs pages.
    
    This patch fixes it by checking the page is also !hugetlbfs page.
    
    Before patch:
    
    [  121.571128] Injecting memory failure at pfn 23a200
    [  121.571141] MCE 0x23a200: huge page recovery: Delayed
    [  140.355100] MCE: Memory failure is now running on 0x23a200
    
    After patch:
    
    [   94.290793] Injecting memory failure at pfn 23a000
    [   94.290800] MCE 0x23a000: huge page recovery: Delayed
    [  105.722303] MCE: Software-unpoisoned page 0x23a000
    
    Signed-off-by: Wanpeng Li <liwanp@linux.vnet.ibm.com>
    Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Acked-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/memory-failure.c b/mm/memory-failure.c
index 947ed5413279..3faba33c67cc 100644
--- a/mm/memory-failure.c
+++ b/mm/memory-failure.c
@@ -1349,7 +1349,7 @@ int unpoison_memory(unsigned long pfn)
 	 * worked by memory_failure() and the page lock is not held yet.
 	 * In such case, we yield to memory_failure() and make unpoison fail.
 	 */
-	if (PageTransHuge(page)) {
+	if (!PageHuge(page) && PageTransHuge(page)) {
 		pr_info("MCE: Memory failure is now running on %#lx\n", pfn);
 			return 0;
 	}