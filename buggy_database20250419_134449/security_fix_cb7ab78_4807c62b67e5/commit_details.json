{
  "hash": "cb7ab7854bc70942abed62d19d8c16d0064bf7dc",
  "hash_short": "cb7ab785",
  "subject": "IB/qib: Replace deprecated strncpy",
  "body": "`strncpy` is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe know `txselect_list` is expected to be NUL-terminated based on its\nuse in `param_get_string()`:\n| int param_get_string(char *buffer, const struct kernel_param *kp)\n| {\n| \tconst struct kparam_string *kps = kp->str;\n| \treturn scnprintf(buffer, PAGE_SIZE, \"%s\\n\", kps->string);\n| }\n\nNote that `txselect_list` is assigned to `kp_txselect`'s string field:\n| static struct kparam_string kp_txselect = {\n| \t.string = txselect_list,\n| \t.maxlen = MAX_ATTEN_LEN\n| };\n\nWherein it is then assigned the set and get methods:\n| module_param_call(txselect, setup_txselect, param_get_string,\n| \t\t  &kp_txselect, S_IWUSR | S_IRUGO);\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20230921-strncpy-drivers-infiniband-hw-qib-qib_iba7322-c-v1-1-373727763f5b@google.com\nSigned-off-by: Leon Romanovsky <leon@kernel.org>",
  "full_message": "IB/qib: Replace deprecated strncpy\n\n`strncpy` is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe know `txselect_list` is expected to be NUL-terminated based on its\nuse in `param_get_string()`:\n| int param_get_string(char *buffer, const struct kernel_param *kp)\n| {\n| \tconst struct kparam_string *kps = kp->str;\n| \treturn scnprintf(buffer, PAGE_SIZE, \"%s\\n\", kps->string);\n| }\n\nNote that `txselect_list` is assigned to `kp_txselect`'s string field:\n| static struct kparam_string kp_txselect = {\n| \t.string = txselect_list,\n| \t.maxlen = MAX_ATTEN_LEN\n| };\n\nWherein it is then assigned the set and get methods:\n| module_param_call(txselect, setup_txselect, param_get_string,\n| \t\t  &kp_txselect, S_IWUSR | S_IRUGO);\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20230921-strncpy-drivers-infiniband-hw-qib-qib_iba7322-c-v1-1-373727763f5b@google.com\nSigned-off-by: Leon Romanovsky <leon@kernel.org>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Thu Sep 21 07:58:48 2023 +0000",
  "author_date_iso": "2023-09-21T07:58:48+00:00",
  "committer_name": "Leon Romanovsky",
  "committer_email": "leon@kernel.org",
  "committer_date": "Fri Sep 22 13:29:19 2023 +0300",
  "committer_date_iso": "2023-09-22T13:29:19+03:00",
  "files_changed": [
    "drivers/infiniband/hw/qib/qib_iba7322.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/infiniband/hw/qib/qib_iba7322.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "c2d0c5b28a77d549ea52c70cb828e3ae29dda24d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/infiniband/hw/qib/qib_iba7322.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}