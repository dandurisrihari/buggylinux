{
  "hash": "724c6ce38bbaeb4b3f109b0e066d6c0ecd15446c",
  "hash_short": "724c6ce3",
  "subject": "stddef: make __struct_group() UAPI C++-friendly",
  "body": "For the most part of the C++ history, it couldn't have type\ndeclarations inside anonymous unions for different reasons. At the\nsame time, __struct_group() relies on the latters, so when the @TAG\nargument is not empty, C++ code doesn't want to build (even under\n`extern \"C\"`):\n\n../linux/include/uapi/linux/pkt_cls.h:25:24: error:\n'struct tc_u32_sel::<unnamed union>::tc_u32_sel_hdr,' invalid;\nan anonymous union may only have public non-static data members\n[-fpermissive]\n\nThe safest way to fix this without trying to switch standards (which\nis impossible in UAPI anyway) etc., is to disable tag declaration\nfor that language. This won't break anything since for now it's not\nbuildable at all.\nUse a separate definition for __struct_group() when __cplusplus is\ndefined to mitigate the error, including the version from tools/.\n\nFixes: 50d7bd38c3aa (\"stddef: Introduce struct_group() helper macro\")\nReported-by: Christopher Ferris <cferris@google.com>\nCloses: https://lore.kernel.org/linux-hardening/Z1HZpe3WE5As8UAz@google.com\nSuggested-by: Kees Cook <kees@kernel.org> # __struct_group_tag()\nSigned-off-by: Alexander Lobakin <aleksander.lobakin@intel.com>\nReviewed-by: Gustavo A. R. Silva <gustavoars@kernel.org>\nLink: https://lore.kernel.org/r/20241219135734.2130002-1-aleksander.lobakin@intel.com\nSigned-off-by: Kees Cook <kees@kernel.org>",
  "full_message": "stddef: make __struct_group() UAPI C++-friendly\n\nFor the most part of the C++ history, it couldn't have type\ndeclarations inside anonymous unions for different reasons. At the\nsame time, __struct_group() relies on the latters, so when the @TAG\nargument is not empty, C++ code doesn't want to build (even under\n`extern \"C\"`):\n\n../linux/include/uapi/linux/pkt_cls.h:25:24: error:\n'struct tc_u32_sel::<unnamed union>::tc_u32_sel_hdr,' invalid;\nan anonymous union may only have public non-static data members\n[-fpermissive]\n\nThe safest way to fix this without trying to switch standards (which\nis impossible in UAPI anyway) etc., is to disable tag declaration\nfor that language. This won't break anything since for now it's not\nbuildable at all.\nUse a separate definition for __struct_group() when __cplusplus is\ndefined to mitigate the error, including the version from tools/.\n\nFixes: 50d7bd38c3aa (\"stddef: Introduce struct_group() helper macro\")\nReported-by: Christopher Ferris <cferris@google.com>\nCloses: https://lore.kernel.org/linux-hardening/Z1HZpe3WE5As8UAz@google.com\nSuggested-by: Kees Cook <kees@kernel.org> # __struct_group_tag()\nSigned-off-by: Alexander Lobakin <aleksander.lobakin@intel.com>\nReviewed-by: Gustavo A. R. Silva <gustavoars@kernel.org>\nLink: https://lore.kernel.org/r/20241219135734.2130002-1-aleksander.lobakin@intel.com\nSigned-off-by: Kees Cook <kees@kernel.org>",
  "author_name": "Alexander Lobakin",
  "author_email": "aleksander.lobakin@intel.com",
  "author_date": "Thu Dec 19 14:57:34 2024 +0100",
  "author_date_iso": "2024-12-19T14:57:34+01:00",
  "committer_name": "Kees Cook",
  "committer_email": "kees@kernel.org",
  "committer_date": "Fri Dec 20 09:05:53 2024 -0800",
  "committer_date_iso": "2024-12-20T09:05:53-08:00",
  "files_changed": [
    "include/uapi/linux/stddef.h",
    "tools/include/uapi/linux/stddef.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "include/uapi/linux/stddef.h",
      "insertions": 10,
      "deletions": 3
    },
    {
      "file": "tools/include/uapi/linux/stddef.h",
      "insertions": 11,
      "deletions": 4
    }
  ],
  "total_insertions": 21,
  "total_deletions": 7,
  "total_changes": 28,
  "parents": [
    "239d87327dcd361b0098038995f8908f3296864f"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/uapi/linux/stddef.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/include/uapi/linux/stddef.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}