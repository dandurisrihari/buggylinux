{
  "hash": "fe6f0ed0dac7df01014ef17fdad45e3eaf21b949",
  "hash_short": "fe6f0ed0",
  "subject": "Merge tag 'f2fs-for-4.19' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs",
  "body": "Pull f2fs updates from Jaegeuk Kim:\n \"In this round, we've tuned f2fs to improve general performance by\n  serializing block allocation and enhancing discard flows like fstrim\n  which avoids user IO contention. And we've added fsync_mode=nobarrier\n  which gives an option to user where it skips issuing cache_flush\n  commands to underlying flash storage. And there are many bug fixes\n  related to fuzzed images, revoked atomic writes, quota ops, and minor\n  direct IO.\n\n  Enhancements:\n   - add fsync_mode=nobarrier which bypasses cache_flush command\n   - enhance the discarding flow which avoids user IOs and issues in\n     LBA order\n   - readahead some encrypted blocks during GC\n   - enable in-memory inode checksum to verify the blocks if\n     F2FS_CHECK_FS is set\n   - enhance nat_bits behavior\n   - set -o discard by default\n   - set REQ_RAHEAD to bio in ->readpages\n\n  Bug fixes:\n   - fix a corner case to corrupt atomic_writes revoking flow\n   - revisit i_gc_rwsem to fix race conditions\n   - fix some dio behaviors captured by xfstests\n   - correct handling errors given by quota-related failures\n   - add many sanity check flows to avoid fuzz test failures\n   - add more error number propagation to their callers\n   - fix several corner cases to continue fault injection w/ shutdown\n     loop\"\n\n* tag 'f2fs-for-4.19' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (89 commits)\n  f2fs: readahead encrypted block during GC\n  f2fs: avoid fi->i_gc_rwsem[WRITE] lock in f2fs_gc\n  f2fs: fix performance issue observed with multi-thread sequential read\n  f2fs: fix to skip verifying block address for non-regular inode\n  f2fs: rework fault injection handling to avoid a warning\n  f2fs: support fault_type mount option\n  f2fs: fix to return success when trimming meta area\n  f2fs: fix use-after-free of dicard command entry\n  f2fs: support discard submission error injection\n  f2fs: split discard command in prior to block layer\n  f2fs: wake up gc thread immediately when gc_urgent is set\n  f2fs: fix incorrect range->len in f2fs_trim_fs()\n  f2fs: refresh recent accessed nat entry in lru list\n  f2fs: fix avoid race between truncate and background GC\n  f2fs: avoid race between zero_range and background GC\n  f2fs: fix to do sanity check with block address in main area v2\n  f2fs: fix to do sanity check with inline flags\n  f2fs: fix to reset i_gc_failures correctly\n  f2fs: fix invalid memory access\n  f2fs: fix to avoid broken of dnode block list\n  ...",
  "full_message": "Merge tag 'f2fs-for-4.19' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, we've tuned f2fs to improve general performance by\n  serializing block allocation and enhancing discard flows like fstrim\n  which avoids user IO contention. And we've added fsync_mode=nobarrier\n  which gives an option to user where it skips issuing cache_flush\n  commands to underlying flash storage. And there are many bug fixes\n  related to fuzzed images, revoked atomic writes, quota ops, and minor\n  direct IO.\n\n  Enhancements:\n   - add fsync_mode=nobarrier which bypasses cache_flush command\n   - enhance the discarding flow which avoids user IOs and issues in\n     LBA order\n   - readahead some encrypted blocks during GC\n   - enable in-memory inode checksum to verify the blocks if\n     F2FS_CHECK_FS is set\n   - enhance nat_bits behavior\n   - set -o discard by default\n   - set REQ_RAHEAD to bio in ->readpages\n\n  Bug fixes:\n   - fix a corner case to corrupt atomic_writes revoking flow\n   - revisit i_gc_rwsem to fix race conditions\n   - fix some dio behaviors captured by xfstests\n   - correct handling errors given by quota-related failures\n   - add many sanity check flows to avoid fuzz test failures\n   - add more error number propagation to their callers\n   - fix several corner cases to continue fault injection w/ shutdown\n     loop\"\n\n* tag 'f2fs-for-4.19' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (89 commits)\n  f2fs: readahead encrypted block during GC\n  f2fs: avoid fi->i_gc_rwsem[WRITE] lock in f2fs_gc\n  f2fs: fix performance issue observed with multi-thread sequential read\n  f2fs: fix to skip verifying block address for non-regular inode\n  f2fs: rework fault injection handling to avoid a warning\n  f2fs: support fault_type mount option\n  f2fs: fix to return success when trimming meta area\n  f2fs: fix use-after-free of dicard command entry\n  f2fs: support discard submission error injection\n  f2fs: split discard command in prior to block layer\n  f2fs: wake up gc thread immediately when gc_urgent is set\n  f2fs: fix incorrect range->len in f2fs_trim_fs()\n  f2fs: refresh recent accessed nat entry in lru list\n  f2fs: fix avoid race between truncate and background GC\n  f2fs: avoid race between zero_range and background GC\n  f2fs: fix to do sanity check with block address in main area v2\n  f2fs: fix to do sanity check with inline flags\n  f2fs: fix to reset i_gc_failures correctly\n  f2fs: fix invalid memory access\n  f2fs: fix to avoid broken of dnode block list\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Wed Aug 22 13:29:39 2018 -0700",
  "author_date_iso": "2018-08-22T13:29:39-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Aug 22 13:29:39 2018 -0700",
  "committer_date_iso": "2018-08-22T13:29:39-07:00",
  "files_changed": [
    "fs/f2fs/f2fs.h",
    "fs/f2fs/super.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-fs-f2fs",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "Documentation/filesystems/f2fs.txt",
      "insertions": 18,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/checkpoint.c",
      "insertions": 106,
      "deletions": 53
    },
    {
      "file": "fs/f2fs/data.c",
      "insertions": 137,
      "deletions": 45
    },
    {
      "file": "fs/f2fs/debug.c",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/dir.c",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "insertions": 132,
      "deletions": 59
    },
    {
      "file": "fs/f2fs/file.c",
      "insertions": 132,
      "deletions": 84
    },
    {
      "file": "fs/f2fs/gc.c",
      "insertions": 141,
      "deletions": 22
    },
    {
      "file": "fs/f2fs/inline.c",
      "insertions": 35,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/inode.c",
      "insertions": 132,
      "deletions": 22
    },
    {
      "file": "fs/f2fs/namei.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/node.c",
      "insertions": 306,
      "deletions": 74
    },
    {
      "file": "fs/f2fs/node.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/recovery.c",
      "insertions": 21,
      "deletions": 10
    },
    {
      "file": "fs/f2fs/segment.c",
      "insertions": 308,
      "deletions": 91
    },
    {
      "file": "fs/f2fs/segment.h",
      "insertions": 8,
      "deletions": 8
    },
    {
      "file": "fs/f2fs/super.c",
      "insertions": 122,
      "deletions": 40
    },
    {
      "file": "fs/f2fs/sysfs.c",
      "insertions": 39,
      "deletions": 5
    },
    {
      "file": "fs/f2fs/xattr.c",
      "insertions": 11,
      "deletions": 7
    },
    {
      "file": "include/linux/f2fs_fs.h",
      "insertions": 0,
      "deletions": 5
    }
  ],
  "total_insertions": 1671,
  "total_deletions": 532,
  "total_changes": 2203,
  "parents": [
    "6faf05c2b2b4fe70d9068067437649401531de0a",
    "6aa58d8ad20a3323f42274c25820a6f54192422d"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.19",
    "v4.19-rc1",
    "v4.19-rc2",
    "v4.19-rc3",
    "v4.19-rc4",
    "v4.19-rc5",
    "v4.19-rc6",
    "v4.19-rc7",
    "v4.19-rc8",
    "v4.20"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/f2fs/f2fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}