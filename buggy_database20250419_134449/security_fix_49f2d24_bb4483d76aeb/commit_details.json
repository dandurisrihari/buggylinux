{
  "hash": "49f2d2419d60a103752e5fbaf158cf8d07c0d884",
  "hash_short": "49f2d241",
  "subject": "usercopy: mark dma-kmalloc caches as usercopy caches",
  "body": "We have seen a \"usercopy: Kernel memory overwrite attempt detected to\nSLUB object 'dma-kmalloc-1 k' (offset 0, size 11)!\" error on s390x, as\nIUCV uses kmalloc() with __GFP_DMA because of memory address\nrestrictions.  The issue has been discussed [2] and it has been noted\nthat if all the kmalloc caches are marked as usercopy, there's little\nreason not to mark dma-kmalloc caches too.  The 'dma' part merely means\nthat __GFP_DMA is used to restrict memory address range.\n\nAs Jann Horn put it [3]:\n \"I think dma-kmalloc slabs should be handled the same way as normal\n  kmalloc slabs. When a dma-kmalloc allocation is freshly created, it is\n  just normal kernel memory - even if it might later be used for DMA -,\n  and it should be perfectly fine to copy_from_user() into such\n  allocations at that point, and to copy_to_user() out of them at the\n  end. If you look at the places where such allocations are created, you\n  can see things like kmemdup(), memcpy() and so on - all normal\n  operations that shouldn't conceptually be different from usercopy in\n  any relevant way.\"\n\nThus this patch marks the dma-kmalloc-* caches as usercopy.\n\n[1] https://bugzilla.suse.com/show_bug.cgi?id=1156053\n[2] https://lore.kernel.org/kernel-hardening/bfca96db-bbd0-d958-7732-76e36c667c68@suse.cz/\n[3] https://lore.kernel.org/kernel-hardening/CAG48ez1a4waGk9kB0WLaSbs4muSoK0AYAVk8=XYaKj4_+6e6Hg@mail.gmail.com/\n\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nAcked-by: Christian Borntraeger <borntraeger@de.ibm.com>\nAcked-by: Jiri Slaby <jslaby@suse.cz>\nCc: Jann Horn <jannh@google.com>\nCc: Christoph Hellwig <hch@infradead.org>\nCc: Christopher Lameter <cl@linux.com>\nCc: Julian Wiedmann <jwi@linux.ibm.com>\nCc: Ursula Braun <ubraun@linux.ibm.com>\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: David Windsor <dave@nullcore.net>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: \"David S. Miller\" <davem@davemloft.net>\nCc: Laura Abbott <labbott@redhat.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: \"Martin K. Petersen\" <martin.petersen@oracle.com>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Christoffer Dall <christoffer.dall@linaro.org>\nCc: Dave Kleikamp <dave.kleikamp@oracle.com>\nCc: Jan Kara <jack@suse.cz>\nCc: Luis de Bethencourt <luisbg@kernel.org>\nCc: Marc Zyngier <marc.zyngier@arm.com>\nCc: Rik van Riel <riel@surriel.com>\nCc: Matthew Garrett <mjg59@google.com>\nCc: Michal Kubecek <mkubecek@suse.cz>\nLink: http://lkml.kernel.org/r/7d810f6d-8085-ea2f-7805-47ba3842dc50@suse.cz\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "usercopy: mark dma-kmalloc caches as usercopy caches\n\nWe have seen a \"usercopy: Kernel memory overwrite attempt detected to\nSLUB object 'dma-kmalloc-1 k' (offset 0, size 11)!\" error on s390x, as\nIUCV uses kmalloc() with __GFP_DMA because of memory address\nrestrictions.  The issue has been discussed [2] and it has been noted\nthat if all the kmalloc caches are marked as usercopy, there's little\nreason not to mark dma-kmalloc caches too.  The 'dma' part merely means\nthat __GFP_DMA is used to restrict memory address range.\n\nAs Jann Horn put it [3]:\n \"I think dma-kmalloc slabs should be handled the same way as normal\n  kmalloc slabs. When a dma-kmalloc allocation is freshly created, it is\n  just normal kernel memory - even if it might later be used for DMA -,\n  and it should be perfectly fine to copy_from_user() into such\n  allocations at that point, and to copy_to_user() out of them at the\n  end. If you look at the places where such allocations are created, you\n  can see things like kmemdup(), memcpy() and so on - all normal\n  operations that shouldn't conceptually be different from usercopy in\n  any relevant way.\"\n\nThus this patch marks the dma-kmalloc-* caches as usercopy.\n\n[1] https://bugzilla.suse.com/show_bug.cgi?id=1156053\n[2] https://lore.kernel.org/kernel-hardening/bfca96db-bbd0-d958-7732-76e36c667c68@suse.cz/\n[3] https://lore.kernel.org/kernel-hardening/CAG48ez1a4waGk9kB0WLaSbs4muSoK0AYAVk8=XYaKj4_+6e6Hg@mail.gmail.com/\n\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nAcked-by: Christian Borntraeger <borntraeger@de.ibm.com>\nAcked-by: Jiri Slaby <jslaby@suse.cz>\nCc: Jann Horn <jannh@google.com>\nCc: Christoph Hellwig <hch@infradead.org>\nCc: Christopher Lameter <cl@linux.com>\nCc: Julian Wiedmann <jwi@linux.ibm.com>\nCc: Ursula Braun <ubraun@linux.ibm.com>\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: David Windsor <dave@nullcore.net>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: \"David S. Miller\" <davem@davemloft.net>\nCc: Laura Abbott <labbott@redhat.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: \"Martin K. Petersen\" <martin.petersen@oracle.com>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Christoffer Dall <christoffer.dall@linaro.org>\nCc: Dave Kleikamp <dave.kleikamp@oracle.com>\nCc: Jan Kara <jack@suse.cz>\nCc: Luis de Bethencourt <luisbg@kernel.org>\nCc: Marc Zyngier <marc.zyngier@arm.com>\nCc: Rik van Riel <riel@surriel.com>\nCc: Matthew Garrett <mjg59@google.com>\nCc: Michal Kubecek <mkubecek@suse.cz>\nLink: http://lkml.kernel.org/r/7d810f6d-8085-ea2f-7805-47ba3842dc50@suse.cz\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Vlastimil Babka",
  "author_email": "vbabka@suse.cz",
  "author_date": "Mon Jun 1 21:45:43 2020 -0700",
  "author_date_iso": "2020-06-01T21:45:43-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Tue Jun 2 10:59:06 2020 -0700",
  "committer_date_iso": "2020-06-02T10:59:06-07:00",
  "files_changed": [
    "mm/slab_common.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "mm/slab_common.c",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 2,
  "total_deletions": 1,
  "total_changes": 3,
  "parents": [
    "485e9605c05733759d3bd5aba4fbe561801f3658"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "mm/slab_common.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}