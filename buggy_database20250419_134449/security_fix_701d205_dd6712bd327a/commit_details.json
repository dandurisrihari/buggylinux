{
  "hash": "701d2054fa317188cd4039c84e72c73254013b23",
  "hash_short": "701d2054",
  "subject": "fbdev: Make support for userspace interfaces configurable",
  "body": "Add Kconfig option CONFIG_FB_DEVICE and make the virtual fbdev\ndevice optional. If the new option has not been selected, fbdev\ndoes not create files in devfs, sysfs or procfs.\n\nMost modern Linux systems run a DRM-based graphics stack that uses\nthe kernel's framebuffer console, but has otherwise deprecated fbdev\nsupport. Yet fbdev userspace interfaces are still present.\n\nThe option makes it possible to use the fbdev subsystem as console\nimplementation without support for userspace. This closes potential\nentry points to manipulate kernel or I/O memory via framebuffers. It\nalso prevents the execution of driver code via ioctl or sysfs, both\nof which might allow malicious software to exploit bugs in the fbdev\ncode.\n\nA small number of fbdev drivers require struct fbinfo.dev to be\ninitialized, usually for the support of sysfs interface. Make these\ndrivers depend on FB_DEVICE. They can later be fixed if necessary.\n\nv3:\n\t* effect -> affect in Kconfig help (Daniel)\nv2:\n\t* set FB_DEVICE default to y (Geert)\n\t* comment on {get,put}_device() (Sam)\n\t* Kconfig fixes (Sam)\n\t* add TODO item about FB_DEVICE dependencies (Sam)\n\nSigned-off-by: Thomas Zimmermann <tzimmermann@suse.de>\nAcked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nReviewed-by: Sam Ravnborg <sam@ravnborg.org>\nLink: https://patchwork.freedesktop.org/patch/msgid/20230613110953.24176-39-tzimmermann@suse.de",
  "full_message": "fbdev: Make support for userspace interfaces configurable\n\nAdd Kconfig option CONFIG_FB_DEVICE and make the virtual fbdev\ndevice optional. If the new option has not been selected, fbdev\ndoes not create files in devfs, sysfs or procfs.\n\nMost modern Linux systems run a DRM-based graphics stack that uses\nthe kernel's framebuffer console, but has otherwise deprecated fbdev\nsupport. Yet fbdev userspace interfaces are still present.\n\nThe option makes it possible to use the fbdev subsystem as console\nimplementation without support for userspace. This closes potential\nentry points to manipulate kernel or I/O memory via framebuffers. It\nalso prevents the execution of driver code via ioctl or sysfs, both\nof which might allow malicious software to exploit bugs in the fbdev\ncode.\n\nA small number of fbdev drivers require struct fbinfo.dev to be\ninitialized, usually for the support of sysfs interface. Make these\ndrivers depend on FB_DEVICE. They can later be fixed if necessary.\n\nv3:\n\t* effect -> affect in Kconfig help (Daniel)\nv2:\n\t* set FB_DEVICE default to y (Geert)\n\t* comment on {get,put}_device() (Sam)\n\t* Kconfig fixes (Sam)\n\t* add TODO item about FB_DEVICE dependencies (Sam)\n\nSigned-off-by: Thomas Zimmermann <tzimmermann@suse.de>\nAcked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nReviewed-by: Sam Ravnborg <sam@ravnborg.org>\nLink: https://patchwork.freedesktop.org/patch/msgid/20230613110953.24176-39-tzimmermann@suse.de",
  "author_name": "Thomas Zimmermann",
  "author_email": "tzimmermann@suse.de",
  "author_date": "Tue Jun 13 13:07:13 2023 +0200",
  "author_date_iso": "2023-06-13T13:07:13+02:00",
  "committer_name": "Thomas Zimmermann",
  "committer_email": "tzimmermann@suse.de",
  "committer_date": "Tue Jun 27 09:58:51 2023 +0200",
  "committer_date_iso": "2023-06-27T09:58:51+02:00",
  "files_changed": [
    "Documentation/gpu/todo.rst",
    "drivers/staging/fbtft/Kconfig",
    "drivers/video/fbdev/Kconfig",
    "drivers/video/fbdev/core/Makefile",
    "drivers/video/fbdev/core/fb_internal.h",
    "drivers/video/fbdev/omap2/omapfb/Kconfig",
    "include/linux/fb.h"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "Documentation/gpu/todo.rst",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "drivers/staging/fbtft/Kconfig",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/video/fbdev/Kconfig",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "drivers/video/fbdev/core/Makefile",
      "insertions": 4,
      "deletions": 3
    },
    {
      "file": "drivers/video/fbdev/core/fb_internal.h",
      "insertions": 38,
      "deletions": 0
    },
    {
      "file": "drivers/video/fbdev/omap2/omapfb/Kconfig",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "include/linux/fb.h",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 72,
  "total_deletions": 4,
  "total_changes": 76,
  "parents": [
    "ff8fbcf605f59c5b7b82805c9f7a7dfe6abac784"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/gpu/todo.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/video/fbdev/omap2/omapfb/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/video/fbdev/core/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/staging/fbtft/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/video/fbdev/core/fb_internal.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/video/fbdev/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/fb.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}