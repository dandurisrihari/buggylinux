commit a149180fbcf336e97ce4eb2cdc13672727feb94d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Jun 14 23:15:48 2022 +0200

    x86: Add magic AMD return-thunk
    
    Note: needs to be in a section distinct from Retpolines such that the
    Retpoline RET substitution cannot possibly use immediate jumps.
    
    ORC unwinding for zen_untrain_ret() and __x86_return_thunk() is a
    little tricky but works due to the fact that zen_untrain_ret() doesn't
    have any stack ops and as such will emit a single ORC entry at the
    start (+0x3f).
    
    Meanwhile, unwinding an IP, including the __x86_return_thunk() one
    (+0x40) will search for the largest ORC entry smaller or equal to the
    IP, these will find the one ORC entry (+0x3f) and all works.
    
      [ Alexandre: SVM part. ]
      [ bp: Build fix, massages. ]
    
    Suggested-by: Andrew Cooper <Andrew.Cooper3@citrix.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>

diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
index 295e69090fb8..fa3d0db1470e 100644
--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -301,6 +301,7 @@
 #define X86_FEATURE_RETPOLINE		(11*32+12) /* "" Generic Retpoline mitigation for Spectre variant 2 */
 #define X86_FEATURE_RETPOLINE_LFENCE	(11*32+13) /* "" Use LFENCE for Spectre variant 2 */
 #define X86_FEATURE_RETHUNK		(11*32+14) /* "" Use REturn THUNK */
+#define X86_FEATURE_UNRET		(11*32+15) /* "" AMD BTB untrain return */
 
 /* Intel-defined CPU features, CPUID level 0x00000007:1 (EAX), word 12 */
 #define X86_FEATURE_AVX_VNNI		(12*32+ 4) /* AVX VNNI instructions */