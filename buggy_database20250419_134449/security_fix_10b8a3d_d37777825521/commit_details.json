{
  "hash": "10b8a3de603df7b96004179b1b33b1708c76d144",
  "hash_short": "10b8a3de",
  "subject": "ipv6: the entire IPv6 header chain must fit the first fragment",
  "body": "While building ipv6 datagram we currently allow arbitrary large\nextheaders, even beyond pmtu size. The syzbot has found a way\nto exploit the above to trigger the following splat:\n\nkernel BUG at ./include/linux/skbuff.h:2073!\ninvalid opcode: 0000 [#1] SMP KASAN\nDumping ftrace buffer:\n    (ftrace buffer empty)\nModules linked in:\nCPU: 1 PID: 4230 Comm: syzkaller672661 Not tainted 4.16.0-rc2+ #326\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nRIP: 0010:__skb_pull include/linux/skbuff.h:2073 [inline]\nRIP: 0010:__ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636\nRSP: 0018:ffff8801bc18f0f0 EFLAGS: 00010293\nRAX: ffff8801b17400c0 RBX: 0000000000000738 RCX: ffffffff84f01828\nRDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff8801b415ac18\nRBP: ffff8801bc18f360 R08: ffff8801b4576844 R09: 0000000000000000\nR10: ffff8801bc18f380 R11: ffffed00367aee4e R12: 00000000000000d6\nR13: ffff8801b415a740 R14: dffffc0000000000 R15: ffff8801b45767c0\nFS:  0000000001535880(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000002000b000 CR3: 00000001b4123001 CR4: 00000000001606e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n  ip6_finish_skb include/net/ipv6.h:969 [inline]\n  udp_v6_push_pending_frames+0x269/0x3b0 net/ipv6/udp.c:1073\n  udpv6_sendmsg+0x2a96/0x3400 net/ipv6/udp.c:1343\n  inet_sendmsg+0x11f/0x5e0 net/ipv4/af_inet.c:764\n  sock_sendmsg_nosec net/socket.c:630 [inline]\n  sock_sendmsg+0xca/0x110 net/socket.c:640\n  ___sys_sendmsg+0x320/0x8b0 net/socket.c:2046\n  __sys_sendmmsg+0x1ee/0x620 net/socket.c:2136\n  SYSC_sendmmsg net/socket.c:2167 [inline]\n  SyS_sendmmsg+0x35/0x60 net/socket.c:2162\n  do_syscall_64+0x280/0x940 arch/x86/entry/common.c:287\n  entry_SYSCALL_64_after_hwframe+0x42/0xb7\nRIP: 0033:0x4404c9\nRSP: 002b:00007ffdce35f948 EFLAGS: 00000217 ORIG_RAX: 0000000000000133\nRAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 00000000004404c9\nRDX: 0000000000000003 RSI: 0000000020001f00 RDI: 0000000000000003\nRBP: 00000000006cb018 R08: 00000000004002c8 R09: 00000000004002c8\nR10: 0000000020000080 R11: 0000000000000217 R12: 0000000000401df0\nR13: 0000000000401e80 R14: 0000000000000000 R15: 0000000000000000\nCode: ff e8 1d 5e b9 fc e9 15 e9 ff ff e8 13 5e b9 fc e9 44 e8 ff ff e8 29\n5e b9 fc e9 c0 e6 ff ff e8 3f f3 80 fc 0f 0b e8 38 f3 80 fc <0f> 0b 49 8d\n87 80 00 00 00 4d 8d 87 84 00 00 00 48 89 85 20 fe\nRIP: __skb_pull include/linux/skbuff.h:2073 [inline] RSP: ffff8801bc18f0f0\nRIP: __ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636 RSP:\nffff8801bc18f0f0\n\nAs stated by RFC 7112 section 5:\n\n   When a host fragments an IPv6 datagram, it MUST include the entire\n   IPv6 Header Chain in the First Fragment.\n\nSo this patch addresses the issue dropping datagrams with excessive\nextheader length. It also updates the error path to report to the\ncalling socket nonnegative pmtu values.\n\nThe issue apparently predates git history.\n\nv1 -> v2: cleanup error path, as per Eric's suggestion\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nReported-by: syzbot+91e6f9932ff122fa4410@syzkaller.appspotmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\nReviewed-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "ipv6: the entire IPv6 header chain must fit the first fragment\n\nWhile building ipv6 datagram we currently allow arbitrary large\nextheaders, even beyond pmtu size. The syzbot has found a way\nto exploit the above to trigger the following splat:\n\nkernel BUG at ./include/linux/skbuff.h:2073!\ninvalid opcode: 0000 [#1] SMP KASAN\nDumping ftrace buffer:\n    (ftrace buffer empty)\nModules linked in:\nCPU: 1 PID: 4230 Comm: syzkaller672661 Not tainted 4.16.0-rc2+ #326\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nRIP: 0010:__skb_pull include/linux/skbuff.h:2073 [inline]\nRIP: 0010:__ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636\nRSP: 0018:ffff8801bc18f0f0 EFLAGS: 00010293\nRAX: ffff8801b17400c0 RBX: 0000000000000738 RCX: ffffffff84f01828\nRDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff8801b415ac18\nRBP: ffff8801bc18f360 R08: ffff8801b4576844 R09: 0000000000000000\nR10: ffff8801bc18f380 R11: ffffed00367aee4e R12: 00000000000000d6\nR13: ffff8801b415a740 R14: dffffc0000000000 R15: ffff8801b45767c0\nFS:  0000000001535880(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000002000b000 CR3: 00000001b4123001 CR4: 00000000001606e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n  ip6_finish_skb include/net/ipv6.h:969 [inline]\n  udp_v6_push_pending_frames+0x269/0x3b0 net/ipv6/udp.c:1073\n  udpv6_sendmsg+0x2a96/0x3400 net/ipv6/udp.c:1343\n  inet_sendmsg+0x11f/0x5e0 net/ipv4/af_inet.c:764\n  sock_sendmsg_nosec net/socket.c:630 [inline]\n  sock_sendmsg+0xca/0x110 net/socket.c:640\n  ___sys_sendmsg+0x320/0x8b0 net/socket.c:2046\n  __sys_sendmmsg+0x1ee/0x620 net/socket.c:2136\n  SYSC_sendmmsg net/socket.c:2167 [inline]\n  SyS_sendmmsg+0x35/0x60 net/socket.c:2162\n  do_syscall_64+0x280/0x940 arch/x86/entry/common.c:287\n  entry_SYSCALL_64_after_hwframe+0x42/0xb7\nRIP: 0033:0x4404c9\nRSP: 002b:00007ffdce35f948 EFLAGS: 00000217 ORIG_RAX: 0000000000000133\nRAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 00000000004404c9\nRDX: 0000000000000003 RSI: 0000000020001f00 RDI: 0000000000000003\nRBP: 00000000006cb018 R08: 00000000004002c8 R09: 00000000004002c8\nR10: 0000000020000080 R11: 0000000000000217 R12: 0000000000401df0\nR13: 0000000000401e80 R14: 0000000000000000 R15: 0000000000000000\nCode: ff e8 1d 5e b9 fc e9 15 e9 ff ff e8 13 5e b9 fc e9 44 e8 ff ff e8 29\n5e b9 fc e9 c0 e6 ff ff e8 3f f3 80 fc 0f 0b e8 38 f3 80 fc <0f> 0b 49 8d\n87 80 00 00 00 4d 8d 87 84 00 00 00 48 89 85 20 fe\nRIP: __skb_pull include/linux/skbuff.h:2073 [inline] RSP: ffff8801bc18f0f0\nRIP: __ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636 RSP:\nffff8801bc18f0f0\n\nAs stated by RFC 7112 section 5:\n\n   When a host fragments an IPv6 datagram, it MUST include the entire\n   IPv6 Header Chain in the First Fragment.\n\nSo this patch addresses the issue dropping datagrams with excessive\nextheader length. It also updates the error path to report to the\ncalling socket nonnegative pmtu values.\n\nThe issue apparently predates git history.\n\nv1 -> v2: cleanup error path, as per Eric's suggestion\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nReported-by: syzbot+91e6f9932ff122fa4410@syzkaller.appspotmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\nReviewed-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Paolo Abeni",
  "author_email": "pabeni@redhat.com",
  "author_date": "Fri Mar 23 14:47:30 2018 +0100",
  "author_date_iso": "2018-03-23T14:47:30+01:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Sun Mar 25 21:17:20 2018 -0400",
  "committer_date_iso": "2018-03-25T21:17:20-04:00",
  "files_changed": [
    "net/ipv6/ip6_output.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/ipv6/ip6_output.c",
      "insertions": 9,
      "deletions": 4
    }
  ],
  "total_insertions": 9,
  "total_deletions": 4,
  "total_changes": 13,
  "parents": [
    "7880287981b60a6808f39f297bb66936e8bdf57a"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7",
    "v4.18"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/ipv6/ip6_output.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}