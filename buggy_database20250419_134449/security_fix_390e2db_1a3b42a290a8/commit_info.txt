Commit Hash: 390e2db8248075ae2f31a7046a88eda0f9784310
Subject: PCI/AER: Abstract AER interrupt handling


Security Keywords:
- injection

Full commit message:
PCI/AER: Abstract AER interrupt handling

The aer_inject module was directly calling aer_irq().  This required the
AER driver export its private IRQ handler for no other reason than to
support error injection.  A driver should not have to expose its private
interfaces, so use the IRQ subsystem to route injection to the AER driver,
and make aer_irq() a private interface.

This provides additional benefits:

First, directly calling the IRQ handler bypassed the IRQ subsytem so the
injection wasn't really synthesizing what happens if a shared AER interrupt
occurs.

The error injection had to provide the callback data directly, which may be
racing with a removal that is freeing that structure.  The IRQ subsystem
can handle that race.

Finally, using the IRQ subsystem automatically reacts to threaded IRQs,
keeping the error injection abstracted from that implementation detail.

Signed-off-by: Keith Busch <keith.busch@intel.com>
Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

Metadata:
Author: Keith Busch <keith.busch@intel.com>
Author Date: Thu Oct 11 12:34:11 2018 -0600
Committer: Bjorn Helgaas <bhelgaas@google.com>
Commit Date: Thu Oct 18 19:43:09 2018 -0500

Files Changed: 3
Lines Added: 5
Lines Removed: 7
Total Changes: 12
