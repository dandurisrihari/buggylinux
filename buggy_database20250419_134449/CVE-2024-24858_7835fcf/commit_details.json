{
  "hash": "7835fcfd132eb88b87e8eb901f88436f63ab60f7",
  "hash_short": "7835fcfd",
  "subject": "Bluetooth: Fix TOCTOU in HCI debugfs implementation",
  "body": "struct hci_dev members conn_info_max_age, conn_info_min_age,\nle_conn_max_interval, le_conn_min_interval, le_adv_max_interval,\nand le_adv_min_interval can be modified from the HCI core code, as well\nthrough debugfs.\n\nThe debugfs implementation, that's only available to privileged users,\nwill check for boundaries, making sure that the minimum value being set\nis strictly above the maximum value that already exists, and vice-versa.\n\nHowever, as both minimum and maximum values can be changed concurrently\nto us modifying them, we need to make sure that the value we check is\nthe value we end up using.\n\nFor example, with ->conn_info_max_age set to 10, conn_info_min_age_set()\ngets called from vfs handlers to set conn_info_min_age to 8.\n\nIn conn_info_min_age_set(), this goes through:\n\tif (val == 0 || val > hdev->conn_info_max_age)\n\t\treturn -EINVAL;\n\nConcurrently, conn_info_max_age_set() gets called to set to set the\nconn_info_max_age to 7:\n\tif (val == 0 || val > hdev->conn_info_max_age)\n\t\treturn -EINVAL;\nThat check will also pass because we used the old value (10) for\nconn_info_max_age.\n\nAfter those checks that both passed, the struct hci_dev access\nis mutex-locked, disabling concurrent access, but that does not matter\nbecause the invalid value checks both passed, and we'll end up with\nconn_info_min_age = 8 and conn_info_max_age = 7\n\nTo fix this problem, we need to lock the structure access before so the\ncheck and assignment are not interrupted.\n\nThis fix was originally devised by the BassCheck[1] team, and\nconsidered the problem to be an atomicity one. This isn't the case as\nthere aren't any concerns about the variable changing while we check it,\nbut rather after we check it parallel to another change.\n\nThis patch fixes CVE-2024-24858 and CVE-2024-24857.\n\n[1] https://sites.google.com/view/basscheck/\n\nCo-developed-by: Gui-Dong Han <2045gemini@gmail.com>\nSigned-off-by: Gui-Dong Han <2045gemini@gmail.com>\nLink: https://lore.kernel.org/linux-bluetooth/20231222161317.6255-1-2045gemini@gmail.com/\nLink: https://nvd.nist.gov/vuln/detail/CVE-2024-24858\nLink: https://lore.kernel.org/linux-bluetooth/20231222162931.6553-1-2045gemini@gmail.com/\nLink: https://lore.kernel.org/linux-bluetooth/20231222162310.6461-1-2045gemini@gmail.com/\nLink: https://nvd.nist.gov/vuln/detail/CVE-2024-24857\nFixes: 31ad169148df (\"Bluetooth: Add conn info lifetime parameters to debugfs\")\nFixes: 729a1051da6f (\"Bluetooth: Expose default LE advertising interval via debugfs\")\nFixes: 71c3b60ec6d2 (\"Bluetooth: Move BR/EDR debugfs file creation into hci_debugfs.c\")\nSigned-off-by: Bastien Nocera <hadess@hadess.net>\nSigned-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>",
  "full_message": "Bluetooth: Fix TOCTOU in HCI debugfs implementation\n\nstruct hci_dev members conn_info_max_age, conn_info_min_age,\nle_conn_max_interval, le_conn_min_interval, le_adv_max_interval,\nand le_adv_min_interval can be modified from the HCI core code, as well\nthrough debugfs.\n\nThe debugfs implementation, that's only available to privileged users,\nwill check for boundaries, making sure that the minimum value being set\nis strictly above the maximum value that already exists, and vice-versa.\n\nHowever, as both minimum and maximum values can be changed concurrently\nto us modifying them, we need to make sure that the value we check is\nthe value we end up using.\n\nFor example, with ->conn_info_max_age set to 10, conn_info_min_age_set()\ngets called from vfs handlers to set conn_info_min_age to 8.\n\nIn conn_info_min_age_set(), this goes through:\n\tif (val == 0 || val > hdev->conn_info_max_age)\n\t\treturn -EINVAL;\n\nConcurrently, conn_info_max_age_set() gets called to set to set the\nconn_info_max_age to 7:\n\tif (val == 0 || val > hdev->conn_info_max_age)\n\t\treturn -EINVAL;\nThat check will also pass because we used the old value (10) for\nconn_info_max_age.\n\nAfter those checks that both passed, the struct hci_dev access\nis mutex-locked, disabling concurrent access, but that does not matter\nbecause the invalid value checks both passed, and we'll end up with\nconn_info_min_age = 8 and conn_info_max_age = 7\n\nTo fix this problem, we need to lock the structure access before so the\ncheck and assignment are not interrupted.\n\nThis fix was originally devised by the BassCheck[1] team, and\nconsidered the problem to be an atomicity one. This isn't the case as\nthere aren't any concerns about the variable changing while we check it,\nbut rather after we check it parallel to another change.\n\nThis patch fixes CVE-2024-24858 and CVE-2024-24857.\n\n[1] https://sites.google.com/view/basscheck/\n\nCo-developed-by: Gui-Dong Han <2045gemini@gmail.com>\nSigned-off-by: Gui-Dong Han <2045gemini@gmail.com>\nLink: https://lore.kernel.org/linux-bluetooth/20231222161317.6255-1-2045gemini@gmail.com/\nLink: https://nvd.nist.gov/vuln/detail/CVE-2024-24858\nLink: https://lore.kernel.org/linux-bluetooth/20231222162931.6553-1-2045gemini@gmail.com/\nLink: https://lore.kernel.org/linux-bluetooth/20231222162310.6461-1-2045gemini@gmail.com/\nLink: https://nvd.nist.gov/vuln/detail/CVE-2024-24857\nFixes: 31ad169148df (\"Bluetooth: Add conn info lifetime parameters to debugfs\")\nFixes: 729a1051da6f (\"Bluetooth: Expose default LE advertising interval via debugfs\")\nFixes: 71c3b60ec6d2 (\"Bluetooth: Move BR/EDR debugfs file creation into hci_debugfs.c\")\nSigned-off-by: Bastien Nocera <hadess@hadess.net>\nSigned-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>",
  "author_name": "Bastien Nocera",
  "author_email": "hadess@hadess.net",
  "author_date": "Wed Mar 27 15:24:56 2024 +0100",
  "author_date_iso": "2024-03-27T15:24:56+01:00",
  "committer_name": "Luiz Augusto von Dentz",
  "committer_email": "luiz.von.dentz@intel.com",
  "committer_date": "Fri Mar 29 09:48:37 2024 -0400",
  "committer_date_iso": "2024-03-29T09:48:37-04:00",
  "files_changed": [
    "net/bluetooth/hci_debugfs.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/bluetooth/hci_debugfs.c",
      "insertions": 32,
      "deletions": 16
    }
  ],
  "total_insertions": 32,
  "total_deletions": 16,
  "total_changes": 48,
  "parents": [
    "c569242cd49287d53b73a94233db40097d838535"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2024-24858",
      "CVE-2024-24857",
      "CVE-2024-24858",
      "CVE-2024-24857"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "net/bluetooth/hci_debugfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}