{
  "hash": "af6b54e2b5baa54c844573b6d49cc91157bcdd7e",
  "hash_short": "af6b54e2",
  "subject": "virt: vmgenid: notify RNG of VM fork and supply generation ID",
  "body": "VM Generation ID is a feature from Microsoft, described at\n<https://go.microsoft.com/fwlink/?LinkId=260709>, and supported by\nHyper-V and QEMU. Its usage is described in Microsoft's RNG whitepaper,\n<https://aka.ms/win10rng>, as:\n\n    If the OS is running in a VM, there is a problem that most\n    hypervisors can snapshot the state of the machine and later rewind\n    the VM state to the saved state. This results in the machine running\n    a second time with the exact same RNG state, which leads to serious\n    security problems.  To reduce the window of vulnerability, Windows\n    10 on a Hyper-V VM will detect when the VM state is reset, retrieve\n    a unique (not random) value from the hypervisor, and reseed the root\n    RNG with that unique value.  This does not eliminate the\n    vulnerability, but it greatly reduces the time during which the RNG\n    system will produce the same outputs as it did during a previous\n    instantiation of the same VM state.\n\nLinux has the same issue, and given that vmgenid is supported already by\nmultiple hypervisors, we can implement more or less the same solution.\nSo this commit wires up the vmgenid ACPI notification to the RNG's newly\nadded add_vmfork_randomness() function.\n\nIt can be used from qemu via the `-device vmgenid,guid=auto` parameter.\nAfter setting that, use `savevm` in the monitor to save the VM state,\nthen quit QEMU, start it again, and use `loadvm`. That will trigger this\ndriver's notify function, which hands the new UUID to the RNG. This is\ndescribed in <https://git.qemu.org/?p=qemu.git;a=blob;f=docs/specs/vmgenid.txt>.\nAnd there are hooks for this in libvirt as well, described in\n<https://libvirt.org/formatdomain.html#general-metadata>.\n\nNote, however, that the treatment of this as a UUID is considered to be\nan accidental QEMU nuance, per\n<https://github.com/libguestfs/virt-v2v/blob/master/docs/vm-generation-id-across-hypervisors.txt>,\nso this driver simply treats these bytes as an opaque 128-bit binary\nblob, as per the spec. This doesn't really make a difference anyway,\nconsidering that's how it ends up when handed to the RNG in the end.\n\nCc: Alexander Graf <graf@amazon.com>\nCc: Adrian Catangiu <adrian@parity.io>\nCc: Daniel P. Berrang\u00e9 <berrange@redhat.com>\nCc: Dominik Brodowski <linux@dominikbrodowski.net>\nCc: Wei Yongjun <weiyongjun1@huawei.com>\nTested-by: Souradeep Chakrabarti <souradch.linux@gmail.com> # With Hyper-V's virtual hardware\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nReviewed-by: Laszlo Ersek <lersek@redhat.com>\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>",
  "full_message": "virt: vmgenid: notify RNG of VM fork and supply generation ID\n\nVM Generation ID is a feature from Microsoft, described at\n<https://go.microsoft.com/fwlink/?LinkId=260709>, and supported by\nHyper-V and QEMU. Its usage is described in Microsoft's RNG whitepaper,\n<https://aka.ms/win10rng>, as:\n\n    If the OS is running in a VM, there is a problem that most\n    hypervisors can snapshot the state of the machine and later rewind\n    the VM state to the saved state. This results in the machine running\n    a second time with the exact same RNG state, which leads to serious\n    security problems.  To reduce the window of vulnerability, Windows\n    10 on a Hyper-V VM will detect when the VM state is reset, retrieve\n    a unique (not random) value from the hypervisor, and reseed the root\n    RNG with that unique value.  This does not eliminate the\n    vulnerability, but it greatly reduces the time during which the RNG\n    system will produce the same outputs as it did during a previous\n    instantiation of the same VM state.\n\nLinux has the same issue, and given that vmgenid is supported already by\nmultiple hypervisors, we can implement more or less the same solution.\nSo this commit wires up the vmgenid ACPI notification to the RNG's newly\nadded add_vmfork_randomness() function.\n\nIt can be used from qemu via the `-device vmgenid,guid=auto` parameter.\nAfter setting that, use `savevm` in the monitor to save the VM state,\nthen quit QEMU, start it again, and use `loadvm`. That will trigger this\ndriver's notify function, which hands the new UUID to the RNG. This is\ndescribed in <https://git.qemu.org/?p=qemu.git;a=blob;f=docs/specs/vmgenid.txt>.\nAnd there are hooks for this in libvirt as well, described in\n<https://libvirt.org/formatdomain.html#general-metadata>.\n\nNote, however, that the treatment of this as a UUID is considered to be\nan accidental QEMU nuance, per\n<https://github.com/libguestfs/virt-v2v/blob/master/docs/vm-generation-id-across-hypervisors.txt>,\nso this driver simply treats these bytes as an opaque 128-bit binary\nblob, as per the spec. This doesn't really make a difference anyway,\nconsidering that's how it ends up when handed to the RNG in the end.\n\nCc: Alexander Graf <graf@amazon.com>\nCc: Adrian Catangiu <adrian@parity.io>\nCc: Daniel P. Berrang\u00e9 <berrange@redhat.com>\nCc: Dominik Brodowski <linux@dominikbrodowski.net>\nCc: Wei Yongjun <weiyongjun1@huawei.com>\nTested-by: Souradeep Chakrabarti <souradch.linux@gmail.com> # With Hyper-V's virtual hardware\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nReviewed-by: Laszlo Ersek <lersek@redhat.com>\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>",
  "author_name": "Jason A. Donenfeld",
  "author_email": "Jason@zx2c4.com",
  "author_date": "Wed Feb 23 13:46:24 2022 +0100",
  "author_date_iso": "2022-02-23T13:46:24+01:00",
  "committer_name": "Jason A. Donenfeld",
  "committer_email": "Jason@zx2c4.com",
  "committer_date": "Sat Mar 12 18:00:56 2022 -0700",
  "committer_date_iso": "2022-03-12T18:00:56-07:00",
  "files_changed": [
    "MAINTAINERS",
    "drivers/virt/Kconfig",
    "drivers/virt/Makefile",
    "drivers/virt/vmgenid.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "MAINTAINERS",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/virt/Kconfig",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "drivers/virt/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/virt/vmgenid.c",
      "insertions": 100,
      "deletions": 0
    }
  ],
  "total_insertions": 113,
  "total_deletions": 0,
  "total_changes": 113,
  "parents": [
    "d273845ecb0e0626842782a4497f0c5876139ec3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "MAINTAINERS",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/virt/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/virt/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/virt/vmgenid.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}