{
  "hash": "395664439c4945e4827543e3ca80f7b74e1bf733",
  "hash_short": "39566443",
  "subject": "Fix default behaviour for empty domains and add domainauto option",
  "body": "With commit 2b149f119 many things have been fixed/introduced.\nHowever, the default behaviour for RawNTLMSSP authentication\nseems to be wrong in case the domain is not passed on the command line.\n\nThe main points (see below) of the patch are:\n - It alignes behaviour with Windows clients\n - It fixes backward compatibility\n - It fixes UPN\n\nI compared this behavour with the one from a Windows 10 command line\nclient. When no domains are specified on the command line, I traced\nthe packets and observed that the client does send an empty\ndomain to the server.\nIn the linux kernel case, the empty domain is replaced by the\nprimary domain communicated by the SMB server.\nThis means that, if the credentials are valid against the local server\nbut that server is part of a domain, then the kernel module will\nask to authenticate against that domain and we will get LOGON failure.\n\nI compared the packet trace from the smbclient when no domain is passed\nand, in that case, a default domain from the client smb.conf is taken.\nApparently, connection succeeds anyway, because when the domain passed\nis not valid (in my case WORKGROUP), then the local one is tried and\nauthentication succeeds. I tried with any kind of invalid domain and\nthe result was always a connection.\n\nSo, trying to interpret what to do and picking a valid domain if none\nis passed, seems the wrong thing to do.\nTo this end, a new option \"domainauto\" has been added in case the\nuser wants a mechanism for guessing.\n\nWithout this patch, backward compatibility also is broken.\nWith kernel 3.10, the default auth mechanism was NTLM.\nOne of our testing servers accepted NTLM and, because no\ndomains are passed, authentication was local.\n\nMoving to RawNTLMSSP forced us to change our command line\nto add a fake domain to pass to prevent this mechanism to kick in.\n\nFor the same reasons, UPN is broken because the domain is specified\nin the username.\nThe SMB server will work out the domain from the UPN and authenticate\nagainst the right server.\nWithout the patch, though, given the domain is empty, it gets replaced\nwith another domain that could be the wrong one for the authentication.\n\nSigned-off-by: Germano Percossi <germano.percossi@citrix.com>\nAcked-by: Pavel Shilovsky <pshilov@microsoft.com>\nSigned-off-by: Steve French <smfrench@gmail.com>",
  "full_message": "Fix default behaviour for empty domains and add domainauto option\n\nWith commit 2b149f119 many things have been fixed/introduced.\nHowever, the default behaviour for RawNTLMSSP authentication\nseems to be wrong in case the domain is not passed on the command line.\n\nThe main points (see below) of the patch are:\n - It alignes behaviour with Windows clients\n - It fixes backward compatibility\n - It fixes UPN\n\nI compared this behavour with the one from a Windows 10 command line\nclient. When no domains are specified on the command line, I traced\nthe packets and observed that the client does send an empty\ndomain to the server.\nIn the linux kernel case, the empty domain is replaced by the\nprimary domain communicated by the SMB server.\nThis means that, if the credentials are valid against the local server\nbut that server is part of a domain, then the kernel module will\nask to authenticate against that domain and we will get LOGON failure.\n\nI compared the packet trace from the smbclient when no domain is passed\nand, in that case, a default domain from the client smb.conf is taken.\nApparently, connection succeeds anyway, because when the domain passed\nis not valid (in my case WORKGROUP), then the local one is tried and\nauthentication succeeds. I tried with any kind of invalid domain and\nthe result was always a connection.\n\nSo, trying to interpret what to do and picking a valid domain if none\nis passed, seems the wrong thing to do.\nTo this end, a new option \"domainauto\" has been added in case the\nuser wants a mechanism for guessing.\n\nWithout this patch, backward compatibility also is broken.\nWith kernel 3.10, the default auth mechanism was NTLM.\nOne of our testing servers accepted NTLM and, because no\ndomains are passed, authentication was local.\n\nMoving to RawNTLMSSP forced us to change our command line\nto add a fake domain to pass to prevent this mechanism to kick in.\n\nFor the same reasons, UPN is broken because the domain is specified\nin the username.\nThe SMB server will work out the domain from the UPN and authenticate\nagainst the right server.\nWithout the patch, though, given the domain is empty, it gets replaced\nwith another domain that could be the wrong one for the authentication.\n\nSigned-off-by: Germano Percossi <germano.percossi@citrix.com>\nAcked-by: Pavel Shilovsky <pshilov@microsoft.com>\nSigned-off-by: Steve French <smfrench@gmail.com>",
  "author_name": "Germano Percossi",
  "author_email": "germano.percossi@citrix.com",
  "author_date": "Thu Dec 15 12:31:18 2016 +0530",
  "author_date_iso": "2016-12-15T12:31:18+05:30",
  "committer_name": "Steve French",
  "committer_email": "smfrench@gmail.com",
  "committer_date": "Thu Dec 15 01:42:38 2016 -0600",
  "committer_date_iso": "2016-12-15T01:42:38-06:00",
  "files_changed": [
    "fs/cifs/cifsencrypt.c",
    "fs/cifs/cifsglob.h",
    "fs/cifs/connect.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "fs/cifs/cifsencrypt.c",
      "insertions": 9,
      "deletions": 5
    },
    {
      "file": "fs/cifs/cifsglob.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/cifs/connect.c",
      "insertions": 7,
      "deletions": 0
    }
  ],
  "total_insertions": 18,
  "total_deletions": 5,
  "total_changes": 23,
  "parents": [
    "c6fc663e90e56fdcaa3ad62801cfa99f287b8bfc"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/cifs/cifsencrypt.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/cifsglob.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/connect.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}