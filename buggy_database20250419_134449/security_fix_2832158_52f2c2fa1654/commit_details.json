{
  "hash": "28321582334c261c13b20d7efe634e610b4c100b",
  "hash_short": "28321582",
  "subject": "arm64: initialize ptrauth keys for kernel booting task",
  "body": "This patch uses the existing boot_init_stack_canary arch function\nto initialize the ptrauth keys for the booting task in the primary\ncore. The requirement here is that it should be always inline and\nthe caller must never return.\n\nAs pointer authentication too detects a subset of stack corruption\nso it makes sense to place this code here.\n\nBoth pointer authentication and stack canary codes are protected\nby their respective config option.\n\nSuggested-by: Ard Biesheuvel <ardb@kernel.org>\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nReviewed-by: Vincenzo Frascino <Vincenzo.Frascino@arm.com>\nReviewed-by: Catalin Marinas <catalin.marinas@arm.com>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "full_message": "arm64: initialize ptrauth keys for kernel booting task\n\nThis patch uses the existing boot_init_stack_canary arch function\nto initialize the ptrauth keys for the booting task in the primary\ncore. The requirement here is that it should be always inline and\nthe caller must never return.\n\nAs pointer authentication too detects a subset of stack corruption\nso it makes sense to place this code here.\n\nBoth pointer authentication and stack canary codes are protected\nby their respective config option.\n\nSuggested-by: Ard Biesheuvel <ardb@kernel.org>\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nReviewed-by: Vincenzo Frascino <Vincenzo.Frascino@arm.com>\nReviewed-by: Catalin Marinas <catalin.marinas@arm.com>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "author_name": "Amit Daniel Kachhap",
  "author_email": "amit.kachhap@arm.com",
  "author_date": "Fri Mar 13 14:34:57 2020 +0530",
  "author_date_iso": "2020-03-13T14:34:57+05:30",
  "committer_name": "Catalin Marinas",
  "committer_email": "catalin.marinas@arm.com",
  "committer_date": "Wed Mar 18 09:50:20 2020 +0000",
  "committer_date_iso": "2020-03-18T09:50:20+00:00",
  "files_changed": [
    "arch/arm64/include/asm/pointer_auth.h",
    "arch/arm64/include/asm/stackprotector.h",
    "include/linux/stackprotector.h"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/arm64/include/asm/pointer_auth.h",
      "insertions": 10,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/stackprotector.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "include/linux/stackprotector.h",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 16,
  "total_deletions": 2,
  "total_changes": 18,
  "parents": [
    "33e45234987ea3ed4b05fc512f4441696478f12d"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.7-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/pointer_auth.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/stackprotector.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/stackprotector.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}