commit 28321582334c261c13b20d7efe634e610b4c100b
Author: Amit Daniel Kachhap <amit.kachhap@arm.com>
Date:   Fri Mar 13 14:34:57 2020 +0530

    arm64: initialize ptrauth keys for kernel booting task
    
    This patch uses the existing boot_init_stack_canary arch function
    to initialize the ptrauth keys for the booting task in the primary
    core. The requirement here is that it should be always inline and
    the caller must never return.
    
    As pointer authentication too detects a subset of stack corruption
    so it makes sense to place this code here.
    
    Both pointer authentication and stack canary codes are protected
    by their respective config option.
    
    Suggested-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>
    Reviewed-by: Vincenzo Frascino <Vincenzo.Frascino@arm.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

diff --git a/include/linux/stackprotector.h b/include/linux/stackprotector.h
index 6b792d080eee..4c678c4fec58 100644
--- a/include/linux/stackprotector.h
+++ b/include/linux/stackprotector.h
@@ -6,7 +6,7 @@
 #include <linux/sched.h>
 #include <linux/random.h>
 
-#ifdef CONFIG_STACKPROTECTOR
+#if defined(CONFIG_STACKPROTECTOR) || defined(CONFIG_ARM64_PTR_AUTH)
 # include <asm/stackprotector.h>
 #else
 static inline void boot_init_stack_canary(void)