{
  "hash": "b78b6af66a5fbaf17d7e6bfc32384df5e34408c8",
  "hash_short": "b78b6af6",
  "subject": "[PATCH] shmat: stop mprotect from giving write permission to a readonly attachment (CVE-2006-1524)",
  "body": "I found that all of 2.4 and 2.6 have been letting mprotect give write\npermission to a readonly attachment of shared memory, whether or not IPC\nwould give the caller that permission.\n\nSUS says \"The behaviour of this function [mprotect] is unspecified if the\nmapping was not established by a call to mmap\", but I don't think we can\ninterpret that as allowing it to subvert IPC permissions.\n\nI haven't tried 2.2, but the 2.2.26 source looks like it gets it right; and\nthe patch below reproduces that behaviour - mprotect cannot be used to add\nwrite permission to a shared memory segment attached readonly.\n\nThis patch is simple, and I'm sure it's what we should have done in 2.4.0:\nif you want to go on to switch write permission on and off with mprotect,\njust don't attach the segment readonly in the first place.\n\nHowever, we could have accumulated apps which attach readonly (even though\nthey would be permitted to attach read/write), and which subsequently use\nmprotect to switch write permission on and off: it's not unreasonable.\n\nI was going to add a second ipcperms check in do_shmat, to check for\nwritable when readonly, and if not writable find_vma and clear VM_MAYWRITE.\n But security_ipc_permission might do auditing, and it seems wrong to\nreport an attempt for write permission when there has been none.  Or we\ncould flag the vma as SHM, note the shmid or shp in vm_private_data, and\nthen get mprotect to check.\n\nBut the patch below is a lot simpler: I'd rather stick with it, if we can\nconvince ourselves somehow that it'll be safe.\n\nSigned-off-by: Hugh Dickins <hugh@veritas.com>\nSigned-off-by: Andrew Morton <akpm@osdl.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>",
  "full_message": "[PATCH] shmat: stop mprotect from giving write permission to a readonly attachment (CVE-2006-1524)\n\nI found that all of 2.4 and 2.6 have been letting mprotect give write\npermission to a readonly attachment of shared memory, whether or not IPC\nwould give the caller that permission.\n\nSUS says \"The behaviour of this function [mprotect] is unspecified if the\nmapping was not established by a call to mmap\", but I don't think we can\ninterpret that as allowing it to subvert IPC permissions.\n\nI haven't tried 2.2, but the 2.2.26 source looks like it gets it right; and\nthe patch below reproduces that behaviour - mprotect cannot be used to add\nwrite permission to a shared memory segment attached readonly.\n\nThis patch is simple, and I'm sure it's what we should have done in 2.4.0:\nif you want to go on to switch write permission on and off with mprotect,\njust don't attach the segment readonly in the first place.\n\nHowever, we could have accumulated apps which attach readonly (even though\nthey would be permitted to attach read/write), and which subsequently use\nmprotect to switch write permission on and off: it's not unreasonable.\n\nI was going to add a second ipcperms check in do_shmat, to check for\nwritable when readonly, and if not writable find_vma and clear VM_MAYWRITE.\n But security_ipc_permission might do auditing, and it seems wrong to\nreport an attempt for write permission when there has been none.  Or we\ncould flag the vma as SHM, note the shmid or shp in vm_private_data, and\nthen get mprotect to check.\n\nBut the patch below is a lot simpler: I'd rather stick with it, if we can\nconvince ourselves somehow that it'll be safe.\n\nSigned-off-by: Hugh Dickins <hugh@veritas.com>\nSigned-off-by: Andrew Morton <akpm@osdl.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>",
  "author_name": "Hugh Dickins",
  "author_email": "hugh@veritas.com",
  "author_date": "Wed Apr 12 14:34:27 2006 -0700",
  "author_date_iso": "2006-04-12T14:34:27-07:00",
  "committer_name": "Greg Kroah-Hartman",
  "committer_email": "gregkh@suse.de",
  "committer_date": "Mon Apr 17 14:24:58 2006 -0700",
  "committer_date_iso": "2006-04-17T14:24:58-07:00",
  "files_changed": [
    "ipc/shm.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "ipc/shm.c",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 2,
  "total_deletions": 0,
  "total_changes": 2,
  "parents": [
    "ca1e0484d9fe8a9048ac32b0f9894545f43704e8"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.17",
    "v2.6.17-rc2",
    "v2.6.17-rc3",
    "v2.6.17-rc4",
    "v2.6.17-rc5",
    "v2.6.17-rc6",
    "v2.6.18",
    "v2.6.18-rc1",
    "v2.6.18-rc2",
    "v2.6.18-rc3"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2006-1524",
      "CVE-2006-1524"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "ipc/shm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}