{
  "hash": "221ec5c0a46c1a1740f34fb36fc661a5284d01b0",
  "hash_short": "221ec5c0",
  "subject": "mm: slab: make page_cgroup_ino() to recognize non-compound slab pages properly",
  "body": "page_cgroup_ino() doesn't return a valid memcg pointer for non-compound\nslab pages, because it depends on PgHead AND PgSlab flags to be set to\ndetermine the memory cgroup from the kmem_cache.  It's correct for\ncompound pages, but not for generic small pages.  Those don't have PgHead\nset, so it ends up returning zero.\n\nFix this by replacing the condition to PageSlab() && !PageTail().\n\nBefore this patch:\n  [root@localhost ~]# ./page-types -c /sys/fs/cgroup/user.slice/user-0.slice/user@0.service/ | grep slab\n  0x0000000000000080\t        38        0  _______S___________________________________\tslab\n\nAfter this patch:\n  [root@localhost ~]# ./page-types -c /sys/fs/cgroup/user.slice/user-0.slice/user@0.service/ | grep slab\n  0x0000000000000080\t       147        0  _______S___________________________________\tslab\n\nAlso, hwpoison_filter_task() uses output of page_cgroup_ino() in order\nto filter error injection events based on memcg.  So if\npage_cgroup_ino() fails to return memcg pointer, we just fail to inject\nmemory error.  Considering that hwpoison filter is for testing, affected\nusers are limited and the impact should be marginal.\n\n[n-horiguchi@ah.jp.nec.com: changelog additions]\nLink: http://lkml.kernel.org/r/20191031012151.2722280-1-guro@fb.com\nFixes: 4d96ba353075 (\"mm: memcg/slab: stop setting page->mem_cgroup pointer for slab pages\")\nSigned-off-by: Roman Gushchin <guro@fb.com>\nReviewed-by: Shakeel Butt <shakeelb@google.com>\nAcked-by: David Rientjes <rientjes@google.com>\nCc: Vladimir Davydov <vdavydov.dev@gmail.com>\nCc: Daniel Jordan <daniel.m.jordan@oracle.com>\nCc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "mm: slab: make page_cgroup_ino() to recognize non-compound slab pages properly\n\npage_cgroup_ino() doesn't return a valid memcg pointer for non-compound\nslab pages, because it depends on PgHead AND PgSlab flags to be set to\ndetermine the memory cgroup from the kmem_cache.  It's correct for\ncompound pages, but not for generic small pages.  Those don't have PgHead\nset, so it ends up returning zero.\n\nFix this by replacing the condition to PageSlab() && !PageTail().\n\nBefore this patch:\n  [root@localhost ~]# ./page-types -c /sys/fs/cgroup/user.slice/user-0.slice/user@0.service/ | grep slab\n  0x0000000000000080\t        38        0  _______S___________________________________\tslab\n\nAfter this patch:\n  [root@localhost ~]# ./page-types -c /sys/fs/cgroup/user.slice/user-0.slice/user@0.service/ | grep slab\n  0x0000000000000080\t       147        0  _______S___________________________________\tslab\n\nAlso, hwpoison_filter_task() uses output of page_cgroup_ino() in order\nto filter error injection events based on memcg.  So if\npage_cgroup_ino() fails to return memcg pointer, we just fail to inject\nmemory error.  Considering that hwpoison filter is for testing, affected\nusers are limited and the impact should be marginal.\n\n[n-horiguchi@ah.jp.nec.com: changelog additions]\nLink: http://lkml.kernel.org/r/20191031012151.2722280-1-guro@fb.com\nFixes: 4d96ba353075 (\"mm: memcg/slab: stop setting page->mem_cgroup pointer for slab pages\")\nSigned-off-by: Roman Gushchin <guro@fb.com>\nReviewed-by: Shakeel Butt <shakeelb@google.com>\nAcked-by: David Rientjes <rientjes@google.com>\nCc: Vladimir Davydov <vdavydov.dev@gmail.com>\nCc: Daniel Jordan <daniel.m.jordan@oracle.com>\nCc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Roman Gushchin",
  "author_email": "guro@fb.com",
  "author_date": "Tue Nov 5 21:17:03 2019 -0800",
  "author_date_iso": "2019-11-05T21:17:03-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Nov 6 08:47:50 2019 -0800",
  "committer_date_iso": "2019-11-06T08:47:50-08:00",
  "files_changed": [
    "mm/memcontrol.c",
    "mm/slab.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "mm/memcontrol.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "mm/slab.h",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 3,
  "total_deletions": 3,
  "total_changes": 6,
  "parents": [
    "6981b76cf6f3252ed7b828fc9b2d333ff5f0bde8"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.4",
    "v5.4-rc7",
    "v5.4-rc8",
    "v5.5",
    "v5.5-rc1",
    "v5.5-rc2",
    "v5.5-rc3",
    "v5.5-rc4",
    "v5.5-rc5",
    "v5.5-rc6"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "mm/memcontrol.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slab.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}