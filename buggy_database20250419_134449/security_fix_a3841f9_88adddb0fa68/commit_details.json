{
  "hash": "a3841f94c7ecb3ede0f888d3fcfe8fb6368ddd7a",
  "hash_short": "a3841f94",
  "subject": "Merge tag 'libnvdimm-for-4.15' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm",
  "body": "Pull libnvdimm and dax updates from Dan Williams:\n \"Save for a few late fixes, all of these commits have shipped in -next\n  releases since before the merge window opened, and 0day has given a\n  build success notification.\n\n  The ext4 touches came from Jan, and the xfs touches have Darrick's\n  reviewed-by. An xfstest for the MAP_SYNC feature has been through\n  a few round of reviews and is on track to be merged.\n\n   - Introduce MAP_SYNC and MAP_SHARED_VALIDATE, a mechanism to enable\n     'userspace flush' of persistent memory updates via filesystem-dax\n     mappings. It arranges for any filesystem metadata updates that may\n     be required to satisfy a write fault to also be flushed (\"on disk\")\n     before the kernel returns to userspace from the fault handler.\n     Effectively every write-fault that dirties metadata completes an\n     fsync() before returning from the fault handler. The new\n     MAP_SHARED_VALIDATE mapping type guarantees that the MAP_SYNC flag\n     is validated as supported by the filesystem's ->mmap() file\n     operation.\n\n   - Add support for the standard ACPI 6.2 label access methods that\n     replace the NVDIMM_FAMILY_INTEL (vendor specific) label methods.\n     This enables interoperability with environments that only implement\n     the standardized methods.\n\n   - Add support for the ACPI 6.2 NVDIMM media error injection methods.\n\n   - Add support for the NVDIMM_FAMILY_INTEL v1.6 DIMM commands for\n     latch last shutdown status, firmware update, SMART error injection,\n     and SMART alarm threshold control.\n\n   - Cleanup physical address information disclosures to be root-only.\n\n   - Fix revalidation of the DIMM \"locked label area\" status to support\n     dynamic unlock of the label area.\n\n   - Expand unit test infrastructure to mock the ACPI 6.2 Translate SPA\n     (system-physical-address) command and error injection commands.\n\n  Acknowledgements that came after the commits were pushed to -next:\n\n   - 957ac8c421ad (\"dax: fix PMD faults on zero-length files\"):\n       Reviewed-by: Ross Zwisler <ross.zwisler@linux.intel.com>\n\n   - a39e596baa07 (\"xfs: support for synchronous DAX faults\") and\n     7b565c9f965b (\"xfs: Implement xfs_filemap_pfn_mkwrite() using __xfs_filemap_fault()\")\n        Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\"\n\n* tag 'libnvdimm-for-4.15' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (49 commits)\n  acpi, nfit: add 'Enable Latch System Shutdown Status' command support\n  dax: fix general protection fault in dax_alloc_inode\n  dax: fix PMD faults on zero-length files\n  dax: stop requiring a live device for dax_flush()\n  brd: remove dax support\n  dax: quiet bdev_dax_supported()\n  fs, dax: unify IOMAP_F_DIRTY read vs write handling policy in the dax core\n  tools/testing/nvdimm: unit test clear-error commands\n  acpi, nfit: validate commands against the device type\n  tools/testing/nvdimm: stricter bounds checking for error injection commands\n  xfs: support for synchronous DAX faults\n  xfs: Implement xfs_filemap_pfn_mkwrite() using __xfs_filemap_fault()\n  ext4: Support for synchronous DAX faults\n  ext4: Simplify error handling in ext4_dax_huge_fault()\n  dax: Implement dax_finish_sync_fault()\n  dax, iomap: Add support for synchronous faults\n  mm: Define MAP_SYNC and VM_SYNC flags\n  dax: Allow tuning whether dax_insert_mapping_entry() dirties entry\n  dax: Allow dax_iomap_fault() to return pfn\n  dax: Fix comment describing dax_iomap_fault()\n  ...",
  "full_message": "Merge tag 'libnvdimm-for-4.15' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n\nPull libnvdimm and dax updates from Dan Williams:\n \"Save for a few late fixes, all of these commits have shipped in -next\n  releases since before the merge window opened, and 0day has given a\n  build success notification.\n\n  The ext4 touches came from Jan, and the xfs touches have Darrick's\n  reviewed-by. An xfstest for the MAP_SYNC feature has been through\n  a few round of reviews and is on track to be merged.\n\n   - Introduce MAP_SYNC and MAP_SHARED_VALIDATE, a mechanism to enable\n     'userspace flush' of persistent memory updates via filesystem-dax\n     mappings. It arranges for any filesystem metadata updates that may\n     be required to satisfy a write fault to also be flushed (\"on disk\")\n     before the kernel returns to userspace from the fault handler.\n     Effectively every write-fault that dirties metadata completes an\n     fsync() before returning from the fault handler. The new\n     MAP_SHARED_VALIDATE mapping type guarantees that the MAP_SYNC flag\n     is validated as supported by the filesystem's ->mmap() file\n     operation.\n\n   - Add support for the standard ACPI 6.2 label access methods that\n     replace the NVDIMM_FAMILY_INTEL (vendor specific) label methods.\n     This enables interoperability with environments that only implement\n     the standardized methods.\n\n   - Add support for the ACPI 6.2 NVDIMM media error injection methods.\n\n   - Add support for the NVDIMM_FAMILY_INTEL v1.6 DIMM commands for\n     latch last shutdown status, firmware update, SMART error injection,\n     and SMART alarm threshold control.\n\n   - Cleanup physical address information disclosures to be root-only.\n\n   - Fix revalidation of the DIMM \"locked label area\" status to support\n     dynamic unlock of the label area.\n\n   - Expand unit test infrastructure to mock the ACPI 6.2 Translate SPA\n     (system-physical-address) command and error injection commands.\n\n  Acknowledgements that came after the commits were pushed to -next:\n\n   - 957ac8c421ad (\"dax: fix PMD faults on zero-length files\"):\n       Reviewed-by: Ross Zwisler <ross.zwisler@linux.intel.com>\n\n   - a39e596baa07 (\"xfs: support for synchronous DAX faults\") and\n     7b565c9f965b (\"xfs: Implement xfs_filemap_pfn_mkwrite() using __xfs_filemap_fault()\")\n        Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\"\n\n* tag 'libnvdimm-for-4.15' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (49 commits)\n  acpi, nfit: add 'Enable Latch System Shutdown Status' command support\n  dax: fix general protection fault in dax_alloc_inode\n  dax: fix PMD faults on zero-length files\n  dax: stop requiring a live device for dax_flush()\n  brd: remove dax support\n  dax: quiet bdev_dax_supported()\n  fs, dax: unify IOMAP_F_DIRTY read vs write handling policy in the dax core\n  tools/testing/nvdimm: unit test clear-error commands\n  acpi, nfit: validate commands against the device type\n  tools/testing/nvdimm: stricter bounds checking for error injection commands\n  xfs: support for synchronous DAX faults\n  xfs: Implement xfs_filemap_pfn_mkwrite() using __xfs_filemap_fault()\n  ext4: Support for synchronous DAX faults\n  ext4: Simplify error handling in ext4_dax_huge_fault()\n  dax: Implement dax_finish_sync_fault()\n  dax, iomap: Add support for synchronous faults\n  mm: Define MAP_SYNC and VM_SYNC flags\n  dax: Allow tuning whether dax_insert_mapping_entry() dirties entry\n  dax: Allow dax_iomap_fault() to return pfn\n  dax: Fix comment describing dax_iomap_fault()\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Fri Nov 17 09:51:57 2017 -0800",
  "author_date_iso": "2017-11-17T09:51:57-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Nov 17 09:51:57 2017 -0800",
  "committer_date_iso": "2017-11-17T09:51:57-08:00",
  "files_changed": [
    "MAINTAINERS",
    "arch/alpha/include/uapi/asm/mman.h",
    "arch/mips/include/uapi/asm/mman.h",
    "arch/parisc/include/uapi/asm/mman.h",
    "arch/xtensa/include/uapi/asm/mman.h",
    "drivers/block/Kconfig",
    "drivers/block/brd.c",
    "drivers/nvdimm/Makefile",
    "fs/dax.c",
    "fs/ext2/file.c",
    "fs/ext4/file.c",
    "fs/ext4/inode.c",
    "fs/jbd2/journal.c",
    "fs/proc/task_mmu.c",
    "fs/xfs/xfs_file.c",
    "fs/xfs/xfs_iomap.c",
    "fs/xfs/xfs_trace.h",
    "include/linux/dax.h",
    "include/linux/fs.h",
    "include/linux/iomap.h",
    "include/linux/mm.h",
    "include/linux/mman.h",
    "include/trace/events/fs_dax.h",
    "include/uapi/asm-generic/mman-common.h",
    "include/uapi/asm-generic/mman.h",
    "tools/include/uapi/asm-generic/mman-common.h",
    "tools/testing/nvdimm/Kbuild"
  ],
  "files_changed_count": 27,
  "stats": [
    {
      "file": "MAINTAINERS",
      "insertions": 7,
      "deletions": 1
    },
    {
      "file": "arch/alpha/include/uapi/asm/mman.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/mips/include/uapi/asm/mman.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/parisc/include/uapi/asm/mman.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/xtensa/include/uapi/asm/mman.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/nfit/core.c",
      "insertions": 262,
      "deletions": 12
    },
    {
      "file": "drivers/acpi/nfit/mce.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/nfit/nfit.h",
      "insertions": 36,
      "deletions": 1
    },
    {
      "file": "drivers/block/Kconfig",
      "insertions": 0,
      "deletions": 12
    },
    {
      "file": "drivers/block/brd.c",
      "insertions": 0,
      "deletions": 65
    },
    {
      "file": "drivers/dax/device.c",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "drivers/dax/super.c",
      "insertions": 7,
      "deletions": 7
    },
    {
      "file": "drivers/nvdimm/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/badrange.c",
      "insertions": 293,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/bus.c",
      "insertions": 12,
      "deletions": 12
    },
    {
      "file": "drivers/nvdimm/core.c",
      "insertions": 3,
      "deletions": 257
    },
    {
      "file": "drivers/nvdimm/dimm.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/dimm_devs.c",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/label.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/nvdimm/namespace_devs.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "drivers/nvdimm/nd-core.h",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "drivers/nvdimm/nd.h",
      "insertions": 1,
      "deletions": 6
    },
    {
      "file": "drivers/nvdimm/pfn_devs.c",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/region_devs.c",
      "insertions": 6,
      "deletions": 2
    },
    {
      "file": "fs/dax.c",
      "insertions": 219,
      "deletions": 100
    },
    {
      "file": "fs/ext2/file.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/ext4/file.c",
      "insertions": 20,
      "deletions": 6
    },
    {
      "file": "fs/ext4/inode.c",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "fs/jbd2/journal.c",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "fs/proc/task_mmu.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_file.c",
      "insertions": 18,
      "deletions": 26
    },
    {
      "file": "fs/xfs/xfs_iomap.c",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_trace.h",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "include/linux/dax.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "include/linux/fs.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/iomap.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "include/linux/jbd2.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/libnvdimm.h",
      "insertions": 18,
      "deletions": 3
    },
    {
      "file": "include/linux/mm.h",
      "insertions": 6,
      "deletions": 3
    },
    {
      "file": "include/linux/mman.h",
      "insertions": 46,
      "deletions": 2
    },
    {
      "file": "include/trace/events/fs_dax.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "include/uapi/asm-generic/mman-common.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/uapi/asm-generic/mman.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "mm/mmap.c",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "tools/include/uapi/asm-generic/mman-common.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/testing/nvdimm/Kbuild",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/testing/nvdimm/test/nfit.c",
      "insertions": 287,
      "deletions": 32
    },
    {
      "file": "tools/testing/nvdimm/test/nfit_test.h",
      "insertions": 52,
      "deletions": 0
    }
  ],
  "total_insertions": 1405,
  "total_deletions": 560,
  "total_changes": 1965,
  "parents": [
    "adeba81ac2a6451f44545874da3d181081f0ab04",
    "4247f24c23589bcc3bc3490515ef8c9497e9ae55"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.15",
    "v4.15-rc1",
    "v4.15-rc2",
    "v4.15-rc3",
    "v4.15-rc4",
    "v4.15-rc5",
    "v4.15-rc6",
    "v4.15-rc7",
    "v4.15-rc8",
    "v4.15-rc9"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/block/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/mips/include/uapi/asm/mman.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/parisc/include/uapi/asm/mman.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/xtensa/include/uapi/asm/mman.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/nvdimm/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/alpha/include/uapi/asm/mman.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "MAINTAINERS",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/block/brd.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext2/file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/proc/task_mmu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/dax.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_iomap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/jbd2/journal.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext4/file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext4/inode.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_trace.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/asm-generic/mman-common.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/iomap.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/dax.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/mman.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/mm.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/trace/events/fs_dax.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/asm-generic/mman.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/include/uapi/asm-generic/mman-common.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/testing/nvdimm/Kbuild",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}