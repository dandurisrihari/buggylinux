{
  "hash": "6d1068b3a98519247d8ba4ec85cd40ac136dbdf9",
  "hash_short": "6d1068b3",
  "subject": "KVM: x86: invalid opcode oops on SET_SREGS with OSXSAVE bit set (CVE-2012-4461)",
  "body": "On hosts without the XSAVE support unprivileged local user can trigger\noops similar to the one below by setting X86_CR4_OSXSAVE bit in guest\ncr4 register using KVM_SET_SREGS ioctl and later issuing KVM_RUN\nioctl.\n\ninvalid opcode: 0000 [#2] SMP\nModules linked in: tun ip6table_filter ip6_tables ebtable_nat ebtables\n...\nPid: 24935, comm: zoog_kvm_monito Tainted: G      D      3.2.0-3-686-pae\nEIP: 0060:[<f8b9550c>] EFLAGS: 00210246 CPU: 0\nEIP is at kvm_arch_vcpu_ioctl_run+0x92a/0xd13 [kvm]\nEAX: 00000001 EBX: 000f387e ECX: 00000000 EDX: 00000000\nESI: 00000000 EDI: 00000000 EBP: ef5a0060 ESP: d7c63e70\n DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068\nProcess zoog_kvm_monito (pid: 24935, ti=d7c62000 task=ed84a0c0\ntask.ti=d7c62000)\nStack:\n 00000001 f70a1200 f8b940a9 ef5a0060 00000000 00200202 f8769009 00000000\n ef5a0060 000f387e eda5c020 8722f9c8 00015bae 00000000 ed84a0c0 ed84a0c0\n c12bf02d 0000ae80 ef7f8740 fffffffb f359b740 ef5a0060 f8b85dc1 0000ae80\nCall Trace:\n [<f8b940a9>] ? kvm_arch_vcpu_ioctl_set_sregs+0x2fe/0x308 [kvm]\n...\n [<c12bfb44>] ? syscall_call+0x7/0xb\nCode: 89 e8 e8 14 ee ff ff ba 00 00 04 00 89 e8 e8 98 48 ff ff 85 c0 74\n1e 83 7d 48 00 75 18 8b 85 08 07 00 00 31 c9 8b 95 0c 07 00 00 <0f> 01\nd1 c7 45 48 01 00 00 00 c7 45 1c 01 00 00 00 0f ae f0 89\nEIP: [<f8b9550c>] kvm_arch_vcpu_ioctl_run+0x92a/0xd13 [kvm] SS:ESP\n0068:d7c63e70\n\nQEMU first retrieves the supported features via KVM_GET_SUPPORTED_CPUID\nand then sets them later. So guest's X86_FEATURE_XSAVE should be masked\nout on hosts without X86_FEATURE_XSAVE, making kvm_set_cr4 with\nX86_CR4_OSXSAVE fail. Userspaces that allow specifying guest cpuid with\nX86_FEATURE_XSAVE even on hosts that do not support it, might be\nsusceptible to this attack from inside the guest as well.\n\nAllow setting X86_CR4_OSXSAVE bit only if host has XSAVE support.\n\nSigned-off-by: Petr Matousek <pmatouse@redhat.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
  "full_message": "KVM: x86: invalid opcode oops on SET_SREGS with OSXSAVE bit set (CVE-2012-4461)\n\nOn hosts without the XSAVE support unprivileged local user can trigger\noops similar to the one below by setting X86_CR4_OSXSAVE bit in guest\ncr4 register using KVM_SET_SREGS ioctl and later issuing KVM_RUN\nioctl.\n\ninvalid opcode: 0000 [#2] SMP\nModules linked in: tun ip6table_filter ip6_tables ebtable_nat ebtables\n...\nPid: 24935, comm: zoog_kvm_monito Tainted: G      D      3.2.0-3-686-pae\nEIP: 0060:[<f8b9550c>] EFLAGS: 00210246 CPU: 0\nEIP is at kvm_arch_vcpu_ioctl_run+0x92a/0xd13 [kvm]\nEAX: 00000001 EBX: 000f387e ECX: 00000000 EDX: 00000000\nESI: 00000000 EDI: 00000000 EBP: ef5a0060 ESP: d7c63e70\n DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068\nProcess zoog_kvm_monito (pid: 24935, ti=d7c62000 task=ed84a0c0\ntask.ti=d7c62000)\nStack:\n 00000001 f70a1200 f8b940a9 ef5a0060 00000000 00200202 f8769009 00000000\n ef5a0060 000f387e eda5c020 8722f9c8 00015bae 00000000 ed84a0c0 ed84a0c0\n c12bf02d 0000ae80 ef7f8740 fffffffb f359b740 ef5a0060 f8b85dc1 0000ae80\nCall Trace:\n [<f8b940a9>] ? kvm_arch_vcpu_ioctl_set_sregs+0x2fe/0x308 [kvm]\n...\n [<c12bfb44>] ? syscall_call+0x7/0xb\nCode: 89 e8 e8 14 ee ff ff ba 00 00 04 00 89 e8 e8 98 48 ff ff 85 c0 74\n1e 83 7d 48 00 75 18 8b 85 08 07 00 00 31 c9 8b 95 0c 07 00 00 <0f> 01\nd1 c7 45 48 01 00 00 00 c7 45 1c 01 00 00 00 0f ae f0 89\nEIP: [<f8b9550c>] kvm_arch_vcpu_ioctl_run+0x92a/0xd13 [kvm] SS:ESP\n0068:d7c63e70\n\nQEMU first retrieves the supported features via KVM_GET_SUPPORTED_CPUID\nand then sets them later. So guest's X86_FEATURE_XSAVE should be masked\nout on hosts without X86_FEATURE_XSAVE, making kvm_set_cr4 with\nX86_CR4_OSXSAVE fail. Userspaces that allow specifying guest cpuid with\nX86_FEATURE_XSAVE even on hosts that do not support it, might be\nsusceptible to this attack from inside the guest as well.\n\nAllow setting X86_CR4_OSXSAVE bit only if host has XSAVE support.\n\nSigned-off-by: Petr Matousek <pmatouse@redhat.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
  "author_name": "Petr Matousek",
  "author_email": "pmatouse@redhat.com",
  "author_date": "Tue Nov 6 19:24:07 2012 +0100",
  "author_date_iso": "2012-11-06T19:24:07+01:00",
  "committer_name": "Marcelo Tosatti",
  "committer_email": "mtosatti@redhat.com",
  "committer_date": "Mon Nov 12 21:16:45 2012 -0200",
  "committer_date_iso": "2012-11-12T21:16:45-02:00",
  "files_changed": [
    "arch/x86/kvm/cpuid.h",
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/kvm/cpuid.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 3,
      "deletions": 0
    }
  ],
  "total_insertions": 6,
  "total_deletions": 0,
  "total_changes": 6,
  "parents": [
    "8c23f406c6d86808726ace580657186bc3b44587"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.10",
    "v3.10-rc1",
    "v3.10-rc2",
    "v3.10-rc3",
    "v3.10-rc4",
    "v3.10-rc5",
    "v3.10-rc6",
    "v3.10-rc7",
    "v3.11",
    "v3.11-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2012-4461",
      "CVE-2012-4461"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/x86/kvm/cpuid.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}