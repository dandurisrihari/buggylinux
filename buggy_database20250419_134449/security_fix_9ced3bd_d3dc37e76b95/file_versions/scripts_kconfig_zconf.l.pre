commit 9de071536c87cb814e210bd762fcf7f645d514a9
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon May 28 18:21:48 2018 +0900

    kconfig: begin PARAM state only when seeing a command keyword
    
    Currently, any statement line starts with a keyword with TF_COMMAND
    flag.  So, the following three lines are dead code.
    
            alloc_string(yytext, yyleng);
            zconflval.string = text;
            return T_WORD;
    
    If a T_WORD token is returned in this context, it will cause syntax
    error in the parser anyway.
    
    The next commit will support the assignment statement where a line
    starts with an arbitrary identifier.  So, I want the lexer to switch
    to the PARAM state only when it sees a command keyword.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>

diff --git a/scripts/kconfig/zconf.l b/scripts/kconfig/zconf.l
index b3855909913c..9a147977dc3f 100644
--- a/scripts/kconfig/zconf.l
+++ b/scripts/kconfig/zconf.l
@@ -102,10 +102,10 @@ n	[A-Za-z0-9_-]
 <COMMAND>{
 	{n}+	{
 		const struct kconf_id *id = kconf_id_lookup(yytext, yyleng);
-		BEGIN(PARAM);
 		current_pos.file = current_file;
 		current_pos.lineno = yylineno;
 		if (id && id->flags & TF_COMMAND) {
+			BEGIN(PARAM);
 			yylval.id = id;
 			return id->token;
 		}