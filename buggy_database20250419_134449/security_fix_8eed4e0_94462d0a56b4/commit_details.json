{
  "hash": "8eed4e00a370b37b4e5985ed983dccedd555ea9d",
  "hash_short": "8eed4e00",
  "subject": "x86/lib: Revert to _ASM_EXTABLE_UA() for {get,put}_user() fixups",
  "body": "During memory error injection test on kernels >= v6.4, the kernel panics\nlike below. However, this issue couldn't be reproduced on kernels <= v6.3.\n\n  mce: [Hardware Error]: CPU 296: Machine Check Exception: f Bank 1: bd80000000100134\n  mce: [Hardware Error]: RIP 10:<ffffffff821b9776> {__get_user_nocheck_4+0x6/0x20}\n  mce: [Hardware Error]: TSC 411a93533ed ADDR 346a8730040 MISC 86\n  mce: [Hardware Error]: PROCESSOR 0:a06d0 TIME 1706000767 SOCKET 1 APIC 211 microcode 80001490\n  mce: [Hardware Error]: Run the above through 'mcelog --ascii'\n  mce: [Hardware Error]: Machine check: Data load in unrecoverable area of kernel\n  Kernel panic - not syncing: Fatal local machine check\n\nThe MCA code can recover from an in-kernel #MC if the fixup type is\nEX_TYPE_UACCESS, explicitly indicating that the kernel is attempting to\naccess userspace memory. However, if the fixup type is EX_TYPE_DEFAULT\nthe only thing that is raised for an in-kernel #MC is a panic.\n\nex_handler_uaccess() would warn if users gave a non-canonical addresses\n(with bit 63 clear) to {get, put}_user(), which was unexpected.\n\nTherefore, commit\n\n  b19b74bc99b1 (\"x86/mm: Rework address range check in get_user() and put_user()\")\n\nreplaced _ASM_EXTABLE_UA() with _ASM_EXTABLE() for {get, put}_user()\nfixups. However, the new fixup type EX_TYPE_DEFAULT results in a panic.\n\nCommit\n\n  6014bc27561f (\"x86-64: make access_ok() independent of LAM\")\n\nadded the check gp_fault_address_ok() right before the WARN_ONCE() in\nex_handler_uaccess() to not warn about non-canonical user addresses due\nto LAM.\n\nWith that in place, revert back to _ASM_EXTABLE_UA() for {get,put}_user()\nexception fixups in order to be able to handle in-kernel MCEs correctly\nagain.\n\n  [ bp: Massage commit message. ]\n\nFixes: b19b74bc99b1 (\"x86/mm: Rework address range check in get_user() and put_user()\")\nSigned-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>\nSigned-off-by: Borislav Petkov (AMD) <bp@alien8.de>\nReviewed-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: <stable@kernel.org>\nLink: https://lore.kernel.org/r/20240129063842.61584-1-qiuxu.zhuo@intel.com",
  "full_message": "x86/lib: Revert to _ASM_EXTABLE_UA() for {get,put}_user() fixups\n\nDuring memory error injection test on kernels >= v6.4, the kernel panics\nlike below. However, this issue couldn't be reproduced on kernels <= v6.3.\n\n  mce: [Hardware Error]: CPU 296: Machine Check Exception: f Bank 1: bd80000000100134\n  mce: [Hardware Error]: RIP 10:<ffffffff821b9776> {__get_user_nocheck_4+0x6/0x20}\n  mce: [Hardware Error]: TSC 411a93533ed ADDR 346a8730040 MISC 86\n  mce: [Hardware Error]: PROCESSOR 0:a06d0 TIME 1706000767 SOCKET 1 APIC 211 microcode 80001490\n  mce: [Hardware Error]: Run the above through 'mcelog --ascii'\n  mce: [Hardware Error]: Machine check: Data load in unrecoverable area of kernel\n  Kernel panic - not syncing: Fatal local machine check\n\nThe MCA code can recover from an in-kernel #MC if the fixup type is\nEX_TYPE_UACCESS, explicitly indicating that the kernel is attempting to\naccess userspace memory. However, if the fixup type is EX_TYPE_DEFAULT\nthe only thing that is raised for an in-kernel #MC is a panic.\n\nex_handler_uaccess() would warn if users gave a non-canonical addresses\n(with bit 63 clear) to {get, put}_user(), which was unexpected.\n\nTherefore, commit\n\n  b19b74bc99b1 (\"x86/mm: Rework address range check in get_user() and put_user()\")\n\nreplaced _ASM_EXTABLE_UA() with _ASM_EXTABLE() for {get, put}_user()\nfixups. However, the new fixup type EX_TYPE_DEFAULT results in a panic.\n\nCommit\n\n  6014bc27561f (\"x86-64: make access_ok() independent of LAM\")\n\nadded the check gp_fault_address_ok() right before the WARN_ONCE() in\nex_handler_uaccess() to not warn about non-canonical user addresses due\nto LAM.\n\nWith that in place, revert back to _ASM_EXTABLE_UA() for {get,put}_user()\nexception fixups in order to be able to handle in-kernel MCEs correctly\nagain.\n\n  [ bp: Massage commit message. ]\n\nFixes: b19b74bc99b1 (\"x86/mm: Rework address range check in get_user() and put_user()\")\nSigned-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>\nSigned-off-by: Borislav Petkov (AMD) <bp@alien8.de>\nReviewed-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: <stable@kernel.org>\nLink: https://lore.kernel.org/r/20240129063842.61584-1-qiuxu.zhuo@intel.com",
  "author_name": "Qiuxu Zhuo",
  "author_email": "qiuxu.zhuo@intel.com",
  "author_date": "Mon Jan 29 14:38:42 2024 +0800",
  "author_date_iso": "2024-01-29T14:38:42+08:00",
  "committer_name": "Borislav Petkov (AMD)",
  "committer_email": "bp@alien8.de",
  "committer_date": "Mon Jan 29 11:40:41 2024 +0100",
  "committer_date_iso": "2024-01-29T11:40:41+01:00",
  "files_changed": [
    "arch/x86/lib/getuser.S",
    "arch/x86/lib/putuser.S"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/lib/getuser.S",
      "insertions": 12,
      "deletions": 12
    },
    {
      "file": "arch/x86/lib/putuser.S",
      "insertions": 10,
      "deletions": 10
    }
  ],
  "total_insertions": 22,
  "total_deletions": 22,
  "total_changes": 44,
  "parents": [
    "41bccc98fb7931d63d03f326a746ac4d429c1dd3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/lib/getuser.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/lib/putuser.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}