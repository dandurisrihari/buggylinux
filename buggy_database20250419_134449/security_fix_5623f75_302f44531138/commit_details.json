{
  "hash": "5623f751bd9c438ed12840e086f33c4646440d19",
  "hash_short": "5623f751",
  "subject": "KVM: x86: Treat #DBs from the emulator as fault-like (code and DR7.GD=1)",
  "body": "Add a dedicated \"exception type\" for #DBs, as #DBs can be fault-like or\ntrap-like depending the sub-type of #DB, and effectively defer the\ndecision of what to do with the #DB to the caller.\n\nFor the emulator's two calls to exception_type(), treat the #DB as\nfault-like, as the emulator handles only code breakpoint and general\ndetect #DBs, both of which are fault-like.\n\nFor event injection, which uses exception_type() to determine whether to\nset EFLAGS.RF=1 on the stack, keep the current behavior of not setting\nRF=1 for #DBs.  Intel and AMD explicitly state RF isn't set on code #DBs,\nso exempting by failing the \"== EXCPT_FAULT\" check is correct.  The only\nother fault-like #DB is General Detect, and despite Intel and AMD both\nstrongly implying (through omission) that General Detect #DBs should set\nRF=1, hardware (multiple generations of both Intel and AMD), in fact does\nnot.  Through insider knowledge, extreme foresight, sheer dumb luck, or\nsome combination thereof, KVM correctly handled RF for General Detect #DBs.\n\nFixes: 38827dbd3fb8 (\"KVM: x86: Do not update EFLAGS on faulting emulation\")\nCc: stable@vger.kernel.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nReviewed-by: Maxim Levitsky <mlevitsk@redhat.com>\nLink: https://lore.kernel.org/r/20220830231614.3580124-9-seanjc@google.com\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: x86: Treat #DBs from the emulator as fault-like (code and DR7.GD=1)\n\nAdd a dedicated \"exception type\" for #DBs, as #DBs can be fault-like or\ntrap-like depending the sub-type of #DB, and effectively defer the\ndecision of what to do with the #DB to the caller.\n\nFor the emulator's two calls to exception_type(), treat the #DB as\nfault-like, as the emulator handles only code breakpoint and general\ndetect #DBs, both of which are fault-like.\n\nFor event injection, which uses exception_type() to determine whether to\nset EFLAGS.RF=1 on the stack, keep the current behavior of not setting\nRF=1 for #DBs.  Intel and AMD explicitly state RF isn't set on code #DBs,\nso exempting by failing the \"== EXCPT_FAULT\" check is correct.  The only\nother fault-like #DB is General Detect, and despite Intel and AMD both\nstrongly implying (through omission) that General Detect #DBs should set\nRF=1, hardware (multiple generations of both Intel and AMD), in fact does\nnot.  Through insider knowledge, extreme foresight, sheer dumb luck, or\nsome combination thereof, KVM correctly handled RF for General Detect #DBs.\n\nFixes: 38827dbd3fb8 (\"KVM: x86: Do not update EFLAGS on faulting emulation\")\nCc: stable@vger.kernel.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nReviewed-by: Maxim Levitsky <mlevitsk@redhat.com>\nLink: https://lore.kernel.org/r/20220830231614.3580124-9-seanjc@google.com\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Tue Aug 30 23:15:55 2022 +0000",
  "author_date_iso": "2022-08-30T23:15:55+00:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Mon Sep 26 12:03:06 2022 -0400",
  "committer_date_iso": "2022-09-26T12:03:06-04:00",
  "files_changed": [
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 25,
      "deletions": 2
    }
  ],
  "total_insertions": 25,
  "total_deletions": 2,
  "total_changes": 27,
  "parents": [
    "b9d44f9091ac6c325fc2f7b7671b462fb36abbed"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}