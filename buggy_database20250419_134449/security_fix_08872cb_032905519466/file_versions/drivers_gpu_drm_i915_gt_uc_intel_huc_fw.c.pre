commit 98d2722a85c4ad5f2baf2272cbb0fab67f797b69
Author: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
Date:   Wed May 31 16:54:12 2023 -0700

    drm/i915/huc: differentiate the 2 steps of the MTL HuC auth flow
    
    Before we add the second step of the MTL HuC auth (via GSC), we need to
    have the ability to differentiate between them. To do so, the huc
    authentication check is duplicated for GuC and GSC auth, with
    GSC-enabled binaries being considered fully authenticated only after
    the GSC auth step.
    
    To report the difference between the 2 auth steps, a new case is added
    to the HuC getparam. This way, the clear media driver can start
    submitting before full auth, as partial auth is enough for those
    workloads.
    
    v2: fix authentication status check for DG2
    
    v3: add a better comment at the top of the HuC file to explain the
        different approaches to load and auth (John)
    
    v4: update call to intel_huc_is_authenticated in the pxp code to check
    for GSC authentication
    
    v5: drop references to meu and esclamation mark in huc_auth print (John)
    
    Signed-off-by: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
    Cc: Alan Previn <alan.previn.teres.alexis@intel.com>
    Cc: John Harrison <John.C.Harrison@Intel.com>
    Reviewed-by: Alan Previn <alan.previn.teres.alexis@intel.com> #v2
    Reviewed-by: John Harrison <John.C.Harrison@Intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230531235415.1467475-5-daniele.ceraolospurio@intel.com

diff --git a/drivers/gpu/drm/i915/gt/uc/intel_huc_fw.c b/drivers/gpu/drm/i915/gt/uc/intel_huc_fw.c
index 89a887d33b77..ac2ae5f5011e 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_huc_fw.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_huc_fw.c
@@ -161,7 +161,7 @@ int intel_huc_fw_load_and_auth_via_gsc(struct intel_huc *huc)
 	 * component gets re-bound and this function called again. If so, just
 	 * mark the HuC as loaded.
 	 */
-	if (intel_huc_is_authenticated(huc)) {
+	if (intel_huc_is_authenticated(huc, INTEL_HUC_AUTH_BY_GSC)) {
 		intel_uc_fw_change_status(&huc->fw, INTEL_UC_FIRMWARE_RUNNING);
 		return 0;
 	}
@@ -174,7 +174,7 @@ int intel_huc_fw_load_and_auth_via_gsc(struct intel_huc *huc)
 
 	intel_uc_fw_change_status(&huc->fw, INTEL_UC_FIRMWARE_TRANSFERRED);
 
-	return intel_huc_wait_for_auth_complete(huc);
+	return intel_huc_wait_for_auth_complete(huc, INTEL_HUC_AUTH_BY_GSC);
 }
 
 /**