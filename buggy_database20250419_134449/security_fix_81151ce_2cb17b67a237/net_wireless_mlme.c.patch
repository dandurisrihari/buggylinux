commit 81151ce462e533551f3284bfdb8e0f461c9220e6
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Jun 1 21:17:34 2022 +0200

    wifi: mac80211: support MLO authentication/association with one link
    
    It might seem a bit pointless to do a multi-link operation
    connection with just a single link, but this is already a
    big change, so for now, limit MLO connections to a single
    link.
    
    Extending that to multiple links will require
     * work on parsing the multi-link element with STA profile
       properly, including element fragmentation;
     * checking the per-link status in the multi-link element
     * implementing logic to have active/inactive links to let
       drivers decide which links should be active;
     * implementing multicast RX deduplication;
     * and likely more.
    
    For now this is still useful since it lets us do multi-link
    connections for the purposes of testing APIs and the higher
    layers such as wpa_supplicant.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/net/wireless/mlme.c b/net/wireless/mlme.c
index 80f11a29cb86..defce1530115 100644
--- a/net/wireless/mlme.c
+++ b/net/wireless/mlme.c
@@ -50,6 +50,9 @@ void cfg80211_rx_assoc_resp(struct net_device *dev,
 		/* need to have local link addresses for MLO connections */
 		WARN_ON(cr.ap_mld_addr && !cr.links[link_id].addr);
 
+		printk(KERN_CRIT "BSS pointer 0x%lx\n", (unsigned long)cr.links[link_id].bss);
+		BUG_ON(!cr.links[link_id].bss->channel);
+
 		if (cr.links[link_id].bss->channel->band == NL80211_BAND_S1GHZ) {
 			WARN_ON(link_id);
 			cr.resp_ie = (u8 *)&mgmt->u.s1g_assoc_resp.variable;