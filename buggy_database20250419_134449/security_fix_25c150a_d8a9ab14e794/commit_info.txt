Commit Hash: 25c150ac103a4ebeed0319994c742a90634ddf18
Subject: bluetooth: Perform careful capability checks in hci_sock_ioctl()


Security Keywords:
- privilege escalation
- vulnerability

Full commit message:
bluetooth: Perform careful capability checks in hci_sock_ioctl()

Previously, capability was checked using capable(), which verified that the
caller of the ioctl system call had the required capability. In addition,
the result of the check would be stored in the HCI_SOCK_TRUSTED flag,
making it persistent for the socket.

However, malicious programs can abuse this approach by deliberately sharing
an HCI socket with a privileged task. The HCI socket will be marked as
trusted when the privileged task occasionally makes an ioctl call.

This problem can be solved by using sk_capable() to check capability, which
ensures that not only the current task but also the socket opener has the
specified capability, thus reducing the risk of privilege escalation
through the previously identified vulnerability.

Cc: stable@vger.kernel.org
Fixes: f81f5b2db869 ("Bluetooth: Send control open and close messages for HCI raw sockets")
Signed-off-by: Ruihan Li <lrh2000@pku.edu.cn>
Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>

Metadata:
Author: Ruihan Li <lrh2000@pku.edu.cn>
Author Date: Sun Apr 16 16:14:04 2023 +0800
Committer: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Commit Date: Sun Apr 23 22:05:39 2023 -0700

Files Changed: 1
Lines Added: 8
Lines Removed: 1
Total Changes: 9
