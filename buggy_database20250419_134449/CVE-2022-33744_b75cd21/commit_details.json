{
  "hash": "b75cd218274e01d026dc5240e86fdeb44bbed0c8",
  "hash_short": "b75cd218",
  "subject": "xen/arm: Fix race in RB-tree based P2M accounting",
  "body": "During the PV driver life cycle the mappings are added to\nthe RB-tree by set_foreign_p2m_mapping(), which is called from\ngnttab_map_refs() and are removed by clear_foreign_p2m_mapping()\nwhich is called from gnttab_unmap_refs(). As both functions end\nup calling __set_phys_to_machine_multi() which updates the RB-tree,\nthis function can be called concurrently.\n\nThere is already a \"p2m_lock\" to protect against concurrent accesses,\nbut the problem is that the first read of \"phys_to_mach.rb_node\"\nin __set_phys_to_machine_multi() is not covered by it, so this might\nlead to the incorrect mappings update (removing in our case) in RB-tree.\n\nIn my environment the related issue happens rarely and only when\nPV net backend is running, the xen_add_phys_to_mach_entry() claims\nthat it cannot add new pfn <-> mfn mapping to the tree since it is\nalready exists which results in a failure when mapping foreign pages.\n\nBut there might be other bad consequences related to the non-protected\nroot reads such use-after-free, etc.\n\nWhile at it, also fix the similar usage in __pfn_to_mfn(), so\ninitialize \"struct rb_node *n\" with the \"p2m_lock\" held in both\nfunctions to avoid possible bad consequences.\n\nThis is CVE-2022-33744 / XSA-406.\n\nSigned-off-by: Oleksandr Tyshchenko <oleksandr_tyshchenko@epam.com>\nReviewed-by: Stefano Stabellini <sstabellini@kernel.org>\nSigned-off-by: Juergen Gross <jgross@suse.com>",
  "full_message": "xen/arm: Fix race in RB-tree based P2M accounting\n\nDuring the PV driver life cycle the mappings are added to\nthe RB-tree by set_foreign_p2m_mapping(), which is called from\ngnttab_map_refs() and are removed by clear_foreign_p2m_mapping()\nwhich is called from gnttab_unmap_refs(). As both functions end\nup calling __set_phys_to_machine_multi() which updates the RB-tree,\nthis function can be called concurrently.\n\nThere is already a \"p2m_lock\" to protect against concurrent accesses,\nbut the problem is that the first read of \"phys_to_mach.rb_node\"\nin __set_phys_to_machine_multi() is not covered by it, so this might\nlead to the incorrect mappings update (removing in our case) in RB-tree.\n\nIn my environment the related issue happens rarely and only when\nPV net backend is running, the xen_add_phys_to_mach_entry() claims\nthat it cannot add new pfn <-> mfn mapping to the tree since it is\nalready exists which results in a failure when mapping foreign pages.\n\nBut there might be other bad consequences related to the non-protected\nroot reads such use-after-free, etc.\n\nWhile at it, also fix the similar usage in __pfn_to_mfn(), so\ninitialize \"struct rb_node *n\" with the \"p2m_lock\" held in both\nfunctions to avoid possible bad consequences.\n\nThis is CVE-2022-33744 / XSA-406.\n\nSigned-off-by: Oleksandr Tyshchenko <oleksandr_tyshchenko@epam.com>\nReviewed-by: Stefano Stabellini <sstabellini@kernel.org>\nSigned-off-by: Juergen Gross <jgross@suse.com>",
  "author_name": "Oleksandr Tyshchenko",
  "author_email": "oleksandr_tyshchenko@epam.com",
  "author_date": "Fri Jul 1 08:57:44 2022 +0200",
  "author_date_iso": "2022-07-01T08:57:44+02:00",
  "committer_name": "Juergen Gross",
  "committer_email": "jgross@suse.com",
  "committer_date": "Fri Jul 1 10:02:03 2022 +0200",
  "committer_date_iso": "2022-07-01T10:02:03+02:00",
  "files_changed": [
    "arch/arm/xen/p2m.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/arm/xen/p2m.c",
      "insertions": 4,
      "deletions": 2
    }
  ],
  "total_insertions": 4,
  "total_deletions": 2,
  "total_changes": 6,
  "parents": [
    "f63c2c2032c2e3caad9add3b82cc6e91c376fd26"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2022-33744"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/arm/xen/p2m.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}