commit 045da3077bc57e587d0ab4cfc8945b76af03d72d
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Sat Nov 18 21:44:43 2023 +0900

    scsi: ufs: core: Make fault injection dynamically configurable per HBA
    
    The UFS driver has two driver-specific fault injection mechanisms
    (trigger_eh and timeout). Each fault injection configuration can only be
    specified by a module parameter and cannot be reconfigured without
    reloading the driver. Also, each configuration is common to all HBAs.
    
    This change adds the following subdirectories for each UFS HBA when
    debugfs is enabled:
    
      /sys/kernel/debug/ufshcd/<HBA>/timeout_inject
      /sys/kernel/debug/ufshcd/<HBA>/trigger_eh_inject
    
    Each fault injection attribute can be dynamically set per HBA by a
    corresponding file in these directories.
    
    This is tested with QEMU UFS devices.
    
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Link: https://lore.kernel.org/r/20231118124443.1007116-1-akinobu.mita@gmail.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

diff --git a/drivers/ufs/core/ufshcd.c b/drivers/ufs/core/ufshcd.c
index 8b1031fb0a44..63f0ee117399 100644
--- a/drivers/ufs/core/ufshcd.c
+++ b/drivers/ufs/core/ufshcd.c
@@ -2992,7 +2992,7 @@ static int ufshcd_queuecommand(struct Scsi_Host *host, struct scsi_cmnd *cmd)
 	ufshcd_send_command(hba, tag, hwq);
 
 out:
-	if (ufs_trigger_eh()) {
+	if (ufs_trigger_eh(hba)) {
 		unsigned long flags;
 
 		spin_lock_irqsave(hba->host->host_lock, flags);
@@ -5649,7 +5649,7 @@ static irqreturn_t ufshcd_transfer_req_compl(struct ufs_hba *hba)
 	    !(hba->quirks & UFSHCI_QUIRK_SKIP_RESET_INTR_AGGR))
 		ufshcd_reset_intr_aggr(hba);
 
-	if (ufs_fail_completion())
+	if (ufs_fail_completion(hba))
 		return IRQ_HANDLED;
 
 	/*
@@ -9348,6 +9348,7 @@ static int ufshcd_hba_init(struct ufs_hba *hba)
 		goto out_disable_vreg;
 
 	ufs_debugfs_hba_init(hba);
+	ufs_fault_inject_hba_init(hba);
 
 	hba->is_powered = true;
 	goto out;