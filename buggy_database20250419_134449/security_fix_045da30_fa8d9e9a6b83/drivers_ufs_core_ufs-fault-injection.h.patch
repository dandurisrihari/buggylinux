commit 045da3077bc57e587d0ab4cfc8945b76af03d72d
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Sat Nov 18 21:44:43 2023 +0900

    scsi: ufs: core: Make fault injection dynamically configurable per HBA
    
    The UFS driver has two driver-specific fault injection mechanisms
    (trigger_eh and timeout). Each fault injection configuration can only be
    specified by a module parameter and cannot be reconfigured without
    reloading the driver. Also, each configuration is common to all HBAs.
    
    This change adds the following subdirectories for each UFS HBA when
    debugfs is enabled:
    
      /sys/kernel/debug/ufshcd/<HBA>/timeout_inject
      /sys/kernel/debug/ufshcd/<HBA>/trigger_eh_inject
    
    Each fault injection attribute can be dynamically set per HBA by a
    corresponding file in these directories.
    
    This is tested with QEMU UFS devices.
    
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Link: https://lore.kernel.org/r/20231118124443.1007116-1-akinobu.mita@gmail.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

diff --git a/drivers/ufs/core/ufs-fault-injection.h b/drivers/ufs/core/ufs-fault-injection.h
index 6d0cd8e10c87..996a35769781 100644
--- a/drivers/ufs/core/ufs-fault-injection.h
+++ b/drivers/ufs/core/ufs-fault-injection.h
@@ -7,15 +7,20 @@
 #include <linux/types.h>
 
 #ifdef CONFIG_SCSI_UFS_FAULT_INJECTION
-bool ufs_trigger_eh(void);
-bool ufs_fail_completion(void);
+void ufs_fault_inject_hba_init(struct ufs_hba *hba);
+bool ufs_trigger_eh(struct ufs_hba *hba);
+bool ufs_fail_completion(struct ufs_hba *hba);
 #else
-static inline bool ufs_trigger_eh(void)
+static inline void ufs_fault_inject_hba_init(struct ufs_hba *hba)
+{
+}
+
+static inline bool ufs_trigger_eh(struct ufs_hba *hba)
 {
 	return false;
 }
 
-static inline bool ufs_fail_completion(void)
+static inline bool ufs_fail_completion(struct ufs_hba *hba)
 {
 	return false;
 }