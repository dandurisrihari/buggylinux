{
  "hash": "4e1c80ae5cf458792bec9815ee77bc3851046fb8",
  "hash_short": "4e1c80ae",
  "subject": "Merge tag 'nfsd-6.4' of git://git.kernel.org/pub/scm/linux/kernel/git/cel/linux",
  "body": "Pull nfsd updates from Chuck Lever:\n \"The big ticket item for this release is that support for RPC-with-TLS\n  [RFC 9289] has been added to the Linux NFS server.\n\n  The goal is to provide a simple-to-deploy, low-overhead in-transit\n  confidentiality and peer authentication mechanism. It can supplement\n  NFS Kerberos and it can protect the use of legacy non-cryptographic\n  user authentication flavors such as AUTH_SYS. The TLS Record protocol\n  is handled entirely by kTLS, meaning it can use either software\n  encryption or offload encryption to smart NICs.\n\n  Aside from that, work continues on improving NFSD's open file cache.\n  Among the many clean-ups in that area is a patch to convert the\n  rhashtable to use the list-hashing version of that data structure\"\n\n* tag 'nfsd-6.4' of git://git.kernel.org/pub/scm/linux/kernel/git/cel/linux: (31 commits)\n  NFSD: Handle new xprtsec= export option\n  SUNRPC: Support TLS handshake in the server-side TCP socket code\n  NFSD: Clean up xattr memory allocation flags\n  NFSD: Fix problem of COMMIT and NFS4ERR_DELAY in infinite loop\n  SUNRPC: Clear rq_xid when receiving a new RPC Call\n  SUNRPC: Recognize control messages in server-side TCP socket code\n  SUNRPC: Be even lazier about releasing pages\n  SUNRPC: Convert svc_xprt_release() to the release_pages() API\n  SUNRPC: Relocate svc_free_res_pages()\n  nfsd: simplify the delayed disposal list code\n  SUNRPC: Ignore return value of ->xpo_sendto\n  SUNRPC: Ensure server-side sockets have a sock->file\n  NFSD: Watch for rq_pages bounds checking errors in nfsd_splice_actor()\n  sunrpc: simplify two-level sysctl registration for svcrdma_parm_table\n  SUNRPC: return proper error from get_expiry()\n  lockd: add some client-side tracepoints\n  nfs: move nfs_fhandle_hash to common include file\n  lockd: server should unlock lock if client rejects the grant\n  lockd: fix races in client GRANTED_MSG wait logic\n  lockd: move struct nlm_wait to lockd.h\n  ...",
  "full_message": "Merge tag 'nfsd-6.4' of git://git.kernel.org/pub/scm/linux/kernel/git/cel/linux\n\nPull nfsd updates from Chuck Lever:\n \"The big ticket item for this release is that support for RPC-with-TLS\n  [RFC 9289] has been added to the Linux NFS server.\n\n  The goal is to provide a simple-to-deploy, low-overhead in-transit\n  confidentiality and peer authentication mechanism. It can supplement\n  NFS Kerberos and it can protect the use of legacy non-cryptographic\n  user authentication flavors such as AUTH_SYS. The TLS Record protocol\n  is handled entirely by kTLS, meaning it can use either software\n  encryption or offload encryption to smart NICs.\n\n  Aside from that, work continues on improving NFSD's open file cache.\n  Among the many clean-ups in that area is a patch to convert the\n  rhashtable to use the list-hashing version of that data structure\"\n\n* tag 'nfsd-6.4' of git://git.kernel.org/pub/scm/linux/kernel/git/cel/linux: (31 commits)\n  NFSD: Handle new xprtsec= export option\n  SUNRPC: Support TLS handshake in the server-side TCP socket code\n  NFSD: Clean up xattr memory allocation flags\n  NFSD: Fix problem of COMMIT and NFS4ERR_DELAY in infinite loop\n  SUNRPC: Clear rq_xid when receiving a new RPC Call\n  SUNRPC: Recognize control messages in server-side TCP socket code\n  SUNRPC: Be even lazier about releasing pages\n  SUNRPC: Convert svc_xprt_release() to the release_pages() API\n  SUNRPC: Relocate svc_free_res_pages()\n  nfsd: simplify the delayed disposal list code\n  SUNRPC: Ignore return value of ->xpo_sendto\n  SUNRPC: Ensure server-side sockets have a sock->file\n  NFSD: Watch for rq_pages bounds checking errors in nfsd_splice_actor()\n  sunrpc: simplify two-level sysctl registration for svcrdma_parm_table\n  SUNRPC: return proper error from get_expiry()\n  lockd: add some client-side tracepoints\n  nfs: move nfs_fhandle_hash to common include file\n  lockd: server should unlock lock if client rejects the grant\n  lockd: fix races in client GRANTED_MSG wait logic\n  lockd: move struct nlm_wait to lockd.h\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Sat Apr 29 11:04:14 2023 -0700",
  "author_date_iso": "2023-04-29T11:04:14-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Sat Apr 29 11:04:14 2023 -0700",
  "committer_date_iso": "2023-04-29T11:04:14-07:00",
  "files_changed": [
    "fs/nfs/internal.h"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/lockd/Makefile",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "fs/lockd/clntlock.c",
      "insertions": 25,
      "deletions": 33
    },
    {
      "file": "fs/lockd/clntproc.c",
      "insertions": 32,
      "deletions": 10
    },
    {
      "file": "fs/lockd/host.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/lockd/svclock.c",
      "insertions": 17,
      "deletions": 4
    },
    {
      "file": "fs/lockd/trace.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/lockd/trace.h",
      "insertions": 106,
      "deletions": 0
    },
    {
      "file": "fs/nfs/export.c",
      "insertions": 6,
      "deletions": 3
    },
    {
      "file": "fs/nfs/internal.h",
      "insertions": 0,
      "deletions": 15
    },
    {
      "file": "fs/nfsd/export.c",
      "insertions": 54,
      "deletions": 10
    },
    {
      "file": "fs/nfsd/export.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/filecache.c",
      "insertions": 185,
      "deletions": 245
    },
    {
      "file": "fs/nfsd/filecache.h",
      "insertions": 5,
      "deletions": 4
    },
    {
      "file": "fs/nfsd/nfs4idmap.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "fs/nfsd/vfs.c",
      "insertions": 7,
      "deletions": 6
    },
    {
      "file": "include/linux/exportfs.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/lockd/lockd.h",
      "insertions": 15,
      "deletions": 14
    },
    {
      "file": "include/linux/nfs.h",
      "insertions": 20,
      "deletions": 0
    },
    {
      "file": "include/linux/sunrpc/cache.h",
      "insertions": 8,
      "deletions": 7
    },
    {
      "file": "include/linux/sunrpc/svc.h",
      "insertions": 3,
      "deletions": 13
    },
    {
      "file": "include/linux/sunrpc/svc_xprt.h",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "include/linux/sunrpc/svcsock.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "include/net/tls.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "include/trace/events/sunrpc.h",
      "insertions": 40,
      "deletions": 1
    },
    {
      "file": "include/uapi/linux/nfsd/export.h",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "net/sunrpc/auth_gss/svcauth_gss.c",
      "insertions": 6,
      "deletions": 6
    },
    {
      "file": "net/sunrpc/svc.c",
      "insertions": 42,
      "deletions": 7
    },
    {
      "file": "net/sunrpc/svc_xprt.c",
      "insertions": 16,
      "deletions": 17
    },
    {
      "file": "net/sunrpc/svcauth_unix.c",
      "insertions": 15,
      "deletions": 8
    },
    {
      "file": "net/sunrpc/svcsock.c",
      "insertions": 162,
      "deletions": 12
    },
    {
      "file": "net/sunrpc/xprtrdma/svc_rdma.c",
      "insertions": 2,
      "deletions": 19
    }
  ],
  "total_insertions": 802,
  "total_deletions": 442,
  "total_changes": 1244,
  "parents": [
    "0127f25b5dfcc3d0349eb29d692178183e101652",
    "9280c577431401544e63dfb489a830a42bee25eb"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/nfs/internal.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}