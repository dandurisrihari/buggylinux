{
  "hash": "5cec93c216db77c45f7ce970d46283bcb1933884",
  "hash_short": "5cec93c2",
  "subject": "x86-64: Emulate legacy vsyscalls",
  "body": "There's a fair amount of code in the vsyscall page.  It contains\na syscall instruction (in the gettimeofday fallback) and who\nknows what will happen if an exploit jumps into the middle of\nsome other code.\n\nReduce the risk by replacing the vsyscalls with short magic\nincantations that cause the kernel to emulate the real\nvsyscalls. These incantations are useless if entered in the\nmiddle.\n\nThis causes vsyscalls to be a little more expensive than real\nsyscalls.  Fortunately sensible programs don't use them.\nThe only exception is time() which is still called by glibc\nthrough the vsyscall - but calling time() millions of times\nper second is not sensible. glibc has this fixed in the\ndevelopment tree.\n\nThis patch is not perfect: the vread_tsc and vread_hpet\nfunctions are still at a fixed address.  Fixing that might\ninvolve making alternative patching work in the vDSO.\n\nSigned-off-by: Andy Lutomirski <luto@mit.edu>\nAcked-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Jesper Juhl <jj@chaosbits.net>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Arjan van de Ven <arjan@infradead.org>\nCc: Jan Beulich <JBeulich@novell.com>\nCc: richard -rw- weinberger <richard.weinberger@gmail.com>\nCc: Mikael Pettersson <mikpe@it.uu.se>\nCc: Andi Kleen <andi@firstfloor.org>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Louis Rilling <Louis.Rilling@kerlabs.com>\nCc: Valdis.Kletnieks@vt.edu\nCc: pageexec@freemail.hu\nLink: http://lkml.kernel.org/r/e64e1b3c64858820d12c48fa739efbd1485e79d5.1307292171.git.luto@mit.edu\n[ Removed the CONFIG option - it's simpler to just do it unconditionally. Tidied up the code as well. ]\nSigned-off-by: Ingo Molnar <mingo@elte.hu>",
  "full_message": "x86-64: Emulate legacy vsyscalls\n\nThere's a fair amount of code in the vsyscall page.  It contains\na syscall instruction (in the gettimeofday fallback) and who\nknows what will happen if an exploit jumps into the middle of\nsome other code.\n\nReduce the risk by replacing the vsyscalls with short magic\nincantations that cause the kernel to emulate the real\nvsyscalls. These incantations are useless if entered in the\nmiddle.\n\nThis causes vsyscalls to be a little more expensive than real\nsyscalls.  Fortunately sensible programs don't use them.\nThe only exception is time() which is still called by glibc\nthrough the vsyscall - but calling time() millions of times\nper second is not sensible. glibc has this fixed in the\ndevelopment tree.\n\nThis patch is not perfect: the vread_tsc and vread_hpet\nfunctions are still at a fixed address.  Fixing that might\ninvolve making alternative patching work in the vDSO.\n\nSigned-off-by: Andy Lutomirski <luto@mit.edu>\nAcked-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Jesper Juhl <jj@chaosbits.net>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Arjan van de Ven <arjan@infradead.org>\nCc: Jan Beulich <JBeulich@novell.com>\nCc: richard -rw- weinberger <richard.weinberger@gmail.com>\nCc: Mikael Pettersson <mikpe@it.uu.se>\nCc: Andi Kleen <andi@firstfloor.org>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Louis Rilling <Louis.Rilling@kerlabs.com>\nCc: Valdis.Kletnieks@vt.edu\nCc: pageexec@freemail.hu\nLink: http://lkml.kernel.org/r/e64e1b3c64858820d12c48fa739efbd1485e79d5.1307292171.git.luto@mit.edu\n[ Removed the CONFIG option - it's simpler to just do it unconditionally. Tidied up the code as well. ]\nSigned-off-by: Ingo Molnar <mingo@elte.hu>",
  "author_name": "Andy Lutomirski",
  "author_email": "luto@MIT.EDU",
  "author_date": "Sun Jun 5 13:50:24 2011 -0400",
  "author_date_iso": "2011-06-05T13:50:24-04:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@elte.hu",
  "committer_date": "Tue Jun 7 10:02:35 2011 +0200",
  "committer_date_iso": "2011-06-07T10:02:35+02:00",
  "files_changed": [
    "arch/x86/include/asm/irq_vectors.h",
    "arch/x86/include/asm/traps.h",
    "arch/x86/include/asm/vsyscall.h",
    "arch/x86/kernel/Makefile",
    "arch/x86/kernel/entry_64.S",
    "arch/x86/kernel/traps.c",
    "arch/x86/kernel/vsyscall_64.c",
    "arch/x86/kernel/vsyscall_emu_64.S",
    "include/linux/seccomp.h"
  ],
  "files_changed_count": 9,
  "stats": [
    {
      "file": "arch/x86/include/asm/irq_vectors.h",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "arch/x86/include/asm/traps.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/vsyscall.h",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/entry_64.S",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/traps.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/vsyscall_64.c",
      "insertions": 122,
      "deletions": 139
    },
    {
      "file": "arch/x86/kernel/vsyscall_emu_64.S",
      "insertions": 27,
      "deletions": 0
    },
    {
      "file": "include/linux/seccomp.h",
      "insertions": 10,
      "deletions": 0
    }
  ],
  "total_insertions": 189,
  "total_deletions": 140,
  "total_changes": 329,
  "parents": [
    "5dfcea629a08b4684a019cd0cb59d0c9129a6c02"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.1",
    "v3.1-rc1",
    "v3.1-rc10",
    "v3.1-rc2",
    "v3.1-rc3",
    "v3.1-rc4",
    "v3.1-rc5",
    "v3.1-rc6",
    "v3.1-rc7",
    "v3.1-rc8"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/vsyscall.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/irq_vectors.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/traps.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/entry_64.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/vsyscall_emu_64.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/traps.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/vsyscall_64.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/seccomp.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}