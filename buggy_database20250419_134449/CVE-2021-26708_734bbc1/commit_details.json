{
  "hash": "734bbc1c97ea7e46e0e53b087de16c87c03bd65f",
  "hash_short": "734bbc1c",
  "subject": "ipc, msg: Use dedicated slab buckets for alloc_msg()",
  "body": "The msg subsystem is a common target for exploiting[1][2][3][4][5][6][7]\nuse-after-free type confusion flaws in the kernel for both read and write\nprimitives. Avoid having a user-controlled dynamically-size allocation\nshare the global kmalloc cache by using a separate set of kmalloc buckets\nvia the kmem_buckets API.\n\nLink: https://blog.hacktivesecurity.com/index.php/2022/06/13/linux-kernel-exploit-development-1day-case-study/ [1]\nLink: https://hardenedvault.net/blog/2022-11-13-msg_msg-recon-mitigation-ved/ [2]\nLink: https://www.willsroot.io/2021/08/corctf-2021-fire-of-salvation-writeup.html [3]\nLink: https://a13xp0p0v.github.io/2021/02/09/CVE-2021-26708.html [4]\nLink: https://google.github.io/security-research/pocs/linux/cve-2021-22555/writeup.html [5]\nLink: https://zplin.me/papers/ELOISE.pdf [6]\nLink: https://syst3mfailure.io/wall-of-perdition/ [7]\nSigned-off-by: Kees Cook <kees@kernel.org>\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>",
  "full_message": "ipc, msg: Use dedicated slab buckets for alloc_msg()\n\nThe msg subsystem is a common target for exploiting[1][2][3][4][5][6][7]\nuse-after-free type confusion flaws in the kernel for both read and write\nprimitives. Avoid having a user-controlled dynamically-size allocation\nshare the global kmalloc cache by using a separate set of kmalloc buckets\nvia the kmem_buckets API.\n\nLink: https://blog.hacktivesecurity.com/index.php/2022/06/13/linux-kernel-exploit-development-1day-case-study/ [1]\nLink: https://hardenedvault.net/blog/2022-11-13-msg_msg-recon-mitigation-ved/ [2]\nLink: https://www.willsroot.io/2021/08/corctf-2021-fire-of-salvation-writeup.html [3]\nLink: https://a13xp0p0v.github.io/2021/02/09/CVE-2021-26708.html [4]\nLink: https://google.github.io/security-research/pocs/linux/cve-2021-22555/writeup.html [5]\nLink: https://zplin.me/papers/ELOISE.pdf [6]\nLink: https://syst3mfailure.io/wall-of-perdition/ [7]\nSigned-off-by: Kees Cook <kees@kernel.org>\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>",
  "author_name": "Kees Cook",
  "author_email": "kees@kernel.org",
  "author_date": "Mon Jul 1 12:13:02 2024 -0700",
  "author_date_iso": "2024-07-01T12:13:02-07:00",
  "committer_name": "Vlastimil Babka",
  "committer_email": "vbabka@suse.cz",
  "committer_date": "Wed Jul 3 12:24:20 2024 +0200",
  "committer_date_iso": "2024-07-03T12:24:20+02:00",
  "files_changed": [
    "ipc/msgutil.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "ipc/msgutil.c",
      "insertions": 12,
      "deletions": 1
    }
  ],
  "total_insertions": 12,
  "total_deletions": 1,
  "total_changes": 13,
  "parents": [
    "b32801d1255be1da62ea8134df3ed9f3331fba12"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2021-26708"
    ],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "ipc/msgutil.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}