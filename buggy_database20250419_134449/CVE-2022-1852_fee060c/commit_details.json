{
  "hash": "fee060cd52d69c114b62d1a2948ea9648b5131f9",
  "hash_short": "fee060cd",
  "subject": "KVM: x86: avoid calling x86 emulator without a decoded instruction",
  "body": "Whenever x86_decode_emulated_instruction() detects a breakpoint, it\nreturns the value that kvm_vcpu_check_breakpoint() writes into its\npass-by-reference second argument.  Unfortunately this is completely\nbogus because the expected outcome of x86_decode_emulated_instruction\nis an EMULATION_* value.\n\nThen, if kvm_vcpu_check_breakpoint() does \"*r = 0\" (corresponding to\na KVM_EXIT_DEBUG userspace exit), it is misunderstood as EMULATION_OK\nand x86_emulate_instruction() is called without having decoded the\ninstruction.  This causes various havoc from running with a stale\nemulation context.\n\nThe fix is to move the call to kvm_vcpu_check_breakpoint() where it was\nbefore commit 4aa2691dcbd3 (\"KVM: x86: Factor out x86 instruction\nemulation with decoding\") introduced x86_decode_emulated_instruction().\nThe other caller of the function does not need breakpoint checks,\nbecause it is invoked as part of a vmexit and the processor has already\nchecked those before executing the instruction that #GP'd.\n\nThis fixes CVE-2022-1852.\n\nReported-by: Qiuhao Li <qiuhao@sysec.org>\nReported-by: Gaoning Pan <pgn@zju.edu.cn>\nReported-by: Yongkang Jia <kangel@zju.edu.cn>\nFixes: 4aa2691dcbd3 (\"KVM: x86: Factor out x86 instruction emulation with decoding\")\nCc: stable@vger.kernel.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220311032801.3467418-2-seanjc@google.com>\n[Rewrote commit message according to Qiuhao's report, since a patch\n already existed to fix the bug. - Paolo]\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: x86: avoid calling x86 emulator without a decoded instruction\n\nWhenever x86_decode_emulated_instruction() detects a breakpoint, it\nreturns the value that kvm_vcpu_check_breakpoint() writes into its\npass-by-reference second argument.  Unfortunately this is completely\nbogus because the expected outcome of x86_decode_emulated_instruction\nis an EMULATION_* value.\n\nThen, if kvm_vcpu_check_breakpoint() does \"*r = 0\" (corresponding to\na KVM_EXIT_DEBUG userspace exit), it is misunderstood as EMULATION_OK\nand x86_emulate_instruction() is called without having decoded the\ninstruction.  This causes various havoc from running with a stale\nemulation context.\n\nThe fix is to move the call to kvm_vcpu_check_breakpoint() where it was\nbefore commit 4aa2691dcbd3 (\"KVM: x86: Factor out x86 instruction\nemulation with decoding\") introduced x86_decode_emulated_instruction().\nThe other caller of the function does not need breakpoint checks,\nbecause it is invoked as part of a vmexit and the processor has already\nchecked those before executing the instruction that #GP'd.\n\nThis fixes CVE-2022-1852.\n\nReported-by: Qiuhao Li <qiuhao@sysec.org>\nReported-by: Gaoning Pan <pgn@zju.edu.cn>\nReported-by: Yongkang Jia <kangel@zju.edu.cn>\nFixes: 4aa2691dcbd3 (\"KVM: x86: Factor out x86 instruction emulation with decoding\")\nCc: stable@vger.kernel.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220311032801.3467418-2-seanjc@google.com>\n[Rewrote commit message according to Qiuhao's report, since a patch\n already existed to fix the bug. - Paolo]\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Fri Mar 11 03:27:41 2022 +0000",
  "author_date_iso": "2022-03-11T03:27:41+00:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Wed May 25 05:12:05 2022 -0400",
  "committer_date_iso": "2022-05-25T05:12:05-04:00",
  "files_changed": [
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 19,
      "deletions": 12
    }
  ],
  "total_insertions": 19,
  "total_deletions": 12,
  "total_changes": 31,
  "parents": [
    "d22d2474e3953996f03528b84b7f52cc26a39403"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2022-1852"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}