{
  "hash": "428490e38b2e352812e0b765d8bceafab0ec441d",
  "hash_short": "428490e3",
  "subject": "security/keys: rewrite all of big_key crypto",
  "body": "This started out as just replacing the use of crypto/rng with\nget_random_bytes_wait, so that we wouldn't use bad randomness at boot\ntime. But, upon looking further, it appears that there were even deeper\nunderlying cryptographic problems, and that this seems to have been\ncommitted with very little crypto review. So, I rewrote the whole thing,\ntrying to keep to the conventions introduced by the previous author, to\nfix these cryptographic flaws.\n\nIt makes no sense to seed crypto/rng at boot time and then keep\nusing it like this, when in fact there's already get_random_bytes_wait,\nwhich can ensure there's enough entropy and be a much more standard way\nof generating keys. Since this sensitive material is being stored\nuntrusted, using ECB and no authentication is simply not okay at all. I\nfind it surprising and a bit horrifying that this code even made it past\nbasic crypto review, which perhaps points to some larger issues. This\npatch moves from using AES-ECB to using AES-GCM. Since keys are uniquely\ngenerated each time, we can set the nonce to zero. There was also a race\ncondition in which the same key would be reused at the same time in\ndifferent threads. A mutex fixes this issue now.\n\nSo, to summarize, this commit fixes the following vulnerabilities:\n\n  * Low entropy key generation, allowing an attacker to potentially\n    guess or predict keys.\n  * Unauthenticated encryption, allowing an attacker to modify the\n    cipher text in particular ways in order to manipulate the plaintext,\n    which is is even more frightening considering the next point.\n  * Use of ECB mode, allowing an attacker to trivially swap blocks or\n    compare identical plaintext blocks.\n  * Key re-use.\n  * Faulty memory zeroing.\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nReviewed-by: Eric Biggers <ebiggers3@gmail.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nCc: Herbert Xu <herbert@gondor.apana.org.au>\nCc: Kirill Marinushkin <k.marinushkin@gmail.com>\nCc: security@kernel.org\nCc: stable@vger.kernel.org",
  "full_message": "security/keys: rewrite all of big_key crypto\n\nThis started out as just replacing the use of crypto/rng with\nget_random_bytes_wait, so that we wouldn't use bad randomness at boot\ntime. But, upon looking further, it appears that there were even deeper\nunderlying cryptographic problems, and that this seems to have been\ncommitted with very little crypto review. So, I rewrote the whole thing,\ntrying to keep to the conventions introduced by the previous author, to\nfix these cryptographic flaws.\n\nIt makes no sense to seed crypto/rng at boot time and then keep\nusing it like this, when in fact there's already get_random_bytes_wait,\nwhich can ensure there's enough entropy and be a much more standard way\nof generating keys. Since this sensitive material is being stored\nuntrusted, using ECB and no authentication is simply not okay at all. I\nfind it surprising and a bit horrifying that this code even made it past\nbasic crypto review, which perhaps points to some larger issues. This\npatch moves from using AES-ECB to using AES-GCM. Since keys are uniquely\ngenerated each time, we can set the nonce to zero. There was also a race\ncondition in which the same key would be reused at the same time in\ndifferent threads. A mutex fixes this issue now.\n\nSo, to summarize, this commit fixes the following vulnerabilities:\n\n  * Low entropy key generation, allowing an attacker to potentially\n    guess or predict keys.\n  * Unauthenticated encryption, allowing an attacker to modify the\n    cipher text in particular ways in order to manipulate the plaintext,\n    which is is even more frightening considering the next point.\n  * Use of ECB mode, allowing an attacker to trivially swap blocks or\n    compare identical plaintext blocks.\n  * Key re-use.\n  * Faulty memory zeroing.\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nReviewed-by: Eric Biggers <ebiggers3@gmail.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nCc: Herbert Xu <herbert@gondor.apana.org.au>\nCc: Kirill Marinushkin <k.marinushkin@gmail.com>\nCc: security@kernel.org\nCc: stable@vger.kernel.org",
  "author_name": "Jason A. Donenfeld",
  "author_email": "Jason@zx2c4.com",
  "author_date": "Wed Sep 20 16:58:39 2017 +0200",
  "author_date_iso": "2017-09-20T16:58:39+02:00",
  "committer_name": "David Howells",
  "committer_email": "dhowells@redhat.com",
  "committer_date": "Mon Sep 25 23:31:58 2017 +0100",
  "committer_date_iso": "2017-09-25T23:31:58+01:00",
  "files_changed": [
    "security/keys/Kconfig",
    "security/keys/big_key.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "security/keys/Kconfig",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "security/keys/big_key.c",
      "insertions": 59,
      "deletions": 68
    }
  ],
  "total_insertions": 60,
  "total_deletions": 71,
  "total_changes": 131,
  "parents": [
    "910801809b2e40a4baedd080ef5d80b4a180e70e"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.14",
    "v4.14-rc3",
    "v4.14-rc4",
    "v4.14-rc5",
    "v4.14-rc6",
    "v4.14-rc7",
    "v4.14-rc8",
    "v4.15",
    "v4.15-rc1",
    "v4.15-rc2"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "security/keys/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/keys/big_key.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}