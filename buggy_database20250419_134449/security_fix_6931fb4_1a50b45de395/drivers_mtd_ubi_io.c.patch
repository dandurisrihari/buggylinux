commit 6931fb44858c3b9da9f35fdc8d9cbeef0b4b50a3
Author: ZhaoLong Wang <wangzhaolong1@huawei.com>
Date:   Tue Dec 26 09:01:09 2023 +0800

    ubi: Use the fault injection framework to enhance the fault injection capability
    
    To make debug parameters configurable at run time, use the
    fault injection framework to reconstruct the debugfs interface,
    and retain the legacy fault injection interface.
    
    Now, the file emulate_failures and fault_attr files control whether
    to enable fault emmulation.
    
    The file emulate_failures receives a mask that controls type and
    process of fault injection. Generally, for ease of use, you can
    directly enter a mask with all 1s.
    
    echo 0xffff > /sys/kernel/debug/ubi/ubi0/emulate_failures
    
    And you need to configure other fault-injection capabilities for
    testing purpose:
    
    echo 100 > /sys/kernel/debug/ubi/fault_inject/emulate_power_cut/probability
    echo 15 > /sys/kernel/debug/ubi/fault_inject/emulate_power_cut/space
    echo 2 > /sys/kernel/debug/ubi/fault_inject/emulate_power_cut/verbose
    echo -1 > /sys/kernel/debug/ubi/fault_inject/emulate_power_cut/times
    
    The CONFIG_MTD_UBI_FAULT_INJECTION to enable the Fault Injection is
    added to kconfig.
    
    Signed-off-by: ZhaoLong Wang <wangzhaolong1@huawei.com>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>

diff --git a/drivers/mtd/ubi/io.c b/drivers/mtd/ubi/io.c
index 01b644861253..fb70f5227f18 100644
--- a/drivers/mtd/ubi/io.c
+++ b/drivers/mtd/ubi/io.c
@@ -821,8 +821,11 @@ int ubi_io_write_ec_hdr(struct ubi_device *ubi, int pnum,
 	if (err)
 		return err;
 
-	if (ubi_dbg_power_cut(ubi, POWER_CUT_EC_WRITE))
+	if (ubi_dbg_is_power_cut(ubi, MASK_POWER_CUT_EC)) {
+		ubi_warn(ubi, "emulating a power cut when writing EC header");
+		ubi_ro_mode(ubi);
 		return -EROFS;
+	}
 
 	err = ubi_io_write(ubi, ec_hdr, pnum, 0, ubi->ec_hdr_alsize);
 	return err;
@@ -1071,8 +1074,11 @@ int ubi_io_write_vid_hdr(struct ubi_device *ubi, int pnum,
 	if (err)
 		return err;
 
-	if (ubi_dbg_power_cut(ubi, POWER_CUT_VID_WRITE))
+	if (ubi_dbg_is_power_cut(ubi, MASK_POWER_CUT_VID)) {
+		ubi_warn(ubi, "emulating a power cut when writing VID header");
+		ubi_ro_mode(ubi);
 		return -EROFS;
+	}
 
 	err = ubi_io_write(ubi, p, pnum, ubi->vid_hdr_aloffset,
 			   ubi->vid_hdr_alsize);