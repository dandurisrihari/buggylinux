{
  "hash": "31d3d3484f9bd263925ecaa341500ac2df3a5d9b",
  "hash_short": "31d3d348",
  "subject": "HWPOISON: limit hwpoison injector to known page types",
  "body": "__memory_failure()'s workflow is\n\n\tset PG_hwpoison\n\t//...\n\tunset PG_hwpoison if didn't pass hwpoison filter\n\nThat could kill unrelated process if it happens to page fault on the\npage with the (temporary) PG_hwpoison. The race should be big enough to\nappear in stress tests.\n\nFix it by grabbing the page and checking filter at inject time.  This\nalso avoids the very noisy \"Injecting memory failure...\" messages.\n\n- we don't touch madvise() based injection, because the filters are\n  generally not necessary for it.\n- if we want to apply the filters to h/w aided injection, we'd better to\n  rearrange the logic in __memory_failure() instead of this patch.\n\nAK: fix documentation, use drain all, cleanups\n\nCC: Haicheng Li <haicheng.li@intel.com>\nSigned-off-by: Wu Fengguang <fengguang.wu@intel.com>\nSigned-off-by: Andi Kleen <ak@linux.intel.com>",
  "full_message": "HWPOISON: limit hwpoison injector to known page types\n\n__memory_failure()'s workflow is\n\n\tset PG_hwpoison\n\t//...\n\tunset PG_hwpoison if didn't pass hwpoison filter\n\nThat could kill unrelated process if it happens to page fault on the\npage with the (temporary) PG_hwpoison. The race should be big enough to\nappear in stress tests.\n\nFix it by grabbing the page and checking filter at inject time.  This\nalso avoids the very noisy \"Injecting memory failure...\" messages.\n\n- we don't touch madvise() based injection, because the filters are\n  generally not necessary for it.\n- if we want to apply the filters to h/w aided injection, we'd better to\n  rearrange the logic in __memory_failure() instead of this patch.\n\nAK: fix documentation, use drain all, cleanups\n\nCC: Haicheng Li <haicheng.li@intel.com>\nSigned-off-by: Wu Fengguang <fengguang.wu@intel.com>\nSigned-off-by: Andi Kleen <ak@linux.intel.com>",
  "author_name": "Wu Fengguang",
  "author_email": "fengguang.wu@intel.com",
  "author_date": "Wed Dec 16 12:19:59 2009 +0100",
  "author_date_iso": "2009-12-16T12:19:59+01:00",
  "committer_name": "Andi Kleen",
  "committer_email": "ak@linux.intel.com",
  "committer_date": "Wed Dec 16 12:19:59 2009 +0100",
  "committer_date_iso": "2009-12-16T12:19:59+01:00",
  "files_changed": [
    "Documentation/vm/hwpoison.txt",
    "mm/hwpoison-inject.c",
    "mm/internal.h"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "Documentation/vm/hwpoison.txt",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "mm/hwpoison-inject.c",
      "insertions": 39,
      "deletions": 2
    },
    {
      "file": "mm/internal.h",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 43,
  "total_deletions": 3,
  "total_changes": 46,
  "parents": [
    "7c116f2b0dbac4a1dd051c7a5e8cef37701cafd4"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.33",
    "v2.6.33-rc1",
    "v2.6.33-rc2",
    "v2.6.33-rc3",
    "v2.6.33-rc4",
    "v2.6.33-rc5",
    "v2.6.33-rc6",
    "v2.6.33-rc7",
    "v2.6.33-rc8",
    "v2.6.34"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/vm/hwpoison.txt",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/hwpoison-inject.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/internal.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}