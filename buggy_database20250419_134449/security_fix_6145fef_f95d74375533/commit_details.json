{
  "hash": "6145fefc1e42c1895c0c1c2c8593de2c085d8c56",
  "hash_short": "6145fefc",
  "subject": "Merge branch 'cn10k-ipswec-outbound-inline-support'",
  "body": "Bharat Bhushan says:\n\n====================\ncn10k-ipsec: Add outbound inline ipsec support\n\nThis patch series adds outbound inline ipsec support on Marvell\ncn10k series of platform. One crypto hardware logical function\n(cpt-lf) per netdev is required for inline ipsec outbound\nfunctionality. Software prepare and submit crypto hardware\n(CPT) instruction for outbound inline ipsec crypto mode offload.\nThe CPT instruction have details for encryption and authentication\nCrypto hardware encrypt, authenticate and provide the ESP packet\nto network hardware logic to transmit ipsec packet.\n\nFirst patch makes dma memory writable for in-place encryption,\nSecond patch moves code to common file, Third patch disable\nbackpressure on crypto (CPT) and network (NIX) hardware.\nPatch four onwards enables inline outbound ipsec.\n\nv9->v10:\n - Removed unlikely() in data-patch and used static_branch when at least\n   a SA is configured.\n - Added missing READ_ONCE() as per comment on previous patch\n - Removed \"\\n\" from end of extack messages\n - Poll for context write status check reduced to 100ms from 10s\n\nv8->v9:\n - Removed mutex lock to use hardware, now using hardware state\n - Previous versions were supporting only 64 SAs and a bitmap was\n   used for same. That limitation is removed from this version.\n - Replaced netdev_err with NL_SET_ERR_MSG_MOD in state add flow\n   as per comment in previous version\n\nv7->v8:\n - spell correction in patch 1/8 (s/sdk/skb)\n\nv6->v7:\n - skb data was mapped as device writeable but it was not ensured\n   that skb is writeable. This version calls skb_unshare() to make\n   skb data writeable (Thanks Jakub Kicinski for pointing out).\n\nv4->v5:\n - Fixed un-initialized warning and pointer check\n   (comment from Kalesh Anakkur Purayil)\n\nv3->v4:\n - Few error messages in data-path removed and some moved\n   under netif_msg_tx_err().\n - Added check for crypto offload (XFRM_DEV_OFFLOAD_CRYPTO)\n   Thanks \"Leon Romanovsky\" for pointing out\n - Fixed codespell error as per comment from Simon Horman\n - Added some other cleanup comment from Kalesh Anakkur Purayil\n\nv2->v3:\n - Fix smatch and sparse errors (Comment from Simon Horman)\n - Fix build error with W=1 (Comment from Simon Horman)\n   https://patchwork.kernel.org/project/netdevbpf/patch/20240513105446.297451-6-bbhushan2@marvell.com/\n - Some other minor cleanup as per comment\n   https://www.spinics.net/lists/netdev/msg997197.html\n\nv1->v2:\n - Fix compilation error to build driver a module\n - Use dma_wmb() instead of architecture specific barrier\n - Fix couple of other compilation warnings\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "Merge branch 'cn10k-ipswec-outbound-inline-support'\n\nBharat Bhushan says:\n\n====================\ncn10k-ipsec: Add outbound inline ipsec support\n\nThis patch series adds outbound inline ipsec support on Marvell\ncn10k series of platform. One crypto hardware logical function\n(cpt-lf) per netdev is required for inline ipsec outbound\nfunctionality. Software prepare and submit crypto hardware\n(CPT) instruction for outbound inline ipsec crypto mode offload.\nThe CPT instruction have details for encryption and authentication\nCrypto hardware encrypt, authenticate and provide the ESP packet\nto network hardware logic to transmit ipsec packet.\n\nFirst patch makes dma memory writable for in-place encryption,\nSecond patch moves code to common file, Third patch disable\nbackpressure on crypto (CPT) and network (NIX) hardware.\nPatch four onwards enables inline outbound ipsec.\n\nv9->v10:\n - Removed unlikely() in data-patch and used static_branch when at least\n   a SA is configured.\n - Added missing READ_ONCE() as per comment on previous patch\n - Removed \"\\n\" from end of extack messages\n - Poll for context write status check reduced to 100ms from 10s\n\nv8->v9:\n - Removed mutex lock to use hardware, now using hardware state\n - Previous versions were supporting only 64 SAs and a bitmap was\n   used for same. That limitation is removed from this version.\n - Replaced netdev_err with NL_SET_ERR_MSG_MOD in state add flow\n   as per comment in previous version\n\nv7->v8:\n - spell correction in patch 1/8 (s/sdk/skb)\n\nv6->v7:\n - skb data was mapped as device writeable but it was not ensured\n   that skb is writeable. This version calls skb_unshare() to make\n   skb data writeable (Thanks Jakub Kicinski for pointing out).\n\nv4->v5:\n - Fixed un-initialized warning and pointer check\n   (comment from Kalesh Anakkur Purayil)\n\nv3->v4:\n - Few error messages in data-path removed and some moved\n   under netif_msg_tx_err().\n - Added check for crypto offload (XFRM_DEV_OFFLOAD_CRYPTO)\n   Thanks \"Leon Romanovsky\" for pointing out\n - Fixed codespell error as per comment from Simon Horman\n - Added some other cleanup comment from Kalesh Anakkur Purayil\n\nv2->v3:\n - Fix smatch and sparse errors (Comment from Simon Horman)\n - Fix build error with W=1 (Comment from Simon Horman)\n   https://patchwork.kernel.org/project/netdevbpf/patch/20240513105446.297451-6-bbhushan2@marvell.com/\n - Some other minor cleanup as per comment\n   https://www.spinics.net/lists/netdev/msg997197.html\n\nv1->v2:\n - Fix compilation error to build driver a module\n - Use dma_wmb() instead of architecture specific barrier\n - Fix couple of other compilation warnings\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "David S. Miller",
  "author_email": "davem@davemloft.net",
  "author_date": "Mon Dec 9 12:15:31 2024 +0000",
  "author_date_iso": "2024-12-09T12:15:31+00:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Mon Dec 9 12:15:31 2024 +0000",
  "committer_date_iso": "2024-12-09T12:15:31+00:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "MAINTAINERS",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/af/mbox.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c",
      "insertions": 58,
      "deletions": 10
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/cn10k_ipsec.c",
      "insertions": 1058,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/cn10k_ipsec.h",
      "insertions": 265,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c",
      "insertions": 106,
      "deletions": 7
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h",
      "insertions": 26,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/otx2_dcbnl.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c",
      "insertions": 18,
      "deletions": 1
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c",
      "insertions": 29,
      "deletions": 35
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c",
      "insertions": 9,
      "deletions": 1
    }
  ],
  "total_insertions": 1581,
  "total_deletions": 54,
  "total_changes": 1635,
  "parents": [
    "7ea2745766d776866cfbc981b21ed3cfdf50124e",
    "b3ae3dc3a30f3de78c0c3675ea980639b9ba212c"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": []
}