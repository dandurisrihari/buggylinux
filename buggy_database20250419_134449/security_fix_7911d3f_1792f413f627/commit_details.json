{
  "hash": "7911d3f7af14a614617e38245fedf98a724e46a9",
  "hash_short": "7911d3f7",
  "subject": "perf/x86: Only allow rdpmc if a perf_event is mapped",
  "body": "We currently allow any process to use rdpmc.  This significantly\nweakens the protection offered by PR_TSC_DISABLED, and it could be\nhelpful to users attempting to exploit timing attacks.\n\nSince we can't enable access to individual counters, use a very\ncoarse heuristic to limit access to rdpmc: allow access only when\na perf_event is mmapped.  This protects seccomp sandboxes.\n\nThere is plenty of room to further tighen these restrictions.  For\nexample, this allows rdpmc for any x86_pmu event, but it's only\nuseful for self-monitoring tasks.\n\nAs a side effect, cap_user_rdpmc will now be false for AMD uncore\nevents.  This isn't a real regression, since .event_idx is disabled\nfor these events anyway for the time being.  Whenever that gets\nre-added, the cap_user_rdpmc code can be adjusted or refactored\naccordingly.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Arnaldo Carvalho de Melo <acme@kernel.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: Vince Weaver <vince@deater.net>\nCc: \"hillf.zj\" <hillf.zj@alibaba-inc.com>\nCc: Valdis Kletnieks <Valdis.Kletnieks@vt.edu>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nLink: http://lkml.kernel.org/r/a2bdb3cf3a1d70c26980d7c6dddfbaa69f3182bf.1414190806.git.luto@amacapital.net\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "perf/x86: Only allow rdpmc if a perf_event is mapped\n\nWe currently allow any process to use rdpmc.  This significantly\nweakens the protection offered by PR_TSC_DISABLED, and it could be\nhelpful to users attempting to exploit timing attacks.\n\nSince we can't enable access to individual counters, use a very\ncoarse heuristic to limit access to rdpmc: allow access only when\na perf_event is mmapped.  This protects seccomp sandboxes.\n\nThere is plenty of room to further tighen these restrictions.  For\nexample, this allows rdpmc for any x86_pmu event, but it's only\nuseful for self-monitoring tasks.\n\nAs a side effect, cap_user_rdpmc will now be false for AMD uncore\nevents.  This isn't a real regression, since .event_idx is disabled\nfor these events anyway for the time being.  Whenever that gets\nre-added, the cap_user_rdpmc code can be adjusted or refactored\naccordingly.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Arnaldo Carvalho de Melo <acme@kernel.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: Vince Weaver <vince@deater.net>\nCc: \"hillf.zj\" <hillf.zj@alibaba-inc.com>\nCc: Valdis Kletnieks <Valdis.Kletnieks@vt.edu>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nLink: http://lkml.kernel.org/r/a2bdb3cf3a1d70c26980d7c6dddfbaa69f3182bf.1414190806.git.luto@amacapital.net\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "Andy Lutomirski",
  "author_email": "luto@amacapital.net",
  "author_date": "Fri Oct 24 15:58:12 2014 -0700",
  "author_date_iso": "2014-10-24T15:58:12-07:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Wed Feb 4 12:10:47 2015 +0100",
  "committer_date_iso": "2015-02-04T12:10:47+01:00",
  "files_changed": [
    "arch/x86/include/asm/mmu.h",
    "arch/x86/include/asm/mmu_context.h",
    "arch/x86/kernel/cpu/perf_event.c",
    "arch/x86/kernel/cpu/perf_event.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/x86/include/asm/mmu.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/mmu_context.h",
      "insertions": 16,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/perf_event.c",
      "insertions": 38,
      "deletions": 19
    },
    {
      "file": "arch/x86/kernel/cpu/perf_event.h",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 58,
  "total_deletions": 19,
  "total_changes": 77,
  "parents": [
    "c1317ec2b906442930318d9d6e51425c5a69e9cb"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.0",
    "v4.0-rc1",
    "v4.0-rc2",
    "v4.0-rc3",
    "v4.0-rc4",
    "v4.0-rc5",
    "v4.0-rc6",
    "v4.0-rc7",
    "v4.1",
    "v4.1-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/mmu.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/mmu_context.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/perf_event.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/perf_event.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}