{
  "hash": "2bc685e63332957f906446d281162f93b5d523fa",
  "hash_short": "2bc685e6",
  "subject": "KVM: X86: avoid uninitialized 'fault.async_page_fault' from fixed-up #PF",
  "body": "kvm_fixup_and_inject_pf_error() was introduced to fixup the error code(\ne.g., to add RSVD flag) and inject the #PF to the guest, when guest\nMAXPHYADDR is smaller than the host one.\n\nWhen it comes to nested, L0 is expected to intercept and fix up the #PF\nand then inject to L2 directly if\n- L2.MAXPHYADDR < L0.MAXPHYADDR and\n- L1 has no intention to intercept L2's #PF (e.g., L2 and L1 have the\n  same MAXPHYADDR value && L1 is using EPT for L2),\ninstead of constructing a #PF VM Exit to L1. Currently, with PFEC_MASK\nand PFEC_MATCH both set to 0 in vmcs02, the interception and injection\nmay happen on all L2 #PFs.\n\nHowever, failing to initialize 'fault' in kvm_fixup_and_inject_pf_error()\nmay cause the fault.async_page_fault being NOT zeroed, and later the #PF\nbeing treated as a nested async page fault, and then being injected to L1.\nInstead of zeroing 'fault' at the beginning of this function, we mannually\nset the value of 'fault.async_page_fault', because false is the value we\nreally expect.\n\nFixes: 897861479c064 (\"KVM: x86: Add helper functions for illegal GPA checking and page fault injection\")\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=216178\nReported-by: Yang Lixiao <lixiao.yang@intel.com>\nSigned-off-by: Yu Zhang <yu.c.zhang@linux.intel.com>\nReviewed-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220718074756.53788-1-yu.c.zhang@linux.intel.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: X86: avoid uninitialized 'fault.async_page_fault' from fixed-up #PF\n\nkvm_fixup_and_inject_pf_error() was introduced to fixup the error code(\ne.g., to add RSVD flag) and inject the #PF to the guest, when guest\nMAXPHYADDR is smaller than the host one.\n\nWhen it comes to nested, L0 is expected to intercept and fix up the #PF\nand then inject to L2 directly if\n- L2.MAXPHYADDR < L0.MAXPHYADDR and\n- L1 has no intention to intercept L2's #PF (e.g., L2 and L1 have the\n  same MAXPHYADDR value && L1 is using EPT for L2),\ninstead of constructing a #PF VM Exit to L1. Currently, with PFEC_MASK\nand PFEC_MATCH both set to 0 in vmcs02, the interception and injection\nmay happen on all L2 #PFs.\n\nHowever, failing to initialize 'fault' in kvm_fixup_and_inject_pf_error()\nmay cause the fault.async_page_fault being NOT zeroed, and later the #PF\nbeing treated as a nested async page fault, and then being injected to L1.\nInstead of zeroing 'fault' at the beginning of this function, we mannually\nset the value of 'fault.async_page_fault', because false is the value we\nreally expect.\n\nFixes: 897861479c064 (\"KVM: x86: Add helper functions for illegal GPA checking and page fault injection\")\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=216178\nReported-by: Yang Lixiao <lixiao.yang@intel.com>\nSigned-off-by: Yu Zhang <yu.c.zhang@linux.intel.com>\nReviewed-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220718074756.53788-1-yu.c.zhang@linux.intel.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Yu Zhang",
  "author_email": "yu.c.zhang@linux.intel.com",
  "author_date": "Mon Jul 18 15:47:56 2022 +0800",
  "author_date_iso": "2022-07-18T15:47:56+08:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Wed Aug 10 15:08:23 2022 -0400",
  "committer_date_iso": "2022-08-10T15:08:23-04:00",
  "files_changed": [
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 1,
  "total_deletions": 0,
  "total_changes": 1,
  "parents": [
    "70c8327c11c6d4080d4a774f531c6a6521592568"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}