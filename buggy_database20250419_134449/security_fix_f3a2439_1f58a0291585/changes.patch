diff --cc drivers/remoteproc/qcom_q6v5_adsp.c
index 4c9a1b99cd51,2dc850f48f00..08d8dad22ca7
--- a/drivers/remoteproc/qcom_q6v5_adsp.c
+++ b/drivers/remoteproc/qcom_q6v5_adsp.c
@@@ -325,6 -335,47 +335,48 @@@ static int adsp_load(struct rproc *rpro
  	return 0;
  }
  
+ static void adsp_unmap_carveout(struct rproc *rproc)
+ {
+ 	struct qcom_adsp *adsp = rproc->priv;
+ 
+ 	if (adsp->has_iommu)
+ 		iommu_unmap(rproc->domain, adsp->mem_phys, adsp->mem_size);
+ }
+ 
+ static int adsp_map_carveout(struct rproc *rproc)
+ {
+ 	struct qcom_adsp *adsp = rproc->priv;
+ 	struct of_phandle_args args;
+ 	long long sid;
+ 	unsigned long iova;
+ 	int ret;
+ 
+ 	if (!adsp->has_iommu)
+ 		return 0;
+ 
+ 	if (!rproc->domain)
+ 		return -EINVAL;
+ 
+ 	ret = of_parse_phandle_with_args(adsp->dev->of_node, "iommus", "#iommu-cells", 0, &args);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	sid = args.args[0] & SID_MASK_DEFAULT;
+ 
+ 	/* Add SID configuration for ADSP Firmware to SMMU */
+ 	iova =  adsp->mem_phys | (sid << 32);
+ 
+ 	ret = iommu_map(rproc->domain, iova, adsp->mem_phys,
 -			adsp->mem_size,	IOMMU_READ | IOMMU_WRITE);
++			adsp->mem_size,	IOMMU_READ | IOMMU_WRITE,
++			GFP_KERNEL);
+ 	if (ret) {
+ 		dev_err(adsp->dev, "Unable to map ADSP Physical Memory\n");
+ 		return ret;
+ 	}
+ 
+ 	return 0;
+ }
+ 
  static int adsp_start(struct rproc *rproc)
  {
  	struct qcom_adsp *adsp = (struct qcom_adsp *)rproc->priv;