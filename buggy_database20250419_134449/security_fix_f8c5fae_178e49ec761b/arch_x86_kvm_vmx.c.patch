commit f8c5fae16649445e15656667f72bd51d777f7766
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Tue May 11 15:16:46 2010 +0200

    KVM: VMX: blocked-by-sti must not defer NMI injections
    
    As the processor may not consider GUEST_INTR_STATE_STI as a reason for
    blocking NMI, it could return immediately with EXIT_REASON_NMI_WINDOW
    when we asked for it. But as we consider this state as NMI-blocking, we
    can run into an endless loop.
    
    Resolve this by allowing NMI injection if just GUEST_INTR_STATE_STI is
    active (originally suggested by Gleb). Intel confirmed that this is
    safe, the processor will never complain about NMI injection in this
    state.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    KVM-Stable-Tag
    Acked-by: Gleb Natapov <gleb@redhat.com>
    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index bc933cfb4e66..2f8db0ec8ae4 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -2703,8 +2703,7 @@ static int vmx_nmi_allowed(struct kvm_vcpu *vcpu)
 		return 0;
 
 	return	!(vmcs_read32(GUEST_INTERRUPTIBILITY_INFO) &
-			(GUEST_INTR_STATE_STI | GUEST_INTR_STATE_MOV_SS |
-				GUEST_INTR_STATE_NMI));
+			(GUEST_INTR_STATE_MOV_SS | GUEST_INTR_STATE_NMI));
 }
 
 static bool vmx_get_nmi_mask(struct kvm_vcpu *vcpu)