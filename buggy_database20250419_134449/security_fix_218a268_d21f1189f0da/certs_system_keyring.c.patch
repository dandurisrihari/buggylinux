commit 218a2680624cba1611e3dfc7d9b646d240e5f855
Author: Eric Snowberg <eric.snowberg@oracle.com>
Date:   Thu Aug 17 10:04:07 2023 -0400

    certs: Reference revocation list for all keyrings
    
    Systems booted with shim have a Forbidden Signature Database called mokx.
    During boot, hashes and certs contained within the mokx are loaded into the
    blacklist keyring.  When calling verify_pkcs7_message_sig the contents of
    the blacklist keyring (or revocation list) are referenced when validating
    keys on the platform keyring. Currently, when validating against the
    secondary or builtin keyrings, the revocation list is not referenced.  Move
    up the check to allow the revocation list to be used with all keyrings,
    including the secondary and builtin, allowing the system owner to take
    corrective action should a vulnerability be found within keys contained
    within either keyring.
    
    Signed-off-by: Eric Snowberg <eric.snowberg@oracle.com>
    Reviewed-by: Mimi Zohar <zohar@linux.ibm.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>

diff --git a/certs/system_keyring.c b/certs/system_keyring.c
index 33841c91f12c..9de610bf1f4b 100644
--- a/certs/system_keyring.c
+++ b/certs/system_keyring.c
@@ -330,6 +330,12 @@ int verify_pkcs7_message_sig(const void *data, size_t len,
 	if (ret < 0)
 		goto error;
 
+	ret = is_key_on_revocation_list(pkcs7);
+	if (ret != -ENOKEY) {
+		pr_devel("PKCS#7 key is on revocation list\n");
+		goto error;
+	}
+
 	if (!trusted_keys) {
 		trusted_keys = builtin_trusted_keys;
 	} else if (trusted_keys == VERIFY_USE_SECONDARY_KEYRING) {
@@ -349,12 +355,6 @@ int verify_pkcs7_message_sig(const void *data, size_t len,
 			pr_devel("PKCS#7 platform keyring is not available\n");
 			goto error;
 		}
-
-		ret = is_key_on_revocation_list(pkcs7);
-		if (ret != -ENOKEY) {
-			pr_devel("PKCS#7 platform key is on revocation list\n");
-			goto error;
-		}
 	}
 	ret = pkcs7_validate_trust(pkcs7, trusted_keys);
 	if (ret < 0) {