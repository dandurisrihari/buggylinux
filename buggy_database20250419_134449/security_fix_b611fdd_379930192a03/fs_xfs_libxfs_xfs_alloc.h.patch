commit b611fddc0435738e64453bbf1dadd4b12a801858
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Sep 18 07:30:08 2024 +0200

    xfs: don't ifdef around the exact minlen allocations
    
    Exact minlen allocations only exist as an error injection tool for debug
    builds.  Currently this is implemented using ifdefs, which means the code
    isn't even compiled for non-XFS_DEBUG builds.  Enhance the compile test
    coverage by always building the code and use the compilers' dead code
    elimination to remove it from the generated binary instead.
    
    The only downside is that the alloc_minlen_only field is unconditionally
    added to struct xfs_alloc_args now, but by moving it around and packing
    it tightly this doesn't actually increase the size of the structure.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Carlos Maiolino <cem@kernel.org>

diff --git a/fs/xfs/libxfs/xfs_alloc.h b/fs/xfs/libxfs/xfs_alloc.h
index fae170825be0..0165452e7cd0 100644
--- a/fs/xfs/libxfs/xfs_alloc.h
+++ b/fs/xfs/libxfs/xfs_alloc.h
@@ -53,11 +53,9 @@ typedef struct xfs_alloc_arg {
 	int		datatype;	/* mask defining data type treatment */
 	char		wasdel;		/* set if allocation was prev delayed */
 	char		wasfromfl;	/* set if allocation is from freelist */
+	bool		alloc_minlen_only; /* allocate exact minlen extent */
 	struct xfs_owner_info	oinfo;	/* owner of blocks being allocated */
 	enum xfs_ag_resv_type	resv;	/* block reservation to use */
-#ifdef DEBUG
-	bool		alloc_minlen_only; /* allocate exact minlen extent */
-#endif
 } xfs_alloc_arg_t;
 
 /*