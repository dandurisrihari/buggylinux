Commit Hash: b166a20b07382b8bc1dcee2a448715c9c2c81b5b
Subject: net/sctp: fix race condition in sctp_destroy_sock

CVE Identifiers:
- CVE-2021-23133

Full commit message:
net/sctp: fix race condition in sctp_destroy_sock

If sctp_destroy_sock is called without sock_net(sk)->sctp.addr_wq_lock
held and sp->do_auto_asconf is true, then an element is removed
from the auto_asconf_splist without any proper locking.

This can happen in the following functions:
1. In sctp_accept, if sctp_sock_migrate fails.
2. In inet_create or inet6_create, if there is a bpf program
   attached to BPF_CGROUP_INET_SOCK_CREATE which denies
   creation of the sctp socket.

The bug is fixed by acquiring addr_wq_lock in sctp_destroy_sock
instead of sctp_close.

This addresses CVE-2021-23133.

Reported-by: Or Cohen <orcohen@paloaltonetworks.com>
Reviewed-by: Xin Long <lucien.xin@gmail.com>
Fixes: 610236587600 ("bpf: Add new cgroup attach type to enable sock modifications")
Signed-off-by: Or Cohen <orcohen@paloaltonetworks.com>
Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Metadata:
Author: Or Cohen <orcohen@paloaltonetworks.com>
Author Date: Tue Apr 13 21:10:31 2021 +0300
Committer: David S. Miller <davem@davemloft.net>
Commit Date: Tue Apr 13 14:59:46 2021 -0700

Files Changed: 1
Lines Added: 5
Lines Removed: 8
Total Changes: 13
