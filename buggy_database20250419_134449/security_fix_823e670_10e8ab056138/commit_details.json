{
  "hash": "823e670f7ed616d0ce993075c8afe0217885f79d",
  "hash_short": "823e670f",
  "subject": "tracing: Fix check for trace_percpu_buffer validity in get_trace_buf()",
  "body": "With the new osnoise tracer, we are seeing the below splat:\n    Kernel attempted to read user page (c7d880000) - exploit attempt? (uid: 0)\n    BUG: Unable to handle kernel data access on read at 0xc7d880000\n    Faulting instruction address: 0xc0000000002ffa10\n    Oops: Kernel access of bad area, sig: 11 [#1]\n    LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries\n    ...\n    NIP [c0000000002ffa10] __trace_array_vprintk.part.0+0x70/0x2f0\n    LR [c0000000002ff9fc] __trace_array_vprintk.part.0+0x5c/0x2f0\n    Call Trace:\n    [c0000008bdd73b80] [c0000000001c49cc] put_prev_task_fair+0x3c/0x60 (unreliable)\n    [c0000008bdd73be0] [c000000000301430] trace_array_printk_buf+0x70/0x90\n    [c0000008bdd73c00] [c0000000003178b0] trace_sched_switch_callback+0x250/0x290\n    [c0000008bdd73c90] [c000000000e70d60] __schedule+0x410/0x710\n    [c0000008bdd73d40] [c000000000e710c0] schedule+0x60/0x130\n    [c0000008bdd73d70] [c000000000030614] interrupt_exit_user_prepare_main+0x264/0x270\n    [c0000008bdd73de0] [c000000000030a70] syscall_exit_prepare+0x150/0x180\n    [c0000008bdd73e10] [c00000000000c174] system_call_vectored_common+0xf4/0x278\n\nosnoise tracer on ppc64le is triggering osnoise_taint() for negative\nduration in get_int_safe_duration() called from\ntrace_sched_switch_callback()->thread_exit().\n\nThe problem though is that the check for a valid trace_percpu_buffer is\nincorrect in get_trace_buf(). The check is being done after calculating\nthe pointer for the current cpu, rather than on the main percpu pointer.\nFix the check to be against trace_percpu_buffer.\n\nLink: https://lkml.kernel.org/r/a920e4272e0b0635cf20c444707cbce1b2c8973d.1640255304.git.naveen.n.rao@linux.vnet.ibm.com\n\nCc: stable@vger.kernel.org\nFixes: e2ace001176dc9 (\"tracing: Choose static tp_printk buffer by explicit nesting count\")\nSigned-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>",
  "full_message": "tracing: Fix check for trace_percpu_buffer validity in get_trace_buf()\n\nWith the new osnoise tracer, we are seeing the below splat:\n    Kernel attempted to read user page (c7d880000) - exploit attempt? (uid: 0)\n    BUG: Unable to handle kernel data access on read at 0xc7d880000\n    Faulting instruction address: 0xc0000000002ffa10\n    Oops: Kernel access of bad area, sig: 11 [#1]\n    LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries\n    ...\n    NIP [c0000000002ffa10] __trace_array_vprintk.part.0+0x70/0x2f0\n    LR [c0000000002ff9fc] __trace_array_vprintk.part.0+0x5c/0x2f0\n    Call Trace:\n    [c0000008bdd73b80] [c0000000001c49cc] put_prev_task_fair+0x3c/0x60 (unreliable)\n    [c0000008bdd73be0] [c000000000301430] trace_array_printk_buf+0x70/0x90\n    [c0000008bdd73c00] [c0000000003178b0] trace_sched_switch_callback+0x250/0x290\n    [c0000008bdd73c90] [c000000000e70d60] __schedule+0x410/0x710\n    [c0000008bdd73d40] [c000000000e710c0] schedule+0x60/0x130\n    [c0000008bdd73d70] [c000000000030614] interrupt_exit_user_prepare_main+0x264/0x270\n    [c0000008bdd73de0] [c000000000030a70] syscall_exit_prepare+0x150/0x180\n    [c0000008bdd73e10] [c00000000000c174] system_call_vectored_common+0xf4/0x278\n\nosnoise tracer on ppc64le is triggering osnoise_taint() for negative\nduration in get_int_safe_duration() called from\ntrace_sched_switch_callback()->thread_exit().\n\nThe problem though is that the check for a valid trace_percpu_buffer is\nincorrect in get_trace_buf(). The check is being done after calculating\nthe pointer for the current cpu, rather than on the main percpu pointer.\nFix the check to be against trace_percpu_buffer.\n\nLink: https://lkml.kernel.org/r/a920e4272e0b0635cf20c444707cbce1b2c8973d.1640255304.git.naveen.n.rao@linux.vnet.ibm.com\n\nCc: stable@vger.kernel.org\nFixes: e2ace001176dc9 (\"tracing: Choose static tp_printk buffer by explicit nesting count\")\nSigned-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>",
  "author_name": "Naveen N. Rao",
  "author_email": "naveen.n.rao@linux.vnet.ibm.com",
  "author_date": "Thu Dec 23 16:04:38 2021 +0530",
  "author_date_iso": "2021-12-23T16:04:38+05:30",
  "committer_name": "Steven Rostedt",
  "committer_email": "rostedt@goodmis.org",
  "committer_date": "Wed Jan 5 18:51:25 2022 -0500",
  "committer_date_iso": "2022-01-05T18:51:25-05:00",
  "files_changed": [
    "kernel/trace/trace.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/trace/trace.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "0daf5cb217a9ca8ae91b8f966ddae322699fb71d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/trace/trace.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}