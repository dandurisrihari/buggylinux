{
  "hash": "e7582edb78619abb4ebf0a6e1fed125dcd7243b6",
  "hash_short": "e7582edb",
  "subject": "powerpc/rtas: Move token validation from block_rtas_call() to sys_rtas()",
  "body": "The rtas system call handler sys_rtas() delegates certain input\nvalidation steps to a helper function: block_rtas_call(). One of these\nsteps ensures that the user-supplied token value maps to a known RTAS\nfunction. This is done by performing a \"reverse\" token-to-function\nlookup via rtas_token_to_function_untrusted() to obtain an\nrtas_function object.\n\nIn changes to come, sys_rtas() itself will need the function\ndescriptor for the token. To prepare:\n\n* Move the lookup and validation up into sys_rtas() and pass the\n  resulting rtas_function pointer to block_rtas_call(), which is\n  otherwise unconcerned with the token value.\n\n* Change block_rtas_call() to report the RTAS function name instead of\n  the token value on validation failures, since it can now rely on\n  having a valid function descriptor.\n\nOne behavior change is that sys_rtas() now silently errors out when\npassed a bad token, before calling block_rtas_call(). So we will no\nlonger log \"RTAS call blocked - exploit attempt?\" on invalid\ntokens. This is consistent with how sys_rtas() currently handles other\n\"metadata\" (nargs and nret), while block_rtas_call() is primarily\nconcerned with validating the arguments to be passed to specific RTAS\nfunctions.\n\nSigned-off-by: Nathan Lynch <nathanl@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://msgid.link/20231212-papr-sys_rtas-vs-lockdown-v6-5-e9eafd0c8c6c@linux.ibm.com",
  "full_message": "powerpc/rtas: Move token validation from block_rtas_call() to sys_rtas()\n\nThe rtas system call handler sys_rtas() delegates certain input\nvalidation steps to a helper function: block_rtas_call(). One of these\nsteps ensures that the user-supplied token value maps to a known RTAS\nfunction. This is done by performing a \"reverse\" token-to-function\nlookup via rtas_token_to_function_untrusted() to obtain an\nrtas_function object.\n\nIn changes to come, sys_rtas() itself will need the function\ndescriptor for the token. To prepare:\n\n* Move the lookup and validation up into sys_rtas() and pass the\n  resulting rtas_function pointer to block_rtas_call(), which is\n  otherwise unconcerned with the token value.\n\n* Change block_rtas_call() to report the RTAS function name instead of\n  the token value on validation failures, since it can now rely on\n  having a valid function descriptor.\n\nOne behavior change is that sys_rtas() now silently errors out when\npassed a bad token, before calling block_rtas_call(). So we will no\nlonger log \"RTAS call blocked - exploit attempt?\" on invalid\ntokens. This is consistent with how sys_rtas() currently handles other\n\"metadata\" (nargs and nret), while block_rtas_call() is primarily\nconcerned with validating the arguments to be passed to specific RTAS\nfunctions.\n\nSigned-off-by: Nathan Lynch <nathanl@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://msgid.link/20231212-papr-sys_rtas-vs-lockdown-v6-5-e9eafd0c8c6c@linux.ibm.com",
  "author_name": "Nathan Lynch",
  "author_email": "nathanl@linux.ibm.com",
  "author_date": "Tue Dec 12 11:01:52 2023 -0600",
  "author_date_iso": "2023-12-12T11:01:52-06:00",
  "committer_name": "Michael Ellerman",
  "committer_email": "mpe@ellerman.id.au",
  "committer_date": "Wed Dec 13 21:38:20 2023 +1100",
  "committer_date_iso": "2023-12-13T21:38:20+11:00",
  "files_changed": [
    "arch/powerpc/kernel/rtas.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/powerpc/kernel/rtas.c",
      "insertions": 16,
      "deletions": 16
    }
  ],
  "total_insertions": 16,
  "total_deletions": 16,
  "total_changes": 32,
  "parents": [
    "9592aa5ad59e736727fe7894e6e820e2d851abcf"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/powerpc/kernel/rtas.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}