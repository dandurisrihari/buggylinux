commit 63f170e0c80a131cdd549fab7afb5036009944fc
Author: Johannes Berg <johannes@sipsolutions.net>
Date:   Wed Dec 23 13:15:33 2009 +0100

    mac80211: let cfg80211 manage auth state
    
    mac80211 currently hangs on to the auth state by
    keeping it on the work list. That can lead to
    confusing behaviour like rejecting scans while
    authenticated to any AP (but not yet associated.)
    It also means that it needs to keep track of the
    work struct while associated for when it gets
    disassociated (or disassociates.)
    
    Change this to free the work struct after the
    authentication completed successfully and
    allocate a new one for associating, thereby
    letting cfg80211 manage the auth state. Another
    change necessary for this is to tell cfg80211
    about all unicast deauth frames sent to mac80211
    since now it can no longer check the auth state,
    but that check was racy anyway.
    
    Signed-off-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index adeae03c26a3..e21e0301548b 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -228,7 +228,7 @@ struct mesh_preq_queue {
 };
 
 enum ieee80211_mgd_state {
-	IEEE80211_MGD_STATE_IDLE,
+	IEEE80211_MGD_STATE_INVALID,
 	IEEE80211_MGD_STATE_PROBE,
 	IEEE80211_MGD_STATE_AUTH,
 	IEEE80211_MGD_STATE_ASSOC,
@@ -285,7 +285,6 @@ struct ieee80211_if_managed {
 
 	struct mutex mtx;
 	struct ieee80211_bss *associated;
-	struct ieee80211_mgd_work *old_associate_work;
 	struct list_head work_list;
 
 	u8 bssid[ETH_ALEN];