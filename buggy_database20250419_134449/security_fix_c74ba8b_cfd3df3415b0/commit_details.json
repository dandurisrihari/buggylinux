{
  "hash": "c74ba8b3480da6ddaea17df2263ec09b869ac496",
  "hash_short": "c74ba8b3",
  "subject": "arch: Introduce post-init read-only memory",
  "body": "One of the easiest ways to protect the kernel from attack is to reduce\nthe internal attack surface exposed when a \"write\" flaw is available. By\nmaking as much of the kernel read-only as possible, we reduce the\nattack surface.\n\nMany things are written to only during __init, and never changed\nagain. These cannot be made \"const\" since the compiler will do the wrong\nthing (we do actually need to write to them). Instead, move these items\ninto a memory region that will be made read-only during mark_rodata_ro()\nwhich happens after all kernel __init code has finished.\n\nThis introduces __ro_after_init as a way to mark such memory, and adds\nsome documentation about the existing __read_mostly marking.\n\nThis improves the security of the Linux kernel by marking formerly\nread-write memory regions as read-only on a fully booted up system.\n\nBased on work by PaX Team and Brad Spengler.\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: David Brown <david.brown@linaro.org>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Mathias Krause <minipli@googlemail.com>\nCc: Michael Ellerman <mpe@ellerman.id.au>\nCc: PaX Team <pageexec@freemail.hu>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: kernel-hardening@lists.openwall.com\nCc: linux-arch <linux-arch@vger.kernel.org>\nLink: http://lkml.kernel.org/r/1455748879-21872-5-git-send-email-keescook@chromium.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "arch: Introduce post-init read-only memory\n\nOne of the easiest ways to protect the kernel from attack is to reduce\nthe internal attack surface exposed when a \"write\" flaw is available. By\nmaking as much of the kernel read-only as possible, we reduce the\nattack surface.\n\nMany things are written to only during __init, and never changed\nagain. These cannot be made \"const\" since the compiler will do the wrong\nthing (we do actually need to write to them). Instead, move these items\ninto a memory region that will be made read-only during mark_rodata_ro()\nwhich happens after all kernel __init code has finished.\n\nThis introduces __ro_after_init as a way to mark such memory, and adds\nsome documentation about the existing __read_mostly marking.\n\nThis improves the security of the Linux kernel by marking formerly\nread-write memory regions as read-only on a fully booted up system.\n\nBased on work by PaX Team and Brad Spengler.\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: David Brown <david.brown@linaro.org>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Mathias Krause <minipli@googlemail.com>\nCc: Michael Ellerman <mpe@ellerman.id.au>\nCc: PaX Team <pageexec@freemail.hu>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: kernel-hardening@lists.openwall.com\nCc: linux-arch <linux-arch@vger.kernel.org>\nLink: http://lkml.kernel.org/r/1455748879-21872-5-git-send-email-keescook@chromium.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Wed Feb 17 14:41:15 2016 -0800",
  "author_date_iso": "2016-02-17T14:41:15-08:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Mon Feb 22 08:51:38 2016 +0100",
  "committer_date_iso": "2016-02-22T08:51:38+01:00",
  "files_changed": [
    "arch/parisc/include/asm/cache.h",
    "include/asm-generic/vmlinux.lds.h",
    "include/linux/cache.h"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/parisc/include/asm/cache.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "include/asm-generic/vmlinux.lds.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/cache.h",
      "insertions": 14,
      "deletions": 0
    }
  ],
  "total_insertions": 18,
  "total_deletions": 0,
  "total_changes": 18,
  "parents": [
    "9ccaf77cf05915f51231d158abfd5448aedde758"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/parisc/include/asm/cache.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/asm-generic/vmlinux.lds.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/cache.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}