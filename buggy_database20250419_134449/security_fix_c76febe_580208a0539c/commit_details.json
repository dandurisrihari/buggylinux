{
  "hash": "c76febef574fd86566bbdf1a73a547a439115c25",
  "hash_short": "c76febef",
  "subject": "xfs: only run xfs_error_test if error injection is active",
  "body": "Recent tests writing lots of small files showed the flusher thread\nbeing CPU bound and taking a long time to do allocations on a debug\nkernel. perf showed this as the prime reason:\n\n             samples  pcnt function                    DSO\n             _______ _____ ___________________________ _________________\n\n           224648.00 36.8% xfs_error_test              [kernel.kallsyms]\n            86045.00 14.1% xfs_btree_check_sblock      [kernel.kallsyms]\n            39778.00  6.5% prandom32                   [kernel.kallsyms]\n            37436.00  6.1% xfs_btree_increment         [kernel.kallsyms]\n            29278.00  4.8% xfs_btree_get_rec           [kernel.kallsyms]\n            27717.00  4.5% random32                    [kernel.kallsyms]\n\nWalking btree blocks during allocation checking them requires each\nblock (a cache hit, so no I/O) call xfs_error_test(), which then\ndoes a random32() call as the first operation.  IOWs, ~50% of the\nCPU is being consumed just testing whether we need to inject an\nerror, even though error injection is not active.\n\nKill this overhead when error injection is not active by adding a\nglobal counter of active error traps and only calling into\nxfs_error_test when fault injection is active.\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>",
  "full_message": "xfs: only run xfs_error_test if error injection is active\n\nRecent tests writing lots of small files showed the flusher thread\nbeing CPU bound and taking a long time to do allocations on a debug\nkernel. perf showed this as the prime reason:\n\n             samples  pcnt function                    DSO\n             _______ _____ ___________________________ _________________\n\n           224648.00 36.8% xfs_error_test              [kernel.kallsyms]\n            86045.00 14.1% xfs_btree_check_sblock      [kernel.kallsyms]\n            39778.00  6.5% prandom32                   [kernel.kallsyms]\n            37436.00  6.1% xfs_btree_increment         [kernel.kallsyms]\n            29278.00  4.8% xfs_btree_get_rec           [kernel.kallsyms]\n            27717.00  4.5% random32                    [kernel.kallsyms]\n\nWalking btree blocks during allocation checking them requires each\nblock (a cache hit, so no I/O) call xfs_error_test(), which then\ndoes a random32() call as the first operation.  IOWs, ~50% of the\nCPU is being consumed just testing whether we need to inject an\nerror, even though error injection is not active.\n\nKill this overhead when error injection is not active by adding a\nglobal counter of active error traps and only calling into\nxfs_error_test when fault injection is active.\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>",
  "author_name": "Dave Chinner",
  "author_email": "dchinner@redhat.com",
  "author_date": "Tue Nov 30 15:15:31 2010 +1100",
  "author_date_iso": "2010-11-30T15:15:31+11:00",
  "committer_name": "Alex Elder",
  "committer_email": "aelder@sgi.com",
  "committer_date": "Wed Dec 1 07:40:20 2010 -0600",
  "committer_date_iso": "2010-12-01T07:40:20-06:00",
  "files_changed": [
    "fs/xfs/xfs_error.c",
    "fs/xfs/xfs_error.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "fs/xfs/xfs_error.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_error.h",
      "insertions": 3,
      "deletions": 2
    }
  ],
  "total_insertions": 6,
  "total_deletions": 2,
  "total_changes": 8,
  "parents": [
    "de25c1818c44f580ff556cb9e0f7a1c687ed870b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.37",
    "v2.6.37-rc5",
    "v2.6.37-rc6",
    "v2.6.37-rc7",
    "v2.6.37-rc8",
    "v2.6.38",
    "v2.6.38-rc1",
    "v2.6.38-rc2",
    "v2.6.38-rc3",
    "v2.6.38-rc4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/xfs/xfs_error.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_error.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}