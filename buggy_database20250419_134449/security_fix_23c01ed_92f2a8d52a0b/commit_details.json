{
  "hash": "23c01ed3b0def0e28cca141d11d9e35a7f7acf2f",
  "hash_short": "23c01ed3",
  "subject": "Merge tag 'rxrpc-next-20201123' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs",
  "body": "David Howells says:\n\n====================\nrxrpc: Prelude to gssapi support\n\nHere are some patches that do some reorganisation of the security class\nhandling in rxrpc to allow implementation of the RxGK security class that\nwill allow AF_RXRPC to use GSSAPI-negotiated tokens and better crypto.  The\nRxGK security class is not included in this patchset.\n\nIt does the following things:\n\n (1) Add a keyrings patch to provide the original key description, as\n     provided to add_key(), to the payload preparser so that it can\n     interpret the content on that basis.  Unfortunately, the rxrpc_s key\n     type wasn't written to interpret its payload as anything other than a\n     string of bytes comprising a key, but for RxGK, more information is\n     required as multiple Kerberos enctypes are supported.\n\n (2) Remove the rxk5 security class key parsing.  The rxk5 class never got\n     rolled out in OpenAFS and got replaced with rxgk.\n\n (3) Support the creation of rxrpc keys with multiple tokens of different\n     types.  If some types are not supported, the ENOPKG error is\n     suppressed if at least one other token's type is supported.\n\n (4) Punt the handling of server keys (rxrpc_s type) to the appropriate\n     security class.\n\n (5) Organise the security bits in the rxrpc_connection struct into a\n     union to make it easier to override for other classes.\n\n (6) Move some bits from core code into rxkad that won't be appropriate to\n     rxgk.\n\n* tag 'rxrpc-next-20201123' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs:\n  rxrpc: Ask the security class how much space to allow in a packet\n  rxrpc: rxkad: Don't use pskb_pull() to advance through the response packet\n  rxrpc: Organise connection security to use a union\n  rxrpc: Don't reserve security header in Tx DATA skbuff\n  rxrpc: Merge prime_packet_security into init_connection_security\n  rxrpc: Fix example key name in a comment\n  rxrpc: Ignore unknown tokens in key payload unless no known tokens\n  rxrpc: Make the parsing of xdr payloads more coherent\n  rxrpc: Allow security classes to give more info on server keys\n  rxrpc: Don't leak the service-side session key to userspace\n  rxrpc: Hand server key parsing off to the security class\n  rxrpc: Split the server key type (rxrpc_s) into its own file\n  rxrpc: Don't retain the server key in the connection\n  rxrpc: Support keys with multiple authentication tokens\n  rxrpc: List the held token types in the key description in /proc/keys\n  rxrpc: Remove the rxk5 security class as it's now defunct\n  keys: Provide the original description to the key preparser\n====================\n\nLink: https://lore.kernel.org/r/160616220405.830164.2239716599743995145.stgit@warthog.procyon.org.uk\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "Merge tag 'rxrpc-next-20201123' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs\n\nDavid Howells says:\n\n====================\nrxrpc: Prelude to gssapi support\n\nHere are some patches that do some reorganisation of the security class\nhandling in rxrpc to allow implementation of the RxGK security class that\nwill allow AF_RXRPC to use GSSAPI-negotiated tokens and better crypto.  The\nRxGK security class is not included in this patchset.\n\nIt does the following things:\n\n (1) Add a keyrings patch to provide the original key description, as\n     provided to add_key(), to the payload preparser so that it can\n     interpret the content on that basis.  Unfortunately, the rxrpc_s key\n     type wasn't written to interpret its payload as anything other than a\n     string of bytes comprising a key, but for RxGK, more information is\n     required as multiple Kerberos enctypes are supported.\n\n (2) Remove the rxk5 security class key parsing.  The rxk5 class never got\n     rolled out in OpenAFS and got replaced with rxgk.\n\n (3) Support the creation of rxrpc keys with multiple tokens of different\n     types.  If some types are not supported, the ENOPKG error is\n     suppressed if at least one other token's type is supported.\n\n (4) Punt the handling of server keys (rxrpc_s type) to the appropriate\n     security class.\n\n (5) Organise the security bits in the rxrpc_connection struct into a\n     union to make it easier to override for other classes.\n\n (6) Move some bits from core code into rxkad that won't be appropriate to\n     rxgk.\n\n* tag 'rxrpc-next-20201123' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs:\n  rxrpc: Ask the security class how much space to allow in a packet\n  rxrpc: rxkad: Don't use pskb_pull() to advance through the response packet\n  rxrpc: Organise connection security to use a union\n  rxrpc: Don't reserve security header in Tx DATA skbuff\n  rxrpc: Merge prime_packet_security into init_connection_security\n  rxrpc: Fix example key name in a comment\n  rxrpc: Ignore unknown tokens in key payload unless no known tokens\n  rxrpc: Make the parsing of xdr payloads more coherent\n  rxrpc: Allow security classes to give more info on server keys\n  rxrpc: Don't leak the service-side session key to userspace\n  rxrpc: Hand server key parsing off to the security class\n  rxrpc: Split the server key type (rxrpc_s) into its own file\n  rxrpc: Don't retain the server key in the connection\n  rxrpc: Support keys with multiple authentication tokens\n  rxrpc: List the held token types in the key description in /proc/keys\n  rxrpc: Remove the rxk5 security class as it's now defunct\n  keys: Provide the original description to the key preparser\n====================\n\nLink: https://lore.kernel.org/r/160616220405.830164.2239716599743995145.stgit@warthog.procyon.org.uk\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Jakub Kicinski",
  "author_email": "kuba@kernel.org",
  "author_date": "Tue Nov 24 12:05:58 2020 -0800",
  "author_date_iso": "2020-11-24T12:05:58-08:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Tue Nov 24 12:05:58 2020 -0800",
  "committer_date_iso": "2020-11-24T12:05:58-08:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "include/keys/rxrpc-type.h",
      "insertions": 1,
      "deletions": 55
    },
    {
      "file": "include/linux/key-type.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/rxrpc/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/rxrpc/ar-internal.h",
      "insertions": 43,
      "deletions": 20
    },
    {
      "file": "net/rxrpc/call_accept.c",
      "insertions": 7,
      "deletions": 7
    },
    {
      "file": "net/rxrpc/conn_client.c",
      "insertions": 0,
      "deletions": 6
    },
    {
      "file": "net/rxrpc/conn_event.c",
      "insertions": 2,
      "deletions": 6
    },
    {
      "file": "net/rxrpc/conn_object.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "net/rxrpc/conn_service.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "net/rxrpc/insecure.c",
      "insertions": 12,
      "deletions": 7
    },
    {
      "file": "net/rxrpc/key.c",
      "insertions": 54,
      "deletions": 604
    },
    {
      "file": "net/rxrpc/rxkad.c",
      "insertions": 177,
      "deletions": 79
    },
    {
      "file": "net/rxrpc/security.c",
      "insertions": 65,
      "deletions": 33
    },
    {
      "file": "net/rxrpc/sendmsg.c",
      "insertions": 14,
      "deletions": 31
    },
    {
      "file": "net/rxrpc/server_key.c",
      "insertions": 143,
      "deletions": 0
    },
    {
      "file": "security/keys/key.c",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 522,
  "total_deletions": 852,
  "total_changes": 1374,
  "parents": [
    "d5a05e69ac6e4c431c380ced2b534c91f7bc3280",
    "d7d775b1ffb15408a60ec12dc9d02d4751e6b10a"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": []
}