Commit Hash: fb3bd914b3ec28f5fb697ac55c4846ac2d542855
Subject: x86/srso: Add a Speculative RAS Overflow mitigation


Security Keywords:
- vulnerability

Full commit message:
x86/srso: Add a Speculative RAS Overflow mitigation

Add a mitigation for the speculative return address stack overflow
vulnerability found on AMD processors.

The mitigation works by ensuring all RET instructions speculate to
a controlled location, similar to how speculation is controlled in the
retpoline sequence.  To accomplish this, the __x86_return_thunk forces
the CPU to mispredict every function return using a 'safe return'
sequence.

To ensure the safety of this mitigation, the kernel must ensure that the
safe return sequence is itself free from attacker interference.  In Zen3
and Zen4, this is accomplished by creating a BTB alias between the
untraining function srso_untrain_ret_alias() and the safe return
function srso_safe_ret_alias() which results in evicting a potentially
poisoned BTB entry and using that safe one for all function returns.

In older Zen1 and Zen2, this is accomplished using a reinterpretation
technique similar to Retbleed one: srso_untrain_ret() and
srso_safe_ret().

Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>

Metadata:
Author: Borislav Petkov (AMD) <bp@alien8.de>
Author Date: Wed Jun 28 11:02:39 2023 +0200
Committer: Borislav Petkov (AMD) <bp@alien8.de>
Commit Date: Thu Jul 27 11:07:14 2023 +0200

Files Changed: 16
Lines Added: 422
Lines Removed: 10
Total Changes: 432
