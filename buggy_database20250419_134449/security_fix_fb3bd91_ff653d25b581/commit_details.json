{
  "hash": "fb3bd914b3ec28f5fb697ac55c4846ac2d542855",
  "hash_short": "fb3bd914",
  "subject": "x86/srso: Add a Speculative RAS Overflow mitigation",
  "body": "Add a mitigation for the speculative return address stack overflow\nvulnerability found on AMD processors.\n\nThe mitigation works by ensuring all RET instructions speculate to\na controlled location, similar to how speculation is controlled in the\nretpoline sequence.  To accomplish this, the __x86_return_thunk forces\nthe CPU to mispredict every function return using a 'safe return'\nsequence.\n\nTo ensure the safety of this mitigation, the kernel must ensure that the\nsafe return sequence is itself free from attacker interference.  In Zen3\nand Zen4, this is accomplished by creating a BTB alias between the\nuntraining function srso_untrain_ret_alias() and the safe return\nfunction srso_safe_ret_alias() which results in evicting a potentially\npoisoned BTB entry and using that safe one for all function returns.\n\nIn older Zen1 and Zen2, this is accomplished using a reinterpretation\ntechnique similar to Retbleed one: srso_untrain_ret() and\nsrso_safe_ret().\n\nSigned-off-by: Borislav Petkov (AMD) <bp@alien8.de>",
  "full_message": "x86/srso: Add a Speculative RAS Overflow mitigation\n\nAdd a mitigation for the speculative return address stack overflow\nvulnerability found on AMD processors.\n\nThe mitigation works by ensuring all RET instructions speculate to\na controlled location, similar to how speculation is controlled in the\nretpoline sequence.  To accomplish this, the __x86_return_thunk forces\nthe CPU to mispredict every function return using a 'safe return'\nsequence.\n\nTo ensure the safety of this mitigation, the kernel must ensure that the\nsafe return sequence is itself free from attacker interference.  In Zen3\nand Zen4, this is accomplished by creating a BTB alias between the\nuntraining function srso_untrain_ret_alias() and the safe return\nfunction srso_safe_ret_alias() which results in evicting a potentially\npoisoned BTB entry and using that safe one for all function returns.\n\nIn older Zen1 and Zen2, this is accomplished using a reinterpretation\ntechnique similar to Retbleed one: srso_untrain_ret() and\nsrso_safe_ret().\n\nSigned-off-by: Borislav Petkov (AMD) <bp@alien8.de>",
  "author_name": "Borislav Petkov (AMD)",
  "author_email": "bp@alien8.de",
  "author_date": "Wed Jun 28 11:02:39 2023 +0200",
  "author_date_iso": "2023-06-28T11:02:39+02:00",
  "committer_name": "Borislav Petkov (AMD)",
  "committer_email": "bp@alien8.de",
  "committer_date": "Thu Jul 27 11:07:14 2023 +0200",
  "committer_date_iso": "2023-07-27T11:07:14+02:00",
  "files_changed": [
    "Documentation/admin-guide/hw-vuln/index.rst",
    "Documentation/admin-guide/hw-vuln/srso.rst",
    "Documentation/admin-guide/kernel-parameters.txt",
    "arch/x86/Kconfig",
    "arch/x86/include/asm/cpufeatures.h",
    "arch/x86/include/asm/nospec-branch.h",
    "arch/x86/include/asm/processor.h",
    "arch/x86/kernel/alternative.c",
    "arch/x86/kernel/cpu/amd.c",
    "arch/x86/kernel/cpu/bugs.c",
    "arch/x86/kernel/cpu/common.c",
    "arch/x86/kernel/vmlinux.lds.S",
    "arch/x86/lib/retpoline.S",
    "drivers/base/cpu.c",
    "include/linux/cpu.h",
    "tools/objtool/arch/x86/decode.c"
  ],
  "files_changed_count": 16,
  "stats": [
    {
      "file": "Documentation/admin-guide/hw-vuln/index.rst",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "Documentation/admin-guide/hw-vuln/srso.rst",
      "insertions": 133,
      "deletions": 0
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "arch/x86/Kconfig",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/cpufeatures.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/nospec-branch.h",
      "insertions": 14,
      "deletions": 1
    },
    {
      "file": "arch/x86/include/asm/processor.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/alternative.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/cpu/amd.c",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/bugs.c",
      "insertions": 106,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/common.c",
      "insertions": 7,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/vmlinux.lds.S",
      "insertions": 27,
      "deletions": 2
    },
    {
      "file": "arch/x86/lib/retpoline.S",
      "insertions": 78,
      "deletions": 4
    },
    {
      "file": "drivers/base/cpu.c",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "include/linux/cpu.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/objtool/arch/x86/decode.c",
      "insertions": 4,
      "deletions": 1
    }
  ],
  "total_insertions": 422,
  "total_deletions": 10,
  "total_changes": 432,
  "parents": [
    "0e52740ffd10c6c316837c6c128f460f1aaba1ea"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/admin-guide/hw-vuln/srso.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/admin-guide/hw-vuln/index.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/cpufeatures.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/processor.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/nospec-branch.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/amd.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/alternative.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/common.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/base/cpu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/lib/retpoline.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/bugs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/vmlinux.lds.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/objtool/arch/x86/decode.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/cpu.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}