{
  "hash": "642e7fd23353e22290e3d51719fcb658dc252342",
  "hash_short": "642e7fd2",
  "subject": "Merge branch 'syscalls-next' of git://git.kernel.org/pub/scm/linux/kernel/git/brodo/linux",
  "body": "Pull removal of in-kernel calls to syscalls from Dominik Brodowski:\n \"System calls are interaction points between userspace and the kernel.\n  Therefore, system call functions such as sys_xyzzy() or\n  compat_sys_xyzzy() should only be called from userspace via the\n  syscall table, but not from elsewhere in the kernel.\n\n  At least on 64-bit x86, it will likely be a hard requirement from\n  v4.17 onwards to not call system call functions in the kernel: It is\n  better to use use a different calling convention for system calls\n  there, where struct pt_regs is decoded on-the-fly in a syscall wrapper\n  which then hands processing over to the actual syscall function. This\n  means that only those parameters which are actually needed for a\n  specific syscall are passed on during syscall entry, instead of\n  filling in six CPU registers with random user space content all the\n  time (which may cause serious trouble down the call chain). Those\n  x86-specific patches will be pushed through the x86 tree in the near\n  future.\n\n  Moreover, rules on how data may be accessed may differ between kernel\n  data and user data. This is another reason why calling sys_xyzzy() is\n  generally a bad idea, and -- at most -- acceptable in arch-specific\n  code.\n\n  This patchset removes all in-kernel calls to syscall functions in the\n  kernel with the exception of arch/. On top of this, it cleans up the\n  three places where many syscalls are referenced or prototyped, namely\n  kernel/sys_ni.c, include/linux/syscalls.h and include/linux/compat.h\"\n\n* 'syscalls-next' of git://git.kernel.org/pub/scm/linux/kernel/git/brodo/linux: (109 commits)\n  bpf: whitelist all syscalls for error injection\n  kernel/sys_ni: remove {sys_,sys_compat} from cond_syscall definitions\n  kernel/sys_ni: sort cond_syscall() entries\n  syscalls/x86: auto-create compat_sys_*() prototypes\n  syscalls: sort syscall prototypes in include/linux/compat.h\n  net: remove compat_sys_*() prototypes from net/compat.h\n  syscalls: sort syscall prototypes in include/linux/syscalls.h\n  kexec: move sys_kexec_load() prototype to syscalls.h\n  x86/sigreturn: use SYSCALL_DEFINE0\n  x86: fix sys_sigreturn() return type to be long, not unsigned long\n  x86/ioport: add ksys_ioperm() helper; remove in-kernel calls to sys_ioperm()\n  mm: add ksys_readahead() helper; remove in-kernel calls to sys_readahead()\n  mm: add ksys_mmap_pgoff() helper; remove in-kernel calls to sys_mmap_pgoff()\n  mm: add ksys_fadvise64_64() helper; remove in-kernel call to sys_fadvise64_64()\n  fs: add ksys_fallocate() wrapper; remove in-kernel calls to sys_fallocate()\n  fs: add ksys_p{read,write}64() helpers; remove in-kernel calls to syscalls\n  fs: add ksys_truncate() wrapper; remove in-kernel calls to sys_truncate()\n  fs: add ksys_sync_file_range helper(); remove in-kernel calls to syscall\n  kernel: add ksys_setsid() helper; remove in-kernel call to sys_setsid()\n  kernel: add ksys_unshare() helper; remove in-kernel calls to sys_unshare()\n  ...",
  "full_message": "Merge branch 'syscalls-next' of git://git.kernel.org/pub/scm/linux/kernel/git/brodo/linux\n\nPull removal of in-kernel calls to syscalls from Dominik Brodowski:\n \"System calls are interaction points between userspace and the kernel.\n  Therefore, system call functions such as sys_xyzzy() or\n  compat_sys_xyzzy() should only be called from userspace via the\n  syscall table, but not from elsewhere in the kernel.\n\n  At least on 64-bit x86, it will likely be a hard requirement from\n  v4.17 onwards to not call system call functions in the kernel: It is\n  better to use use a different calling convention for system calls\n  there, where struct pt_regs is decoded on-the-fly in a syscall wrapper\n  which then hands processing over to the actual syscall function. This\n  means that only those parameters which are actually needed for a\n  specific syscall are passed on during syscall entry, instead of\n  filling in six CPU registers with random user space content all the\n  time (which may cause serious trouble down the call chain). Those\n  x86-specific patches will be pushed through the x86 tree in the near\n  future.\n\n  Moreover, rules on how data may be accessed may differ between kernel\n  data and user data. This is another reason why calling sys_xyzzy() is\n  generally a bad idea, and -- at most -- acceptable in arch-specific\n  code.\n\n  This patchset removes all in-kernel calls to syscall functions in the\n  kernel with the exception of arch/. On top of this, it cleans up the\n  three places where many syscalls are referenced or prototyped, namely\n  kernel/sys_ni.c, include/linux/syscalls.h and include/linux/compat.h\"\n\n* 'syscalls-next' of git://git.kernel.org/pub/scm/linux/kernel/git/brodo/linux: (109 commits)\n  bpf: whitelist all syscalls for error injection\n  kernel/sys_ni: remove {sys_,sys_compat} from cond_syscall definitions\n  kernel/sys_ni: sort cond_syscall() entries\n  syscalls/x86: auto-create compat_sys_*() prototypes\n  syscalls: sort syscall prototypes in include/linux/compat.h\n  net: remove compat_sys_*() prototypes from net/compat.h\n  syscalls: sort syscall prototypes in include/linux/syscalls.h\n  kexec: move sys_kexec_load() prototype to syscalls.h\n  x86/sigreturn: use SYSCALL_DEFINE0\n  x86: fix sys_sigreturn() return type to be long, not unsigned long\n  x86/ioport: add ksys_ioperm() helper; remove in-kernel calls to sys_ioperm()\n  mm: add ksys_readahead() helper; remove in-kernel calls to sys_readahead()\n  mm: add ksys_mmap_pgoff() helper; remove in-kernel calls to sys_mmap_pgoff()\n  mm: add ksys_fadvise64_64() helper; remove in-kernel call to sys_fadvise64_64()\n  fs: add ksys_fallocate() wrapper; remove in-kernel calls to sys_fallocate()\n  fs: add ksys_p{read,write}64() helpers; remove in-kernel calls to syscalls\n  fs: add ksys_truncate() wrapper; remove in-kernel calls to sys_truncate()\n  fs: add ksys_sync_file_range helper(); remove in-kernel calls to syscall\n  kernel: add ksys_setsid() helper; remove in-kernel call to sys_setsid()\n  kernel: add ksys_unshare() helper; remove in-kernel calls to sys_unshare()\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Mon Apr 2 21:22:12 2018 -0700",
  "author_date_iso": "2018-04-02T21:22:12-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Apr 2 21:22:12 2018 -0700",
  "committer_date_iso": "2018-04-02T21:22:12-07:00",
  "files_changed": [
    "fs/namei.c",
    "init/main.c",
    "ipc/shm.c",
    "kernel/sched/core.c",
    "mm/mempolicy.c",
    "mm/nommu.c",
    "net/socket.c"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "Documentation/process/adding-syscalls.rst",
      "insertions": 33,
      "deletions": 1
    },
    {
      "file": "arch/alpha/kernel/osf_sys.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm/kernel/sys_arm.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/sys.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/ia64/kernel/sys_ia64.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/m68k/kernel/sys_m68k.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/microblaze/kernel/sys_microblaze.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/mips/kernel/linux32.c",
      "insertions": 11,
      "deletions": 11
    },
    {
      "file": "arch/mips/kernel/syscall.c",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "arch/parisc/kernel/sys_parisc.c",
      "insertions": 15,
      "deletions": 15
    },
    {
      "file": "arch/powerpc/kernel/sys_ppc32.c",
      "insertions": 9,
      "deletions": 9
    },
    {
      "file": "arch/powerpc/kernel/syscalls.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/riscv/kernel/sys_riscv.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/s390/kernel/compat_linux.c",
      "insertions": 19,
      "deletions": 18
    },
    {
      "file": "arch/s390/kernel/sys_s390.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/sh/kernel/sys_sh.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/sh/kernel/sys_sh32.c",
      "insertions": 6,
      "deletions": 6
    },
    {
      "file": "arch/sparc/kernel/setup_32.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/sparc/kernel/sys_sparc32.c",
      "insertions": 13,
      "deletions": 13
    },
    {
      "file": "arch/sparc/kernel/sys_sparc_32.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/sparc/kernel/sys_sparc_64.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/um/kernel/syscall.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/entry/syscalls/syscall_32.tbl",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/x86/ia32/ia32_signal.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/x86/ia32/sys_ia32.c",
      "insertions": 23,
      "deletions": 27
    },
    {
      "file": "arch/x86/include/asm/sys_ia32.h",
      "insertions": 0,
      "deletions": 67
    },
    {
      "file": "arch/x86/include/asm/syscalls.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/ioport.c",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/signal.c",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "arch/x86/kernel/sys_x86_64.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/xtensa/kernel/syscall.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/base/devtmpfs.c",
      "insertions": 6,
      "deletions": 5
    },
    {
      "file": "drivers/tty/sysrq.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/tty/vt/vt_ioctl.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "fs/autofs4/dev-ioctl.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/binfmt_misc.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/dcookies.c",
      "insertions": 8,
      "deletions": 3
    },
    {
      "file": "fs/eventfd.c",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "fs/eventpoll.c",
      "insertions": 17,
      "deletions": 6
    },
    {
      "file": "fs/fcntl.c",
      "insertions": 9,
      "deletions": 3
    },
    {
      "file": "fs/file.c",
      "insertions": 14,
      "deletions": 3
    },
    {
      "file": "fs/hostfs/hostfs.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/hostfs/hostfs_kern.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/hostfs/hostfs_user.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/internal.h",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "fs/ioctl.c",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "fs/namei.c",
      "insertions": 45,
      "deletions": 16
    },
    {
      "file": "fs/namespace.c",
      "insertions": 15,
      "deletions": 4
    },
    {
      "file": "fs/notify/fanotify/fanotify_user.c",
      "insertions": 10,
      "deletions": 4
    },
    {
      "file": "fs/notify/inotify/inotify_user.c",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "fs/open.c",
      "insertions": 59,
      "deletions": 18
    },
    {
      "file": "fs/pipe.c",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "fs/quota/compat.c",
      "insertions": 7,
      "deletions": 6
    },
    {
      "file": "fs/quota/quota.c",
      "insertions": 8,
      "deletions": 2
    },
    {
      "file": "fs/read_write.c",
      "insertions": 36,
      "deletions": 9
    },
    {
      "file": "fs/readdir.c",
      "insertions": 9,
      "deletions": 2
    },
    {
      "file": "fs/select.c",
      "insertions": 21,
      "deletions": 8
    },
    {
      "file": "fs/signalfd.c",
      "insertions": 22,
      "deletions": 9
    },
    {
      "file": "fs/splice.c",
      "insertions": 9,
      "deletions": 3
    },
    {
      "file": "fs/stat.c",
      "insertions": 9,
      "deletions": 3
    },
    {
      "file": "fs/sync.c",
      "insertions": 15,
      "deletions": 4
    },
    {
      "file": "fs/utimes.c",
      "insertions": 20,
      "deletions": 5
    },
    {
      "file": "include/linux/compat.h",
      "insertions": 370,
      "deletions": 274
    },
    {
      "file": "include/linux/futex.h",
      "insertions": 10,
      "deletions": 3
    },
    {
      "file": "include/linux/kexec.h",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "include/linux/quotaops.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "include/linux/socket.h",
      "insertions": 33,
      "deletions": 4
    },
    {
      "file": "include/linux/syscalls.h",
      "insertions": 905,
      "deletions": 606
    },
    {
      "file": "include/net/compat.h",
      "insertions": 0,
      "deletions": 11
    },
    {
      "file": "init/do_mounts.c",
      "insertions": 13,
      "deletions": 13
    },
    {
      "file": "init/do_mounts.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "init/do_mounts_initrd.c",
      "insertions": 21,
      "deletions": 21
    },
    {
      "file": "init/do_mounts_md.c",
      "insertions": 15,
      "deletions": 14
    },
    {
      "file": "init/do_mounts_rd.c",
      "insertions": 20,
      "deletions": 20
    },
    {
      "file": "init/initramfs.c",
      "insertions": 26,
      "deletions": 26
    },
    {
      "file": "init/main.c",
      "insertions": 5,
      "deletions": 4
    },
    {
      "file": "init/noinitramfs.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "ipc/msg.c",
      "insertions": 50,
      "deletions": 10
    },
    {
      "file": "ipc/sem.c",
      "insertions": 36,
      "deletions": 8
    },
    {
      "file": "ipc/shm.c",
      "insertions": 24,
      "deletions": 4
    },
    {
      "file": "ipc/syscall.c",
      "insertions": 31,
      "deletions": 27
    },
    {
      "file": "ipc/util.h",
      "insertions": 31,
      "deletions": 0
    },
    {
      "file": "kernel/compat.c",
      "insertions": 0,
      "deletions": 55
    },
    {
      "file": "kernel/exit.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/fork.c",
      "insertions": 8,
      "deletions": 3
    },
    {
      "file": "kernel/kexec.c",
      "insertions": 39,
      "deletions": 13
    },
    {
      "file": "kernel/pid_namespace.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "kernel/power/hibernate.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/power/suspend.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/power/user.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/sched/core.c",
      "insertions": 6,
      "deletions": 2
    },
    {
      "file": "kernel/signal.c",
      "insertions": 22,
      "deletions": 7
    },
    {
      "file": "kernel/sys.c",
      "insertions": 63,
      "deletions": 11
    },
    {
      "file": "kernel/sys_ni.c",
      "insertions": 389,
      "deletions": 228
    },
    {
      "file": "kernel/uid16.c",
      "insertions": 13,
      "deletions": 12
    },
    {
      "file": "kernel/uid16.h",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "kernel/umh.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "mm/fadvise.c",
      "insertions": 8,
      "deletions": 2
    },
    {
      "file": "mm/mempolicy.c",
      "insertions": 77,
      "deletions": 15
    },
    {
      "file": "mm/migrate.c",
      "insertions": 35,
      "deletions": 4
    },
    {
      "file": "mm/mmap.c",
      "insertions": 12,
      "deletions": 5
    },
    {
      "file": "mm/nommu.c",
      "insertions": 12,
      "deletions": 5
    },
    {
      "file": "mm/readahead.c",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "net/compat.c",
      "insertions": 97,
      "deletions": 39
    },
    {
      "file": "net/socket.c",
      "insertions": 161,
      "deletions": 73
    }
  ],
  "total_insertions": 3129,
  "total_deletions": 1868,
  "total_changes": 4997,
  "parents": [
    "21035965f60b0502fc6537b232839389bb4ce664",
    "c9a211951c7c79cfb5de888d7d9550872868b086"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7",
    "v4.18",
    "v4.18-rc1"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "ipc/shm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/socket.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/mempolicy.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "init/main.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/namei.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/sched/core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/nommu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}