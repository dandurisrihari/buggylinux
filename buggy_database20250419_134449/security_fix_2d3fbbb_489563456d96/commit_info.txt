Commit Hash: 2d3fbbb391e280724f7f7804ab00ff61cf1b6a4c
Subject: Add hard_irq_disable()


Security Keywords:
- injection

Full commit message:
Add hard_irq_disable()

Some architectures, like powerpc, implement lazy disabling of interrupts.
That means that on those, local_irq_disable() doesn't actually disable
interrupts on the CPU, but only sets some per CPU flag which cause them to be
disabled only if an interrupt actually occurs.

However, in some cases, such as stop_machine, we really want interrupts to be
fully disabled.  For example, I have code using stop machine to do ECC error
injection, used to verify operations of the ECC hardware, that sort of thing.
It really needs to make sure that nothing is actually writing to memory while
the injection happens.  Similar examples can be found in other low level bits
and pieces.

This patch implements a generic hard_irq_disable() function which is meant to
be called -after- local_irq_disable() and ensures that interrupts are fully
disabled on that CPU.  The default implementation is a nop, though powerpc
does already provide an appropriate one.

Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Cc: Rusty Russell <rusty@rustcorp.com.au>
Cc: Paul Mackerras <paulus@samba.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Metadata:
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Author Date: Thu May 10 22:22:46 2007 -0700
Committer: Linus Torvalds <torvalds@woody.linux-foundation.org>
Commit Date: Fri May 11 08:29:34 2007 -0700

Files Changed: 1
Lines Added: 10
Lines Removed: 0
Total Changes: 10
