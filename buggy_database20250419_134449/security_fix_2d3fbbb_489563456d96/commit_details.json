{
  "hash": "2d3fbbb391e280724f7f7804ab00ff61cf1b6a4c",
  "hash_short": "2d3fbbb3",
  "subject": "Add hard_irq_disable()",
  "body": "Some architectures, like powerpc, implement lazy disabling of interrupts.\nThat means that on those, local_irq_disable() doesn't actually disable\ninterrupts on the CPU, but only sets some per CPU flag which cause them to be\ndisabled only if an interrupt actually occurs.\n\nHowever, in some cases, such as stop_machine, we really want interrupts to be\nfully disabled.  For example, I have code using stop machine to do ECC error\ninjection, used to verify operations of the ECC hardware, that sort of thing.\nIt really needs to make sure that nothing is actually writing to memory while\nthe injection happens.  Similar examples can be found in other low level bits\nand pieces.\n\nThis patch implements a generic hard_irq_disable() function which is meant to\nbe called -after- local_irq_disable() and ensures that interrupts are fully\ndisabled on that CPU.  The default implementation is a nop, though powerpc\ndoes already provide an appropriate one.\n\nSigned-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>\nCc: Rusty Russell <rusty@rustcorp.com.au>\nCc: Paul Mackerras <paulus@samba.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "Add hard_irq_disable()\n\nSome architectures, like powerpc, implement lazy disabling of interrupts.\nThat means that on those, local_irq_disable() doesn't actually disable\ninterrupts on the CPU, but only sets some per CPU flag which cause them to be\ndisabled only if an interrupt actually occurs.\n\nHowever, in some cases, such as stop_machine, we really want interrupts to be\nfully disabled.  For example, I have code using stop machine to do ECC error\ninjection, used to verify operations of the ECC hardware, that sort of thing.\nIt really needs to make sure that nothing is actually writing to memory while\nthe injection happens.  Similar examples can be found in other low level bits\nand pieces.\n\nThis patch implements a generic hard_irq_disable() function which is meant to\nbe called -after- local_irq_disable() and ensures that interrupts are fully\ndisabled on that CPU.  The default implementation is a nop, though powerpc\ndoes already provide an appropriate one.\n\nSigned-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>\nCc: Rusty Russell <rusty@rustcorp.com.au>\nCc: Paul Mackerras <paulus@samba.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Benjamin Herrenschmidt",
  "author_email": "benh@kernel.crashing.org",
  "author_date": "Thu May 10 22:22:46 2007 -0700",
  "author_date_iso": "2007-05-10T22:22:46-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@woody.linux-foundation.org",
  "committer_date": "Fri May 11 08:29:34 2007 -0700",
  "committer_date_iso": "2007-05-11T08:29:34-07:00",
  "files_changed": [
    "include/linux/interrupt.h"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "include/linux/interrupt.h",
      "insertions": 10,
      "deletions": 0
    }
  ],
  "total_insertions": 10,
  "total_deletions": 0,
  "total_changes": 10,
  "parents": [
    "e1fa2e136ff64a3814a98c03d46320b9e80d29c8"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.22",
    "v2.6.22-rc1",
    "v2.6.22-rc2",
    "v2.6.22-rc3",
    "v2.6.22-rc4",
    "v2.6.22-rc5",
    "v2.6.22-rc6",
    "v2.6.22-rc7",
    "v2.6.23",
    "v2.6.23-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/interrupt.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}