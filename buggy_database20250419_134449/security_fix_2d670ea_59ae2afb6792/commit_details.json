{
  "hash": "2d670ea2bd53a9792f453bb5b97cb8ef695988ff",
  "hash_short": "2d670ea2",
  "subject": "ALSA: jack: implement software jack injection via debugfs",
  "body": "This change adds audio jack injection feature through debugfs, with\nthis feature, we could validate alsa userspace changes by injecting\nplugin or plugout events to the non-phantom audio jacks.\n\nWith this change, the sound core will build the folders\n$debugfs_mount_dir/sound/cardN if SND_DEBUG and DEBUG_FS are enabled.\nAnd if users also enable the SND_JACK_INJECTION_DEBUG, the jack\ninjection nodes will be built in the folder cardN like below:\n\n$tree $debugfs_mount_dir/sound\n$debugfs_mount_dir/sound\n\u251c\u2500\u2500 card0\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 HDMI_DP_pcm_10_Jack\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 jackin_inject\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 kctl_id\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mask_bits\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 status\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 sw_inject_enable\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 type\n...\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 HDMI_DP_pcm_9_Jack\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 jackin_inject\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 kctl_id\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 mask_bits\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 status\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 sw_inject_enable\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 type\n\u2514\u2500\u2500 card1\n    \u251c\u2500\u2500 HDMI_DP_pcm_5_Jack\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 jackin_inject\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 kctl_id\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 mask_bits\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 status\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 sw_inject_enable\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 type\n    ...\n    \u251c\u2500\u2500 Headphone_Jack\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 jackin_inject\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 kctl_id\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 mask_bits\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 status\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 sw_inject_enable\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 type\n    \u2514\u2500\u2500 Headset_Mic_Jack\n        \u251c\u2500\u2500 jackin_inject\n        \u251c\u2500\u2500 kctl_id\n        \u251c\u2500\u2500 mask_bits\n        \u251c\u2500\u2500 status\n        \u251c\u2500\u2500 sw_inject_enable\n        \u2514\u2500\u2500 type\n\nThe nodes kctl_id, mask_bits, status and type are read-only, users\ncould check jack or jack_kctl's information through them.\n\nThe nodes sw_inject_enable and jackin_inject are directly used for\ninjection. The sw_inject_enable is read-write, users could check if\nsoftware injection is enabled or not on this jack, and users could\necho 1 or 0 to enable or disable software injection on this jack. Once\nthe injection is enabled, the jack will not change by hardware events\nanymore, once the injection is disabled, the jack will restore the\nlast reported hardware events to the jack. The jackin_inject is\nwrite-only, if the injection is enabled, users could echo 1 or 0 to\nthis node to inject plugin or plugout events to this jack.\n\nFor the detailed usage information on these nodes, please refer to\nDocumentation/sound/designs/jack-injection.rst.\n\nReviewed-by: Takashi Iwai <tiwai@suse.de>\nReviewed-by: Jaroslav Kysela <perex@perex.cz>\nReviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>\nSigned-off-by: Hui Wang <hui.wang@canonical.com>\nLink: https://lore.kernel.org/r/20210127085639.74954-2-hui.wang@canonical.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
  "full_message": "ALSA: jack: implement software jack injection via debugfs\n\nThis change adds audio jack injection feature through debugfs, with\nthis feature, we could validate alsa userspace changes by injecting\nplugin or plugout events to the non-phantom audio jacks.\n\nWith this change, the sound core will build the folders\n$debugfs_mount_dir/sound/cardN if SND_DEBUG and DEBUG_FS are enabled.\nAnd if users also enable the SND_JACK_INJECTION_DEBUG, the jack\ninjection nodes will be built in the folder cardN like below:\n\n$tree $debugfs_mount_dir/sound\n$debugfs_mount_dir/sound\n\u251c\u2500\u2500 card0\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 HDMI_DP_pcm_10_Jack\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 jackin_inject\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 kctl_id\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mask_bits\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 status\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 sw_inject_enable\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 type\n...\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 HDMI_DP_pcm_9_Jack\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 jackin_inject\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 kctl_id\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 mask_bits\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 status\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 sw_inject_enable\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 type\n\u2514\u2500\u2500 card1\n    \u251c\u2500\u2500 HDMI_DP_pcm_5_Jack\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 jackin_inject\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 kctl_id\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 mask_bits\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 status\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 sw_inject_enable\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 type\n    ...\n    \u251c\u2500\u2500 Headphone_Jack\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 jackin_inject\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 kctl_id\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 mask_bits\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 status\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 sw_inject_enable\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 type\n    \u2514\u2500\u2500 Headset_Mic_Jack\n        \u251c\u2500\u2500 jackin_inject\n        \u251c\u2500\u2500 kctl_id\n        \u251c\u2500\u2500 mask_bits\n        \u251c\u2500\u2500 status\n        \u251c\u2500\u2500 sw_inject_enable\n        \u2514\u2500\u2500 type\n\nThe nodes kctl_id, mask_bits, status and type are read-only, users\ncould check jack or jack_kctl's information through them.\n\nThe nodes sw_inject_enable and jackin_inject are directly used for\ninjection. The sw_inject_enable is read-write, users could check if\nsoftware injection is enabled or not on this jack, and users could\necho 1 or 0 to enable or disable software injection on this jack. Once\nthe injection is enabled, the jack will not change by hardware events\nanymore, once the injection is disabled, the jack will restore the\nlast reported hardware events to the jack. The jackin_inject is\nwrite-only, if the injection is enabled, users could echo 1 or 0 to\nthis node to inject plugin or plugout events to this jack.\n\nFor the detailed usage information on these nodes, please refer to\nDocumentation/sound/designs/jack-injection.rst.\n\nReviewed-by: Takashi Iwai <tiwai@suse.de>\nReviewed-by: Jaroslav Kysela <perex@perex.cz>\nReviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>\nSigned-off-by: Hui Wang <hui.wang@canonical.com>\nLink: https://lore.kernel.org/r/20210127085639.74954-2-hui.wang@canonical.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
  "author_name": "Hui Wang",
  "author_email": "hui.wang@canonical.com",
  "author_date": "Wed Jan 27 16:56:39 2021 +0800",
  "author_date_iso": "2021-01-27T16:56:39+08:00",
  "committer_name": "Takashi Iwai",
  "committer_email": "tiwai@suse.de",
  "committer_date": "Tue Feb 2 10:37:07 2021 +0100",
  "committer_date_iso": "2021-02-02T10:37:07+01:00",
  "files_changed": [
    "Documentation/sound/designs/index.rst",
    "Documentation/sound/designs/jack-injection.rst",
    "include/sound/core.h",
    "include/sound/jack.h",
    "sound/core/Kconfig",
    "sound/core/init.c",
    "sound/core/jack.c",
    "sound/core/sound.c"
  ],
  "files_changed_count": 8,
  "stats": [
    {
      "file": "Documentation/sound/designs/index.rst",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "Documentation/sound/designs/jack-injection.rst",
      "insertions": 166,
      "deletions": 0
    },
    {
      "file": "include/sound/core.h",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "include/sound/jack.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "sound/core/Kconfig",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "sound/core/init.c",
      "insertions": 16,
      "deletions": 0
    },
    {
      "file": "sound/core/jack.c",
      "insertions": 300,
      "deletions": 4
    },
    {
      "file": "sound/core/sound.c",
      "insertions": 13,
      "deletions": 0
    }
  ],
  "total_insertions": 512,
  "total_deletions": 4,
  "total_changes": 516,
  "parents": [
    "da2a040ee7cfe1dd57d5bec7906cb979c5787a86"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/sound/designs/index.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/sound/designs/jack-injection.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/sound/core.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "sound/core/init.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "sound/core/jack.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/sound/jack.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "sound/core/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "sound/core/sound.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}