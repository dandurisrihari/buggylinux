commit 65e006ff4bb06d42b532f866a846db6e4e637723
Author: Chandrabhanu Mahapatra <cmahapatra@ti.com>
Date:   Fri May 11 19:19:55 2012 +0530

    OMAPDSS: DISPC: Support rotation through TILER
    
    TILER is a block in OMAP4's DMM which lets DSS fetch frames in a rotated manner.
    Physical memory can be mapped to a portion of OMAP's system address space called
    TILER address space. The TILER address space is split into 8 views. Each view
    represents a rotated or mirrored form of the mapped physical memory. When a
    DISPC overlay's base address is programmed to one of these views, the TILER
    fetches the pixels according to the orientation of the view. A view is further
    split into 4 containers, each container holds elements of a particular size.
    Rotation can be achieved at the granularity of elements in the container. For
    more information on TILER, refer to the Memory Subsytem section in OMAP4 TRM.
    Rotation type TILER has been added which is used to exploit the capabilities of
    these 8 views for performing various rotations.
    
    When fetching from addresses mapped to TILER space, the DISPC DMA can fetch
    pixels in either 1D or 2D bursts. The fetch depends on which TILER container we
    are accessing. Accessing 8, 16 and 32 bit sized containers requires 2D bursts,
    and page mode sized containers require 1D bursts.
    
    The DSS2 user is expected to provide the Tiler address of the view that it is
    interested in. This is passed to the paddr and p_uv_addr parameters in
    omap_overlay_info. It is also expected to provide the stride value based on the
    view's orientation and container type, this should be passed to the screen_width
    parameter of omap_overlay_info. In calc_tiler_rotation_offset screen_width is
    used to calculate the required row_inc for DISPC. x_predecim and y_predecim are
    also used to calculate row_inc and pix_inc thereby adding predecimation support
    for TILER.
    
    Signed-off-by: Chandrabhanu Mahapatra <cmahapatra@ti.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>

diff --git a/drivers/video/omap2/dss/dss_features.h b/drivers/video/omap2/dss/dss_features.h
index 3736367089a1..bdf469f080e7 100644
--- a/drivers/video/omap2/dss/dss_features.h
+++ b/drivers/video/omap2/dss/dss_features.h
@@ -62,6 +62,7 @@ enum dss_feat_id {
 	FEAT_FIFO_MERGE,
 	/* An unknown HW bug causing the normal FIFO thresholds not to work */
 	FEAT_OMAP3_DSI_FIFO_BUG,
+	FEAT_BURST_2D,
 };
 
 /* DSS register field id */
@@ -110,6 +111,8 @@ const char *dss_feat_get_clk_source_name(enum omap_dss_clk_source id);
 u32 dss_feat_get_buffer_size_unit(void);	/* in bytes */
 u32 dss_feat_get_burst_size_unit(void);		/* in bytes */
 
+bool dss_feat_rotation_type_supported(enum omap_dss_rotation_type rot_type);
+
 bool dss_has_feature(enum dss_feat_id id);
 void dss_feat_get_reg_field(enum dss_feat_reg_field id, u8 *start, u8 *end);
 void dss_features_init(void);