Commit Hash: 6040e57658eee6eb1315a26119101ca832d1f854
Subject: Make the hardened user-copy code depend on having a hardened allocator


Security Keywords:
- hardening

Full commit message:
Make the hardened user-copy code depend on having a hardened allocator

The kernel test robot reported a usercopy failure in the new hardened
sanity checks, due to a page-crossing copy of the FPU state into the
task structure.

This happened because the kernel test robot was testing with SLOB, which
doesn't actually do the required book-keeping for slab allocations, and
as a result the hardening code didn't realize that the task struct
allocation was one single allocation - and the sanity checks fail.

Since SLOB doesn't even claim to support hardening (and you really
shouldn't use it), the straightforward solution is to just make the
usercopy hardening code depend on the allocator supporting it.

Reported-by: kernel test robot <xiaolong.ye@intel.com>
Cc: Kees Cook <keescook@chromium.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Metadata:
Author: Linus Torvalds <torvalds@linux-foundation.org>
Author Date: Fri Aug 19 12:47:01 2016 -0700
Committer: Linus Torvalds <torvalds@linux-foundation.org>
Commit Date: Fri Aug 19 12:47:01 2016 -0700

Files Changed: 1
Lines Added: 1
Lines Removed: 0
Total Changes: 1
