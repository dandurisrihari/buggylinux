commit 16893dd23f6d1e3a4dd6da272ef9960825da3ebd
Merge: 425b8481750a 5b99dd12fe53
Author: Dave Airlie <airlied@redhat.com>
Date:   Thu Feb 27 07:13:27 2025 +1000

    Merge tag 'drm-intel-next-2025-02-24' of https://gitlab.freedesktop.org/drm/i915/kernel into drm-next
    
    drm/i915 feature pull for v6.15:
    
    Features and functionality:
    - Enable DP 128b/132b SST DSC (Jani, Imre)
    - Allow DSB to perform commits when VRR is enabled (Ville)
    - Compute HDMI PLLs for SNPS/C10 PHYs for rates not in fixed tables (Ankit)
    - Allow DSB usage when PSR is enabled on LNL+ (Jouni)
    - Enable Panel Replay mode change without full modeset (Jouni)
    - Enable async flips with compressed buffers on ICL+ (Ville)
    - Support luminance based brightness control via DPCD for eDP (Suraj)
    - Enable VRR enable/disable without full modeset (Mitul, Ankit)
    - Add debugfs facility for force testing HDCP 1.4 (Suraj)
    - Add scaler tracepoints, improve plane tracepoints (Ville)
    - Improve DMC wakelock debugging facilities (Gustavo)
    - Allow GuC SLPC default strategies on MTL+ for performance (Rodrigo)
    - Provide more information on display faults (Ville)
    
    Refactoring and cleanups:
    - Continue conversions to struct intel_display (Ville, Jani, Suraj, Imre)
    - Joiner and Y plane reorganization (Ville)
    - Move HDCP debugfs to intel_hdcp.c (Jani)
    - Clean up and unify LSPCON interfaces (Jani)
    - Move code out of intel_display.c to reduce its size (Ville)
    - Clean up and simplify DDI port enabling/disabling (Imre)
    - Make LPT LP a dedicated PCH type, refactor (Jani)
    - Simplify DSC range BPG offset calculation (Ankit)
    - Scaler cleanups (Ville)
    - Remove unused code from GVT (David Alan Gilbert)
    - Improve plane debugging (Ville)
    - DSB and VRR refactoring (Ville)
    
    Fixes:
    - Check if vblank is sufficient for DSC prefill and scaler (Mitul)
    - Fix Mesa clear color alignment regression (Ville)
    - Add missing TC DP PHY lane stagger delay (Imre)
    - Fix DSB + VRR usage for PTL+ (Ville)
    - Improve robustness of display VT-d workarounds (Ville)
    - Fix platforms for dbuf tracker state service programming (Ravi)
    - Fix DMC wakelock support conditions (Gustavo)
    - Amend DMC wakelock register ranges (Gustavo)
    - Disable the Common Primary Timing Generator (CMTG) (Gustavo)
    - Enable C20 PHY SSC (Suraj)
    - Add workaround for DKL PHY DP mode write (Nemesa)
    - Fix build warnings on clamp() usage (Guenter Roeck, Ankit)
    - Fix error handling while adding a connector (Imre)
    - Avoid full modeset at probe on vblank delay mismatches (Ville)
    - Fix encoder HDMI check for HDCP line rekeying (Suraj)
    - Fix HDCP repeater authentication during topology change (Suraj)
    - Handle display PHY power state reset for power savings (Mika)
    - Fix typos all over the place (Nitin)
    - Update HDMI TMDS C20 parameters for various platforms (Dnyaneshwar)
    - Guarantee a minimum hblank time for 128b/132b and 8b/10b MST (Arun, Imre)
    - Do not hardcode LSPCON settle timeout (Giedrius Statkevičius)
    
    Xe driver changes:
    - Re-use display vmas when possible (Maarten)
    - Remove double pageflip (Maarten)
    - Enable DP tunneling (Imre)
    - Separate i915 and xe tracepoints (Ville)
    
    DRM core changes:
    - Increase DPCD eDP display control CAP size to 5 bytes (Suraj)
    - Add DPCD eDP version 1.5 definition (Suraj)
    - Add timeout parameter to drm_lspcon_set_mode() (Giedrius Statkevičius)
    
    Merges:
    - Backmerge drm-next (Jani)
    
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    
    From: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/87h64j7b7n.fsf@intel.com

diff --cc drivers/gpu/drm/i915/display/intel_lvds.c
index 4b0dce169d4e,12bbd7ec9d81..7ed8625193fe
--- a/drivers/gpu/drm/i915/display/intel_lvds.c
+++ b/drivers/gpu/drm/i915/display/intel_lvds.c
@@@ -390,16 -392,16 +392,16 @@@ static void intel_lvds_shutdown(struct 
  
  static enum drm_mode_status
  intel_lvds_mode_valid(struct drm_connector *_connector,
 -		      struct drm_display_mode *mode)
 +		      const struct drm_display_mode *mode)
  {
+ 	struct intel_display *display = to_intel_display(_connector->dev);
  	struct intel_connector *connector = to_intel_connector(_connector);
- 	struct drm_i915_private *i915 = to_i915(connector->base.dev);
  	const struct drm_display_mode *fixed_mode =
  		intel_panel_fixed_mode(connector, mode);
- 	int max_pixclk = to_i915(connector->base.dev)->display.cdclk.max_dotclk_freq;
+ 	int max_pixclk = display->cdclk.max_dotclk_freq;
  	enum drm_mode_status status;
  
- 	status = intel_cpu_transcoder_mode_valid(i915, mode);
+ 	status = intel_cpu_transcoder_mode_valid(display, mode);
  	if (status != MODE_OK)
  		return status;