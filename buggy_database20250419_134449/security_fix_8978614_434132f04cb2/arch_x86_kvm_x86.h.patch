commit 897861479c0640ed93ec82db78f8d839df32c4ac
Author: Mohammed Gamal <mgamal@redhat.com>
Date:   Fri Jul 10 17:48:03 2020 +0200

    KVM: x86: Add helper functions for illegal GPA checking and page fault injection
    
    This patch adds two helper functions that will be used to support virtualizing
    MAXPHYADDR in both kvm-intel.ko and kvm.ko.
    
    kvm_fixup_and_inject_pf_error() injects a page fault for a user-specified GVA,
    while kvm_mmu_is_illegal_gpa() checks whether a GPA exceeds vCPU address limits.
    
    Signed-off-by: Mohammed Gamal <mgamal@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <20200710154811.418214-2-mgamal@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/x86.h b/arch/x86/kvm/x86.h
index 3308c3ccc0fd..995ab696dcf0 100644
--- a/arch/x86/kvm/x86.h
+++ b/arch/x86/kvm/x86.h
@@ -272,6 +272,7 @@ int kvm_mtrr_get_msr(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata);
 bool kvm_mtrr_check_gfn_range_consistency(struct kvm_vcpu *vcpu, gfn_t gfn,
 					  int page_num);
 bool kvm_vector_hashing_enabled(void);
+void kvm_fixup_and_inject_pf_error(struct kvm_vcpu *vcpu, gva_t gva, u16 error_code);
 int x86_emulate_instruction(struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa,
 			    int emulation_type, void *insn, int insn_len);
 fastpath_t handle_fastpath_set_msr_irqoff(struct kvm_vcpu *vcpu);