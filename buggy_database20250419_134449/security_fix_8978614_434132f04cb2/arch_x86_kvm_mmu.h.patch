commit 897861479c0640ed93ec82db78f8d839df32c4ac
Author: Mohammed Gamal <mgamal@redhat.com>
Date:   Fri Jul 10 17:48:03 2020 +0200

    KVM: x86: Add helper functions for illegal GPA checking and page fault injection
    
    This patch adds two helper functions that will be used to support virtualizing
    MAXPHYADDR in both kvm-intel.ko and kvm.ko.
    
    kvm_fixup_and_inject_pf_error() injects a page fault for a user-specified GVA,
    while kvm_mmu_is_illegal_gpa() checks whether a GPA exceeds vCPU address limits.
    
    Signed-off-by: Mohammed Gamal <mgamal@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <20200710154811.418214-2-mgamal@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/mmu.h b/arch/x86/kvm/mmu.h
index 75125ae57e50..9f6554613bab 100644
--- a/arch/x86/kvm/mmu.h
+++ b/arch/x86/kvm/mmu.h
@@ -4,6 +4,7 @@
 
 #include <linux/kvm_host.h>
 #include "kvm_cache_regs.h"
+#include "cpuid.h"
 
 #define PT64_PT_BITS 9
 #define PT64_ENT_PER_PAGE (1 << PT64_PT_BITS)
@@ -150,6 +151,11 @@ static inline bool is_write_protection(struct kvm_vcpu *vcpu)
 	return kvm_read_cr0_bits(vcpu, X86_CR0_WP);
 }
 
+static inline bool kvm_mmu_is_illegal_gpa(struct kvm_vcpu *vcpu, gpa_t gpa)
+{
+        return (gpa >= BIT_ULL(cpuid_maxphyaddr(vcpu)));
+}
+
 /*
  * Check if a given access (described through the I/D, W/R and U/S bits of a
  * page fault error code pfec) causes a permission fault with the given PTE