{
  "hash": "23cc6ef6fd453b13502caae23130844e7d6ed0fe",
  "hash_short": "23cc6ef6",
  "subject": "fs: remove accidental overflow during wraparound check",
  "body": "Running syzkaller with the newly enabled signed integer overflow\nsanitizer produces this report:\n\n[  195.401651] ------------[ cut here ]------------\n[  195.404808] UBSAN: signed-integer-overflow in ../fs/open.c:321:15\n[  195.408739] 9223372036854775807 + 562984447377399 cannot be represented in type 'loff_t' (aka 'long long')\n[  195.414683] CPU: 1 PID: 703 Comm: syz-executor.0 Not tainted 6.8.0-rc2-00039-g14de58dbe653-dirty #11\n[  195.420138] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n[  195.425804] Call Trace:\n[  195.427360]  <TASK>\n[  195.428791]  dump_stack_lvl+0x93/0xd0\n[  195.431150]  handle_overflow+0x171/0x1b0\n[  195.433640]  vfs_fallocate+0x459/0x4f0\n...\n[  195.490053] ------------[ cut here ]------------\n[  195.493146] UBSAN: signed-integer-overflow in ../fs/open.c:321:61\n[  195.497030] 9223372036854775807 + 562984447377399 cannot be represented in type 'loff_t' (aka 'long long)\n[  195.502940] CPU: 1 PID: 703 Comm: syz-executor.0 Not tainted 6.8.0-rc2-00039-g14de58dbe653-dirty #11\n[  195.508395] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n[  195.514075] Call Trace:\n[  195.515636]  <TASK>\n[  195.517000]  dump_stack_lvl+0x93/0xd0\n[  195.519255]  handle_overflow+0x171/0x1b0\n[  195.521677]  vfs_fallocate+0x4cb/0x4f0\n[  195.524033]  __x64_sys_fallocate+0xb2/0xf0\n\nHistorically, the signed integer overflow sanitizer did not work in the\nkernel due to its interaction with `-fwrapv` but this has since been\nchanged [1] in the newest version of Clang. It was re-enabled in the\nkernel with Commit 557f8c582a9ba8ab (\"ubsan: Reintroduce signed overflow\nsanitizer\").\n\nLet's use the check_add_overflow helper to first verify the addition\nstays within the bounds of its type (long long); then we can use that\nsum for the following check.\n\nLink: https://github.com/llvm/llvm-project/pull/82432 [1]\nCloses: https://github.com/KSPP/linux/issues/356\nCc: linux-hardening@vger.kernel.org\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20240513-b4-sio-vfs_fallocate-v2-1-db415872fb16@google.com\nReviewed-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Christian Brauner <brauner@kernel.org>",
  "full_message": "fs: remove accidental overflow during wraparound check\n\nRunning syzkaller with the newly enabled signed integer overflow\nsanitizer produces this report:\n\n[  195.401651] ------------[ cut here ]------------\n[  195.404808] UBSAN: signed-integer-overflow in ../fs/open.c:321:15\n[  195.408739] 9223372036854775807 + 562984447377399 cannot be represented in type 'loff_t' (aka 'long long')\n[  195.414683] CPU: 1 PID: 703 Comm: syz-executor.0 Not tainted 6.8.0-rc2-00039-g14de58dbe653-dirty #11\n[  195.420138] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n[  195.425804] Call Trace:\n[  195.427360]  <TASK>\n[  195.428791]  dump_stack_lvl+0x93/0xd0\n[  195.431150]  handle_overflow+0x171/0x1b0\n[  195.433640]  vfs_fallocate+0x459/0x4f0\n...\n[  195.490053] ------------[ cut here ]------------\n[  195.493146] UBSAN: signed-integer-overflow in ../fs/open.c:321:61\n[  195.497030] 9223372036854775807 + 562984447377399 cannot be represented in type 'loff_t' (aka 'long long)\n[  195.502940] CPU: 1 PID: 703 Comm: syz-executor.0 Not tainted 6.8.0-rc2-00039-g14de58dbe653-dirty #11\n[  195.508395] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n[  195.514075] Call Trace:\n[  195.515636]  <TASK>\n[  195.517000]  dump_stack_lvl+0x93/0xd0\n[  195.519255]  handle_overflow+0x171/0x1b0\n[  195.521677]  vfs_fallocate+0x4cb/0x4f0\n[  195.524033]  __x64_sys_fallocate+0xb2/0xf0\n\nHistorically, the signed integer overflow sanitizer did not work in the\nkernel due to its interaction with `-fwrapv` but this has since been\nchanged [1] in the newest version of Clang. It was re-enabled in the\nkernel with Commit 557f8c582a9ba8ab (\"ubsan: Reintroduce signed overflow\nsanitizer\").\n\nLet's use the check_add_overflow helper to first verify the addition\nstays within the bounds of its type (long long); then we can use that\nsum for the following check.\n\nLink: https://github.com/llvm/llvm-project/pull/82432 [1]\nCloses: https://github.com/KSPP/linux/issues/356\nCc: linux-hardening@vger.kernel.org\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20240513-b4-sio-vfs_fallocate-v2-1-db415872fb16@google.com\nReviewed-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Christian Brauner <brauner@kernel.org>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Mon May 13 17:50:30 2024 +0000",
  "author_date_iso": "2024-05-13T17:50:30+00:00",
  "committer_name": "Christian Brauner",
  "committer_email": "brauner@kernel.org",
  "committer_date": "Mon May 27 15:58:46 2024 +0200",
  "committer_date_iso": "2024-05-27T15:58:46+02:00",
  "files_changed": [
    "fs/open.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/open.c",
      "insertions": 6,
      "deletions": 2
    }
  ],
  "total_insertions": 6,
  "total_deletions": 2,
  "total_changes": 8,
  "parents": [
    "1613e604df0cd359cf2a7fbd9be7a0bcfacfabd0"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/open.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}