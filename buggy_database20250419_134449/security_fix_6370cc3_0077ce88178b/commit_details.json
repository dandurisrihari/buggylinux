{
  "hash": "6370cc3bbd8a0f9bf975b013781243ab147876c6",
  "hash_short": "6370cc3b",
  "subject": "net: add kcov handle to skb extensions",
  "body": "Remote KCOV coverage collection enables coverage-guided fuzzing of the\ncode that is not reachable during normal system call execution. It is\nespecially helpful for fuzzing networking subsystems, where it is\ncommon to perform packet handling in separate work queues even for the\npackets that originated directly from the user space.\n\nEnable coverage-guided frame injection by adding kcov remote handle to\nskb extensions. Default initialization in __alloc_skb and\n__build_skb_around ensures that no socket buffer that was generated\nduring a system call will be missed.\n\nCode that is of interest and that performs packet processing should be\nannotated with kcov_remote_start()/kcov_remote_stop().\n\nAn alternative approach is to determine kcov_handle solely on the\nbasis of the device/interface that received the specific socket\nbuffer. However, in this case it would be impossible to distinguish\nbetween packets that originated during normal background network\nprocesses or were intentionally injected from the user space.\n\nSigned-off-by: Aleksandr Nogikh <nogikh@google.com>\nAcked-by: Willem de Bruijn <willemb@google.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "net: add kcov handle to skb extensions\n\nRemote KCOV coverage collection enables coverage-guided fuzzing of the\ncode that is not reachable during normal system call execution. It is\nespecially helpful for fuzzing networking subsystems, where it is\ncommon to perform packet handling in separate work queues even for the\npackets that originated directly from the user space.\n\nEnable coverage-guided frame injection by adding kcov remote handle to\nskb extensions. Default initialization in __alloc_skb and\n__build_skb_around ensures that no socket buffer that was generated\nduring a system call will be missed.\n\nCode that is of interest and that performs packet processing should be\nannotated with kcov_remote_start()/kcov_remote_stop().\n\nAn alternative approach is to determine kcov_handle solely on the\nbasis of the device/interface that received the specific socket\nbuffer. However, in this case it would be impossible to distinguish\nbetween packets that originated during normal background network\nprocesses or were intentionally injected from the user space.\n\nSigned-off-by: Aleksandr Nogikh <nogikh@google.com>\nAcked-by: Willem de Bruijn <willemb@google.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Aleksandr Nogikh",
  "author_email": "nogikh@google.com",
  "author_date": "Thu Oct 29 17:36:19 2020 +0000",
  "author_date_iso": "2020-10-29T17:36:19+00:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Mon Nov 2 18:01:34 2020 -0800",
  "committer_date_iso": "2020-11-02T18:01:34-08:00",
  "files_changed": [
    "include/linux/skbuff.h",
    "lib/Kconfig.debug",
    "net/core/skbuff.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "include/linux/skbuff.h",
      "insertions": 33,
      "deletions": 0
    },
    {
      "file": "lib/Kconfig.debug",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/core/skbuff.c",
      "insertions": 11,
      "deletions": 0
    }
  ],
  "total_insertions": 45,
  "total_deletions": 0,
  "total_changes": 45,
  "parents": [
    "b08e84da205023009c456bd7f33feb83c5191c60"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/skbuff.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "lib/Kconfig.debug",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/core/skbuff.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}