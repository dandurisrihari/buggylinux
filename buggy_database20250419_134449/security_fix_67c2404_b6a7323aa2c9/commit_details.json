{
  "hash": "67c2404922c2c3f9cc0898aafaa4e3bea2bde084",
  "hash_short": "67c24049",
  "subject": "net: dsa: felix: create a template for the DSA tags on xmit",
  "body": "With this patch we try to kill 2 birds with 1 stone.\n\nFirst of all, some switches that use tag_ocelot.c don't have the exact\nsame bitfield layout for the DSA tags. The destination ports field is\ndifferent for Seville VSC9953 for example. So the choices are to either\nduplicate tag_ocelot.c into a new tag_seville.c (sub-optimal) or somehow\ntake into account a supposed ocelot->dest_ports_offset when packing this\nfield into the DSA injection header (again not ideal).\n\nSecondly, tag_ocelot.c already needs to memset a 128-bit area to zero\nand call some packing() functions of dubious performance in the\nfastpath. And most of the values it needs to pack are pretty much\nconstant (BYPASS=1, SRC_PORT=CPU, DEST=port index). So it would be good\nif we could improve that.\n\nThe proposed solution is to allocate a memory area per port at probe\ntime, initialize that with the statically defined bits as per chip\nhardware revision, and just perform a simpler memcpy in the fastpath.\n\nOther alternatives have been analyzed, such as:\n- Create a separate tag_seville.c: too much code duplication for just 1\n  bit field difference.\n- Create a separate DSA_TAG_PROTO_SEVILLE under tag_ocelot.c, just like\n  tag_brcm.c, which would have a separate .xmit function. Again, too\n  much code duplication for just 1 bit field difference.\n- Allocate the template from the init function of the tag_ocelot.c\n  module, instead of from the driver: couldn't figure out a method of\n  accessing the correct port template corresponding to the correct\n  tagger in the .xmit function.\n\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nReviewed-by: Florian Fainelli <f.fainelli@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "net: dsa: felix: create a template for the DSA tags on xmit\n\nWith this patch we try to kill 2 birds with 1 stone.\n\nFirst of all, some switches that use tag_ocelot.c don't have the exact\nsame bitfield layout for the DSA tags. The destination ports field is\ndifferent for Seville VSC9953 for example. So the choices are to either\nduplicate tag_ocelot.c into a new tag_seville.c (sub-optimal) or somehow\ntake into account a supposed ocelot->dest_ports_offset when packing this\nfield into the DSA injection header (again not ideal).\n\nSecondly, tag_ocelot.c already needs to memset a 128-bit area to zero\nand call some packing() functions of dubious performance in the\nfastpath. And most of the values it needs to pack are pretty much\nconstant (BYPASS=1, SRC_PORT=CPU, DEST=port index). So it would be good\nif we could improve that.\n\nThe proposed solution is to allocate a memory area per port at probe\ntime, initialize that with the statically defined bits as per chip\nhardware revision, and just perform a simpler memcpy in the fastpath.\n\nOther alternatives have been analyzed, such as:\n- Create a separate tag_seville.c: too much code duplication for just 1\n  bit field difference.\n- Create a separate DSA_TAG_PROTO_SEVILLE under tag_ocelot.c, just like\n  tag_brcm.c, which would have a separate .xmit function. Again, too\n  much code duplication for just 1 bit field difference.\n- Allocate the template from the init function of the tag_ocelot.c\n  module, instead of from the driver: couldn't figure out a method of\n  accessing the correct port template corresponding to the correct\n  tagger in the .xmit function.\n\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nReviewed-by: Florian Fainelli <f.fainelli@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Vladimir Oltean",
  "author_email": "vladimir.oltean@nxp.com",
  "author_date": "Mon Jul 13 19:57:04 2020 +0300",
  "author_date_iso": "2020-07-13T19:57:04+03:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Mon Jul 13 17:40:01 2020 -0700",
  "committer_date_iso": "2020-07-13T17:40:01-07:00",
  "files_changed": [
    "drivers/net/dsa/ocelot/felix.c",
    "drivers/net/dsa/ocelot/felix.h",
    "drivers/net/dsa/ocelot/felix_vsc9959.c",
    "include/soc/mscc/ocelot.h",
    "net/dsa/tag_ocelot.c"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "drivers/net/dsa/ocelot/felix.c",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "drivers/net/dsa/ocelot/felix.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/net/dsa/ocelot/felix_vsc9959.c",
      "insertions": 20,
      "deletions": 0
    },
    {
      "file": "include/soc/mscc/ocelot.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "net/dsa/tag_ocelot.c",
      "insertions": 8,
      "deletions": 13
    }
  ],
  "total_insertions": 44,
  "total_deletions": 13,
  "total_changes": 57,
  "parents": [
    "886e1387c73d895ad0eff53353913081983570c0"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection",
      "BYPASS"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/dsa/ocelot/felix.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/dsa/ocelot/felix.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/dsa/ocelot/felix_vsc9959.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/soc/mscc/ocelot.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/dsa/tag_ocelot.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}