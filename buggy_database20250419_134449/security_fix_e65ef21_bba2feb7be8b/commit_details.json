{
  "hash": "e65ef21ed850a535defa2ead971fc8f88ad3b616",
  "hash_short": "e65ef21e",
  "subject": "btrfs: Exploit the fact that pages passed to extent_readpages are always contiguous",
  "body": "Currently extent_readpages (called from btrfs_readpages) will always\ncall __extent_readpages which tries to create contiguous range of pages\nand call __do_contiguous_readpages when such contiguous range is\ncreated.\n\nIt turns out this is unnecessary due to the fact that generic MM code\nalways calls filesystem's ->readpages callback (btrfs_readpages in\nthis case) with already contiguous pages. Armed with this knowledge it's\npossible to simplify extent_readpages by eliminating the call to\n__extent_readpages and directly calling contiguous_readpages.\n\nThe only edge case that needs to be handled is when\nadd_to_page_cache_lru fails. This is easy as all that is needed is to\nsubmit whatever is the number of pages successfully added to the lru.\nThis can happen when the page is already in the range, so it does not\nneed to be read again, and we can't do anything else in case of other\nerrors.\n\nSigned-off-by: Nikolay Borisov <nborisov@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "full_message": "btrfs: Exploit the fact that pages passed to extent_readpages are always contiguous\n\nCurrently extent_readpages (called from btrfs_readpages) will always\ncall __extent_readpages which tries to create contiguous range of pages\nand call __do_contiguous_readpages when such contiguous range is\ncreated.\n\nIt turns out this is unnecessary due to the fact that generic MM code\nalways calls filesystem's ->readpages callback (btrfs_readpages in\nthis case) with already contiguous pages. Armed with this knowledge it's\npossible to simplify extent_readpages by eliminating the call to\n__extent_readpages and directly calling contiguous_readpages.\n\nThe only edge case that needs to be handled is when\nadd_to_page_cache_lru fails. This is easy as all that is needed is to\nsubmit whatever is the number of pages successfully added to the lru.\nThis can happen when the page is already in the range, so it does not\nneed to be read again, and we can't do anything else in case of other\nerrors.\n\nSigned-off-by: Nikolay Borisov <nborisov@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "author_name": "Nikolay Borisov",
  "author_email": "nborisov@suse.com",
  "author_date": "Mon Mar 11 09:55:38 2019 +0200",
  "author_date_iso": "2019-03-11T09:55:38+02:00",
  "committer_name": "David Sterba",
  "committer_email": "dsterba@suse.com",
  "committer_date": "Mon Apr 29 19:02:22 2019 +0200",
  "committer_date_iso": "2019-04-29T19:02:22+02:00",
  "files_changed": [
    "fs/btrfs/extent_io.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/btrfs/extent_io.c",
      "insertions": 14,
      "deletions": 44
    }
  ],
  "total_insertions": 14,
  "total_deletions": 44,
  "total_changes": 58,
  "parents": [
    "ed1b4ed79df258f08f16eac4a4fb96dc6d1a0f3a"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.2",
    "v5.2-rc1",
    "v5.2-rc2",
    "v5.2-rc3",
    "v5.2-rc4",
    "v5.2-rc5",
    "v5.2-rc6",
    "v5.2-rc7",
    "v5.3",
    "v5.3-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/extent_io.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}