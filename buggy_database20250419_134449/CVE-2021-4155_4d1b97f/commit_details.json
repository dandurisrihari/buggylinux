{
  "hash": "4d1b97f9ce7c0d2af2bb85b12d48e6902172a28e",
  "hash_short": "4d1b97f9",
  "subject": "xfs: kill the XFS_IOC_{ALLOC,FREE}SP* ioctls",
  "body": "According to the glibc compat header for Irix 4, these ioctls originated\nin April 1991 as a (somewhat clunky) way to preallocate space at the end\nof a file on an EFS filesystem.  XFS, which was released in Irix 5.3 in\nDecember 1993, picked up these ioctls to maintain compatibility and they\nwere ported to Linux in the early 2000s.\n\nRecently it was pointed out to me they still lurk in the kernel, even\nthough the Linux fallocate syscall supplanted the functionality a long\ntime ago.  fstests doesn't seem to include any real functional or stress\ntests for these ioctls, which means that the code quality is ... very\nquestionable.  Most notably, it was a stale disk block exposure vector\nfor 21 years and nobody noticed or complained.  As mature programmers\nsay, \"If you're not testing it, it's broken.\"\n\nGiven all that, let's withdraw these ioctls from the XFS userspace API.\nNormally we'd set a long deprecation process, but I estimate that there\naren't any real users, so let's trigger a warning in dmesg and return\n-ENOTTY.\n\nSee: CVE-2021-4155\n\nAugments: 983d8e60f508 (\"xfs: map unwritten blocks in XFS_IOC_{ALLOC,FREE}SP just like fallocate\")\nSigned-off-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-by: Eric Sandeen <sandeen@redhat.com>\nReviewed-by: Dave Chinner <dchinner@redhat.com>",
  "full_message": "xfs: kill the XFS_IOC_{ALLOC,FREE}SP* ioctls\n\nAccording to the glibc compat header for Irix 4, these ioctls originated\nin April 1991 as a (somewhat clunky) way to preallocate space at the end\nof a file on an EFS filesystem.  XFS, which was released in Irix 5.3 in\nDecember 1993, picked up these ioctls to maintain compatibility and they\nwere ported to Linux in the early 2000s.\n\nRecently it was pointed out to me they still lurk in the kernel, even\nthough the Linux fallocate syscall supplanted the functionality a long\ntime ago.  fstests doesn't seem to include any real functional or stress\ntests for these ioctls, which means that the code quality is ... very\nquestionable.  Most notably, it was a stale disk block exposure vector\nfor 21 years and nobody noticed or complained.  As mature programmers\nsay, \"If you're not testing it, it's broken.\"\n\nGiven all that, let's withdraw these ioctls from the XFS userspace API.\nNormally we'd set a long deprecation process, but I estimate that there\naren't any real users, so let's trigger a warning in dmesg and return\n-ENOTTY.\n\nSee: CVE-2021-4155\n\nAugments: 983d8e60f508 (\"xfs: map unwritten blocks in XFS_IOC_{ALLOC,FREE}SP just like fallocate\")\nSigned-off-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-by: Eric Sandeen <sandeen@redhat.com>\nReviewed-by: Dave Chinner <dchinner@redhat.com>",
  "author_name": "Darrick J. Wong",
  "author_email": "djwong@kernel.org",
  "author_date": "Fri Jan 7 17:45:51 2022 -0800",
  "author_date_iso": "2022-01-07T17:45:51-08:00",
  "committer_name": "Darrick J. Wong",
  "committer_email": "djwong@kernel.org",
  "committer_date": "Mon Jan 17 09:16:41 2022 -0800",
  "committer_date_iso": "2022-01-17T09:16:41-08:00",
  "files_changed": [
    "fs/xfs/xfs_bmap_util.c",
    "fs/xfs/xfs_bmap_util.h",
    "fs/xfs/xfs_file.c",
    "fs/xfs/xfs_ioctl.c",
    "fs/xfs/xfs_ioctl.h",
    "fs/xfs/xfs_ioctl32.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "fs/xfs/xfs_bmap_util.c",
      "insertions": 3,
      "deletions": 4
    },
    {
      "file": "fs/xfs/xfs_bmap_util.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_file.c",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "fs/xfs/xfs_ioctl.c",
      "insertions": 5,
      "deletions": 87
    },
    {
      "file": "fs/xfs/xfs_ioctl.h",
      "insertions": 0,
      "deletions": 6
    },
    {
      "file": "fs/xfs/xfs_ioctl32.c",
      "insertions": 0,
      "deletions": 27
    }
  ],
  "total_insertions": 10,
  "total_deletions": 127,
  "total_changes": 137,
  "parents": [
    "9dec0368b9640c09ef5af48214e097245e57a204"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2021-4155"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "fs/xfs/xfs_bmap_util.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_bmap_util.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_ioctl32.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_ioctl.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_ioctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}