Commit Hash: 96f9b0f2fa01c96e90abd4e981208a341a5da66e
Subject: btrfs: simplify checks when adding excluded ranges


Security Keywords:
- Exploit

Full commit message:
btrfs: simplify checks when adding excluded ranges

Adresses held in 'logical' array are always guaranteed to fall within
the boundaries of the block group. That is, 'start' can never be
smaller than cache->start. This invariant follows from the way the
address are calculated in btrfs_rmap_block:

    stripe_nr = physical - map->stripes[i].physical;
    stripe_nr = div64_u64(stripe_nr, map->stripe_len);
    bytenr = chunk_start + stripe_nr * io_stripe_size;

I.e it's always some IO stripe within the given chunk.

Exploit this invariant to simplify the body of the loop by removing the
unnecessary 'if' since its 'else' part is the one always executed.

Signed-off-by: Nikolay Borisov <nborisov@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>

Metadata:
Author: Nikolay Borisov <nborisov@suse.com>
Author Date: Fri Apr 3 16:40:35 2020 +0300
Committer: David Sterba <dsterba@suse.com>
Commit Date: Mon Jul 27 12:55:20 2020 +0200

Files Changed: 1
Lines Added: 4
Lines Removed: 17
Total Changes: 21
