{
  "hash": "d9381508ea2b590aff46d28d432d20bfef1ba64c",
  "hash_short": "d9381508",
  "subject": "audit: workaround a GCC bug triggered by task comm changes",
  "body": "A build failure has been reported with the following details:\n\n   In file included from include/linux/string.h:390,\n                    from include/linux/bitmap.h:13,\n                    from include/linux/cpumask.h:12,\n                    from include/linux/smp.h:13,\n                    from include/linux/lockdep.h:14,\n                    from include/linux/spinlock.h:63,\n                    from include/linux/wait.h:9,\n                    from include/linux/wait_bit.h:8,\n                    from include/linux/fs.h:6,\n                    from kernel/auditsc.c:37:\n   In function 'sized_strscpy',\n       inlined from '__audit_ptrace' at kernel/auditsc.c:2732:2:\n>> include/linux/fortify-string.h:293:17:\n   error: call to '__write_overflow' declared with attribute error:\n   detected write beyond size of object (1st parameter)\n     293 |                 __write_overflow();\n         |                 ^~~~~~~~~~~~~~~~~~\n   In function 'sized_strscpy',\n       inlined from 'audit_signal_info_syscall' at kernel/auditsc.c:2759:3:\n>> include/linux/fortify-string.h:293:17:\n   error: call to '__write_overflow' declared with attribute error:\n   detected write beyond size of object (1st parameter)\n     293 |                 __write_overflow();\n         |                 ^~~~~~~~~~~~~~~~~~\n\nThe issue appears to be a GCC bug, though the root cause remains\nunclear at this time. For now, let's implement a workaround.\n\nA bug report has also been filed with GCC [0].\n\nLink: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=117912 [0]\n\nReported-by: kernel test robot <lkp@intel.com>\nCloses: https://lore.kernel.org/oe-kbuild-all/202410171420.1V00ICVG-lkp@intel.com/\nReported-by: Steven Rostedt (Google) <rostedt@goodmis.org>\nCloses: https://lore.kernel.org/all/20241128182435.57a1ea6f@gandalf.local.home/\nReported-by: Zhuo, Qiuxu <qiuxu.zhuo@intel.com>\nCloses: https://lore.kernel.org/all/CY8PR11MB71348E568DBDA576F17DAFF389362@CY8PR11MB7134.namprd11.prod.outlook.com/\nOriginally-by: Kees Cook <kees@kernel.org>\nLink: https://lore.kernel.org/linux-hardening/202410171059.C2C395030@keescook/\nSigned-off-by: Yafang shao <laoar.shao@gmail.com>\nTested-by: Steven Rostedt (Google) <rostedt@goodmis.org>\nTested-by: Yafang Shao <laoar.shao@gmail.com>\n[PM: subject tweak, description line wrapping]\nSigned-off-by: Paul Moore <paul@paul-moore.com>",
  "full_message": "audit: workaround a GCC bug triggered by task comm changes\n\nA build failure has been reported with the following details:\n\n   In file included from include/linux/string.h:390,\n                    from include/linux/bitmap.h:13,\n                    from include/linux/cpumask.h:12,\n                    from include/linux/smp.h:13,\n                    from include/linux/lockdep.h:14,\n                    from include/linux/spinlock.h:63,\n                    from include/linux/wait.h:9,\n                    from include/linux/wait_bit.h:8,\n                    from include/linux/fs.h:6,\n                    from kernel/auditsc.c:37:\n   In function 'sized_strscpy',\n       inlined from '__audit_ptrace' at kernel/auditsc.c:2732:2:\n>> include/linux/fortify-string.h:293:17:\n   error: call to '__write_overflow' declared with attribute error:\n   detected write beyond size of object (1st parameter)\n     293 |                 __write_overflow();\n         |                 ^~~~~~~~~~~~~~~~~~\n   In function 'sized_strscpy',\n       inlined from 'audit_signal_info_syscall' at kernel/auditsc.c:2759:3:\n>> include/linux/fortify-string.h:293:17:\n   error: call to '__write_overflow' declared with attribute error:\n   detected write beyond size of object (1st parameter)\n     293 |                 __write_overflow();\n         |                 ^~~~~~~~~~~~~~~~~~\n\nThe issue appears to be a GCC bug, though the root cause remains\nunclear at this time. For now, let's implement a workaround.\n\nA bug report has also been filed with GCC [0].\n\nLink: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=117912 [0]\n\nReported-by: kernel test robot <lkp@intel.com>\nCloses: https://lore.kernel.org/oe-kbuild-all/202410171420.1V00ICVG-lkp@intel.com/\nReported-by: Steven Rostedt (Google) <rostedt@goodmis.org>\nCloses: https://lore.kernel.org/all/20241128182435.57a1ea6f@gandalf.local.home/\nReported-by: Zhuo, Qiuxu <qiuxu.zhuo@intel.com>\nCloses: https://lore.kernel.org/all/CY8PR11MB71348E568DBDA576F17DAFF389362@CY8PR11MB7134.namprd11.prod.outlook.com/\nOriginally-by: Kees Cook <kees@kernel.org>\nLink: https://lore.kernel.org/linux-hardening/202410171059.C2C395030@keescook/\nSigned-off-by: Yafang shao <laoar.shao@gmail.com>\nTested-by: Steven Rostedt (Google) <rostedt@goodmis.org>\nTested-by: Yafang Shao <laoar.shao@gmail.com>\n[PM: subject tweak, description line wrapping]\nSigned-off-by: Paul Moore <paul@paul-moore.com>",
  "author_name": "Yafang shao",
  "author_email": "laoar.shao@gmail.com",
  "author_date": "Thu Dec 5 10:11:00 2024 +0800",
  "author_date_iso": "2024-12-05T10:11:00+08:00",
  "committer_name": "Paul Moore",
  "committer_email": "paul@paul-moore.com",
  "committer_date": "Wed Dec 4 22:57:46 2024 -0500",
  "committer_date_iso": "2024-12-04T22:57:46-05:00",
  "files_changed": [
    "kernel/auditsc.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/auditsc.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 2,
  "total_deletions": 2,
  "total_changes": 4,
  "parents": [
    "40384c840ea1944d7c5a392e8975ed088ecf0b37"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/auditsc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}