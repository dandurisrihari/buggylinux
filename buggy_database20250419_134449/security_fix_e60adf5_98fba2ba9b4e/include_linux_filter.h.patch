commit e60adf513275c3a38e5cb67f7fd12387e43a3ff5
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Fri Mar 8 06:38:08 2024 +0100

    bpf: Take return from set_memory_rox() into account with bpf_jit_binary_lock_ro()
    
    set_memory_rox() can fail, leaving memory unprotected.
    
    Check return and bail out when bpf_jit_binary_lock_ro() returns
    an error.
    
    Link: https://github.com/KSPP/linux/issues/7
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: linux-hardening@vger.kernel.org <linux-hardening@vger.kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Puranjay Mohan <puranjay12@gmail.com>
    Reviewed-by: Ilya Leoshkevich <iii@linux.ibm.com>  # s390x
    Acked-by: Tiezhu Yang <yangtiezhu@loongson.cn>  # LoongArch
    Reviewed-by: Johan Almbladh <johan.almbladh@anyfinetworks.com> # MIPS Part
    Message-ID: <036b6393f23a2032ce75a1c92220b2afcb798d5d.1709850515.git.christophe.leroy@csgroup.eu>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>

diff --git a/include/linux/filter.h b/include/linux/filter.h
index 9107ee1de66f..c0d51bff8f96 100644
--- a/include/linux/filter.h
+++ b/include/linux/filter.h
@@ -898,10 +898,11 @@ static inline int __must_check bpf_prog_lock_ro(struct bpf_prog *fp)
 	return 0;
 }
 
-static inline void bpf_jit_binary_lock_ro(struct bpf_binary_header *hdr)
+static inline int __must_check
+bpf_jit_binary_lock_ro(struct bpf_binary_header *hdr)
 {
 	set_vm_flush_reset_perms(hdr);
-	set_memory_rox((unsigned long)hdr, hdr->size >> PAGE_SHIFT);
+	return set_memory_rox((unsigned long)hdr, hdr->size >> PAGE_SHIFT);
 }
 
 int sk_filter_trim_cap(struct sock *sk, struct sk_buff *skb, unsigned int cap);