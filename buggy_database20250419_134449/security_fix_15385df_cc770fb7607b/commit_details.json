{
  "hash": "15385dfe7e0fa6866b204dd0d14aec2cc48fc0a7",
  "hash_short": "15385dfe",
  "subject": "Merge branch 'x86-smap-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip",
  "body": "Pull x86/smap support from Ingo Molnar:\n \"This adds support for the SMAP (Supervisor Mode Access Prevention) CPU\n  feature on Intel CPUs: a hardware feature that prevents unintended\n  user-space data access from kernel privileged code.\n\n  It's turned on automatically when possible.\n\n  This, in combination with SMEP, makes it even harder to exploit kernel\n  bugs such as NULL pointer dereferences.\"\n\nFix up trivial conflict in arch/x86/kernel/entry_64.S due to newly added\nincludes right next to each other.\n\n* 'x86-smap-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, smep, smap: Make the switching functions one-way\n  x86, suspend: On wakeup always initialize cr4 and EFER\n  x86-32: Start out eflags and cr4 clean\n  x86, smap: Do not abuse the [f][x]rstor_checking() functions for user space\n  x86-32, smap: Add STAC/CLAC instructions to 32-bit kernel entry\n  x86, smap: Reduce the SMAP overhead for signal handling\n  x86, smap: A page fault due to SMAP is an oops\n  x86, smap: Turn on Supervisor Mode Access Prevention\n  x86, smap: Add STAC and CLAC instructions to control user space access\n  x86, uaccess: Merge prototypes for clear_user/__clear_user\n  x86, smap: Add a header file with macros for STAC/CLAC\n  x86, alternative: Add header guards to <asm/alternative-asm.h>\n  x86, alternative: Use .pushsection/.popsection\n  x86, smap: Add CR4 bit for SMAP\n  x86-32, mm: The WP test should be done on a kernel page",
  "full_message": "Merge branch 'x86-smap-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86/smap support from Ingo Molnar:\n \"This adds support for the SMAP (Supervisor Mode Access Prevention) CPU\n  feature on Intel CPUs: a hardware feature that prevents unintended\n  user-space data access from kernel privileged code.\n\n  It's turned on automatically when possible.\n\n  This, in combination with SMEP, makes it even harder to exploit kernel\n  bugs such as NULL pointer dereferences.\"\n\nFix up trivial conflict in arch/x86/kernel/entry_64.S due to newly added\nincludes right next to each other.\n\n* 'x86-smap-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86, smep, smap: Make the switching functions one-way\n  x86, suspend: On wakeup always initialize cr4 and EFER\n  x86-32: Start out eflags and cr4 clean\n  x86, smap: Do not abuse the [f][x]rstor_checking() functions for user space\n  x86-32, smap: Add STAC/CLAC instructions to 32-bit kernel entry\n  x86, smap: Reduce the SMAP overhead for signal handling\n  x86, smap: A page fault due to SMAP is an oops\n  x86, smap: Turn on Supervisor Mode Access Prevention\n  x86, smap: Add STAC and CLAC instructions to control user space access\n  x86, uaccess: Merge prototypes for clear_user/__clear_user\n  x86, smap: Add a header file with macros for STAC/CLAC\n  x86, alternative: Add header guards to <asm/alternative-asm.h>\n  x86, alternative: Use .pushsection/.popsection\n  x86, smap: Add CR4 bit for SMAP\n  x86-32, mm: The WP test should be done on a kernel page",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Mon Oct 1 13:59:17 2012 -0700",
  "author_date_iso": "2012-10-01T13:59:17-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Oct 1 13:59:17 2012 -0700",
  "committer_date_iso": "2012-10-01T13:59:17-07:00",
  "files_changed": [
    "Documentation/kernel-parameters.txt",
    "arch/x86/Kconfig",
    "arch/x86/include/asm/alternative.h",
    "arch/x86/kernel/cpu/common.c",
    "arch/x86/kernel/entry_32.S",
    "arch/x86/kernel/entry_64.S",
    "arch/x86/kernel/signal.c",
    "arch/x86/mm/fault.c",
    "arch/x86/mm/init_32.c"
  ],
  "files_changed_count": 9,
  "stats": [
    {
      "file": "Documentation/kernel-parameters.txt",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "arch/x86/Kconfig",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "arch/x86/ia32/ia32_signal.c",
      "insertions": 8,
      "deletions": 5
    },
    {
      "file": "arch/x86/ia32/ia32entry.S",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/alternative-asm.h",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "arch/x86/include/asm/alternative.h",
      "insertions": 16,
      "deletions": 16
    },
    {
      "file": "arch/x86/include/asm/fpu-internal.h",
      "insertions": 38,
      "deletions": 4
    },
    {
      "file": "arch/x86/include/asm/futex.h",
      "insertions": 13,
      "deletions": 6
    },
    {
      "file": "arch/x86/include/asm/processor-flags.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/smap.h",
      "insertions": 91,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/uaccess.h",
      "insertions": 18,
      "deletions": 10
    },
    {
      "file": "arch/x86/include/asm/uaccess_32.h",
      "insertions": 0,
      "deletions": 3
    },
    {
      "file": "arch/x86/include/asm/uaccess_64.h",
      "insertions": 0,
      "deletions": 3
    },
    {
      "file": "arch/x86/include/asm/xsave.h",
      "insertions": 6,
      "deletions": 4
    },
    {
      "file": "arch/x86/kernel/acpi/sleep.c",
      "insertions": 10,
      "deletions": 5
    },
    {
      "file": "arch/x86/kernel/cpu/common.c",
      "insertions": 29,
      "deletions": 15
    },
    {
      "file": "arch/x86/kernel/entry_32.S",
      "insertions": 26,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/entry_64.S",
      "insertions": 10,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/head_32.S",
      "insertions": 16,
      "deletions": 15
    },
    {
      "file": "arch/x86/kernel/signal.c",
      "insertions": 14,
      "deletions": 10
    },
    {
      "file": "arch/x86/kernel/xsave.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/x86/lib/copy_user_64.S",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/x86/lib/copy_user_nocache_64.S",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/x86/lib/getuser.S",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "arch/x86/lib/putuser.S",
      "insertions": 7,
      "deletions": 1
    },
    {
      "file": "arch/x86/lib/usercopy_32.c",
      "insertions": 12,
      "deletions": 1
    },
    {
      "file": "arch/x86/lib/usercopy_64.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/x86/mm/fault.c",
      "insertions": 18,
      "deletions": 0
    },
    {
      "file": "arch/x86/mm/init_32.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/realmode/rm/wakeup.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/realmode/rm/wakeup_asm.S",
      "insertions": 19,
      "deletions": 10
    }
  ],
  "total_insertions": 410,
  "total_deletions": 116,
  "total_changes": 526,
  "parents": [
    "a57d985e378ca69f430b85852e4187db3698a89e",
    "b2cc2a074de75671bbed5e2dda67a9252ef353ea"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.10",
    "v3.10-rc1",
    "v3.10-rc2",
    "v3.10-rc3",
    "v3.10-rc4",
    "v3.10-rc5",
    "v3.10-rc6",
    "v3.10-rc7",
    "v3.11",
    "v3.11-rc1"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kernel/entry_64.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/entry_32.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/alternative.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/kernel-parameters.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/mm/init_32.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/mm/fault.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/signal.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/common.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}