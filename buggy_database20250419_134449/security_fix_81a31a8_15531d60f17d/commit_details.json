{
  "hash": "81a31a860bb61d54eb688af2568d9332ed9b8942",
  "hash_short": "81a31a86",
  "subject": "mm: page_table_check: Make it dependent on EXCLUSIVE_SYSTEM_RAM",
  "body": "Without EXCLUSIVE_SYSTEM_RAM, users are allowed to map arbitrary\nphysical memory regions into the userspace via /dev/mem. At the same\ntime, pages may change their properties (e.g., from anonymous pages to\nnamed pages) while they are still being mapped in the userspace, leading\nto \"corruption\" detected by the page table check.\n\nTo avoid these false positives, this patch makes PAGE_TABLE_CHECK\ndepends on EXCLUSIVE_SYSTEM_RAM. This dependency is understandable\nbecause PAGE_TABLE_CHECK is a hardening technique but /dev/mem without\nSTRICT_DEVMEM (i.e., !EXCLUSIVE_SYSTEM_RAM) is itself a security\nproblem.\n\nEven with EXCLUSIVE_SYSTEM_RAM, I/O pages may be still allowed to be\nmapped via /dev/mem. However, these pages are always considered as named\npages, so they won't break the logic used in the page table check.\n\nCc: <stable@vger.kernel.org> # 5.17\nSigned-off-by: Ruihan Li <lrh2000@pku.edu.cn>\nAcked-by: David Hildenbrand <david@redhat.com>\nAcked-by: Pasha Tatashin <pasha.tatashin@soleen.com>\nLink: https://lore.kernel.org/r/20230515130958.32471-4-lrh2000@pku.edu.cn\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
  "full_message": "mm: page_table_check: Make it dependent on EXCLUSIVE_SYSTEM_RAM\n\nWithout EXCLUSIVE_SYSTEM_RAM, users are allowed to map arbitrary\nphysical memory regions into the userspace via /dev/mem. At the same\ntime, pages may change their properties (e.g., from anonymous pages to\nnamed pages) while they are still being mapped in the userspace, leading\nto \"corruption\" detected by the page table check.\n\nTo avoid these false positives, this patch makes PAGE_TABLE_CHECK\ndepends on EXCLUSIVE_SYSTEM_RAM. This dependency is understandable\nbecause PAGE_TABLE_CHECK is a hardening technique but /dev/mem without\nSTRICT_DEVMEM (i.e., !EXCLUSIVE_SYSTEM_RAM) is itself a security\nproblem.\n\nEven with EXCLUSIVE_SYSTEM_RAM, I/O pages may be still allowed to be\nmapped via /dev/mem. However, these pages are always considered as named\npages, so they won't break the logic used in the page table check.\n\nCc: <stable@vger.kernel.org> # 5.17\nSigned-off-by: Ruihan Li <lrh2000@pku.edu.cn>\nAcked-by: David Hildenbrand <david@redhat.com>\nAcked-by: Pasha Tatashin <pasha.tatashin@soleen.com>\nLink: https://lore.kernel.org/r/20230515130958.32471-4-lrh2000@pku.edu.cn\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
  "author_name": "Ruihan Li",
  "author_email": "lrh2000@pku.edu.cn",
  "author_date": "Mon May 15 21:09:57 2023 +0800",
  "author_date_iso": "2023-05-15T21:09:57+08:00",
  "committer_name": "Greg Kroah-Hartman",
  "committer_email": "gregkh@linuxfoundation.org",
  "committer_date": "Mon May 29 16:14:28 2023 +0100",
  "committer_date_iso": "2023-05-29T16:14:28+01:00",
  "files_changed": [
    "Documentation/mm/page_table_check.rst",
    "mm/Kconfig.debug"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "Documentation/mm/page_table_check.rst",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "mm/Kconfig.debug",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 20,
  "total_deletions": 0,
  "total_changes": 20,
  "parents": [
    "d0b861653f8c16839c3035875b556afc4472f941"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/mm/page_table_check.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/Kconfig.debug",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}