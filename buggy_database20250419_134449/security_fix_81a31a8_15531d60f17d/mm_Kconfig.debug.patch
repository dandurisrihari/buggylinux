commit 81a31a860bb61d54eb688af2568d9332ed9b8942
Author: Ruihan Li <lrh2000@pku.edu.cn>
Date:   Mon May 15 21:09:57 2023 +0800

    mm: page_table_check: Make it dependent on EXCLUSIVE_SYSTEM_RAM
    
    Without EXCLUSIVE_SYSTEM_RAM, users are allowed to map arbitrary
    physical memory regions into the userspace via /dev/mem. At the same
    time, pages may change their properties (e.g., from anonymous pages to
    named pages) while they are still being mapped in the userspace, leading
    to "corruption" detected by the page table check.
    
    To avoid these false positives, this patch makes PAGE_TABLE_CHECK
    depends on EXCLUSIVE_SYSTEM_RAM. This dependency is understandable
    because PAGE_TABLE_CHECK is a hardening technique but /dev/mem without
    STRICT_DEVMEM (i.e., !EXCLUSIVE_SYSTEM_RAM) is itself a security
    problem.
    
    Even with EXCLUSIVE_SYSTEM_RAM, I/O pages may be still allowed to be
    mapped via /dev/mem. However, these pages are always considered as named
    pages, so they won't break the logic used in the page table check.
    
    Cc: <stable@vger.kernel.org> # 5.17
    Signed-off-by: Ruihan Li <lrh2000@pku.edu.cn>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Pasha Tatashin <pasha.tatashin@soleen.com>
    Link: https://lore.kernel.org/r/20230515130958.32471-4-lrh2000@pku.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/mm/Kconfig.debug b/mm/Kconfig.debug
index a925415b4d10..018a5bd2f576 100644
--- a/mm/Kconfig.debug
+++ b/mm/Kconfig.debug
@@ -98,6 +98,7 @@ config PAGE_OWNER
 config PAGE_TABLE_CHECK
 	bool "Check for invalid mappings in user page tables"
 	depends on ARCH_SUPPORTS_PAGE_TABLE_CHECK
+	depends on EXCLUSIVE_SYSTEM_RAM
 	select PAGE_EXTENSION
 	help
 	  Check that anonymous page is not being mapped twice with read write