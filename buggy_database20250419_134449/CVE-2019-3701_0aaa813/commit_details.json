{
  "hash": "0aaa81377c5a01f686bcdb8c7a6929a7bf330c68",
  "hash_short": "0aaa8137",
  "subject": "can: gw: ensure DLC boundaries after CAN frame modification",
  "body": "Muyu Yu provided a POC where user root with CAP_NET_ADMIN can create a CAN\nframe modification rule that makes the data length code a higher value than\nthe available CAN frame data size. In combination with a configured checksum\ncalculation where the result is stored relatively to the end of the data\n(e.g. cgw_csum_xor_rel) the tail of the skb (e.g. frag_list pointer in\nskb_shared_info) can be rewritten which finally can cause a system crash.\n\nMichael Kubecek suggested to drop frames that have a DLC exceeding the\navailable space after the modification process and provided a patch that can\nhandle CAN FD frames too. Within this patch we also limit the length for the\nchecksum calculations to the maximum of Classic CAN data length (8).\n\nCAN frames that are dropped by these additional checks are counted with the\nCGW_DELETED counter which indicates misconfigurations in can-gw rules.\n\nThis fixes CVE-2019-3701.\n\nReported-by: Muyu Yu <ieatmuttonchuan@gmail.com>\nReported-by: Marcus Meissner <meissner@suse.de>\nSuggested-by: Michal Kubecek <mkubecek@suse.cz>\nTested-by: Muyu Yu <ieatmuttonchuan@gmail.com>\nTested-by: Oliver Hartkopp <socketcan@hartkopp.net>\nSigned-off-by: Oliver Hartkopp <socketcan@hartkopp.net>\nCc: linux-stable <stable@vger.kernel.org> # >= v3.2\nSigned-off-by: Marc Kleine-Budde <mkl@pengutronix.de>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "can: gw: ensure DLC boundaries after CAN frame modification\n\nMuyu Yu provided a POC where user root with CAP_NET_ADMIN can create a CAN\nframe modification rule that makes the data length code a higher value than\nthe available CAN frame data size. In combination with a configured checksum\ncalculation where the result is stored relatively to the end of the data\n(e.g. cgw_csum_xor_rel) the tail of the skb (e.g. frag_list pointer in\nskb_shared_info) can be rewritten which finally can cause a system crash.\n\nMichael Kubecek suggested to drop frames that have a DLC exceeding the\navailable space after the modification process and provided a patch that can\nhandle CAN FD frames too. Within this patch we also limit the length for the\nchecksum calculations to the maximum of Classic CAN data length (8).\n\nCAN frames that are dropped by these additional checks are counted with the\nCGW_DELETED counter which indicates misconfigurations in can-gw rules.\n\nThis fixes CVE-2019-3701.\n\nReported-by: Muyu Yu <ieatmuttonchuan@gmail.com>\nReported-by: Marcus Meissner <meissner@suse.de>\nSuggested-by: Michal Kubecek <mkubecek@suse.cz>\nTested-by: Muyu Yu <ieatmuttonchuan@gmail.com>\nTested-by: Oliver Hartkopp <socketcan@hartkopp.net>\nSigned-off-by: Oliver Hartkopp <socketcan@hartkopp.net>\nCc: linux-stable <stable@vger.kernel.org> # >= v3.2\nSigned-off-by: Marc Kleine-Budde <mkl@pengutronix.de>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Oliver Hartkopp",
  "author_email": "socketcan@hartkopp.net",
  "author_date": "Fri Jan 4 15:55:26 2019 +0100",
  "author_date_iso": "2019-01-04T15:55:26+01:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Mon Jan 7 05:17:51 2019 -0800",
  "committer_date_iso": "2019-01-07T05:17:51-08:00",
  "files_changed": [
    "net/can/gw.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/can/gw.c",
      "insertions": 27,
      "deletions": 3
    }
  ],
  "total_insertions": 27,
  "total_deletions": 3,
  "total_changes": 30,
  "parents": [
    "01cd364a15f42575ef4aac8f82ff05516ea5da9a"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.0",
    "v5.0-rc3",
    "v5.0-rc4",
    "v5.0-rc5",
    "v5.0-rc6",
    "v5.0-rc7",
    "v5.0-rc8",
    "v5.1",
    "v5.1-rc1",
    "v5.1-rc2"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2019-3701"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "net/can/gw.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}