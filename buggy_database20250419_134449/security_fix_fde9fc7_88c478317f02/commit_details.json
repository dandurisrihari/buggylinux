{
  "hash": "fde9fc766e96c494b82931b1d270a9a751be07c0",
  "hash_short": "fde9fc76",
  "subject": "signals: Move put_compat_sigset to compat.h to silence hardened usercopy",
  "body": "Since commit afcc90f8621e (\"usercopy: WARN() on slab cache usercopy\nregion violations\"), MIPS systems booting with a compat root filesystem\nemit a warning when copying compat siginfo to userspace:\n\nWARNING: CPU: 0 PID: 953 at mm/usercopy.c:81 usercopy_warn+0x98/0xe8\nBad or missing usercopy whitelist? Kernel memory exposure attempt\ndetected from SLAB object 'task_struct' (offset 1432, size 16)!\nModules linked in:\nCPU: 0 PID: 953 Comm: S01logging Not tainted 4.16.0-rc2 #10\nStack : ffffffff808c0000 0000000000000000 0000000000000001 65ac85163f3bdc4a\n\t65ac85163f3bdc4a 0000000000000000 90000000ff667ab8 ffffffff808c0000\n\t00000000000003f8 ffffffff808d0000 00000000000000d1 0000000000000000\n\t000000000000003c 0000000000000000 ffffffff808c8ca8 ffffffff808d0000\n\tffffffff808d0000 ffffffff80810000 fffffc0000000000 ffffffff80785c30\n\t0000000000000009 0000000000000051 90000000ff667eb0 90000000ff667db0\n\t000000007fe0d938 0000000000000018 ffffffff80449958 0000000020052798\n\tffffffff808c0000 90000000ff664000 90000000ff667ab0 00000000100c0000\n\tffffffff80698810 0000000000000000 0000000000000000 0000000000000000\n\t0000000000000000 0000000000000000 ffffffff8010d02c 65ac85163f3bdc4a\n\t...\nCall Trace:\n[<ffffffff8010d02c>] show_stack+0x9c/0x130\n[<ffffffff80698810>] dump_stack+0x90/0xd0\n[<ffffffff80137b78>] __warn+0x100/0x118\n[<ffffffff80137bdc>] warn_slowpath_fmt+0x4c/0x70\n[<ffffffff8021e4a8>] usercopy_warn+0x98/0xe8\n[<ffffffff8021e68c>] __check_object_size+0xfc/0x250\n[<ffffffff801bbfb8>] put_compat_sigset+0x30/0x88\n[<ffffffff8011af24>] setup_rt_frame_n32+0xc4/0x160\n[<ffffffff8010b8b4>] do_signal+0x19c/0x230\n[<ffffffff8010c408>] do_notify_resume+0x60/0x78\n[<ffffffff80106f50>] work_notifysig+0x10/0x18\n---[ end trace 88fffbf69147f48a ]---\n\nCommit 5905429ad856 (\"fork: Provide usercopy whitelisting for\ntask_struct\") noted that:\n\n\"While the blocked and saved_sigmask fields of task_struct are copied to\nuserspace (via sigmask_to_save() and setup_rt_frame()), it is always\ncopied with a static length (i.e. sizeof(sigset_t)).\"\n\nHowever, this is not true in the case of compat signals, whose sigset\nis copied by put_compat_sigset and receives size as an argument.\n\nAt most call sites, put_compat_sigset is copying a sigset from the\ncurrent task_struct. This triggers a warning when\nCONFIG_HARDENED_USERCOPY is active. However, by marking this function as\nstatic inline, the warning can be avoided because in all of these cases\nthe size is constant at compile time, which is allowed. The only site\nwhere this is not the case is handling the rt_sigpending syscall, but\nthere the copy is being made from a stack local variable so does not\ntrigger the warning.\n\nMove put_compat_sigset to compat.h, and mark it static inline. This\nfixes the WARN on MIPS.\n\nFixes: afcc90f8621e (\"usercopy: WARN() on slab cache usercopy region violations\")\nSigned-off-by: Matt Redfearn <matt.redfearn@mips.com>\nAcked-by: Kees Cook <keescook@chromium.org>\nCc: \"Dmitry V . Levin\" <ldv@altlinux.org>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: kernel-hardening@lists.openwall.com\nCc: linux-mips@linux-mips.org\nPatchwork: https://patchwork.linux-mips.org/patch/18639/\nSigned-off-by: James Hogan <jhogan@kernel.org>",
  "full_message": "signals: Move put_compat_sigset to compat.h to silence hardened usercopy\n\nSince commit afcc90f8621e (\"usercopy: WARN() on slab cache usercopy\nregion violations\"), MIPS systems booting with a compat root filesystem\nemit a warning when copying compat siginfo to userspace:\n\nWARNING: CPU: 0 PID: 953 at mm/usercopy.c:81 usercopy_warn+0x98/0xe8\nBad or missing usercopy whitelist? Kernel memory exposure attempt\ndetected from SLAB object 'task_struct' (offset 1432, size 16)!\nModules linked in:\nCPU: 0 PID: 953 Comm: S01logging Not tainted 4.16.0-rc2 #10\nStack : ffffffff808c0000 0000000000000000 0000000000000001 65ac85163f3bdc4a\n\t65ac85163f3bdc4a 0000000000000000 90000000ff667ab8 ffffffff808c0000\n\t00000000000003f8 ffffffff808d0000 00000000000000d1 0000000000000000\n\t000000000000003c 0000000000000000 ffffffff808c8ca8 ffffffff808d0000\n\tffffffff808d0000 ffffffff80810000 fffffc0000000000 ffffffff80785c30\n\t0000000000000009 0000000000000051 90000000ff667eb0 90000000ff667db0\n\t000000007fe0d938 0000000000000018 ffffffff80449958 0000000020052798\n\tffffffff808c0000 90000000ff664000 90000000ff667ab0 00000000100c0000\n\tffffffff80698810 0000000000000000 0000000000000000 0000000000000000\n\t0000000000000000 0000000000000000 ffffffff8010d02c 65ac85163f3bdc4a\n\t...\nCall Trace:\n[<ffffffff8010d02c>] show_stack+0x9c/0x130\n[<ffffffff80698810>] dump_stack+0x90/0xd0\n[<ffffffff80137b78>] __warn+0x100/0x118\n[<ffffffff80137bdc>] warn_slowpath_fmt+0x4c/0x70\n[<ffffffff8021e4a8>] usercopy_warn+0x98/0xe8\n[<ffffffff8021e68c>] __check_object_size+0xfc/0x250\n[<ffffffff801bbfb8>] put_compat_sigset+0x30/0x88\n[<ffffffff8011af24>] setup_rt_frame_n32+0xc4/0x160\n[<ffffffff8010b8b4>] do_signal+0x19c/0x230\n[<ffffffff8010c408>] do_notify_resume+0x60/0x78\n[<ffffffff80106f50>] work_notifysig+0x10/0x18\n---[ end trace 88fffbf69147f48a ]---\n\nCommit 5905429ad856 (\"fork: Provide usercopy whitelisting for\ntask_struct\") noted that:\n\n\"While the blocked and saved_sigmask fields of task_struct are copied to\nuserspace (via sigmask_to_save() and setup_rt_frame()), it is always\ncopied with a static length (i.e. sizeof(sigset_t)).\"\n\nHowever, this is not true in the case of compat signals, whose sigset\nis copied by put_compat_sigset and receives size as an argument.\n\nAt most call sites, put_compat_sigset is copying a sigset from the\ncurrent task_struct. This triggers a warning when\nCONFIG_HARDENED_USERCOPY is active. However, by marking this function as\nstatic inline, the warning can be avoided because in all of these cases\nthe size is constant at compile time, which is allowed. The only site\nwhere this is not the case is handling the rt_sigpending syscall, but\nthere the copy is being made from a stack local variable so does not\ntrigger the warning.\n\nMove put_compat_sigset to compat.h, and mark it static inline. This\nfixes the WARN on MIPS.\n\nFixes: afcc90f8621e (\"usercopy: WARN() on slab cache usercopy region violations\")\nSigned-off-by: Matt Redfearn <matt.redfearn@mips.com>\nAcked-by: Kees Cook <keescook@chromium.org>\nCc: \"Dmitry V . Levin\" <ldv@altlinux.org>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: kernel-hardening@lists.openwall.com\nCc: linux-mips@linux-mips.org\nPatchwork: https://patchwork.linux-mips.org/patch/18639/\nSigned-off-by: James Hogan <jhogan@kernel.org>",
  "author_name": "Matt Redfearn",
  "author_email": "matt.redfearn@mips.com",
  "author_date": "Mon Feb 19 16:55:06 2018 +0000",
  "author_date_iso": "2018-02-19T16:55:06+00:00",
  "committer_name": "James Hogan",
  "committer_email": "jhogan@kernel.org",
  "committer_date": "Fri Mar 2 21:31:55 2018 +0000",
  "committer_date_iso": "2018-03-02T21:31:55+00:00",
  "files_changed": [
    "include/linux/compat.h",
    "kernel/compat.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "include/linux/compat.h",
      "insertions": 24,
      "deletions": 2
    },
    {
      "file": "kernel/compat.c",
      "insertions": 0,
      "deletions": 19
    }
  ],
  "total_insertions": 24,
  "total_deletions": 21,
  "total_changes": 45,
  "parents": [
    "902f4d067a50ccf645a58dd5fb1d113b6e0f9b5b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/compat.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/compat.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}