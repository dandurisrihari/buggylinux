{
  "hash": "61af39e1e40da1afd8803352c465a140e3d5d6ab",
  "hash_short": "61af39e1",
  "subject": "virt: acrn: replace deprecated strncpy with strscpy",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe can see that client->name should be NUL-terminated based on its usage\nwith a %s C-string format specifier.\n|\tclient->thread = kthread_run(ioreq_task, client, \"VM%u-%s\",\n|\t\t\t\t\tclient->vm->vmid, client->name);\n\nNUL-padding is not required as client is already zero-allocated:\n|\tclient = kzalloc(sizeof(*client), GFP_KERNEL);\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nNote that this patch relies on the _new_ 2-argument version of strscpy()\nintroduced in Commit e6584c3964f2f (\"string: Allow 2-argument\nstrscpy()\").\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc:  <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20240320-strncpy-drivers-virt-acrn-ioreq-c-v1-1-db6996770341@google.com\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "virt: acrn: replace deprecated strncpy with strscpy\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe can see that client->name should be NUL-terminated based on its usage\nwith a %s C-string format specifier.\n|\tclient->thread = kthread_run(ioreq_task, client, \"VM%u-%s\",\n|\t\t\t\t\tclient->vm->vmid, client->name);\n\nNUL-padding is not required as client is already zero-allocated:\n|\tclient = kzalloc(sizeof(*client), GFP_KERNEL);\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nNote that this patch relies on the _new_ 2-argument version of strscpy()\nintroduced in Commit e6584c3964f2f (\"string: Allow 2-argument\nstrscpy()\").\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc:  <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20240320-strncpy-drivers-virt-acrn-ioreq-c-v1-1-db6996770341@google.com\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Wed Mar 20 23:27:09 2024 +0000",
  "author_date_iso": "2024-03-20T23:27:09+00:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Wed Apr 24 16:44:29 2024 -0700",
  "committer_date_iso": "2024-04-24T16:44:29-07:00",
  "files_changed": [
    "drivers/virt/acrn/ioreq.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/virt/acrn/ioreq.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "2e431b23a13ce4459cf484c8f0b3218c7048b515"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/virt/acrn/ioreq.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}