commit c346dae4f3fbce51bbd4f2ec5e8c6f9b91e93163
Author: Jason Wang <jasowang@redhat.com>
Date:   Wed Jun 22 09:29:40 2022 +0800

    virtio: disable notification hardening by default
    
    We try to harden virtio device notifications in 8b4ec69d7e09 ("virtio:
    harden vring IRQ"). It works with the assumption that the driver or
    core can properly call virtio_device_ready() at the right
    place. Unfortunately, this seems to be not true and uncover various
    bugs of the existing drivers, mainly the issue of using
    virtio_device_ready() incorrectly.
    
    So let's add a Kconfig option and disable it by default. It gives
    us time to fix the drivers and then we can consider re-enabling it.
    
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Message-Id: <20220622012940.21441-1-jasowang@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>

diff --git a/drivers/virtio/Kconfig b/drivers/virtio/Kconfig
index a6dc8b5846fe..e1556d2a355a 100644
--- a/drivers/virtio/Kconfig
+++ b/drivers/virtio/Kconfig
@@ -29,6 +29,19 @@ menuconfig VIRTIO_MENU
 
 if VIRTIO_MENU
 
+config VIRTIO_HARDEN_NOTIFICATION
+        bool "Harden virtio notification"
+        help
+          Enable this to harden the device notifications and suppress
+          those that happen at a time where notifications are illegal.
+
+          Experimental: Note that several drivers still have bugs that
+          may cause crashes or hangs when correct handling of
+          notifications is enforced; depending on the subset of
+          drivers and devices you use, this may or may not work.
+
+          If unsure, say N.
+
 config VIRTIO_PCI
 	tristate "PCI driver for virtio devices"
 	depends on PCI