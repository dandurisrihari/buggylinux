commit c346dae4f3fbce51bbd4f2ec5e8c6f9b91e93163
Author: Jason Wang <jasowang@redhat.com>
Date:   Wed Jun 22 09:29:40 2022 +0800

    virtio: disable notification hardening by default
    
    We try to harden virtio device notifications in 8b4ec69d7e09 ("virtio:
    harden vring IRQ"). It works with the assumption that the driver or
    core can properly call virtio_device_ready() at the right
    place. Unfortunately, this seems to be not true and uncover various
    bugs of the existing drivers, mainly the issue of using
    virtio_device_ready() incorrectly.
    
    So let's add a Kconfig option and disable it by default. It gives
    us time to fix the drivers and then we can consider re-enabling it.
    
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Message-Id: <20220622012940.21441-1-jasowang@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>

diff --git a/drivers/virtio/virtio.c b/drivers/virtio/virtio.c
index 6bace84ae37e..7deeed30d1f3 100644
--- a/drivers/virtio/virtio.c
+++ b/drivers/virtio/virtio.c
@@ -219,6 +219,7 @@ static int virtio_features_ok(struct virtio_device *dev)
  * */
 void virtio_reset_device(struct virtio_device *dev)
 {
+#ifdef CONFIG_VIRTIO_HARDEN_NOTIFICATION
 	/*
 	 * The below virtio_synchronize_cbs() guarantees that any
 	 * interrupt for this line arriving after
@@ -227,6 +228,7 @@ void virtio_reset_device(struct virtio_device *dev)
 	 */
 	virtio_break_device(dev);
 	virtio_synchronize_cbs(dev);
+#endif
 
 	dev->config->reset(dev);
 }