{
  "hash": "4bf24ad09bc0b05e97fb48b962b2c9246fc76727",
  "hash_short": "4bf24ad0",
  "subject": "net: dsa: mv88e6xxx: read FID when handling ATU violations",
  "body": "When an ATU violation occurs, the switch uses the ATU FID register to\nreport the FID of the MAC address that incurred the violation. It would\nbe good for the driver to know the FID value for purposes such as\nlogging and CPU-based authentication.\n\nUp until now, the driver has been calling the mv88e6xxx_g1_atu_op()\nfunction to read ATU violations, but that doesn't do exactly what we\nwant, namely it calls mv88e6xxx_g1_atu_fid_write() with FID 0.\n(side note, the documentation for the ATU Get/Clear Violation command\nsays that writes to the ATU FID register have no effect before the\noperation starts, it's only that we disregard the value that this\nregister provides once the operation completes)\n\nSo mv88e6xxx_g1_atu_fid_write() is not what we want, but rather\nmv88e6xxx_g1_atu_fid_read(). However, the latter doesn't exist, we need\nto write it.\n\nThe remainder of mv88e6xxx_g1_atu_op() except for\nmv88e6xxx_g1_atu_fid_write() is still needed, namely to send a\nGET_CLR_VIOLATION command to the ATU. In principle we could have still\nkept calling mv88e6xxx_g1_atu_op(), but the MDIO writes to the ATU FID\nregister are pointless, but in the interest of doing less CPU work per\ninterrupt, write a new function called mv88e6xxx_g1_read_atu_violation()\nand call it.\n\nThe FID will be the port default FID as set by mv88e6xxx_port_set_fid()\nif the VID from the packet cannot be found in the VTU. Otherwise it is\nthe FID derived from the VTU entry associated with that VID.\n\nSigned-off-by: Hans J. Schultz <netdev@kapio-technology.com>\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nReviewed-by: Florian Fainelli <f.fainelli@gmail.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "net: dsa: mv88e6xxx: read FID when handling ATU violations\n\nWhen an ATU violation occurs, the switch uses the ATU FID register to\nreport the FID of the MAC address that incurred the violation. It would\nbe good for the driver to know the FID value for purposes such as\nlogging and CPU-based authentication.\n\nUp until now, the driver has been calling the mv88e6xxx_g1_atu_op()\nfunction to read ATU violations, but that doesn't do exactly what we\nwant, namely it calls mv88e6xxx_g1_atu_fid_write() with FID 0.\n(side note, the documentation for the ATU Get/Clear Violation command\nsays that writes to the ATU FID register have no effect before the\noperation starts, it's only that we disregard the value that this\nregister provides once the operation completes)\n\nSo mv88e6xxx_g1_atu_fid_write() is not what we want, but rather\nmv88e6xxx_g1_atu_fid_read(). However, the latter doesn't exist, we need\nto write it.\n\nThe remainder of mv88e6xxx_g1_atu_op() except for\nmv88e6xxx_g1_atu_fid_write() is still needed, namely to send a\nGET_CLR_VIOLATION command to the ATU. In principle we could have still\nkept calling mv88e6xxx_g1_atu_op(), but the MDIO writes to the ATU FID\nregister are pointless, but in the interest of doing less CPU work per\ninterrupt, write a new function called mv88e6xxx_g1_read_atu_violation()\nand call it.\n\nThe FID will be the port default FID as set by mv88e6xxx_port_set_fid()\nif the VID from the packet cannot be found in the VTU. Otherwise it is\nthe FID derived from the VTU entry associated with that VID.\n\nSigned-off-by: Hans J. Schultz <netdev@kapio-technology.com>\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nReviewed-by: Florian Fainelli <f.fainelli@gmail.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Hans J. Schultz",
  "author_email": "netdev@kapio-technology.com",
  "author_date": "Fri Dec 9 19:28:15 2022 +0200",
  "author_date_iso": "2022-12-09T19:28:15+02:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Mon Dec 12 15:01:18 2022 -0800",
  "committer_date_iso": "2022-12-12T15:01:18-08:00",
  "files_changed": [
    "drivers/net/dsa/mv88e6xxx/global1_atu.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/dsa/mv88e6xxx/global1_atu.c",
      "insertions": 61,
      "deletions": 11
    }
  ],
  "total_insertions": 61,
  "total_deletions": 11,
  "total_changes": 72,
  "parents": [
    "8a1786b7d44180ad8316d280d99524db6272198f"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/dsa/mv88e6xxx/global1_atu.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}