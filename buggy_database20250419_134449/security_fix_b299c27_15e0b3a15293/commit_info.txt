Commit Hash: b299c273c06f005976cdc1b9e9299d492527607e
Subject: KVM: x86/mmu: Move event re-injection unprotect+retry into common path


Security Keywords:
- injection

Full commit message:
KVM: x86/mmu: Move event re-injection unprotect+retry into common path

Move the event re-injection unprotect+retry logic into
kvm_mmu_write_protect_fault(), i.e. unprotect and retry if and only if
the #PF actually hit a write-protected gfn.  Note, there is a small
possibility that the gfn was unprotected by a different tasking between
hitting the #PF and acquiring mmu_lock, but in that case, KVM will resume
the guest immediately anyways because KVM will treat the fault as spurious.

As a bonus, unprotecting _after_ handling the page fault also addresses the
case where the installing a SPTE to handle fault encounters a shadowed PTE,
i.e. *creates* a read-only SPTE.

Opportunstically add a comment explaining what on earth the intent of the
code is, as based on the changelog from commit 577bdc496614 ("KVM: Avoid
instruction emulation when event delivery is pending").

Link: https://lore.kernel.org/r/20240831001538.336683-15-seanjc@google.com
Signed-off-by: Sean Christopherson <seanjc@google.com>

Metadata:
Author: Sean Christopherson <seanjc@google.com>
Author Date: Fri Aug 30 17:15:29 2024 -0700
Committer: Sean Christopherson <seanjc@google.com>
Commit Date: Mon Sep 9 20:16:29 2024 -0700

Files Changed: 1
Lines Added: 9
Lines Removed: 21
Total Changes: 30
