Commit Hash: 7bd80091567789f1c0cb70eb4737aac8bcd2b6b9
Subject: ALSA: seq: More protection for concurrent write and ioctl races

CVE Identifiers:
- CVE-2018-1000004

Security Keywords:
- hardening

Full commit message:
ALSA: seq: More protection for concurrent write and ioctl races

This patch is an attempt for further hardening against races between
the concurrent write and ioctls.  The previous fix d15d662e89fc
("ALSA: seq: Fix racy pool initializations") covered the race of the
pool initialization at writer and the pool resize ioctl by the
client->ioctl_mutex (CVE-2018-1000004).  However, basically this mutex
should be applied more widely to the whole write operation for
avoiding the unexpected pool operations by another thread.

The only change outside snd_seq_write() is the additional mutex
argument to helper functions, so that we can unlock / relock the given
mutex temporarily during schedule() call for blocking write.

Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
Reported-by: 范龙飞 <long7573@126.com>
Reported-by: Nicolai Stange <nstange@suse.de>
Reviewed-and-tested-by: Nicolai Stange <nstange@suse.de>
Cc: <stable@vger.kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

Metadata:
Author: Takashi Iwai <tiwai@suse.de>
Author Date: Mon Mar 5 22:06:09 2018 +0100
Committer: Takashi Iwai <tiwai@suse.de>
Commit Date: Thu Mar 8 12:05:37 2018 +0100

Files Changed: 4
Lines Added: 24
Lines Removed: 13
Total Changes: 37
