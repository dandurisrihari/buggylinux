{
  "hash": "c8c05a8eec6f1258f6d5cb71a44ee5dc1e989b63",
  "hash_short": "c8c05a8e",
  "subject": "[LSM-IPsec]: SELinux Authorize",
  "body": "This patch contains a fix for the previous patch that adds security\ncontexts to IPsec policies and security associations.  In the previous\npatch, no authorization (besides the check for write permissions to\nSAD and SPD) is required to delete IPsec policies and security\nassocations with security contexts.  Thus a user authorized to change\nSAD and SPD can bypass the IPsec policy authorization by simply\ndeleteing policies with security contexts.  To fix this security hole,\nan additional authorization check is added for removing security\npolicies and security associations with security contexts.\n\nNote that if no security context is supplied on add or present on\npolicy to be deleted, the SELinux module allows the change\nunconditionally.  The hook is called on deletion when no context is\npresent, which we may want to change.  At present, I left it up to the\nmodule.\n\nLSM changes:\n\nThe patch adds two new LSM hooks: xfrm_policy_delete and\nxfrm_state_delete.  The new hooks are necessary to authorize deletion\nof IPsec policies that have security contexts.  The existing hooks\nxfrm_policy_free and xfrm_state_free lack the context to do the\nauthorization, so I decided to split authorization of deletion and\nmemory management of security data, as is typical in the LSM\ninterface.\n\nUse:\n\nThe new delete hooks are checked when xfrm_policy or xfrm_state are\ndeleted by either the xfrm_user interface (xfrm_get_policy,\nxfrm_del_sa) or the pfkey interface (pfkey_spddelete, pfkey_delete).\n\nSELinux changes:\n\nThe new policy_delete and state_delete functions are added.\n\nSigned-off-by: Catherine Zhang <cxzhang@watson.ibm.com>\nSigned-off-by: Trent Jaeger <tjaeger@cse.psu.edu>\nAcked-by: James Morris <jmorris@namei.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "[LSM-IPsec]: SELinux Authorize\n\nThis patch contains a fix for the previous patch that adds security\ncontexts to IPsec policies and security associations.  In the previous\npatch, no authorization (besides the check for write permissions to\nSAD and SPD) is required to delete IPsec policies and security\nassocations with security contexts.  Thus a user authorized to change\nSAD and SPD can bypass the IPsec policy authorization by simply\ndeleteing policies with security contexts.  To fix this security hole,\nan additional authorization check is added for removing security\npolicies and security associations with security contexts.\n\nNote that if no security context is supplied on add or present on\npolicy to be deleted, the SELinux module allows the change\nunconditionally.  The hook is called on deletion when no context is\npresent, which we may want to change.  At present, I left it up to the\nmodule.\n\nLSM changes:\n\nThe patch adds two new LSM hooks: xfrm_policy_delete and\nxfrm_state_delete.  The new hooks are necessary to authorize deletion\nof IPsec policies that have security contexts.  The existing hooks\nxfrm_policy_free and xfrm_state_free lack the context to do the\nauthorization, so I decided to split authorization of deletion and\nmemory management of security data, as is typical in the LSM\ninterface.\n\nUse:\n\nThe new delete hooks are checked when xfrm_policy or xfrm_state are\ndeleted by either the xfrm_user interface (xfrm_get_policy,\nxfrm_del_sa) or the pfkey interface (pfkey_spddelete, pfkey_delete).\n\nSELinux changes:\n\nThe new policy_delete and state_delete functions are added.\n\nSigned-off-by: Catherine Zhang <cxzhang@watson.ibm.com>\nSigned-off-by: Trent Jaeger <tjaeger@cse.psu.edu>\nAcked-by: James Morris <jmorris@namei.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Catherine Zhang",
  "author_email": "cxzhang@watson.ibm.com",
  "author_date": "Thu Jun 8 23:39:49 2006 -0700",
  "author_date_iso": "2006-06-08T23:39:49-07:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@sunset.davemloft.net",
  "committer_date": "Sat Jun 17 21:29:45 2006 -0700",
  "committer_date_iso": "2006-06-17T21:29:45-07:00",
  "files_changed": [
    "include/linux/security.h",
    "net/key/af_key.c",
    "net/xfrm/xfrm_user.c",
    "security/dummy.c",
    "security/selinux/hooks.c",
    "security/selinux/include/xfrm.h",
    "security/selinux/xfrm.c"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "include/linux/security.h",
      "insertions": 34,
      "deletions": 6
    },
    {
      "file": "net/key/af_key.c",
      "insertions": 11,
      "deletions": 6
    },
    {
      "file": "net/xfrm/xfrm_user.c",
      "insertions": 12,
      "deletions": 7
    },
    {
      "file": "security/dummy.c",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "security/selinux/hooks.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "security/selinux/include/xfrm.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "security/selinux/xfrm.c",
      "insertions": 35,
      "deletions": 4
    }
  ],
  "total_insertions": 108,
  "total_deletions": 23,
  "total_changes": 131,
  "parents": [
    "cec6f7f39c3db7d9f6091bf2f8fc8d520f372719"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.18",
    "v2.6.18-rc1",
    "v2.6.18-rc2",
    "v2.6.18-rc3",
    "v2.6.18-rc4",
    "v2.6.18-rc5",
    "v2.6.18-rc6",
    "v2.6.18-rc7",
    "v2.6.19",
    "v2.6.19-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security hole",
      "bypass"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/key/af_key.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/selinux/include/xfrm.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/security.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/selinux/xfrm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/xfrm/xfrm_user.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/selinux/hooks.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/dummy.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}