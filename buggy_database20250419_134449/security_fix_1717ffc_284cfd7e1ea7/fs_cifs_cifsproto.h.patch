commit 1717ffc58850dfa9e08b4977f8d0323cb3336863
Author: Steve French <sfrench@us.ibm.com>
Date:   Thu Jun 8 05:41:32 2006 +0000

    [CIFS] NTLMv2 support part 5
    
    NTLMv2 authentication (stronger authentication than default NTLM) which
    many servers support now works.  There was a problem with the construction
    of the security blob in the older code.  Currently requires
            /proc/fs/cifs/Experimental to be set to 2
    and
            /proc/fs/cifs/SecurityFlags to be set to 0x4004 (to require using
            NTLMv2 instead of default of NTLM)
    
    Next we will check signing to make sure optional NTLMv2 packet signing also
    works.
    
    Signed-off-by: Steve French <sfrench@us.ibm.com>

diff --git a/fs/cifs/cifsproto.h b/fs/cifs/cifsproto.h
index 824afb937a6f..7ffd5b0d63cf 100644
--- a/fs/cifs/cifsproto.h
+++ b/fs/cifs/cifsproto.h
@@ -285,9 +285,11 @@ extern int cifs_sign_smb2(struct kvec *iov, int n_vec, struct TCP_Server_Info *,
 extern int cifs_verify_signature(struct smb_hdr *, const char * mac_key,
 	__u32 expected_sequence_number);
 extern int cifs_calculate_mac_key(char * key,const char * rn,const char * pass);
-extern int CalcNTLMv2_partial_mac_key(struct cifsSesInfo *, struct nls_table *);
-extern void CalcNTLMv2_response(const struct cifsSesInfo *,char * );
-extern void setup_ntlmv2_rsp(const struct cifsSesInfo *, char *);
+extern int CalcNTLMv2_partial_mac_key(struct cifsSesInfo *, 
+			const struct nls_table *);
+extern void CalcNTLMv2_response(const struct cifsSesInfo *, char * );
+extern void setup_ntlmv2_rsp(struct cifsSesInfo *, char *, 
+			     const struct nls_table *);
 #ifdef CONFIG_CIFS_WEAK_PW_HASH
 extern void calc_lanman_hash(struct cifsSesInfo * ses, char * lnm_session_key);
 #endif /* CIFS_WEAK_PW_HASH */