commit 860c3d03bbc3f17aef8600662c488f27fd093142
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Mon Nov 6 17:04:33 2023 +0300

    scsi: scsi_debug: Fix some bugs in sdebug_error_write()
    
    There are two bug in this code:
    
     1) If count is zero, then it will lead to a NULL dereference.  The
        kmalloc() will successfully allocate zero bytes and the test for "if
        (buf[0] == '-')" will read beyond the end of the zero size buffer and
        Oops.
    
     2) The code does not ensure that the user's string is properly NUL
        terminated which could lead to a read overflow.
    
    Fixes: a9996d722b11 ("scsi: scsi_debug: Add interface to manage error injection for a single device")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://lore.kernel.org/r/7733643d-e102-4581-8d29-769472011c97@moroto.mountain
    Reviewed-by: Wenchao Hao <haowenchao2@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

diff --git a/drivers/scsi/scsi_debug.c b/drivers/scsi/scsi_debug.c
index 67922e2c4c19..0dd21598f7b6 100644
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@ -1019,7 +1019,7 @@ static ssize_t sdebug_error_write(struct file *file, const char __user *ubuf,
 	struct sdebug_err_inject *inject;
 	struct scsi_device *sdev = (struct scsi_device *)file->f_inode->i_private;
 
-	buf = kmalloc(count, GFP_KERNEL);
+	buf = kzalloc(count + 1, GFP_KERNEL);
 	if (!buf)
 		return -ENOMEM;