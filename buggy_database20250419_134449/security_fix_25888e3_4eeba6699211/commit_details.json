{
  "hash": "25888e30319f8896fc656fc68643e6a078263060",
  "hash_short": "25888e30",
  "subject": "af_unix: limit recursion level",
  "body": "Its easy to eat all kernel memory and trigger NMI watchdog, using an\nexploit program that queues unix sockets on top of others.\n\nlkml ref : http://lkml.org/lkml/2010/11/25/8\n\nThis mechanism is used in applications, one choice we have is to have a\nrecursion limit.\n\nOther limits might be needed as well (if we queue other types of files),\nsince the passfd mechanism is currently limited by socket receive queue\nsizes only.\n\nAdd a recursion_level to unix socket, allowing up to 4 levels.\n\nEach time we send an unix socket through sendfd mechanism, we copy its\nrecursion level (plus one) to receiver. This recursion level is cleared\nwhen socket receive queue is emptied.\n\nReported-by: \u041c\u0430\u0440\u043a \u041a\u043e\u0440\u0435\u043d\u0431\u0435\u0440\u0433 <socketpair@gmail.com>\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "af_unix: limit recursion level\n\nIts easy to eat all kernel memory and trigger NMI watchdog, using an\nexploit program that queues unix sockets on top of others.\n\nlkml ref : http://lkml.org/lkml/2010/11/25/8\n\nThis mechanism is used in applications, one choice we have is to have a\nrecursion limit.\n\nOther limits might be needed as well (if we queue other types of files),\nsince the passfd mechanism is currently limited by socket receive queue\nsizes only.\n\nAdd a recursion_level to unix socket, allowing up to 4 levels.\n\nEach time we send an unix socket through sendfd mechanism, we copy its\nrecursion level (plus one) to receiver. This recursion level is cleared\nwhen socket receive queue is emptied.\n\nReported-by: \u041c\u0430\u0440\u043a \u041a\u043e\u0440\u0435\u043d\u0431\u0435\u0440\u0433 <socketpair@gmail.com>\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Eric Dumazet",
  "author_email": "eric.dumazet@gmail.com",
  "author_date": "Thu Nov 25 04:11:39 2010 +0000",
  "author_date_iso": "2010-11-25T04:11:39+00:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Mon Nov 29 09:45:15 2010 -0800",
  "committer_date_iso": "2010-11-29T09:45:15-08:00",
  "files_changed": [
    "include/net/af_unix.h",
    "net/unix/af_unix.c",
    "net/unix/garbage.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "include/net/af_unix.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "net/unix/af_unix.c",
      "insertions": 32,
      "deletions": 5
    },
    {
      "file": "net/unix/garbage.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 35,
  "total_deletions": 6,
  "total_changes": 41,
  "parents": [
    "50a4205333c5e545551f1f82b3004ca635407c5c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.37",
    "v2.6.37-rc4",
    "v2.6.37-rc5",
    "v2.6.37-rc6",
    "v2.6.37-rc7",
    "v2.6.37-rc8",
    "v2.6.38",
    "v2.6.38-rc1",
    "v2.6.38-rc2",
    "v2.6.38-rc3"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/net/af_unix.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/unix/af_unix.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/unix/garbage.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}