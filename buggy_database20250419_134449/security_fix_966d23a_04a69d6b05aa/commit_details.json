{
  "hash": "966d23a006ca7b44ac8cf4d0c96b19785e0c3da0",
  "hash_short": "966d23a0",
  "subject": "libnvdimm/label: Clear 'updating' flag after label-set update",
  "body": "The UEFI 2.7 specification sets expectations that the 'updating' flag is\neventually cleared. To date, the libnvdimm core has never adhered to\nthat protocol. The policy of the core matches the policy of other\nmulti-device info-block formats like MD-Software-RAID that expect\nadministrator intervention on inconsistent info-blocks, not automatic\ninvalidation.\n\nHowever, some pre-boot environments may unfortunately attempt to \"clean\nup\" the labels and invalidate a set when it fails to find at least one\n\"non-updating\" label in the set. Clear the updating flag after set\nupdates to minimize the window of vulnerability to aggressive pre-boot\nenvironments.\n\nIdeally implementations would not write to the label area outside of\ncreating namespaces.\n\nNote that this only minimizes the window, it does not close it as the\nsystem can still crash while clearing the flag and the set can be\nsubsequently deleted / invalidated by the pre-boot environment.\n\nFixes: f524bf271a5c (\"libnvdimm: write pmem label set\")\nCc: <stable@vger.kernel.org>\nCc: Kelly Couch <kelly.j.couch@intel.com>\nSigned-off-by: Dan Williams <dan.j.williams@intel.com>",
  "full_message": "libnvdimm/label: Clear 'updating' flag after label-set update\n\nThe UEFI 2.7 specification sets expectations that the 'updating' flag is\neventually cleared. To date, the libnvdimm core has never adhered to\nthat protocol. The policy of the core matches the policy of other\nmulti-device info-block formats like MD-Software-RAID that expect\nadministrator intervention on inconsistent info-blocks, not automatic\ninvalidation.\n\nHowever, some pre-boot environments may unfortunately attempt to \"clean\nup\" the labels and invalidate a set when it fails to find at least one\n\"non-updating\" label in the set. Clear the updating flag after set\nupdates to minimize the window of vulnerability to aggressive pre-boot\nenvironments.\n\nIdeally implementations would not write to the label area outside of\ncreating namespaces.\n\nNote that this only minimizes the window, it does not close it as the\nsystem can still crash while clearing the flag and the set can be\nsubsequently deleted / invalidated by the pre-boot environment.\n\nFixes: f524bf271a5c (\"libnvdimm: write pmem label set\")\nCc: <stable@vger.kernel.org>\nCc: Kelly Couch <kelly.j.couch@intel.com>\nSigned-off-by: Dan Williams <dan.j.williams@intel.com>",
  "author_name": "Dan Williams",
  "author_email": "dan.j.williams@intel.com",
  "author_date": "Tue Jan 15 10:47:00 2019 -0800",
  "author_date_iso": "2019-01-15T10:47:00-08:00",
  "committer_name": "Dan Williams",
  "committer_email": "dan.j.williams@intel.com",
  "committer_date": "Tue Jan 15 10:47:00 2019 -0800",
  "committer_date_iso": "2019-01-15T10:47:00-08:00",
  "files_changed": [
    "drivers/nvdimm/label.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/nvdimm/label.c",
      "insertions": 18,
      "deletions": 5
    }
  ],
  "total_insertions": 18,
  "total_deletions": 5,
  "total_changes": 23,
  "parents": [
    "1c7fc5cbc33980acd13d668f1c8f0313d6ae9fd8"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.1",
    "v5.1-rc1",
    "v5.1-rc2",
    "v5.1-rc3",
    "v5.1-rc4",
    "v5.1-rc5",
    "v5.1-rc6",
    "v5.1-rc7",
    "v5.2",
    "v5.2-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/nvdimm/label.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}