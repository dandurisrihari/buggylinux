commit 4205a89b8060141ac0216a507b9f70728f056a10
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Mar 13 12:40:39 2018 +0000

    arm64: Make BP hardening slot counter available
    
    We're about to need to allocate hardening slots from other parts
    of the kernel (in order to support ARM64_HARDEN_EL2_VECTORS).
    
    Turn the counter into an atomic_t and make it available to the
    rest of the kernel. Also add BP_HARDEN_EL2_SLOTS as the number of
    slots instead of the hardcoded 4...
    
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Reviewed-by: Andrew Jones <drjones@redhat.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>

diff --git a/arch/arm64/include/asm/mmu.h b/arch/arm64/include/asm/mmu.h
index a050d4f3615d..3baf010fe883 100644
--- a/arch/arm64/include/asm/mmu.h
+++ b/arch/arm64/include/asm/mmu.h
@@ -21,6 +21,8 @@
 #define USER_ASID_FLAG	(UL(1) << USER_ASID_BIT)
 #define TTBR_ASID_MASK	(UL(0xffff) << 48)
 
+#define BP_HARDEN_EL2_SLOTS 4
+
 #ifndef __ASSEMBLY__
 
 typedef struct {
@@ -51,6 +53,7 @@ struct bp_hardening_data {
 
 #ifdef CONFIG_HARDEN_BRANCH_PREDICTOR
 extern char __bp_harden_hyp_vecs_start[], __bp_harden_hyp_vecs_end[];
+extern atomic_t arm64_el2_vector_last_slot;
 
 DECLARE_PER_CPU_READ_MOSTLY(struct bp_hardening_data, bp_hardening_data);