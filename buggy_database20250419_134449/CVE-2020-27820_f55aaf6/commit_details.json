{
  "hash": "f55aaf63bde0d0336c3823bb3713bd4a464abbcf",
  "hash_short": "f55aaf63",
  "subject": "drm/nouveau: clean up all clients on device removal",
  "body": "The postclose handler can run after the device has been removed (or the\ndriver has been unbound) since userspace clients are free to hold the\nfile open as long as they want. Because the device removal callback\nfrees the entire nouveau_drm structure, any reference to it in the\npostclose handler will result in a use-after-free.\n\nTo reproduce this, one must simply open the device file, unbind the\ndriver (or physically remove the device), and then close the device\nfile. This was found and can be reproduced easily with the IGT\ncore_hotunplug tests.\n\nTo avoid this, all clients are cleaned up in the device finalization\nrather than deferring it to the postclose handler, and the postclose\nhandler is protected by a critical section which ensures the\ndrm_dev_unplug() and the postclose handler won't race.\n\nThis is not an ideal fix, since as I understand the proposed plan for\nthe kernel<->userspace interface for hotplug support, destroying the\nclient before the file is closed will cause problems. However, I believe\nto properly fix this issue, the lifetime of the nouveau_drm structure\nneeds to be extended to match the drm_device, and this proved to be a\nrather invasive change. Thus, I've broken this out so the fix can be\neasily backported.\n\nThis fixes with the two previous commits CVE-2020-27820 (Karol).\n\nCc: stable@vger.kernel.org # 5.4+\nSigned-off-by: Jeremy Cline <jcline@redhat.com>\nReviewed-by: Lyude Paul <lyude@redhat.com>\nReviewed-by: Ben Skeggs <bskeggs@redhat.com>\nTested-by: Karol Herbst <kherbst@redhat.com>\nSigned-off-by: Karol Herbst <kherbst@redhat.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201125202648.5220-4-jcline@redhat.com\nLink: https://gitlab.freedesktop.org/drm/nouveau/-/merge_requests/14",
  "full_message": "drm/nouveau: clean up all clients on device removal\n\nThe postclose handler can run after the device has been removed (or the\ndriver has been unbound) since userspace clients are free to hold the\nfile open as long as they want. Because the device removal callback\nfrees the entire nouveau_drm structure, any reference to it in the\npostclose handler will result in a use-after-free.\n\nTo reproduce this, one must simply open the device file, unbind the\ndriver (or physically remove the device), and then close the device\nfile. This was found and can be reproduced easily with the IGT\ncore_hotunplug tests.\n\nTo avoid this, all clients are cleaned up in the device finalization\nrather than deferring it to the postclose handler, and the postclose\nhandler is protected by a critical section which ensures the\ndrm_dev_unplug() and the postclose handler won't race.\n\nThis is not an ideal fix, since as I understand the proposed plan for\nthe kernel<->userspace interface for hotplug support, destroying the\nclient before the file is closed will cause problems. However, I believe\nto properly fix this issue, the lifetime of the nouveau_drm structure\nneeds to be extended to match the drm_device, and this proved to be a\nrather invasive change. Thus, I've broken this out so the fix can be\neasily backported.\n\nThis fixes with the two previous commits CVE-2020-27820 (Karol).\n\nCc: stable@vger.kernel.org # 5.4+\nSigned-off-by: Jeremy Cline <jcline@redhat.com>\nReviewed-by: Lyude Paul <lyude@redhat.com>\nReviewed-by: Ben Skeggs <bskeggs@redhat.com>\nTested-by: Karol Herbst <kherbst@redhat.com>\nSigned-off-by: Karol Herbst <kherbst@redhat.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201125202648.5220-4-jcline@redhat.com\nLink: https://gitlab.freedesktop.org/drm/nouveau/-/merge_requests/14",
  "author_name": "Jeremy Cline",
  "author_email": "jcline@redhat.com",
  "author_date": "Wed Nov 25 15:26:48 2020 -0500",
  "author_date_iso": "2020-11-25T15:26:48-05:00",
  "committer_name": "Karol Herbst",
  "committer_email": "kherbst@redhat.com",
  "committer_date": "Thu Nov 4 13:14:23 2021 +0100",
  "committer_date_iso": "2021-11-04T13:14:23+01:00",
  "files_changed": [
    "drivers/gpu/drm/nouveau/nouveau_drm.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/gpu/drm/nouveau/nouveau_drm.c",
      "insertions": 30,
      "deletions": 0
    }
  ],
  "total_insertions": 30,
  "total_deletions": 0,
  "total_changes": 30,
  "parents": [
    "abae9164a421bc4a41a3769f01ebcd1f9d955e0e"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2020-27820"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "drivers/gpu/drm/nouveau/nouveau_drm.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}