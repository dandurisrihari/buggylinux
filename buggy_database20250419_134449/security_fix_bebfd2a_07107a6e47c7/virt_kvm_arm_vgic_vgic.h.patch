commit bebfd2a203736a42510ecf48ae82c9d7e801eeb0
Author: Marc Zyngier <maz@kernel.org>
Date:   Fri Oct 27 15:28:35 2017 +0100

    KVM: arm/arm64: vITS: Add MSI translation helpers
    
    The whole MSI injection process is fairly monolithic. An MSI write
    gets turned into an injected LPI in one swift go. But this is actually
    a more fine-grained process:
    
    - First, a virtual ITS gets selected using the doorbell address
    - Then the DevID/EventID pair gets translated into an LPI
    - Finally the LPI is injected
    
    Since the GICv4 code needs the first two steps in order to match
    an IRQ routing entry to an LPI, let's expose them as helpers,
    and refactor the existing code to use them
    
    Reviewed-by: Christoffer Dall <cdall@linaro.org>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>

diff --git a/virt/kvm/arm/vgic/vgic.h b/virt/kvm/arm/vgic/vgic.h
index 4f8aecb07ae6..0ac85045c0c7 100644
--- a/virt/kvm/arm/vgic/vgic.h
+++ b/virt/kvm/arm/vgic/vgic.h
@@ -237,4 +237,8 @@ static inline int vgic_v3_max_apr_idx(struct kvm_vcpu *vcpu)
 	}
 }
 
+int vgic_its_resolve_lpi(struct kvm *kvm, struct vgic_its *its,
+			 u32 devid, u32 eventid, struct vgic_irq **irq);
+struct vgic_its *vgic_msi_to_its(struct kvm *kvm, struct kvm_msi *msi);
+
 #endif