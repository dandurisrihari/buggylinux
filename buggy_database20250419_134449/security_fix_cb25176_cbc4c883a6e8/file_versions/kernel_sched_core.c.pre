commit a6e4491c682a7b28574a62e6f311a0acec50b318
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Thu Feb 4 09:38:00 2016 -0500

    sched/isolcpus: Output warning when the 'isolcpus=' kernel parameter is invalid
    
    The isolcpus= kernel boot parameter restricts userspace from scheduling on
    the specified CPUs.
    
    If a CPU is specified that is outside the range of 0 to nr_cpu_ids,
    cpulist_parse() will return -ERANGE, return an empty cpulist, and
    fail silently.
    
    This patch adds an error message to isolated_cpu_setup() to indicate to
    the user that something has gone awry, and returns 0 on error.
    
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1454596680-10367-1-git-send-email-prarit@redhat.com
    [ Twiddled some details. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 9503d590e5ef..24fcdbf28b18 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -6173,11 +6173,16 @@ cpu_attach_domain(struct sched_domain *sd, struct root_domain *rd, int cpu)
 /* Setup the mask of cpus configured for isolated domains */
 static int __init isolated_cpu_setup(char *str)
 {
+	int ret;
+
 	alloc_bootmem_cpumask_var(&cpu_isolated_map);
-	cpulist_parse(str, cpu_isolated_map);
+	ret = cpulist_parse(str, cpu_isolated_map);
+	if (ret) {
+		pr_err("sched: Error, all isolcpus= values must be between 0 and %d\n", nr_cpu_ids);
+		return 0;
+	}
 	return 1;
 }
-
 __setup("isolcpus=", isolated_cpu_setup);
 
 struct s_data {