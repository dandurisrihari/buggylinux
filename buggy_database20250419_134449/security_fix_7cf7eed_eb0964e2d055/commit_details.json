{
  "hash": "7cf7eed103d3eea600146ea1853d15ee1f2f0456",
  "hash_short": "7cf7eed1",
  "subject": "Merge tag 'fs.idmapped.v5.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux",
  "body": "Pull setattr idmapping fix from Christian Brauner:\n \"This contains a simple fix for setattr. When determining the validity\n  of the attributes the ia_{g,u}id fields contain the value that will be\n  written to inode->i_{g,u}id. When the {g,u}id attribute of the file\n  isn't altered and the caller's fs{g,u}id matches the current {g,u}id\n  attribute the attribute change is allowed.\n\n  The value in ia_{g,u}id does already account for idmapped mounts and\n  will have taken the relevant idmapping into account. So in order to\n  verify that the {g,u}id attribute isn't changed we simple need to\n  compare the ia_{g,u}id value against the inode's i_{g,u}id value.\n\n  This only has any meaning for idmapped mounts as idmapping helpers are\n  idempotent without them. And for idmapped mounts this really only has\n  a meaning when circular idmappings are used, i.e. mappings where e.g.\n  id 1000 is mapped to id 1001 and id 1001 is mapped to id 1000. Such\n  ciruclar mappings can e.g. be useful when sharing the same home\n  directory between multiple users at the same time.\n\n  Before this patch we could end up denying legitimate attribute changes\n  and allowing invalid attribute changes when circular mappings are\n  used. To even get into this situation the caller must've been\n  privileged both to create that mapping and to create that idmapped\n  mount.\n\n  This hasn't been seen in the wild anywhere but came up when expanding\n  the fstest suite during work on a series of hardening patches. All\n  idmapped fstests pass without any regressions and we're adding new\n  tests to verify the behavior of circular mappings.\n\n  The new tests can be found at [1]\"\n\nLink: https://lore.kernel.org/linux-fsdevel/20211109145713.1868404-2-brauner@kernel.org [1]\n\n* tag 'fs.idmapped.v5.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux:\n  fs: handle circular mappings correctly",
  "full_message": "Merge tag 'fs.idmapped.v5.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux\n\nPull setattr idmapping fix from Christian Brauner:\n \"This contains a simple fix for setattr. When determining the validity\n  of the attributes the ia_{g,u}id fields contain the value that will be\n  written to inode->i_{g,u}id. When the {g,u}id attribute of the file\n  isn't altered and the caller's fs{g,u}id matches the current {g,u}id\n  attribute the attribute change is allowed.\n\n  The value in ia_{g,u}id does already account for idmapped mounts and\n  will have taken the relevant idmapping into account. So in order to\n  verify that the {g,u}id attribute isn't changed we simple need to\n  compare the ia_{g,u}id value against the inode's i_{g,u}id value.\n\n  This only has any meaning for idmapped mounts as idmapping helpers are\n  idempotent without them. And for idmapped mounts this really only has\n  a meaning when circular idmappings are used, i.e. mappings where e.g.\n  id 1000 is mapped to id 1001 and id 1001 is mapped to id 1000. Such\n  ciruclar mappings can e.g. be useful when sharing the same home\n  directory between multiple users at the same time.\n\n  Before this patch we could end up denying legitimate attribute changes\n  and allowing invalid attribute changes when circular mappings are\n  used. To even get into this situation the caller must've been\n  privileged both to create that mapping and to create that idmapped\n  mount.\n\n  This hasn't been seen in the wild anywhere but came up when expanding\n  the fstest suite during work on a series of hardening patches. All\n  idmapped fstests pass without any regressions and we're adding new\n  tests to verify the behavior of circular mappings.\n\n  The new tests can be found at [1]\"\n\nLink: https://lore.kernel.org/linux-fsdevel/20211109145713.1868404-2-brauner@kernel.org [1]\n\n* tag 'fs.idmapped.v5.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux:\n  fs: handle circular mappings correctly",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Thu Nov 18 12:17:33 2021 -0800",
  "author_date_iso": "2021-11-18T12:17:33-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Nov 18 12:17:33 2021 -0800",
  "committer_date_iso": "2021-11-18T12:17:33-08:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "fs/attr.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 2,
  "total_deletions": 2,
  "total_changes": 4,
  "parents": [
    "a6a6d227facf8024e3356f8eafcd8155453cd2e2",
    "968219708108440b23bc292e0486e3cc1d9a1bed"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": []
}