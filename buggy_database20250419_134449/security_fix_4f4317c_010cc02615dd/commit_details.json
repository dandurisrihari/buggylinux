{
  "hash": "4f4317c13a40194940acf4a71670179c4faca2b5",
  "hash_short": "4f4317c1",
  "subject": "btrfs: fix error handling in commit_fs_roots",
  "body": "While doing error injection I would sometimes get a corrupt file system.\nThis is because I was injecting errors at btrfs_search_slot, but would\nonly do it one time per stack.  This uncovered a problem in\ncommit_fs_roots, where if we get an error we would just break.  However\nwe're in a nested loop, the first loop being a loop to find all the\ndirty fs roots, and then subsequent root updates would succeed clearing\nthe error value.\n\nThis isn't likely to happen in real scenarios, however we could\npotentially get a random ENOMEM once and then not again, and we'd end up\nwith a corrupted file system.  Fix this by moving the error checking\naround a bit to the main loop, as this is the only place where something\nwill fail, and return the error as soon as it occurs.\n\nWith this patch my reproducer no longer corrupts the file system.\n\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "full_message": "btrfs: fix error handling in commit_fs_roots\n\nWhile doing error injection I would sometimes get a corrupt file system.\nThis is because I was injecting errors at btrfs_search_slot, but would\nonly do it one time per stack.  This uncovered a problem in\ncommit_fs_roots, where if we get an error we would just break.  However\nwe're in a nested loop, the first loop being a loop to find all the\ndirty fs roots, and then subsequent root updates would succeed clearing\nthe error value.\n\nThis isn't likely to happen in real scenarios, however we could\npotentially get a random ENOMEM once and then not again, and we'd end up\nwith a corrupted file system.  Fix this by moving the error checking\naround a bit to the main loop, as this is the only place where something\nwill fail, and return the error as soon as it occurs.\n\nWith this patch my reproducer no longer corrupts the file system.\n\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "author_name": "Josef Bacik",
  "author_email": "josef@toxicpanda.com",
  "author_date": "Tue Dec 1 09:53:23 2020 -0500",
  "author_date_iso": "2020-12-01T09:53:23-05:00",
  "committer_name": "David Sterba",
  "committer_email": "dsterba@suse.com",
  "committer_date": "Mon Feb 8 22:58:49 2021 +0100",
  "committer_date_iso": "2021-02-08T22:58:49+01:00",
  "files_changed": [
    "fs/btrfs/transaction.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/btrfs/transaction.c",
      "insertions": 6,
      "deletions": 5
    }
  ],
  "total_insertions": 6,
  "total_deletions": 5,
  "total_changes": 11,
  "parents": [
    "e0756cfc7d7cd08c98a53b6009c091a3f6a50be6"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/transaction.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}