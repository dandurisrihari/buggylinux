Commit Hash: d4b9ff3d55dede868f43c4541ba999c109dbadcb
Subject: KVM: x86: Treat MONTIOR/MWAIT as a "partially emulated" feature


Security Keywords:
- hardening

Full commit message:
KVM: x86: Treat MONTIOR/MWAIT as a "partially emulated" feature

Enumerate MWAIT in cpuid_func_emulated(), but only if the caller wants to
include "partially emulated" features, i.e. features that KVM kinda sorta
emulates, but with major caveats.  This will allow initializing the guest
cpu_caps based on the set of features that KVM virtualizes and/or emulates,
without needing to handle things like MONITOR/MWAIT as one-off exceptions.

Adding one-off handling for individual features is quite painful,
especially when considering future hardening.  It's very doable to verify,
at compile time, that every CPUID-based feature that KVM queries when
emulating guest behavior is actually known to KVM, e.g. to prevent KVM
bugs where KVM emulates some feature but fails to advertise support to
userspace.  In other words, any features that are special cased, i.e. not
handled generically in the CPUID framework, would also need to be special
cased for any hardening efforts that build on said framework.

Link: https://lore.kernel.org/r/20241128013424.4096668-44-seanjc@google.com
Signed-off-by: Sean Christopherson <seanjc@google.com>

Metadata:
Author: Sean Christopherson <seanjc@google.com>
Author Date: Wed Nov 27 17:34:10 2024 -0800
Committer: Sean Christopherson <seanjc@google.com>
Commit Date: Wed Dec 18 14:20:08 2024 -0800

Files Changed: 1
Lines Added: 13
Lines Removed: 2
Total Changes: 15
