{
  "hash": "87c31b39abcb6fb6bd7d111200c9627a594bf6a9",
  "hash_short": "87c31b39",
  "subject": "Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace",
  "body": "Pull user namespace related fixes from Eric Biederman:\n \"As these are bug fixes almost all of thes changes are marked for\n  backporting to stable.\n\n  The first change (implicitly adding MNT_NODEV on remount) addresses a\n  regression that was created when security issues with unprivileged\n  remount were closed.  I go on to update the remount test to make it\n  easy to detect if this issue reoccurs.\n\n  Then there are a handful of mount and umount related fixes.\n\n  Then half of the changes deal with the a recently discovered design\n  bug in the permission checks of gid_map.  Unix since the beginning has\n  allowed setting group permissions on files to less than the user and\n  other permissions (aka ---rwx---rwx).  As the unix permission checks\n  stop as soon as a group matches, and setgroups allows setting groups\n  that can not later be dropped, results in a situtation where it is\n  possible to legitimately use a group to assign fewer privileges to a\n  process.  Which means dropping a group can increase a processes\n  privileges.\n\n  The fix I have adopted is that gid_map is now no longer writable\n  without privilege unless the new file /proc/self/setgroups has been\n  set to permanently disable setgroups.\n\n  The bulk of user namespace using applications even the applications\n  using applications using user namespaces without privilege remain\n  unaffected by this change.  Unfortunately this ix breaks a couple user\n  space applications, that were relying on the problematic behavior (one\n  of which was tools/selftests/mount/unprivileged-remount-test.c).\n\n  To hopefully prevent needing a regression fix on top of my security\n  fix I rounded folks who work with the container implementations mostly\n  like to be affected and encouraged them to test the changes.\n\n    > So far nothing broke on my libvirt-lxc test bed. :-)\n    > Tested with openSUSE 13.2 and libvirt 1.2.9.\n    > Tested-by: Richard Weinberger <richard@nod.at>\n\n    > Tested on Fedora20 with libvirt 1.2.11, works fine.\n    > Tested-by: Chen Hanxiao <chenhanxiao@cn.fujitsu.com>\n\n    > Ok, thanks - yes, unprivileged lxc is working fine with your kernels.\n    > Just to be sure I was testing the right thing I also tested using\n    > my unprivileged nsexec testcases, and they failed on setgroup/setgid\n    > as now expected, and succeeded there without your patches.\n    > Tested-by: Serge Hallyn <serge.hallyn@ubuntu.com>\n\n    > I tested this with Sandstorm.  It breaks as is and it works if I add\n    > the setgroups thing.\n    > Tested-by: Andy Lutomirski <luto@amacapital.net> # breaks things as designed :(\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace:\n  userns: Unbreak the unprivileged remount tests\n  userns; Correct the comment in map_write\n  userns: Allow setting gid_maps without privilege when setgroups is disabled\n  userns: Add a knob to disable setgroups on a per user namespace basis\n  userns: Rename id_map_mutex to userns_state_mutex\n  userns: Only allow the creator of the userns unprivileged mappings\n  userns: Check euid no fsuid when establishing an unprivileged uid mapping\n  userns: Don't allow unprivileged creation of gid mappings\n  userns: Don't allow setgroups until a gid mapping has been setablished\n  userns: Document what the invariant required for safe unprivileged mappings.\n  groups: Consolidate the setgroups permission checks\n  mnt: Clear mnt_expire during pivot_root\n  mnt: Carefully set CL_UNPRIVILEGED in clone_mnt\n  mnt: Move the clear of MNT_LOCKED from copy_tree to it's callers.\n  umount: Do not allow unmounting rootfs.\n  umount: Disallow unprivileged mount force\n  mnt: Update unprivileged remount test\n  mnt: Implicitly add MNT_NODEV on remount when it was implicitly added by mount",
  "full_message": "Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace\n\nPull user namespace related fixes from Eric Biederman:\n \"As these are bug fixes almost all of thes changes are marked for\n  backporting to stable.\n\n  The first change (implicitly adding MNT_NODEV on remount) addresses a\n  regression that was created when security issues with unprivileged\n  remount were closed.  I go on to update the remount test to make it\n  easy to detect if this issue reoccurs.\n\n  Then there are a handful of mount and umount related fixes.\n\n  Then half of the changes deal with the a recently discovered design\n  bug in the permission checks of gid_map.  Unix since the beginning has\n  allowed setting group permissions on files to less than the user and\n  other permissions (aka ---rwx---rwx).  As the unix permission checks\n  stop as soon as a group matches, and setgroups allows setting groups\n  that can not later be dropped, results in a situtation where it is\n  possible to legitimately use a group to assign fewer privileges to a\n  process.  Which means dropping a group can increase a processes\n  privileges.\n\n  The fix I have adopted is that gid_map is now no longer writable\n  without privilege unless the new file /proc/self/setgroups has been\n  set to permanently disable setgroups.\n\n  The bulk of user namespace using applications even the applications\n  using applications using user namespaces without privilege remain\n  unaffected by this change.  Unfortunately this ix breaks a couple user\n  space applications, that were relying on the problematic behavior (one\n  of which was tools/selftests/mount/unprivileged-remount-test.c).\n\n  To hopefully prevent needing a regression fix on top of my security\n  fix I rounded folks who work with the container implementations mostly\n  like to be affected and encouraged them to test the changes.\n\n    > So far nothing broke on my libvirt-lxc test bed. :-)\n    > Tested with openSUSE 13.2 and libvirt 1.2.9.\n    > Tested-by: Richard Weinberger <richard@nod.at>\n\n    > Tested on Fedora20 with libvirt 1.2.11, works fine.\n    > Tested-by: Chen Hanxiao <chenhanxiao@cn.fujitsu.com>\n\n    > Ok, thanks - yes, unprivileged lxc is working fine with your kernels.\n    > Just to be sure I was testing the right thing I also tested using\n    > my unprivileged nsexec testcases, and they failed on setgroup/setgid\n    > as now expected, and succeeded there without your patches.\n    > Tested-by: Serge Hallyn <serge.hallyn@ubuntu.com>\n\n    > I tested this with Sandstorm.  It breaks as is and it works if I add\n    > the setgroups thing.\n    > Tested-by: Andy Lutomirski <luto@amacapital.net> # breaks things as designed :(\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace:\n  userns: Unbreak the unprivileged remount tests\n  userns; Correct the comment in map_write\n  userns: Allow setting gid_maps without privilege when setgroups is disabled\n  userns: Add a knob to disable setgroups on a per user namespace basis\n  userns: Rename id_map_mutex to userns_state_mutex\n  userns: Only allow the creator of the userns unprivileged mappings\n  userns: Check euid no fsuid when establishing an unprivileged uid mapping\n  userns: Don't allow unprivileged creation of gid mappings\n  userns: Don't allow setgroups until a gid mapping has been setablished\n  userns: Document what the invariant required for safe unprivileged mappings.\n  groups: Consolidate the setgroups permission checks\n  mnt: Clear mnt_expire during pivot_root\n  mnt: Carefully set CL_UNPRIVILEGED in clone_mnt\n  mnt: Move the clear of MNT_LOCKED from copy_tree to it's callers.\n  umount: Do not allow unmounting rootfs.\n  umount: Disallow unprivileged mount force\n  mnt: Update unprivileged remount test\n  mnt: Implicitly add MNT_NODEV on remount when it was implicitly added by mount",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Wed Dec 17 12:31:40 2014 -0800",
  "author_date_iso": "2014-12-17T12:31:40-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Dec 17 12:31:40 2014 -0800",
  "committer_date_iso": "2014-12-17T12:31:40-08:00",
  "files_changed": [
    "fs/namespace.c",
    "fs/proc/base.c",
    "include/linux/user_namespace.h",
    "kernel/user.c",
    "kernel/user_namespace.c"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "arch/s390/kernel/compat_linux.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/namespace.c",
      "insertions": 15,
      "deletions": 3
    },
    {
      "file": "fs/pnode.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/proc/base.c",
      "insertions": 53,
      "deletions": 0
    },
    {
      "file": "include/linux/cred.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/user_namespace.h",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "kernel/groups.c",
      "insertions": 10,
      "deletions": 1
    },
    {
      "file": "kernel/uid16.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/user.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "kernel/user_namespace.c",
      "insertions": 113,
      "deletions": 11
    },
    {
      "file": "tools/testing/selftests/mount/unprivileged-remount-test.c",
      "insertions": 166,
      "deletions": 38
    }
  ],
  "total_insertions": 374,
  "total_deletions": 55,
  "total_changes": 429,
  "parents": [
    "f045bbb9fa1bf6f507ad4de12d4e3471d8f672f1",
    "db86da7cb76f797a1a8b445166a15cb922c6ff85"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.19",
    "v3.19-rc1",
    "v3.19-rc2",
    "v3.19-rc3",
    "v3.19-rc4",
    "v3.19-rc5",
    "v3.19-rc6",
    "v3.19-rc7",
    "v4.0",
    "v4.0-rc1"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security\n  fix"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/namespace.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/proc/base.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/user_namespace.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/user.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/user_namespace.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}