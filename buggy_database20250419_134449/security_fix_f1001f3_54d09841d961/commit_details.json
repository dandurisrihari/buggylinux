{
  "hash": "f1001f3d3b6868998cab73d10fda1a5c99ddf963",
  "hash_short": "f1001f3d",
  "subject": "mm/mglru: reset page lru tier bits when activating",
  "body": "When a folio is activated, lru_gen_add_folio() moves the folio to the\nyoungest generation.  But unlike folio_update_gen()/folio_inc_gen(),\nlru_gen_add_folio() doesn't reset the folio lru tier bits (LRU_REFS_MASK |\nLRU_REFS_FLAGS).  This inconsistency can affect how pages are aged via\nfolio_mark_accessed() (e.g.  fd accesses), though no user visible impact\nrelated to this has been detected yet.\n\nNote that lru_gen_add_folio() cannot clear PG_workingset if the activation\nis due to workingset refault, otherwise PSI accounting will be skipped. \nSo fix lru_gen_add_folio() to clear the lru tier bits other than\nPG_workingset when activating a folio, and also clear all the lru tier\nbits when a folio is activated via folio_activate() in\nlru_gen_look_around().\n\nLink: https://lkml.kernel.org/r/20241017181528.3358821-1-weixugc@google.com\nFixes: 018ee47f1489 (\"mm: multi-gen LRU: exploit locality in rmap\")\nSigned-off-by: Wei Xu <weixugc@google.com>\nCc: Axel Rasmussen <axelrasmussen@google.com>\nCc: Brian Geffon <bgeffon@google.com>\nCc: Jan Alexander Steffens <heftig@archlinux.org>\nCc: Suleiman Souhlal <suleiman@google.com>\nCc: Yu Zhao <yuzhao@google.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "full_message": "mm/mglru: reset page lru tier bits when activating\n\nWhen a folio is activated, lru_gen_add_folio() moves the folio to the\nyoungest generation.  But unlike folio_update_gen()/folio_inc_gen(),\nlru_gen_add_folio() doesn't reset the folio lru tier bits (LRU_REFS_MASK |\nLRU_REFS_FLAGS).  This inconsistency can affect how pages are aged via\nfolio_mark_accessed() (e.g.  fd accesses), though no user visible impact\nrelated to this has been detected yet.\n\nNote that lru_gen_add_folio() cannot clear PG_workingset if the activation\nis due to workingset refault, otherwise PSI accounting will be skipped. \nSo fix lru_gen_add_folio() to clear the lru tier bits other than\nPG_workingset when activating a folio, and also clear all the lru tier\nbits when a folio is activated via folio_activate() in\nlru_gen_look_around().\n\nLink: https://lkml.kernel.org/r/20241017181528.3358821-1-weixugc@google.com\nFixes: 018ee47f1489 (\"mm: multi-gen LRU: exploit locality in rmap\")\nSigned-off-by: Wei Xu <weixugc@google.com>\nCc: Axel Rasmussen <axelrasmussen@google.com>\nCc: Brian Geffon <bgeffon@google.com>\nCc: Jan Alexander Steffens <heftig@archlinux.org>\nCc: Suleiman Souhlal <suleiman@google.com>\nCc: Yu Zhao <yuzhao@google.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "author_name": "Wei Xu",
  "author_email": "weixugc@google.com",
  "author_date": "Thu Oct 17 18:15:28 2024 +0000",
  "author_date_iso": "2024-10-17T18:15:28+00:00",
  "committer_name": "Andrew Morton",
  "committer_email": "akpm@linux-foundation.org",
  "committer_date": "Wed Nov 6 20:11:15 2024 -0800",
  "committer_date_iso": "2024-11-06T20:11:15-08:00",
  "files_changed": [
    "include/linux/mm_inline.h",
    "include/linux/mmzone.h",
    "mm/vmscan.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "include/linux/mm_inline.h",
      "insertions": 14,
      "deletions": 1
    },
    {
      "file": "include/linux/mmzone.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "mm/vmscan.c",
      "insertions": 4,
      "deletions": 4
    }
  ],
  "total_insertions": 20,
  "total_deletions": 5,
  "total_changes": 25,
  "parents": [
    "d3ea85c6c5f70acff970f3339afb2da8f9a805a6"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/mm_inline.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/mmzone.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/vmscan.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}