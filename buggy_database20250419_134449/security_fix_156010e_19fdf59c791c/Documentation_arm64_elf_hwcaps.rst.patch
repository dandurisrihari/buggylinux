commit 156010ed9c2ac1e9df6c11b1f688cf8a6e0152e6
Merge: e8a709dc2a91 1abf363d085c b2482807fbd4 2c4192c0a7f2 004fc58f917c 9442d05bba6c 8ced92801935 59b37fe52f49 4f2c9bf16a4b dc4824faa265 a088cf8eee12 c68cf5285e18 a5f61cc636f4
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Fri Feb 10 18:51:49 2023 +0000

    Merge branches 'for-next/sysreg', 'for-next/sme', 'for-next/kselftest', 'for-next/misc', 'for-next/sme2', 'for-next/tpidr2', 'for-next/scs', 'for-next/compat-hwcap', 'for-next/ftrace', 'for-next/efi-boot-mmu-on', 'for-next/ptrauth' and 'for-next/pseudo-nmi', remote-tracking branch 'arm64/for-next/perf' into for-next/core
    
    * arm64/for-next/perf:
      perf: arm_spe: Print the version of SPE detected
      perf: arm_spe: Add support for SPEv1.2 inverted event filtering
      perf: Add perf_event_attr::config3
      drivers/perf: fsl_imx8_ddr_perf: Remove set-but-not-used variable
      perf: arm_spe: Support new SPEv1.2/v8.7 'not taken' event
      perf: arm_spe: Use new PMSIDR_EL1 register enums
      perf: arm_spe: Drop BIT() and use FIELD_GET/PREP accessors
      arm64/sysreg: Convert SPE registers to automatic generation
      arm64: Drop SYS_ from SPE register defines
      perf: arm_spe: Use feature numbering for PMSEVFR_EL1 defines
      perf/marvell: Add ACPI support to TAD uncore driver
      perf/marvell: Add ACPI support to DDR uncore driver
      perf/arm-cmn: Reset DTM_PMU_CONFIG at probe
      drivers/perf: hisi: Extract initialization of "cpa_pmu->pmu"
      drivers/perf: hisi: Simplify the parameters of hisi_pmu_init()
      drivers/perf: hisi: Advertise the PERF_PMU_CAP_NO_EXCLUDE capability
    
    * for-next/sysreg:
      : arm64 sysreg and cpufeature fixes/updates
      KVM: arm64: Use symbolic definition for ISR_EL1.A
      arm64/sysreg: Add definition of ISR_EL1
      arm64/sysreg: Add definition for ICC_NMIAR1_EL1
      arm64/cpufeature: Remove 4 bit assumption in ARM64_FEATURE_MASK()
      arm64/sysreg: Fix errors in 32 bit enumeration values
      arm64/cpufeature: Fix field sign for DIT hwcap detection
    
    * for-next/sme:
      : SME-related updates
      arm64/sme: Optimise SME exit on syscall entry
      arm64/sme: Don't use streaming mode to probe the maximum SME VL
      arm64/ptrace: Use system_supports_tpidr2() to check for TPIDR2 support
    
    * for-next/kselftest: (23 commits)
      : arm64 kselftest fixes and improvements
      kselftest/arm64: Don't require FA64 for streaming SVE+ZA tests
      kselftest/arm64: Copy whole EXTRA context
      kselftest/arm64: Fix enumeration of systems without 128 bit SME for SSVE+ZA
      kselftest/arm64: Fix enumeration of systems without 128 bit SME
      kselftest/arm64: Don't require FA64 for streaming SVE tests
      kselftest/arm64: Limit the maximum VL we try to set via ptrace
      kselftest/arm64: Correct buffer size for SME ZA storage
      kselftest/arm64: Remove the local NUM_VL definition
      kselftest/arm64: Verify simultaneous SSVE and ZA context generation
      kselftest/arm64: Verify that SSVE signal context has SVE_SIG_FLAG_SM set
      kselftest/arm64: Remove spurious comment from MTE test Makefile
      kselftest/arm64: Support build of MTE tests with clang
      kselftest/arm64: Initialise current at build time in signal tests
      kselftest/arm64: Don't pass headers to the compiler as source
      kselftest/arm64: Remove redundant _start labels from FP tests
      kselftest/arm64: Fix .pushsection for strings in FP tests
      kselftest/arm64: Run BTI selftests on systems without BTI
      kselftest/arm64: Fix test numbering when skipping tests
      kselftest/arm64: Skip non-power of 2 SVE vector lengths in fp-stress
      kselftest/arm64: Only enumerate power of two VLs in syscall-abi
      ...
    
    * for-next/misc:
      : Miscellaneous arm64 updates
      arm64/mm: Intercept pfn changes in set_pte_at()
      Documentation: arm64: correct spelling
      arm64: traps: attempt to dump all instructions
      arm64: Apply dynamic shadow call stack patching in two passes
      arm64: el2_setup.h: fix spelling typo in comments
      arm64: Kconfig: fix spelling
      arm64: cpufeature: Use kstrtobool() instead of strtobool()
      arm64: Avoid repeated AA64MMFR1_EL1 register read on pagefault path
      arm64: make ARCH_FORCE_MAX_ORDER selectable
    
    * for-next/sme2: (23 commits)
      : Support for arm64 SME 2 and 2.1
      arm64/sme: Fix __finalise_el2 SMEver check
      kselftest/arm64: Remove redundant _start labels from zt-test
      kselftest/arm64: Add coverage of SME 2 and 2.1 hwcaps
      kselftest/arm64: Add coverage of the ZT ptrace regset
      kselftest/arm64: Add SME2 coverage to syscall-abi
      kselftest/arm64: Add test coverage for ZT register signal frames
      kselftest/arm64: Teach the generic signal context validation about ZT
      kselftest/arm64: Enumerate SME2 in the signal test utility code
      kselftest/arm64: Cover ZT in the FP stress test
      kselftest/arm64: Add a stress test program for ZT0
      arm64/sme: Add hwcaps for SME 2 and 2.1 features
      arm64/sme: Implement ZT0 ptrace support
      arm64/sme: Implement signal handling for ZT
      arm64/sme: Implement context switching for ZT0
      arm64/sme: Provide storage for ZT0
      arm64/sme: Add basic enumeration for SME2
      arm64/sme: Enable host kernel to access ZT0
      arm64/sme: Manually encode ZT0 load and store instructions
      arm64/esr: Document ISS for ZT0 being disabled
      arm64/sme: Document SME 2 and SME 2.1 ABI
      ...
    
    * for-next/tpidr2:
      : Include TPIDR2 in the signal context
      kselftest/arm64: Add test case for TPIDR2 signal frame records
      kselftest/arm64: Add TPIDR2 to the set of known signal context records
      arm64/signal: Include TPIDR2 in the signal context
      arm64/sme: Document ABI for TPIDR2 signal information
    
    * for-next/scs:
      : arm64: harden shadow call stack pointer handling
      arm64: Stash shadow stack pointer in the task struct on interrupt
      arm64: Always load shadow stack pointer directly from the task struct
    
    * for-next/compat-hwcap:
      : arm64: Expose compat ARMv8 AArch32 features (HWCAPs)
      arm64: Add compat hwcap SSBS
      arm64: Add compat hwcap SB
      arm64: Add compat hwcap I8MM
      arm64: Add compat hwcap ASIMDBF16
      arm64: Add compat hwcap ASIMDFHM
      arm64: Add compat hwcap ASIMDDP
      arm64: Add compat hwcap FPHP and ASIMDHP
    
    * for-next/ftrace:
      : Add arm64 support for DYNAMICE_FTRACE_WITH_CALL_OPS
      arm64: avoid executing padding bytes during kexec / hibernation
      arm64: Implement HAVE_DYNAMIC_FTRACE_WITH_CALL_OPS
      arm64: ftrace: Update stale comment
      arm64: patching: Add aarch64_insn_write_literal_u64()
      arm64: insn: Add helpers for BTI
      arm64: Extend support for CONFIG_FUNCTION_ALIGNMENT
      ACPI: Don't build ACPICA with '-Os'
      Compiler attributes: GCC cold function alignment workarounds
      ftrace: Add DYNAMIC_FTRACE_WITH_CALL_OPS
    
    * for-next/efi-boot-mmu-on:
      : Permit arm64 EFI boot with MMU and caches on
      arm64: kprobes: Drop ID map text from kprobes blacklist
      arm64: head: Switch endianness before populating the ID map
      efi: arm64: enter with MMU and caches enabled
      arm64: head: Clean the ID map and the HYP text to the PoC if needed
      arm64: head: avoid cache invalidation when entering with the MMU on
      arm64: head: record the MMU state at primary entry
      arm64: kernel: move identity map out of .text mapping
      arm64: head: Move all finalise_el2 calls to after __enable_mmu
    
    * for-next/ptrauth:
      : arm64 pointer authentication cleanup
      arm64: pauth: don't sign leaf functions
      arm64: unify asm-arch manipulation
    
    * for-next/pseudo-nmi:
      : Pseudo-NMI code generation optimisations
      arm64: irqflags: use alternative branches for pseudo-NMI logic
      arm64: add ARM64_HAS_GIC_PRIO_RELAXED_SYNC cpucap
      arm64: make ARM64_HAS_GIC_PRIO_MASKING depend on ARM64_HAS_GIC_CPUIF_SYSREGS
      arm64: rename ARM64_HAS_IRQ_PRIO_MASKING to ARM64_HAS_GIC_PRIO_MASKING
      arm64: rename ARM64_HAS_SYSREG_GIC_CPUIF to ARM64_HAS_GIC_CPUIF_SYSREGS