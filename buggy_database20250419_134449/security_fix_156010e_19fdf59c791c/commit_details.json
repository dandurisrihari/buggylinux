{
  "hash": "156010ed9c2ac1e9df6c11b1f688cf8a6e0152e6",
  "hash_short": "156010ed",
  "subject": "Merge branches 'for-next/sysreg', 'for-next/sme', 'for-next/kselftest', 'for-next/misc', 'for-next/sme2', 'for-next/tpidr2', 'for-next/scs', 'for-next/compat-hwcap', 'for-next/ftrace', 'for-next/efi-boot-mmu-on', 'for-next/ptrauth' and 'for-next/pseudo-nmi', remote-tracking branch 'arm64/for-next/perf' into for-next/core",
  "body": "* arm64/for-next/perf:\n  perf: arm_spe: Print the version of SPE detected\n  perf: arm_spe: Add support for SPEv1.2 inverted event filtering\n  perf: Add perf_event_attr::config3\n  drivers/perf: fsl_imx8_ddr_perf: Remove set-but-not-used variable\n  perf: arm_spe: Support new SPEv1.2/v8.7 'not taken' event\n  perf: arm_spe: Use new PMSIDR_EL1 register enums\n  perf: arm_spe: Drop BIT() and use FIELD_GET/PREP accessors\n  arm64/sysreg: Convert SPE registers to automatic generation\n  arm64: Drop SYS_ from SPE register defines\n  perf: arm_spe: Use feature numbering for PMSEVFR_EL1 defines\n  perf/marvell: Add ACPI support to TAD uncore driver\n  perf/marvell: Add ACPI support to DDR uncore driver\n  perf/arm-cmn: Reset DTM_PMU_CONFIG at probe\n  drivers/perf: hisi: Extract initialization of \"cpa_pmu->pmu\"\n  drivers/perf: hisi: Simplify the parameters of hisi_pmu_init()\n  drivers/perf: hisi: Advertise the PERF_PMU_CAP_NO_EXCLUDE capability\n\n* for-next/sysreg:\n  : arm64 sysreg and cpufeature fixes/updates\n  KVM: arm64: Use symbolic definition for ISR_EL1.A\n  arm64/sysreg: Add definition of ISR_EL1\n  arm64/sysreg: Add definition for ICC_NMIAR1_EL1\n  arm64/cpufeature: Remove 4 bit assumption in ARM64_FEATURE_MASK()\n  arm64/sysreg: Fix errors in 32 bit enumeration values\n  arm64/cpufeature: Fix field sign for DIT hwcap detection\n\n* for-next/sme:\n  : SME-related updates\n  arm64/sme: Optimise SME exit on syscall entry\n  arm64/sme: Don't use streaming mode to probe the maximum SME VL\n  arm64/ptrace: Use system_supports_tpidr2() to check for TPIDR2 support\n\n* for-next/kselftest: (23 commits)\n  : arm64 kselftest fixes and improvements\n  kselftest/arm64: Don't require FA64 for streaming SVE+ZA tests\n  kselftest/arm64: Copy whole EXTRA context\n  kselftest/arm64: Fix enumeration of systems without 128 bit SME for SSVE+ZA\n  kselftest/arm64: Fix enumeration of systems without 128 bit SME\n  kselftest/arm64: Don't require FA64 for streaming SVE tests\n  kselftest/arm64: Limit the maximum VL we try to set via ptrace\n  kselftest/arm64: Correct buffer size for SME ZA storage\n  kselftest/arm64: Remove the local NUM_VL definition\n  kselftest/arm64: Verify simultaneous SSVE and ZA context generation\n  kselftest/arm64: Verify that SSVE signal context has SVE_SIG_FLAG_SM set\n  kselftest/arm64: Remove spurious comment from MTE test Makefile\n  kselftest/arm64: Support build of MTE tests with clang\n  kselftest/arm64: Initialise current at build time in signal tests\n  kselftest/arm64: Don't pass headers to the compiler as source\n  kselftest/arm64: Remove redundant _start labels from FP tests\n  kselftest/arm64: Fix .pushsection for strings in FP tests\n  kselftest/arm64: Run BTI selftests on systems without BTI\n  kselftest/arm64: Fix test numbering when skipping tests\n  kselftest/arm64: Skip non-power of 2 SVE vector lengths in fp-stress\n  kselftest/arm64: Only enumerate power of two VLs in syscall-abi\n  ...\n\n* for-next/misc:\n  : Miscellaneous arm64 updates\n  arm64/mm: Intercept pfn changes in set_pte_at()\n  Documentation: arm64: correct spelling\n  arm64: traps: attempt to dump all instructions\n  arm64: Apply dynamic shadow call stack patching in two passes\n  arm64: el2_setup.h: fix spelling typo in comments\n  arm64: Kconfig: fix spelling\n  arm64: cpufeature: Use kstrtobool() instead of strtobool()\n  arm64: Avoid repeated AA64MMFR1_EL1 register read on pagefault path\n  arm64: make ARCH_FORCE_MAX_ORDER selectable\n\n* for-next/sme2: (23 commits)\n  : Support for arm64 SME 2 and 2.1\n  arm64/sme: Fix __finalise_el2 SMEver check\n  kselftest/arm64: Remove redundant _start labels from zt-test\n  kselftest/arm64: Add coverage of SME 2 and 2.1 hwcaps\n  kselftest/arm64: Add coverage of the ZT ptrace regset\n  kselftest/arm64: Add SME2 coverage to syscall-abi\n  kselftest/arm64: Add test coverage for ZT register signal frames\n  kselftest/arm64: Teach the generic signal context validation about ZT\n  kselftest/arm64: Enumerate SME2 in the signal test utility code\n  kselftest/arm64: Cover ZT in the FP stress test\n  kselftest/arm64: Add a stress test program for ZT0\n  arm64/sme: Add hwcaps for SME 2 and 2.1 features\n  arm64/sme: Implement ZT0 ptrace support\n  arm64/sme: Implement signal handling for ZT\n  arm64/sme: Implement context switching for ZT0\n  arm64/sme: Provide storage for ZT0\n  arm64/sme: Add basic enumeration for SME2\n  arm64/sme: Enable host kernel to access ZT0\n  arm64/sme: Manually encode ZT0 load and store instructions\n  arm64/esr: Document ISS for ZT0 being disabled\n  arm64/sme: Document SME 2 and SME 2.1 ABI\n  ...\n\n* for-next/tpidr2:\n  : Include TPIDR2 in the signal context\n  kselftest/arm64: Add test case for TPIDR2 signal frame records\n  kselftest/arm64: Add TPIDR2 to the set of known signal context records\n  arm64/signal: Include TPIDR2 in the signal context\n  arm64/sme: Document ABI for TPIDR2 signal information\n\n* for-next/scs:\n  : arm64: harden shadow call stack pointer handling\n  arm64: Stash shadow stack pointer in the task struct on interrupt\n  arm64: Always load shadow stack pointer directly from the task struct\n\n* for-next/compat-hwcap:\n  : arm64: Expose compat ARMv8 AArch32 features (HWCAPs)\n  arm64: Add compat hwcap SSBS\n  arm64: Add compat hwcap SB\n  arm64: Add compat hwcap I8MM\n  arm64: Add compat hwcap ASIMDBF16\n  arm64: Add compat hwcap ASIMDFHM\n  arm64: Add compat hwcap ASIMDDP\n  arm64: Add compat hwcap FPHP and ASIMDHP\n\n* for-next/ftrace:\n  : Add arm64 support for DYNAMICE_FTRACE_WITH_CALL_OPS\n  arm64: avoid executing padding bytes during kexec / hibernation\n  arm64: Implement HAVE_DYNAMIC_FTRACE_WITH_CALL_OPS\n  arm64: ftrace: Update stale comment\n  arm64: patching: Add aarch64_insn_write_literal_u64()\n  arm64: insn: Add helpers for BTI\n  arm64: Extend support for CONFIG_FUNCTION_ALIGNMENT\n  ACPI: Don't build ACPICA with '-Os'\n  Compiler attributes: GCC cold function alignment workarounds\n  ftrace: Add DYNAMIC_FTRACE_WITH_CALL_OPS\n\n* for-next/efi-boot-mmu-on:\n  : Permit arm64 EFI boot with MMU and caches on\n  arm64: kprobes: Drop ID map text from kprobes blacklist\n  arm64: head: Switch endianness before populating the ID map\n  efi: arm64: enter with MMU and caches enabled\n  arm64: head: Clean the ID map and the HYP text to the PoC if needed\n  arm64: head: avoid cache invalidation when entering with the MMU on\n  arm64: head: record the MMU state at primary entry\n  arm64: kernel: move identity map out of .text mapping\n  arm64: head: Move all finalise_el2 calls to after __enable_mmu\n\n* for-next/ptrauth:\n  : arm64 pointer authentication cleanup\n  arm64: pauth: don't sign leaf functions\n  arm64: unify asm-arch manipulation\n\n* for-next/pseudo-nmi:\n  : Pseudo-NMI code generation optimisations\n  arm64: irqflags: use alternative branches for pseudo-NMI logic\n  arm64: add ARM64_HAS_GIC_PRIO_RELAXED_SYNC cpucap\n  arm64: make ARM64_HAS_GIC_PRIO_MASKING depend on ARM64_HAS_GIC_CPUIF_SYSREGS\n  arm64: rename ARM64_HAS_IRQ_PRIO_MASKING to ARM64_HAS_GIC_PRIO_MASKING\n  arm64: rename ARM64_HAS_SYSREG_GIC_CPUIF to ARM64_HAS_GIC_CPUIF_SYSREGS",
  "full_message": "Merge branches 'for-next/sysreg', 'for-next/sme', 'for-next/kselftest', 'for-next/misc', 'for-next/sme2', 'for-next/tpidr2', 'for-next/scs', 'for-next/compat-hwcap', 'for-next/ftrace', 'for-next/efi-boot-mmu-on', 'for-next/ptrauth' and 'for-next/pseudo-nmi', remote-tracking branch 'arm64/for-next/perf' into for-next/core\n\n* arm64/for-next/perf:\n  perf: arm_spe: Print the version of SPE detected\n  perf: arm_spe: Add support for SPEv1.2 inverted event filtering\n  perf: Add perf_event_attr::config3\n  drivers/perf: fsl_imx8_ddr_perf: Remove set-but-not-used variable\n  perf: arm_spe: Support new SPEv1.2/v8.7 'not taken' event\n  perf: arm_spe: Use new PMSIDR_EL1 register enums\n  perf: arm_spe: Drop BIT() and use FIELD_GET/PREP accessors\n  arm64/sysreg: Convert SPE registers to automatic generation\n  arm64: Drop SYS_ from SPE register defines\n  perf: arm_spe: Use feature numbering for PMSEVFR_EL1 defines\n  perf/marvell: Add ACPI support to TAD uncore driver\n  perf/marvell: Add ACPI support to DDR uncore driver\n  perf/arm-cmn: Reset DTM_PMU_CONFIG at probe\n  drivers/perf: hisi: Extract initialization of \"cpa_pmu->pmu\"\n  drivers/perf: hisi: Simplify the parameters of hisi_pmu_init()\n  drivers/perf: hisi: Advertise the PERF_PMU_CAP_NO_EXCLUDE capability\n\n* for-next/sysreg:\n  : arm64 sysreg and cpufeature fixes/updates\n  KVM: arm64: Use symbolic definition for ISR_EL1.A\n  arm64/sysreg: Add definition of ISR_EL1\n  arm64/sysreg: Add definition for ICC_NMIAR1_EL1\n  arm64/cpufeature: Remove 4 bit assumption in ARM64_FEATURE_MASK()\n  arm64/sysreg: Fix errors in 32 bit enumeration values\n  arm64/cpufeature: Fix field sign for DIT hwcap detection\n\n* for-next/sme:\n  : SME-related updates\n  arm64/sme: Optimise SME exit on syscall entry\n  arm64/sme: Don't use streaming mode to probe the maximum SME VL\n  arm64/ptrace: Use system_supports_tpidr2() to check for TPIDR2 support\n\n* for-next/kselftest: (23 commits)\n  : arm64 kselftest fixes and improvements\n  kselftest/arm64: Don't require FA64 for streaming SVE+ZA tests\n  kselftest/arm64: Copy whole EXTRA context\n  kselftest/arm64: Fix enumeration of systems without 128 bit SME for SSVE+ZA\n  kselftest/arm64: Fix enumeration of systems without 128 bit SME\n  kselftest/arm64: Don't require FA64 for streaming SVE tests\n  kselftest/arm64: Limit the maximum VL we try to set via ptrace\n  kselftest/arm64: Correct buffer size for SME ZA storage\n  kselftest/arm64: Remove the local NUM_VL definition\n  kselftest/arm64: Verify simultaneous SSVE and ZA context generation\n  kselftest/arm64: Verify that SSVE signal context has SVE_SIG_FLAG_SM set\n  kselftest/arm64: Remove spurious comment from MTE test Makefile\n  kselftest/arm64: Support build of MTE tests with clang\n  kselftest/arm64: Initialise current at build time in signal tests\n  kselftest/arm64: Don't pass headers to the compiler as source\n  kselftest/arm64: Remove redundant _start labels from FP tests\n  kselftest/arm64: Fix .pushsection for strings in FP tests\n  kselftest/arm64: Run BTI selftests on systems without BTI\n  kselftest/arm64: Fix test numbering when skipping tests\n  kselftest/arm64: Skip non-power of 2 SVE vector lengths in fp-stress\n  kselftest/arm64: Only enumerate power of two VLs in syscall-abi\n  ...\n\n* for-next/misc:\n  : Miscellaneous arm64 updates\n  arm64/mm: Intercept pfn changes in set_pte_at()\n  Documentation: arm64: correct spelling\n  arm64: traps: attempt to dump all instructions\n  arm64: Apply dynamic shadow call stack patching in two passes\n  arm64: el2_setup.h: fix spelling typo in comments\n  arm64: Kconfig: fix spelling\n  arm64: cpufeature: Use kstrtobool() instead of strtobool()\n  arm64: Avoid repeated AA64MMFR1_EL1 register read on pagefault path\n  arm64: make ARCH_FORCE_MAX_ORDER selectable\n\n* for-next/sme2: (23 commits)\n  : Support for arm64 SME 2 and 2.1\n  arm64/sme: Fix __finalise_el2 SMEver check\n  kselftest/arm64: Remove redundant _start labels from zt-test\n  kselftest/arm64: Add coverage of SME 2 and 2.1 hwcaps\n  kselftest/arm64: Add coverage of the ZT ptrace regset\n  kselftest/arm64: Add SME2 coverage to syscall-abi\n  kselftest/arm64: Add test coverage for ZT register signal frames\n  kselftest/arm64: Teach the generic signal context validation about ZT\n  kselftest/arm64: Enumerate SME2 in the signal test utility code\n  kselftest/arm64: Cover ZT in the FP stress test\n  kselftest/arm64: Add a stress test program for ZT0\n  arm64/sme: Add hwcaps for SME 2 and 2.1 features\n  arm64/sme: Implement ZT0 ptrace support\n  arm64/sme: Implement signal handling for ZT\n  arm64/sme: Implement context switching for ZT0\n  arm64/sme: Provide storage for ZT0\n  arm64/sme: Add basic enumeration for SME2\n  arm64/sme: Enable host kernel to access ZT0\n  arm64/sme: Manually encode ZT0 load and store instructions\n  arm64/esr: Document ISS for ZT0 being disabled\n  arm64/sme: Document SME 2 and SME 2.1 ABI\n  ...\n\n* for-next/tpidr2:\n  : Include TPIDR2 in the signal context\n  kselftest/arm64: Add test case for TPIDR2 signal frame records\n  kselftest/arm64: Add TPIDR2 to the set of known signal context records\n  arm64/signal: Include TPIDR2 in the signal context\n  arm64/sme: Document ABI for TPIDR2 signal information\n\n* for-next/scs:\n  : arm64: harden shadow call stack pointer handling\n  arm64: Stash shadow stack pointer in the task struct on interrupt\n  arm64: Always load shadow stack pointer directly from the task struct\n\n* for-next/compat-hwcap:\n  : arm64: Expose compat ARMv8 AArch32 features (HWCAPs)\n  arm64: Add compat hwcap SSBS\n  arm64: Add compat hwcap SB\n  arm64: Add compat hwcap I8MM\n  arm64: Add compat hwcap ASIMDBF16\n  arm64: Add compat hwcap ASIMDFHM\n  arm64: Add compat hwcap ASIMDDP\n  arm64: Add compat hwcap FPHP and ASIMDHP\n\n* for-next/ftrace:\n  : Add arm64 support for DYNAMICE_FTRACE_WITH_CALL_OPS\n  arm64: avoid executing padding bytes during kexec / hibernation\n  arm64: Implement HAVE_DYNAMIC_FTRACE_WITH_CALL_OPS\n  arm64: ftrace: Update stale comment\n  arm64: patching: Add aarch64_insn_write_literal_u64()\n  arm64: insn: Add helpers for BTI\n  arm64: Extend support for CONFIG_FUNCTION_ALIGNMENT\n  ACPI: Don't build ACPICA with '-Os'\n  Compiler attributes: GCC cold function alignment workarounds\n  ftrace: Add DYNAMIC_FTRACE_WITH_CALL_OPS\n\n* for-next/efi-boot-mmu-on:\n  : Permit arm64 EFI boot with MMU and caches on\n  arm64: kprobes: Drop ID map text from kprobes blacklist\n  arm64: head: Switch endianness before populating the ID map\n  efi: arm64: enter with MMU and caches enabled\n  arm64: head: Clean the ID map and the HYP text to the PoC if needed\n  arm64: head: avoid cache invalidation when entering with the MMU on\n  arm64: head: record the MMU state at primary entry\n  arm64: kernel: move identity map out of .text mapping\n  arm64: head: Move all finalise_el2 calls to after __enable_mmu\n\n* for-next/ptrauth:\n  : arm64 pointer authentication cleanup\n  arm64: pauth: don't sign leaf functions\n  arm64: unify asm-arch manipulation\n\n* for-next/pseudo-nmi:\n  : Pseudo-NMI code generation optimisations\n  arm64: irqflags: use alternative branches for pseudo-NMI logic\n  arm64: add ARM64_HAS_GIC_PRIO_RELAXED_SYNC cpucap\n  arm64: make ARM64_HAS_GIC_PRIO_MASKING depend on ARM64_HAS_GIC_CPUIF_SYSREGS\n  arm64: rename ARM64_HAS_IRQ_PRIO_MASKING to ARM64_HAS_GIC_PRIO_MASKING\n  arm64: rename ARM64_HAS_SYSREG_GIC_CPUIF to ARM64_HAS_GIC_CPUIF_SYSREGS",
  "author_name": "Catalin Marinas",
  "author_email": "catalin.marinas@arm.com",
  "author_date": "Fri Feb 10 18:51:49 2023 +0000",
  "author_date_iso": "2023-02-10T18:51:49+00:00",
  "committer_name": "Catalin Marinas",
  "committer_email": "catalin.marinas@arm.com",
  "committer_date": "Fri Feb 10 18:51:49 2023 +0000",
  "committer_date_iso": "2023-02-10T18:51:49+00:00",
  "files_changed": [
    "Documentation/arm64/booting.rst",
    "Documentation/arm64/elf_hwcaps.rst",
    "Documentation/arm64/sme.rst",
    "arch/arm64/Kconfig",
    "arch/arm64/Makefile",
    "arch/arm64/include/asm/cpufeature.h",
    "arch/arm64/include/asm/el2_setup.h",
    "arch/arm64/include/asm/hwcap.h",
    "arch/arm64/include/asm/sysreg.h",
    "arch/arm64/include/uapi/asm/sigcontext.h",
    "arch/arm64/kernel/cpufeature.c",
    "arch/arm64/kernel/cpuinfo.c",
    "arch/arm64/kernel/entry.S",
    "arch/arm64/kernel/fpsimd.c",
    "arch/arm64/kernel/head.S",
    "arch/arm64/kernel/image-vars.h",
    "arch/arm64/kernel/ptrace.c",
    "arch/arm64/kernel/signal.c",
    "arch/arm64/kernel/vmlinux.lds.S",
    "arch/arm64/tools/cpucaps",
    "arch/arm64/tools/sysreg",
    "tools/testing/selftests/arm64/abi/syscall-abi-asm.S",
    "tools/testing/selftests/arm64/abi/syscall-abi.c",
    "tools/testing/selftests/arm64/fp/fp-stress.c",
    "tools/testing/selftests/arm64/signal/.gitignore",
    "tools/testing/selftests/arm64/signal/test_signals_utils.c",
    "tools/testing/selftests/arm64/signal/testcases/testcases.c"
  ],
  "files_changed_count": 27,
  "stats": [
    {
      "file": "Documentation/arm64/booting.rst",
      "insertions": 11,
      "deletions": 1
    },
    {
      "file": "Documentation/arm64/elf_hwcaps.rst",
      "insertions": 19,
      "deletions": 1
    },
    {
      "file": "Documentation/arm64/sme.rst",
      "insertions": 46,
      "deletions": 9
    },
    {
      "file": "Documentation/arm64/sve.rst",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm/include/asm/arch_gicv3.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/arm64/Kconfig",
      "insertions": 21,
      "deletions": 4
    },
    {
      "file": "arch/arm64/Kconfig.platforms",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/Makefile",
      "insertions": 30,
      "deletions": 40
    },
    {
      "file": "arch/arm64/include/asm/arch_gicv3.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/barrier.h",
      "insertions": 7,
      "deletions": 4
    },
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "insertions": 12,
      "deletions": 2
    },
    {
      "file": "arch/arm64/include/asm/efi.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/el2_setup.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/esr.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/fpsimd.h",
      "insertions": 22,
      "deletions": 8
    },
    {
      "file": "arch/arm64/include/asm/fpsimdmacros.h",
      "insertions": 22,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/ftrace.h",
      "insertions": 1,
      "deletions": 14
    },
    {
      "file": "arch/arm64/include/asm/hwcap.h",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/insn.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/irqflags.h",
      "insertions": 132,
      "deletions": 59
    },
    {
      "file": "arch/arm64/include/asm/linkage.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/include/asm/patching.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/pgtable.h",
      "insertions": 6,
      "deletions": 2
    },
    {
      "file": "arch/arm64/include/asm/processor.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/ptrace.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/scs.h",
      "insertions": 4,
      "deletions": 3
    },
    {
      "file": "arch/arm64/include/asm/sysreg.h",
      "insertions": 4,
      "deletions": 3
    },
    {
      "file": "arch/arm64/include/uapi/asm/hwcap.h",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/uapi/asm/sigcontext.h",
      "insertions": 27,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/asm-offsets.c",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "insertions": 95,
      "deletions": 19
    },
    {
      "file": "arch/arm64/kernel/cpuinfo.c",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/entry-fpsimd.S",
      "insertions": 20,
      "deletions": 10
    },
    {
      "file": "arch/arm64/kernel/entry-ftrace.S",
      "insertions": 27,
      "deletions": 5
    },
    {
      "file": "arch/arm64/kernel/entry.S",
      "insertions": 23,
      "deletions": 18
    },
    {
      "file": "arch/arm64/kernel/fpsimd.c",
      "insertions": 31,
      "deletions": 21
    },
    {
      "file": "arch/arm64/kernel/ftrace.c",
      "insertions": 157,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/head.S",
      "insertions": 91,
      "deletions": 21
    },
    {
      "file": "arch/arm64/kernel/hyp-stub.S",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/idreg-override.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/image-vars.h",
      "insertions": 3,
      "deletions": 4
    },
    {
      "file": "arch/arm64/kernel/patch-scs.c",
      "insertions": 8,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kernel/patching.c",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/probes/kprobes.c",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "arch/arm64/kernel/process.c",
      "insertions": 11,
      "deletions": 10
    },
    {
      "file": "arch/arm64/kernel/ptrace.c",
      "insertions": 59,
      "deletions": 5
    },
    {
      "file": "arch/arm64/kernel/setup.c",
      "insertions": 15,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kernel/signal.c",
      "insertions": 168,
      "deletions": 4
    },
    {
      "file": "arch/arm64/kernel/sleep.S",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/syscall.c",
      "insertions": 2,
      "deletions": 6
    },
    {
      "file": "arch/arm64/kernel/traps.c",
      "insertions": 2,
      "deletions": 4
    },
    {
      "file": "arch/arm64/kernel/vmlinux.lds.S",
      "insertions": 7,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kvm/fpsimd.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kvm/hyp/entry.S",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/mm/cache.S",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/mm/mmu.c",
      "insertions": 6,
      "deletions": 2
    },
    {
      "file": "arch/arm64/mm/proc.S",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "arch/arm64/tools/cpucaps",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "arch/arm64/tools/sysreg",
      "insertions": 42,
      "deletions": 8
    },
    {
      "file": "drivers/acpi/acpica/Makefile",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/firmware/efi/libstub/Makefile",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "drivers/firmware/efi/libstub/arm64-entry.S",
      "insertions": 0,
      "deletions": 67
    },
    {
      "file": "drivers/firmware/efi/libstub/arm64-stub.c",
      "insertions": 17,
      "deletions": 9
    },
    {
      "file": "drivers/firmware/efi/libstub/arm64.c",
      "insertions": 36,
      "deletions": 5
    },
    {
      "file": "drivers/irqchip/irq-gic-v3.c",
      "insertions": 1,
      "deletions": 18
    },
    {
      "file": "drivers/irqchip/irq-gic.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "include/linux/compiler_attributes.h",
      "insertions": 0,
      "deletions": 6
    },
    {
      "file": "include/linux/compiler_types.h",
      "insertions": 27,
      "deletions": 0
    },
    {
      "file": "include/linux/ftrace.h",
      "insertions": 14,
      "deletions": 4
    },
    {
      "file": "include/uapi/linux/elf.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "kernel/exit.c",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "kernel/trace/Kconfig",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "kernel/trace/ftrace.c",
      "insertions": 104,
      "deletions": 5
    },
    {
      "file": "tools/testing/selftests/arm64/abi/hwcap.c",
      "insertions": 115,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/abi/syscall-abi-asm.S",
      "insertions": 51,
      "deletions": 6
    },
    {
      "file": "tools/testing/selftests/arm64/abi/syscall-abi.c",
      "insertions": 120,
      "deletions": 59
    },
    {
      "file": "tools/testing/selftests/arm64/bti/test.c",
      "insertions": 10,
      "deletions": 15
    },
    {
      "file": "tools/testing/selftests/arm64/fp/.gitignore",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/Makefile",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/assembler.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/arm64/fp/fp-pidbench.S",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/arm64/fp/fp-stress.c",
      "insertions": 31,
      "deletions": 3
    },
    {
      "file": "tools/testing/selftests/arm64/fp/fpsimd-test.S",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/arm64/fp/sme-inst.h",
      "insertions": 20,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/sve-ptrace.c",
      "insertions": 12,
      "deletions": 2
    },
    {
      "file": "tools/testing/selftests/arm64/fp/sve-test.S",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/arm64/fp/za-ptrace.c",
      "insertions": 12,
      "deletions": 2
    },
    {
      "file": "tools/testing/selftests/arm64/fp/za-test.S",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/arm64/fp/zt-ptrace.c",
      "insertions": 365,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/zt-test.S",
      "insertions": 316,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/mte/Makefile",
      "insertions": 15,
      "deletions": 6
    },
    {
      "file": "tools/testing/selftests/arm64/signal/.gitignore",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/signal/Makefile",
      "insertions": 6,
      "deletions": 2
    },
    {
      "file": "tools/testing/selftests/arm64/signal/test_signals.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "tools/testing/selftests/arm64/signal/test_signals.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/signal/test_signals_utils.c",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/ssve_regs.c",
      "insertions": 10,
      "deletions": 6
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/ssve_za_regs.c",
      "insertions": 161,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/testcases.c",
      "insertions": 40,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/testcases.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/tpidr2_siginfo.c",
      "insertions": 90,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/za_regs.c",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/zt_no_regs.c",
      "insertions": 51,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/zt_regs.c",
      "insertions": 85,
      "deletions": 0
    }
  ],
  "total_insertions": 2984,
  "total_deletions": 543,
  "total_changes": 3527,
  "parents": [
    "e8a709dc2a9156f223ec953ae70a919e87ad7e9a",
    "1abf363d085cf6133ef44900334ddd0f61dc3276",
    "b2482807fbd48a299512d161e38262fd7d973aa0",
    "2c4192c0a7f2d628b5c1667577316ee9e7471e20",
    "004fc58f917cfea5d7190139e3ed1b7a13e39c25",
    "9442d05bba6c12749fdc4039eddcf801398ec82b",
    "8ced928019353eaecbffee566d7ed6a9a9e60e78",
    "59b37fe52f49955791a460752c37145f1afdcad1",
    "4f2c9bf16a4bc209a674e7b76d8e829b917c7f84",
    "dc4824faa265db1bc93449e8ec386a0245404fa6",
    "a088cf8eee1263462131fe8364e0fa962e17412b",
    "c68cf5285e1896a2b725ec01a1351f08610165b8",
    "a5f61cc636f48bdf09450dba72c0bc914f9eed2f"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/arm64/elf_hwcaps.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/arm64/booting.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/arm64/sme.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/el2_setup.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/hwcap.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/sysreg.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/uapi/asm/sigcontext.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/cpuinfo.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/fpsimd.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/image-vars.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/head.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/entry.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/ptrace.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/tools/cpucaps",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/vmlinux.lds.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/signal.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/testing/selftests/arm64/abi/syscall-abi.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/tools/sysreg",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/testing/selftests/arm64/fp/fp-stress.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/testing/selftests/arm64/abi/syscall-abi-asm.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/testing/selftests/arm64/signal/test_signals_utils.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/testing/selftests/arm64/signal/.gitignore",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/testing/selftests/arm64/signal/testcases/testcases.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}