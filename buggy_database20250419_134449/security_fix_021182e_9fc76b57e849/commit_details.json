{
  "hash": "021182e52fe01c1f7b126f97fd6ba048dc4234fd",
  "hash_short": "021182e5",
  "subject": "x86/mm: Enable KASLR for physical mapping memory regions",
  "body": "Add the physical mapping in the list of randomized memory regions.\n\nThe physical memory mapping holds most allocations from boot and heap\nallocators. Knowing the base address and physical memory size, an attacker\ncan deduce the PDE virtual address for the vDSO memory page. This attack\nwas demonstrated at CanSecWest 2016, in the following presentation:\n\n  \"Getting Physical: Extreme Abuse of Intel Based Paged Systems\":\n  https://github.com/n3k/CansecWest2016_Getting_Physical_Extreme_Abuse_of_Intel_Based_Paging_Systems/blob/master/Presentation/CanSec2016_Presentation.pdf\n\n(See second part of the presentation).\n\nThe exploits used against Linux worked successfully against 4.6+ but\nfail with KASLR memory enabled:\n\n  https://github.com/n3k/CansecWest2016_Getting_Physical_Extreme_Abuse_of_Intel_Based_Paging_Systems/tree/master/Demos/Linux/exploits\n\nSimilar research was done at Google leading to this patch proposal.\n\nVariants exists to overwrite /proc or /sys objects ACLs leading to\nelevation of privileges. These variants were tested against 4.6+.\n\nThe page offset used by the compressed kernel retains the static value\nsince it is not yet randomized during this boot stage.\n\nSigned-off-by: Thomas Garnier <thgarnie@google.com>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Alexander Kuleshov <kuleshovmail@gmail.com>\nCc: Alexander Popov <alpopov@ptsecurity.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>\nCc: Baoquan He <bhe@redhat.com>\nCc: Boris Ostrovsky <boris.ostrovsky@oracle.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Borislav Petkov <bp@suse.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Christian Borntraeger <borntraeger@de.ibm.com>\nCc: Dan Williams <dan.j.williams@intel.com>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: Dave Young <dyoung@redhat.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Jan Beulich <JBeulich@suse.com>\nCc: Joerg Roedel <jroedel@suse.de>\nCc: Jonathan Corbet <corbet@lwn.net>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nCc: Juergen Gross <jgross@suse.com>\nCc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Lv Zheng <lv.zheng@intel.com>\nCc: Mark Salter <msalter@redhat.com>\nCc: Martin Schwidefsky <schwidefsky@de.ibm.com>\nCc: Matt Fleming <matt@codeblueprint.co.uk>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Stephen Smalley <sds@tycho.nsa.gov>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Toshi Kani <toshi.kani@hpe.com>\nCc: Xiao Guangrong <guangrong.xiao@linux.intel.com>\nCc: Yinghai Lu <yinghai@kernel.org>\nCc: kernel-hardening@lists.openwall.com\nCc: linux-doc@vger.kernel.org\nLink: http://lkml.kernel.org/r/1466556426-32664-7-git-send-email-keescook@chromium.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "x86/mm: Enable KASLR for physical mapping memory regions\n\nAdd the physical mapping in the list of randomized memory regions.\n\nThe physical memory mapping holds most allocations from boot and heap\nallocators. Knowing the base address and physical memory size, an attacker\ncan deduce the PDE virtual address for the vDSO memory page. This attack\nwas demonstrated at CanSecWest 2016, in the following presentation:\n\n  \"Getting Physical: Extreme Abuse of Intel Based Paged Systems\":\n  https://github.com/n3k/CansecWest2016_Getting_Physical_Extreme_Abuse_of_Intel_Based_Paging_Systems/blob/master/Presentation/CanSec2016_Presentation.pdf\n\n(See second part of the presentation).\n\nThe exploits used against Linux worked successfully against 4.6+ but\nfail with KASLR memory enabled:\n\n  https://github.com/n3k/CansecWest2016_Getting_Physical_Extreme_Abuse_of_Intel_Based_Paging_Systems/tree/master/Demos/Linux/exploits\n\nSimilar research was done at Google leading to this patch proposal.\n\nVariants exists to overwrite /proc or /sys objects ACLs leading to\nelevation of privileges. These variants were tested against 4.6+.\n\nThe page offset used by the compressed kernel retains the static value\nsince it is not yet randomized during this boot stage.\n\nSigned-off-by: Thomas Garnier <thgarnie@google.com>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Alexander Kuleshov <kuleshovmail@gmail.com>\nCc: Alexander Popov <alpopov@ptsecurity.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>\nCc: Baoquan He <bhe@redhat.com>\nCc: Boris Ostrovsky <boris.ostrovsky@oracle.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Borislav Petkov <bp@suse.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Christian Borntraeger <borntraeger@de.ibm.com>\nCc: Dan Williams <dan.j.williams@intel.com>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: Dave Young <dyoung@redhat.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Jan Beulich <JBeulich@suse.com>\nCc: Joerg Roedel <jroedel@suse.de>\nCc: Jonathan Corbet <corbet@lwn.net>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nCc: Juergen Gross <jgross@suse.com>\nCc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Lv Zheng <lv.zheng@intel.com>\nCc: Mark Salter <msalter@redhat.com>\nCc: Martin Schwidefsky <schwidefsky@de.ibm.com>\nCc: Matt Fleming <matt@codeblueprint.co.uk>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Stephen Smalley <sds@tycho.nsa.gov>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Toshi Kani <toshi.kani@hpe.com>\nCc: Xiao Guangrong <guangrong.xiao@linux.intel.com>\nCc: Yinghai Lu <yinghai@kernel.org>\nCc: kernel-hardening@lists.openwall.com\nCc: linux-doc@vger.kernel.org\nLink: http://lkml.kernel.org/r/1466556426-32664-7-git-send-email-keescook@chromium.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "Thomas Garnier",
  "author_email": "thgarnie@google.com",
  "author_date": "Tue Jun 21 17:47:03 2016 -0700",
  "author_date_iso": "2016-06-21T17:47:03-07:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Fri Jul 8 17:35:15 2016 +0200",
  "committer_date_iso": "2016-07-08T17:35:15+02:00",
  "files_changed": [
    "arch/x86/boot/compressed/pagetable.c",
    "arch/x86/include/asm/kaslr.h",
    "arch/x86/include/asm/page_64_types.h",
    "arch/x86/kernel/head_64.S",
    "arch/x86/mm/kaslr.c"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "arch/x86/boot/compressed/pagetable.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/kaslr.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/page_64_types.h",
      "insertions": 10,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/head_64.S",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/mm/kaslr.c",
      "insertions": 15,
      "deletions": 3
    }
  ],
  "total_insertions": 31,
  "total_deletions": 5,
  "total_changes": 36,
  "parents": [
    "0483e1fa6e09d4948272680f691dccb1edb9677f"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/boot/compressed/pagetable.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/kaslr.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/page_64_types.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/head_64.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/mm/kaslr.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}