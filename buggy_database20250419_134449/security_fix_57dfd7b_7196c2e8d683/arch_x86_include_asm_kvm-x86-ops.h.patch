commit 57dfd7b53dec740afe402135fdd1c5708ec337f0
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Jan 28 00:51:48 2022 +0000

    KVM: x86: Move delivery of non-APICv interrupt into vendor code
    
    Handle non-APICv interrupt delivery in vendor code, even though it means
    VMX and SVM will temporarily have duplicate code.  SVM's AVIC has a race
    condition that requires KVM to fall back to legacy interrupt injection
    _after_ the interrupt has been logged in the vIRR, i.e. to fix the race,
    SVM will need to open code the full flow anyways[*].  Refactor the code
    so that the SVM bug without introducing other issues, e.g. SVM would
    return "success" and thus invoke trace_kvm_apicv_accept_irq() even when
    delivery through the AVIC failed, and to opportunistically prepare for
    using KVM_X86_OP to fill each vendor's kvm_x86_ops struct, which will
    rely on the vendor function matching the kvm_x86_op pointer name.
    
    No functional change intended.
    
    [*] https://lore.kernel.org/all/20211213104634.199141-4-mlevitsk@redhat.com
    
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220128005208.4008533-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/include/asm/kvm-x86-ops.h b/arch/x86/include/asm/kvm-x86-ops.h
index 631d5040b31e..d39e0de06be2 100644
--- a/arch/x86/include/asm/kvm-x86-ops.h
+++ b/arch/x86/include/asm/kvm-x86-ops.h
@@ -82,7 +82,7 @@ KVM_X86_OP_NULL(guest_apic_has_interrupt)
 KVM_X86_OP(load_eoi_exitmap)
 KVM_X86_OP(set_virtual_apic_mode)
 KVM_X86_OP_NULL(set_apic_access_page_addr)
-KVM_X86_OP(deliver_posted_interrupt)
+KVM_X86_OP(deliver_interrupt)
 KVM_X86_OP_NULL(sync_pir_to_irr)
 KVM_X86_OP(set_tss_addr)
 KVM_X86_OP(set_identity_map_addr)