commit 2f3d93e210b9c2866c8b3662adae427d5bf511ec
Author: Long Li <leo.lilong@huawei.com>
Date:   Fri Sep 6 17:17:46 2024 +0800

    ext4: fix race in buffer_head read fault injection
    
    When I enabled ext4 debug for fault injection testing, I encountered the
    following warning:
    
      EXT4-fs error (device sda): ext4_read_inode_bitmap:201: comm fsstress:
             Cannot read inode bitmap - block_group = 8, inode_bitmap = 1051
      WARNING: CPU: 0 PID: 511 at fs/buffer.c:1181 mark_buffer_dirty+0x1b3/0x1d0
    
    The root cause of the issue lies in the improper implementation of ext4's
    buffer_head read fault injection. The actual completion of buffer_head
    read and the buffer_head fault injection are not atomic, which can lead
    to the uptodate flag being cleared on normally used buffer_heads in race
    conditions.
    
    [CPU0]           [CPU1]         [CPU2]
    ext4_read_inode_bitmap
      ext4_read_bh()
      <bh read complete>
                     ext4_read_inode_bitmap
                       if (buffer_uptodate(bh))
                         return bh
                                   jbd2_journal_commit_transaction
                                     __jbd2_journal_refile_buffer
                                       __jbd2_journal_unfile_buffer
                                         __jbd2_journal_temp_unlink_buffer
      ext4_simulate_fail_bh()
        clear_buffer_uptodate
                                          mark_buffer_dirty
                                            <report warning>
                                            WARN_ON_ONCE(!buffer_uptodate(bh))
    
    The best approach would be to perform fault injection in the IO completion
    callback function, rather than after IO completion. However, the IO
    completion callback function cannot get the fault injection code in sb.
    
    Fix it by passing the result of fault injection into the bh read function,
    we simulate faults within the bh read function itself. This requires adding
    an extra parameter to the bh read functions that need fault injection.
    
    Fixes: 46f870d690fe ("ext4: simulate various I/O and checksum errors when reading metadata")
    Signed-off-by: Long Li <leo.lilong@huawei.com>
    Link: https://patch.msgid.link/20240906091746.510163-1-leo.lilong@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>

diff --git a/fs/ext4/ialloc.c b/fs/ext4/ialloc.c
index 7f1a5f90dbbd..21d228073d79 100644
--- a/fs/ext4/ialloc.c
+++ b/fs/ext4/ialloc.c
@@ -193,8 +193,9 @@ ext4_read_inode_bitmap(struct super_block *sb, ext4_group_t block_group)
 	 * submit the buffer_head for reading
 	 */
 	trace_ext4_load_inode_bitmap(sb, block_group);
-	ext4_read_bh(bh, REQ_META | REQ_PRIO, ext4_end_bitmap_read);
-	ext4_simulate_fail_bh(sb, bh, EXT4_SIM_IBITMAP_EIO);
+	ext4_read_bh(bh, REQ_META | REQ_PRIO,
+		     ext4_end_bitmap_read,
+		     ext4_simulate_fail(sb, EXT4_SIM_IBITMAP_EIO));
 	if (!buffer_uptodate(bh)) {
 		put_bh(bh);
 		ext4_error_err(sb, EIO, "Cannot read inode bitmap - "