{
  "hash": "a48e2c328c6505d356c90ef51a2052d1d27f9bef",
  "hash_short": "a48e2c32",
  "subject": "scsi: lpfc: Avoid -Wstringop-overflow warning",
  "body": "Prevent any potential integer wrapping issue, and avoid a\n-Wstringop-overflow warning by using the check_mul_overflow() helper.\n\ndrivers/scsi/lpfc/lpfc.h:\n837:#define LPFC_RAS_MIN_BUFF_POST_SIZE (256 * 1024)\n\ndrivers/scsi/lpfc/lpfc_debugfs.c:\n2266 size = LPFC_RAS_MIN_BUFF_POST_SIZE * phba->cfg_ras_fwlog_buffsize;\n\nthis can wrap to negative if cfg_ras_fwlog_buffsize is large\nenough. And even when in practice this is not possible (due to\nphba->cfg_ras_fwlog_buffsize never being larger than 4[1]), the\ncompiler is legitimately warning us about potentially buggy code.\n\nFix the following warning seen under GCC-13:\nIn function \u2018lpfc_debugfs_ras_log_data\u2019,\n    inlined from \u2018lpfc_debugfs_ras_log_open\u2019 at drivers/scsi/lpfc/lpfc_debugfs.c:2271:15:\ndrivers/scsi/lpfc/lpfc_debugfs.c:2210:25: warning: \u2018memcpy\u2019 specified bound between 18446744071562067968 and 18446744073709551615 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]\n 2210 |                         memcpy(buffer + copied, dmabuf->virt,\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 2211 |                                size - copied - 1);\n      |                                ~~~~~~~~~~~~~~~~~~\n\nLink: https://github.com/KSPP/linux/issues/305\nLink: https://lore.kernel.org/linux-hardening/CABPRKS8zyzrbsWt4B5fp7kMowAZFiMLKg5kW26uELpg1cDKY3A@mail.gmail.com/ [1]\nCo-developed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>\nLink: https://lore.kernel.org/r/ZHkseX6TiFahvxJA@work\nReviewed-by: Justin Tee <justin.tee@broadcom.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: lpfc: Avoid -Wstringop-overflow warning\n\nPrevent any potential integer wrapping issue, and avoid a\n-Wstringop-overflow warning by using the check_mul_overflow() helper.\n\ndrivers/scsi/lpfc/lpfc.h:\n837:#define LPFC_RAS_MIN_BUFF_POST_SIZE (256 * 1024)\n\ndrivers/scsi/lpfc/lpfc_debugfs.c:\n2266 size = LPFC_RAS_MIN_BUFF_POST_SIZE * phba->cfg_ras_fwlog_buffsize;\n\nthis can wrap to negative if cfg_ras_fwlog_buffsize is large\nenough. And even when in practice this is not possible (due to\nphba->cfg_ras_fwlog_buffsize never being larger than 4[1]), the\ncompiler is legitimately warning us about potentially buggy code.\n\nFix the following warning seen under GCC-13:\nIn function \u2018lpfc_debugfs_ras_log_data\u2019,\n    inlined from \u2018lpfc_debugfs_ras_log_open\u2019 at drivers/scsi/lpfc/lpfc_debugfs.c:2271:15:\ndrivers/scsi/lpfc/lpfc_debugfs.c:2210:25: warning: \u2018memcpy\u2019 specified bound between 18446744071562067968 and 18446744073709551615 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]\n 2210 |                         memcpy(buffer + copied, dmabuf->virt,\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 2211 |                                size - copied - 1);\n      |                                ~~~~~~~~~~~~~~~~~~\n\nLink: https://github.com/KSPP/linux/issues/305\nLink: https://lore.kernel.org/linux-hardening/CABPRKS8zyzrbsWt4B5fp7kMowAZFiMLKg5kW26uELpg1cDKY3A@mail.gmail.com/ [1]\nCo-developed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>\nLink: https://lore.kernel.org/r/ZHkseX6TiFahvxJA@work\nReviewed-by: Justin Tee <justin.tee@broadcom.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Gustavo A. R. Silva",
  "author_email": "gustavoars@kernel.org",
  "author_date": "Thu Jun 1 17:40:41 2023 -0600",
  "author_date_iso": "2023-06-01T17:40:41-06:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Wed Jun 7 21:20:21 2023 -0400",
  "committer_date_iso": "2023-06-07T21:20:21-04:00",
  "files_changed": [
    "drivers/scsi/lpfc/lpfc_debugfs.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/lpfc/lpfc_debugfs.c",
      "insertions": 6,
      "deletions": 2
    }
  ],
  "total_insertions": 6,
  "total_deletions": 2,
  "total_changes": 8,
  "parents": [
    "bb26224ed47c8cf7a3507637deb43f9bd466225d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/lpfc/lpfc_debugfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}