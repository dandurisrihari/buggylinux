{
  "hash": "c8401dda2f0a00cd25c0af6a95ed50e478d25de4",
  "hash_short": "c8401dda",
  "subject": "KVM: x86: fix singlestepping over syscall",
  "body": "TF is handled a bit differently for syscall and sysret, compared\nto the other instructions: TF is checked after the instruction completes,\nso that the OS can disable #DB at a syscall by adding TF to FMASK.\nWhen the sysret is executed the #DB is taken \"as if\" the syscall insn\njust completed.\n\nKVM emulates syscall so that it can trap 32-bit syscall on Intel processors.\nFix the behavior, otherwise you could get #DB on a user stack which is not\nnice.  This does not affect Linux guests, as they use an IST or task gate\nfor #DB.\n\nThis fixes CVE-2017-7518.\n\nCc: stable@vger.kernel.org\nReported-by: Andy Lutomirski <luto@kernel.org>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
  "full_message": "KVM: x86: fix singlestepping over syscall\n\nTF is handled a bit differently for syscall and sysret, compared\nto the other instructions: TF is checked after the instruction completes,\nso that the OS can disable #DB at a syscall by adding TF to FMASK.\nWhen the sysret is executed the #DB is taken \"as if\" the syscall insn\njust completed.\n\nKVM emulates syscall so that it can trap 32-bit syscall on Intel processors.\nFix the behavior, otherwise you could get #DB on a user stack which is not\nnice.  This does not affect Linux guests, as they use an IST or task gate\nfor #DB.\n\nThis fixes CVE-2017-7518.\n\nCc: stable@vger.kernel.org\nReported-by: Andy Lutomirski <luto@kernel.org>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
  "author_name": "Paolo Bonzini",
  "author_email": "pbonzini@redhat.com",
  "author_date": "Wed Jun 7 15:13:14 2017 +0200",
  "author_date_iso": "2017-06-07T15:13:14+02:00",
  "committer_name": "Radim Kr\u010dm\u00e1\u0159",
  "committer_email": "rkrcmar@redhat.com",
  "committer_date": "Thu Jun 22 16:13:29 2017 +0200",
  "committer_date_iso": "2017-06-22T16:13:29+02:00",
  "files_changed": [
    "arch/x86/include/asm/kvm_emulate.h",
    "arch/x86/kvm/emulate.c",
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/x86/include/asm/kvm_emulate.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/emulate.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 32,
      "deletions": 30
    }
  ],
  "total_insertions": 34,
  "total_deletions": 30,
  "total_changes": 64,
  "parents": [
    "d6aa07c16941dcf438bd526a56dcf227991c5907"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.12",
    "v4.12-rc7",
    "v4.13",
    "v4.13-rc1",
    "v4.13-rc2",
    "v4.13-rc3",
    "v4.13-rc4",
    "v4.13-rc5",
    "v4.13-rc6",
    "v4.13-rc7"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2017-7518"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/x86/include/asm/kvm_emulate.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/emulate.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}