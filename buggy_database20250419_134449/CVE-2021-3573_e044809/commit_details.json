{
  "hash": "e04480920d1eec9c061841399aa6f35b6f987d8b",
  "hash_short": "e0448092",
  "subject": "Bluetooth: defer cleanup of resources in hci_unregister_dev()",
  "body": "syzbot is hitting might_sleep() warning at hci_sock_dev_event() due to\ncalling lock_sock() with rw spinlock held [1].\n\nIt seems that history of this locking problem is a trial and error.\n\nCommit b40df5743ee8 (\"[PATCH] bluetooth: fix socket locking in\nhci_sock_dev_event()\") in 2.6.21-rc4 changed bh_lock_sock() to\nlock_sock() as an attempt to fix lockdep warning.\n\nThen, commit 4ce61d1c7a8e (\"[BLUETOOTH]: Fix locking in\nhci_sock_dev_event().\") in 2.6.22-rc2 changed lock_sock() to\nlocal_bh_disable() + bh_lock_sock_nested() as an attempt to fix the\nsleep in atomic context warning.\n\nThen, commit 4b5dd696f81b (\"Bluetooth: Remove local_bh_disable() from\nhci_sock.c\") in 3.3-rc1 removed local_bh_disable().\n\nThen, commit e305509e678b (\"Bluetooth: use correct lock to prevent UAF\nof hdev object\") in 5.13-rc5 again changed bh_lock_sock_nested() to\nlock_sock() as an attempt to fix CVE-2021-3573.\n\nThis difficulty comes from current implementation that\nhci_sock_dev_event(HCI_DEV_UNREG) is responsible for dropping all\nreferences from sockets because hci_unregister_dev() immediately\nreclaims resources as soon as returning from\nhci_sock_dev_event(HCI_DEV_UNREG).\n\nBut the history suggests that hci_sock_dev_event(HCI_DEV_UNREG) was not\ndoing what it should do.\n\nTherefore, instead of trying to detach sockets from device, let's accept\nnot detaching sockets from device at hci_sock_dev_event(HCI_DEV_UNREG),\nby moving actual cleanup of resources from hci_unregister_dev() to\nhci_cleanup_dev() which is called by bt_host_release() when all\nreferences to this unregistered device (which is a kobject) are gone.\n\nSince hci_sock_dev_event(HCI_DEV_UNREG) no longer resets\nhci_pi(sk)->hdev, we need to check whether this device was unregistered\nand return an error based on HCI_UNREGISTER flag.  There might be subtle\nbehavioral difference in \"monitor the hdev\" functionality; please report\nif you found something went wrong due to this patch.\n\nLink: https://syzkaller.appspot.com/bug?extid=a5df189917e79d5e59c9 [1]\nReported-by: syzbot <syzbot+a5df189917e79d5e59c9@syzkaller.appspotmail.com>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nFixes: e305509e678b (\"Bluetooth: use correct lock to prevent UAF of hdev object\")\nAcked-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "Bluetooth: defer cleanup of resources in hci_unregister_dev()\n\nsyzbot is hitting might_sleep() warning at hci_sock_dev_event() due to\ncalling lock_sock() with rw spinlock held [1].\n\nIt seems that history of this locking problem is a trial and error.\n\nCommit b40df5743ee8 (\"[PATCH] bluetooth: fix socket locking in\nhci_sock_dev_event()\") in 2.6.21-rc4 changed bh_lock_sock() to\nlock_sock() as an attempt to fix lockdep warning.\n\nThen, commit 4ce61d1c7a8e (\"[BLUETOOTH]: Fix locking in\nhci_sock_dev_event().\") in 2.6.22-rc2 changed lock_sock() to\nlocal_bh_disable() + bh_lock_sock_nested() as an attempt to fix the\nsleep in atomic context warning.\n\nThen, commit 4b5dd696f81b (\"Bluetooth: Remove local_bh_disable() from\nhci_sock.c\") in 3.3-rc1 removed local_bh_disable().\n\nThen, commit e305509e678b (\"Bluetooth: use correct lock to prevent UAF\nof hdev object\") in 5.13-rc5 again changed bh_lock_sock_nested() to\nlock_sock() as an attempt to fix CVE-2021-3573.\n\nThis difficulty comes from current implementation that\nhci_sock_dev_event(HCI_DEV_UNREG) is responsible for dropping all\nreferences from sockets because hci_unregister_dev() immediately\nreclaims resources as soon as returning from\nhci_sock_dev_event(HCI_DEV_UNREG).\n\nBut the history suggests that hci_sock_dev_event(HCI_DEV_UNREG) was not\ndoing what it should do.\n\nTherefore, instead of trying to detach sockets from device, let's accept\nnot detaching sockets from device at hci_sock_dev_event(HCI_DEV_UNREG),\nby moving actual cleanup of resources from hci_unregister_dev() to\nhci_cleanup_dev() which is called by bt_host_release() when all\nreferences to this unregistered device (which is a kobject) are gone.\n\nSince hci_sock_dev_event(HCI_DEV_UNREG) no longer resets\nhci_pi(sk)->hdev, we need to check whether this device was unregistered\nand return an error based on HCI_UNREGISTER flag.  There might be subtle\nbehavioral difference in \"monitor the hdev\" functionality; please report\nif you found something went wrong due to this patch.\n\nLink: https://syzkaller.appspot.com/bug?extid=a5df189917e79d5e59c9 [1]\nReported-by: syzbot <syzbot+a5df189917e79d5e59c9@syzkaller.appspotmail.com>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nFixes: e305509e678b (\"Bluetooth: use correct lock to prevent UAF of hdev object\")\nAcked-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Tetsuo Handa",
  "author_email": "penguin-kernel@i-love.sakura.ne.jp",
  "author_date": "Wed Aug 4 19:26:56 2021 +0900",
  "author_date_iso": "2021-08-04T19:26:56+09:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Aug 5 12:15:24 2021 -0700",
  "committer_date_iso": "2021-08-05T12:15:24-07:00",
  "files_changed": [
    "include/net/bluetooth/hci_core.h",
    "net/bluetooth/hci_core.c",
    "net/bluetooth/hci_sock.c",
    "net/bluetooth/hci_sysfs.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "include/net/bluetooth/hci_core.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/bluetooth/hci_core.c",
      "insertions": 8,
      "deletions": 8
    },
    {
      "file": "net/bluetooth/hci_sock.c",
      "insertions": 33,
      "deletions": 16
    },
    {
      "file": "net/bluetooth/hci_sysfs.c",
      "insertions": 3,
      "deletions": 0
    }
  ],
  "total_insertions": 45,
  "total_deletions": 24,
  "total_changes": 69,
  "parents": [
    "0b53abfc5f66449d42fb1738c1c191e29e3be2e4"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2021-3573"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "include/net/bluetooth/hci_core.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/bluetooth/hci_core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/bluetooth/hci_sock.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/bluetooth/hci_sysfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}