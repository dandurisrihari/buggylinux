{
  "hash": "67f2df3b82d091ed095d0e47e1f3a9d3e18e4e41",
  "hash_short": "67f2df3b",
  "subject": "mm/slab: Plumb kmem_buckets into __do_kmalloc_node()",
  "body": "Introduce CONFIG_SLAB_BUCKETS which provides the infrastructure to\nsupport separated kmalloc buckets (in the following kmem_buckets_create()\npatches and future codetag-based separation). Since this will provide\na mitigation for a very common case of exploits, it is recommended to\nenable this feature for general purpose distros. By default, the new\nKconfig will be enabled if CONFIG_SLAB_FREELIST_HARDENED is enabled (and\nit is added to the hardening.config Kconfig fragment).\n\nTo be able to choose which buckets to allocate from, make the buckets\navailable to the internal kmalloc interfaces by adding them as the\nsecond argument, rather than depending on the buckets being chosen from\nthe fixed set of global buckets. Where the bucket is not available,\npass NULL, which means \"use the default system kmalloc bucket set\"\n(the prior existing behavior), as implemented in kmalloc_slab().\n\nTo avoid adding the extra argument when !CONFIG_SLAB_BUCKETS, only the\ntop-level macros and static inlines use the buckets argument (where\nthey are stripped out and compiled out respectively). The actual extern\nfunctions can then be built without the argument, and the internals\nfall back to the global kmalloc buckets unconditionally.\n\nCo-developed-by: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Kees Cook <kees@kernel.org>\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>",
  "full_message": "mm/slab: Plumb kmem_buckets into __do_kmalloc_node()\n\nIntroduce CONFIG_SLAB_BUCKETS which provides the infrastructure to\nsupport separated kmalloc buckets (in the following kmem_buckets_create()\npatches and future codetag-based separation). Since this will provide\na mitigation for a very common case of exploits, it is recommended to\nenable this feature for general purpose distros. By default, the new\nKconfig will be enabled if CONFIG_SLAB_FREELIST_HARDENED is enabled (and\nit is added to the hardening.config Kconfig fragment).\n\nTo be able to choose which buckets to allocate from, make the buckets\navailable to the internal kmalloc interfaces by adding them as the\nsecond argument, rather than depending on the buckets being chosen from\nthe fixed set of global buckets. Where the bucket is not available,\npass NULL, which means \"use the default system kmalloc bucket set\"\n(the prior existing behavior), as implemented in kmalloc_slab().\n\nTo avoid adding the extra argument when !CONFIG_SLAB_BUCKETS, only the\ntop-level macros and static inlines use the buckets argument (where\nthey are stripped out and compiled out respectively). The actual extern\nfunctions can then be built without the argument, and the internals\nfall back to the global kmalloc buckets unconditionally.\n\nCo-developed-by: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Kees Cook <kees@kernel.org>\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>",
  "author_name": "Kees Cook",
  "author_email": "kees@kernel.org",
  "author_date": "Mon Jul 1 12:12:59 2024 -0700",
  "author_date_iso": "2024-07-01T12:12:59-07:00",
  "committer_name": "Vlastimil Babka",
  "committer_email": "vbabka@suse.cz",
  "committer_date": "Wed Jul 3 12:24:19 2024 +0200",
  "committer_date_iso": "2024-07-03T12:24:19+02:00",
  "files_changed": [
    "include/linux/slab.h",
    "kernel/configs/hardening.config",
    "mm/Kconfig",
    "mm/slab.h",
    "mm/slab_common.c",
    "mm/slub.c",
    "scripts/kernel-doc"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "include/linux/slab.h",
      "insertions": 22,
      "deletions": 5
    },
    {
      "file": "kernel/configs/hardening.config",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "mm/Kconfig",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "mm/slab.h",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "mm/slab_common.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "mm/slub.c",
      "insertions": 10,
      "deletions": 10
    },
    {
      "file": "scripts/kernel-doc",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 56,
  "total_deletions": 18,
  "total_changes": 74,
  "parents": [
    "72e0fe2241ce113cbba339ca8c2450b167774530"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/configs/hardening.config",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "scripts/kernel-doc",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slab_common.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/slab.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slub.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slab.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}