{
  "hash": "1d1df41c5a33359a00e919d54eaebfb789711fdc",
  "hash_short": "1d1df41c",
  "subject": "Merge tag 'f2fs-for-5.17-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs",
  "body": "Pull f2fs updates from Jaegeuk Kim:\n \"In this round, we've tried to address some performance issues in\n  f2fs_checkpoint and direct IO flows. Also, there was a work to enhance\n  the page cache management used for compression. Other than them, we've\n  done typical work including sysfs, code clean-ups, tracepoint, sanity\n  check, in addition to bug fixes on corner cases.\n\n  Enhancements:\n   - use iomap for direct IO\n   - try to avoid lock contention to improve f2fs_ckpt speed\n   - avoid unnecessary memory allocation in compression flow\n   - POSIX_FADV_DONTNEED drops the page cache containing compression\n     pages\n   - add some sysfs entries (gc_urgent_high_remaining, pending_discard)\n\n  Bug fixes:\n   - try not to expose unwritten blocks to user by DIO (this was added\n     to avoid merge conflict; another patch is coming to address other\n     missing case)\n   - relax minor error condition for file pinning feature used in\n     Android OTA\n   - fix potential deadlock case in compression flow\n   - should not truncate any block on pinned file\n\n  In addition, we've done some code clean-ups and tracepoint/sanity\n  check improvement\"\n\n* tag 'f2fs-for-5.17-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (29 commits)\n  f2fs: do not allow partial truncation on pinned file\n  f2fs: remove redunant invalidate compress pages\n  f2fs: Simplify bool conversion\n  f2fs: don't drop compressed page cache in .{invalidate,release}page\n  f2fs: fix to reserve space for IO align feature\n  f2fs: fix to check available space of CP area correctly in update_ckpt_flags()\n  f2fs: support fault injection to f2fs_trylock_op()\n  f2fs: clean up __find_inline_xattr() with __find_xattr()\n  f2fs: fix to do sanity check on last xattr entry in __f2fs_setxattr()\n  f2fs: do not bother checkpoint by f2fs_get_node_info\n  f2fs: avoid down_write on nat_tree_lock during checkpoint\n  f2fs: compress: fix potential deadlock of compress file\n  f2fs: avoid EINVAL by SBI_NEED_FSCK when pinning a file\n  f2fs: add gc_urgent_high_remaining sysfs node\n  f2fs: fix to do sanity check in is_alive()\n  f2fs: fix to avoid panic in is_alive() if metadata is inconsistent\n  f2fs: fix to do sanity check on inode type during garbage collection\n  f2fs: avoid duplicate call of mark_inode_dirty\n  f2fs: show number of pending discard commands\n  f2fs: support POSIX_FADV_DONTNEED drop compressed page cache\n  ...",
  "full_message": "Merge tag 'f2fs-for-5.17-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, we've tried to address some performance issues in\n  f2fs_checkpoint and direct IO flows. Also, there was a work to enhance\n  the page cache management used for compression. Other than them, we've\n  done typical work including sysfs, code clean-ups, tracepoint, sanity\n  check, in addition to bug fixes on corner cases.\n\n  Enhancements:\n   - use iomap for direct IO\n   - try to avoid lock contention to improve f2fs_ckpt speed\n   - avoid unnecessary memory allocation in compression flow\n   - POSIX_FADV_DONTNEED drops the page cache containing compression\n     pages\n   - add some sysfs entries (gc_urgent_high_remaining, pending_discard)\n\n  Bug fixes:\n   - try not to expose unwritten blocks to user by DIO (this was added\n     to avoid merge conflict; another patch is coming to address other\n     missing case)\n   - relax minor error condition for file pinning feature used in\n     Android OTA\n   - fix potential deadlock case in compression flow\n   - should not truncate any block on pinned file\n\n  In addition, we've done some code clean-ups and tracepoint/sanity\n  check improvement\"\n\n* tag 'f2fs-for-5.17-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (29 commits)\n  f2fs: do not allow partial truncation on pinned file\n  f2fs: remove redunant invalidate compress pages\n  f2fs: Simplify bool conversion\n  f2fs: don't drop compressed page cache in .{invalidate,release}page\n  f2fs: fix to reserve space for IO align feature\n  f2fs: fix to check available space of CP area correctly in update_ckpt_flags()\n  f2fs: support fault injection to f2fs_trylock_op()\n  f2fs: clean up __find_inline_xattr() with __find_xattr()\n  f2fs: fix to do sanity check on last xattr entry in __f2fs_setxattr()\n  f2fs: do not bother checkpoint by f2fs_get_node_info\n  f2fs: avoid down_write on nat_tree_lock during checkpoint\n  f2fs: compress: fix potential deadlock of compress file\n  f2fs: avoid EINVAL by SBI_NEED_FSCK when pinning a file\n  f2fs: add gc_urgent_high_remaining sysfs node\n  f2fs: fix to do sanity check in is_alive()\n  f2fs: fix to avoid panic in is_alive() if metadata is inconsistent\n  f2fs: fix to do sanity check on inode type during garbage collection\n  f2fs: avoid duplicate call of mark_inode_dirty\n  f2fs: show number of pending discard commands\n  f2fs: support POSIX_FADV_DONTNEED drop compressed page cache\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Wed Jan 19 11:50:20 2022 +0200",
  "author_date_iso": "2022-01-19T11:50:20+02:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Jan 19 11:50:20 2022 +0200",
  "committer_date_iso": "2022-01-19T11:50:20+02:00",
  "files_changed": [
    "fs/f2fs/data.c",
    "fs/f2fs/f2fs.h",
    "fs/f2fs/gc.c",
    "fs/f2fs/inode.c",
    "fs/f2fs/node.c",
    "fs/f2fs/recovery.c",
    "fs/f2fs/segment.c",
    "fs/f2fs/super.c",
    "fs/f2fs/sysfs.c"
  ],
  "files_changed_count": 9,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-fs-f2fs",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "Documentation/filesystems/f2fs.rst",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/Kconfig",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/checkpoint.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/compress.c",
      "insertions": 33,
      "deletions": 51
    },
    {
      "file": "fs/f2fs/data.c",
      "insertions": 79,
      "deletions": 272
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "insertions": 33,
      "deletions": 10
    },
    {
      "file": "fs/f2fs/file.c",
      "insertions": 415,
      "deletions": 94
    },
    {
      "file": "fs/f2fs/gc.c",
      "insertions": 21,
      "deletions": 5
    },
    {
      "file": "fs/f2fs/inline.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/inode.c",
      "insertions": 16,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/iostat.c",
      "insertions": 18,
      "deletions": 22
    },
    {
      "file": "fs/f2fs/node.c",
      "insertions": 14,
      "deletions": 9
    },
    {
      "file": "fs/f2fs/recovery.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/segment.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/segment.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/super.c",
      "insertions": 46,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/sysfs.c",
      "insertions": 25,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/xattr.c",
      "insertions": 21,
      "deletions": 19
    },
    {
      "file": "include/trace/events/f2fs.h",
      "insertions": 15,
      "deletions": 12
    }
  ],
  "total_insertions": 759,
  "total_deletions": 505,
  "total_changes": 1264,
  "parents": [
    "e9f5cbc0c851c1cf98e4ecc5d72b5563d3fc5605",
    "5fed0be8583f08c1548b4dcd9e5ee0d1133d0730"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/f2fs/gc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/node.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/recovery.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/inode.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/segment.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/data.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/sysfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}