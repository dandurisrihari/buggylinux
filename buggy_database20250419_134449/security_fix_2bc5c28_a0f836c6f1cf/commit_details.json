{
  "hash": "2bc5c282999af41042c2b703bf3a58ca1d7e3ee2",
  "hash_short": "2bc5c282",
  "subject": "[IA64] Remove needless delay in MCA rendezvous",
  "body": "While testing the MCA recovery code, noticed that some machines would have a\nfive second delay rendezvousing cpus.  What was happening is that\nia64_wait_for_slaves() would check to see if all the slave CPUs had\nrendezvoused.  If any had not, it would wait 1 millisecond then check again.\nIf any CPUs had still not rendezvoused, it would wait 5 seconds before\nchecking again.\n\nOn some configs the rendezvous takes more than 1 millisecond, causing the code\nto wait the full 5 seconds, even though the last CPU rendezvoused after only\na few milliseconds.\n\nThe fix is to check every 1 millisecond to see if all the cpus have\nrendezvoused.  After 5 seconds the code concludes the CPUs will never\nrendezvous (same as before).\n\nThe MCA code is, by definition, not performance critical, but a needless\ndelay of 5 seconds is senseless.  The 5 seconds also adds up quickly\nwhen running the error injection code in a loop.\n\nThis patch both simplifies the code and removes the needless delay.\n\nSigned-off-by: Russ Anderson <rja@sgi.com>\nSigned-off-by: Tony Luck <tony.luck@intel.com>",
  "full_message": "[IA64] Remove needless delay in MCA rendezvous\n\nWhile testing the MCA recovery code, noticed that some machines would have a\nfive second delay rendezvousing cpus.  What was happening is that\nia64_wait_for_slaves() would check to see if all the slave CPUs had\nrendezvoused.  If any had not, it would wait 1 millisecond then check again.\nIf any CPUs had still not rendezvoused, it would wait 5 seconds before\nchecking again.\n\nOn some configs the rendezvous takes more than 1 millisecond, causing the code\nto wait the full 5 seconds, even though the last CPU rendezvoused after only\na few milliseconds.\n\nThe fix is to check every 1 millisecond to see if all the cpus have\nrendezvoused.  After 5 seconds the code concludes the CPUs will never\nrendezvous (same as before).\n\nThe MCA code is, by definition, not performance critical, but a needless\ndelay of 5 seconds is senseless.  The 5 seconds also adds up quickly\nwhen running the error injection code in a loop.\n\nThis patch both simplifies the code and removes the needless delay.\n\nSigned-off-by: Russ Anderson <rja@sgi.com>\nSigned-off-by: Tony Luck <tony.luck@intel.com>",
  "author_name": "Russ Anderson",
  "author_email": "rja@sgi.com",
  "author_date": "Thu Sep 20 13:59:12 2007 -0500",
  "author_date_iso": "2007-09-20T13:59:12-05:00",
  "committer_name": "Tony Luck",
  "committer_email": "tony.luck@intel.com",
  "committer_date": "Fri Oct 12 15:17:44 2007 -0700",
  "committer_date_iso": "2007-10-12T15:17:44-07:00",
  "files_changed": [
    "arch/ia64/kernel/mca.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/ia64/kernel/mca.c",
      "insertions": 19,
      "deletions": 22
    }
  ],
  "total_insertions": 19,
  "total_deletions": 22,
  "total_changes": 41,
  "parents": [
    "28eda5b8b434b65e5feb0c58a7477f3f290d72d4"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.24",
    "v2.6.24-rc1",
    "v2.6.24-rc2",
    "v2.6.24-rc3",
    "v2.6.24-rc4",
    "v2.6.24-rc5",
    "v2.6.24-rc6",
    "v2.6.24-rc7",
    "v2.6.24-rc8",
    "v2.6.25"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/ia64/kernel/mca.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}