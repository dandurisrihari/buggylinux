{
  "hash": "413b61ce0b4de0e55a9f8cf91bbce1ad7e0870cd",
  "hash_short": "413b61ce",
  "subject": "crypto: ccp - permit asynchronous skcipher as fallback",
  "body": "Even though the ccp driver implements an asynchronous version of xts(aes),\nthe fallback it allocates is required to be synchronous. Given that SIMD\nbased software implementations are usually asynchronous as well, even\nthough they rarely complete asynchronously (this typically only happens\nin cases where the request was made from softirq context, while SIMD was\nalready in use in the task context that it interrupted), these\nimplementations are disregarded, and either the generic C version or\nanother table based version implemented in assembler is selected instead.\n\nSince falling back to synchronous AES is not only a performance issue, but\npotentially a security issue as well (due to the fact that table based AES\nis not time invariant), let's fix this, by allocating an ordinary skcipher\nas the fallback, and invoke it with the completion routine that was given\nto the outer request.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nAcked-by: John Allen <john.allen@amd.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "full_message": "crypto: ccp - permit asynchronous skcipher as fallback\n\nEven though the ccp driver implements an asynchronous version of xts(aes),\nthe fallback it allocates is required to be synchronous. Given that SIMD\nbased software implementations are usually asynchronous as well, even\nthough they rarely complete asynchronously (this typically only happens\nin cases where the request was made from softirq context, while SIMD was\nalready in use in the task context that it interrupted), these\nimplementations are disregarded, and either the generic C version or\nanother table based version implemented in assembler is selected instead.\n\nSince falling back to synchronous AES is not only a performance issue, but\npotentially a security issue as well (due to the fact that table based AES\nis not time invariant), let's fix this, by allocating an ordinary skcipher\nas the fallback, and invoke it with the completion routine that was given\nto the outer request.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nAcked-by: John Allen <john.allen@amd.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "author_name": "Ard Biesheuvel",
  "author_email": "ardb@kernel.org",
  "author_date": "Tue Jul 7 09:31:57 2020 +0300",
  "author_date_iso": "2020-07-07T09:31:57+03:00",
  "committer_name": "Herbert Xu",
  "committer_email": "herbert@gondor.apana.org.au",
  "committer_date": "Thu Jul 16 21:49:03 2020 +1000",
  "committer_date_iso": "2020-07-16T21:49:03+10:00",
  "files_changed": [
    "drivers/crypto/ccp/ccp-crypto-aes-xts.c",
    "drivers/crypto/ccp/ccp-crypto.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/crypto/ccp/ccp-crypto-aes-xts.c",
      "insertions": 16,
      "deletions": 17
    },
    {
      "file": "drivers/crypto/ccp/ccp-crypto.h",
      "insertions": 3,
      "deletions": 1
    }
  ],
  "total_insertions": 19,
  "total_deletions": 18,
  "total_changes": 37,
  "parents": [
    "44b591753731f12dcf5d8e72df69baa9f3c48921"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/crypto/ccp/ccp-crypto-aes-xts.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/crypto/ccp/ccp-crypto.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}