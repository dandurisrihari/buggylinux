{
  "hash": "38f054d549a869f22a02224cd276a27bf14b6171",
  "hash_short": "38f054d5",
  "subject": "modules: always page-align module section allocations",
  "body": "Some arches (e.g., arm64, x86) have moved towards non-executable\nmodule_alloc() allocations for security hardening reasons. That means\nthat the module loader will need to set the text section of a module to\nexecutable, regardless of whether or not CONFIG_STRICT_MODULE_RWX is set.\n\nWhen CONFIG_STRICT_MODULE_RWX=y, module section allocations are always\npage-aligned to handle memory rwx permissions. On some arches with\nCONFIG_STRICT_MODULE_RWX=n however, when setting the module text to\nexecutable, the BUG_ON() in frob_text() gets triggered since module\nsection allocations are not page-aligned when CONFIG_STRICT_MODULE_RWX=n.\nSince the set_memory_* API works with pages, and since we need to call\nset_memory_x() regardless of whether CONFIG_STRICT_MODULE_RWX is set, we\nmight as well page-align all module section allocations for ease of\nmanaging rwx permissions of module sections (text, rodata, etc).\n\nFixes: 2eef1399a866 (\"modules: fix BUG when load module with rodata=n\")\nReported-by: Martin Kaiser <lists@kaiser.cx>\nReported-by: Bartosz Golaszewski <brgl@bgdev.pl>\nTested-by: David Lechner <david@lechnology.com>\nTested-by: Martin Kaiser <martin@kaiser.cx>\nTested-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>\nSigned-off-by: Jessica Yu <jeyu@kernel.org>",
  "full_message": "modules: always page-align module section allocations\n\nSome arches (e.g., arm64, x86) have moved towards non-executable\nmodule_alloc() allocations for security hardening reasons. That means\nthat the module loader will need to set the text section of a module to\nexecutable, regardless of whether or not CONFIG_STRICT_MODULE_RWX is set.\n\nWhen CONFIG_STRICT_MODULE_RWX=y, module section allocations are always\npage-aligned to handle memory rwx permissions. On some arches with\nCONFIG_STRICT_MODULE_RWX=n however, when setting the module text to\nexecutable, the BUG_ON() in frob_text() gets triggered since module\nsection allocations are not page-aligned when CONFIG_STRICT_MODULE_RWX=n.\nSince the set_memory_* API works with pages, and since we need to call\nset_memory_x() regardless of whether CONFIG_STRICT_MODULE_RWX is set, we\nmight as well page-align all module section allocations for ease of\nmanaging rwx permissions of module sections (text, rodata, etc).\n\nFixes: 2eef1399a866 (\"modules: fix BUG when load module with rodata=n\")\nReported-by: Martin Kaiser <lists@kaiser.cx>\nReported-by: Bartosz Golaszewski <brgl@bgdev.pl>\nTested-by: David Lechner <david@lechnology.com>\nTested-by: Martin Kaiser <martin@kaiser.cx>\nTested-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>\nSigned-off-by: Jessica Yu <jeyu@kernel.org>",
  "author_name": "Jessica Yu",
  "author_email": "jeyu@kernel.org",
  "author_date": "Tue Jul 23 15:26:28 2019 +0200",
  "author_date_iso": "2019-07-23T15:26:28+02:00",
  "committer_name": "Jessica Yu",
  "committer_email": "jeyu@kernel.org",
  "committer_date": "Tue Jul 30 10:35:23 2019 +0200",
  "committer_date_iso": "2019-07-30T10:35:23+02:00",
  "files_changed": [
    "kernel/module.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/module.c",
      "insertions": 1,
      "deletions": 6
    }
  ],
  "total_insertions": 1,
  "total_deletions": 6,
  "total_changes": 7,
  "parents": [
    "5f9e832c137075045d15cd6899ab0505cfb2ca4b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.3",
    "v5.3-rc6",
    "v5.3-rc7",
    "v5.3-rc8",
    "v5.4",
    "v5.4-rc1",
    "v5.4-rc2",
    "v5.4-rc3",
    "v5.4-rc4",
    "v5.4-rc5"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/module.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}