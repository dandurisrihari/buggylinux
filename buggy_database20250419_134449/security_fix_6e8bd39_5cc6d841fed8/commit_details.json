{
  "hash": "6e8bd39d7227747f13c891bc5a5fea00373d4bb9",
  "hash_short": "6e8bd39d",
  "subject": "xfs: Initialize xfs_alloc_arg->total correctly when allocating minlen extents",
  "body": "xfs/538 can cause the following call trace to be printed when executing on a\nmulti-block directory configuration,\n\n WARNING: CPU: 1 PID: 2578 at fs/xfs/libxfs/xfs_bmap.c:717 xfs_bmap_extents_to_btree+0x520/0x5d0\n Call Trace:\n  ? xfs_buf_rele+0x4f/0x450\n  xfs_bmap_add_extent_hole_real+0x747/0x960\n  xfs_bmapi_allocate+0x39a/0x440\n  xfs_bmapi_write+0x507/0x9e0\n  xfs_da_grow_inode_int+0x1cd/0x330\n  ? up+0x12/0x60\n  xfs_dir2_grow_inode+0x62/0x110\n  ? xfs_trans_log_inode+0x234/0x2d0\n  xfs_dir2_sf_to_block+0x103/0x940\n  ? xfs_dir2_sf_check+0x8c/0x210\n  ? xfs_da_compname+0x19/0x30\n  ? xfs_dir2_sf_lookup+0xd0/0x3d0\n  xfs_dir2_sf_addname+0x10d/0x910\n  xfs_dir_createname+0x1ad/0x210\n  xfs_create+0x404/0x620\n  xfs_generic_create+0x24c/0x320\n  path_openat+0xda6/0x1030\n  do_filp_open+0x88/0x130\n  ? kmem_cache_alloc+0x50/0x210\n  ? __cond_resched+0x16/0x40\n  ? kmem_cache_alloc+0x50/0x210\n  do_sys_openat2+0x97/0x150\n  __x64_sys_creat+0x49/0x70\n  do_syscall_64+0x33/0x40\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nThis occurs because xfs_bmap_exact_minlen_extent_alloc() initializes\nxfs_alloc_arg->total to xfs_bmalloca->minlen. In the context of\nxfs_bmap_exact_minlen_extent_alloc(), xfs_bmalloca->minlen has a value of 1\nand hence the space allocator could choose an AG which has less than\nxfs_bmalloca->total number of free blocks available. As the transaction\nproceeds, one of the future space allocation requests could fail due to\nnon-availability of free blocks in the AG that was originally chosen.\n\nThis commit fixes the bug by assigning xfs_alloc_arg->total to the value of\nxfs_bmalloca->total.\n\nFixes: 301519674699 (\"xfs: Introduce error injection to allocate only minlen size extents for files\")\nSigned-off-by: Chandan Babu R <chandanrlinux@gmail.com>\nReviewed-by: Darrick J. Wong <djwong@kernel.org>\nSigned-off-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>",
  "full_message": "xfs: Initialize xfs_alloc_arg->total correctly when allocating minlen extents\n\nxfs/538 can cause the following call trace to be printed when executing on a\nmulti-block directory configuration,\n\n WARNING: CPU: 1 PID: 2578 at fs/xfs/libxfs/xfs_bmap.c:717 xfs_bmap_extents_to_btree+0x520/0x5d0\n Call Trace:\n  ? xfs_buf_rele+0x4f/0x450\n  xfs_bmap_add_extent_hole_real+0x747/0x960\n  xfs_bmapi_allocate+0x39a/0x440\n  xfs_bmapi_write+0x507/0x9e0\n  xfs_da_grow_inode_int+0x1cd/0x330\n  ? up+0x12/0x60\n  xfs_dir2_grow_inode+0x62/0x110\n  ? xfs_trans_log_inode+0x234/0x2d0\n  xfs_dir2_sf_to_block+0x103/0x940\n  ? xfs_dir2_sf_check+0x8c/0x210\n  ? xfs_da_compname+0x19/0x30\n  ? xfs_dir2_sf_lookup+0xd0/0x3d0\n  xfs_dir2_sf_addname+0x10d/0x910\n  xfs_dir_createname+0x1ad/0x210\n  xfs_create+0x404/0x620\n  xfs_generic_create+0x24c/0x320\n  path_openat+0xda6/0x1030\n  do_filp_open+0x88/0x130\n  ? kmem_cache_alloc+0x50/0x210\n  ? __cond_resched+0x16/0x40\n  ? kmem_cache_alloc+0x50/0x210\n  do_sys_openat2+0x97/0x150\n  __x64_sys_creat+0x49/0x70\n  do_syscall_64+0x33/0x40\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nThis occurs because xfs_bmap_exact_minlen_extent_alloc() initializes\nxfs_alloc_arg->total to xfs_bmalloca->minlen. In the context of\nxfs_bmap_exact_minlen_extent_alloc(), xfs_bmalloca->minlen has a value of 1\nand hence the space allocator could choose an AG which has less than\nxfs_bmalloca->total number of free blocks available. As the transaction\nproceeds, one of the future space allocation requests could fail due to\nnon-availability of free blocks in the AG that was originally chosen.\n\nThis commit fixes the bug by assigning xfs_alloc_arg->total to the value of\nxfs_bmalloca->total.\n\nFixes: 301519674699 (\"xfs: Introduce error injection to allocate only minlen size extents for files\")\nSigned-off-by: Chandan Babu R <chandanrlinux@gmail.com>\nReviewed-by: Darrick J. Wong <djwong@kernel.org>\nSigned-off-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>",
  "author_name": "Chandan Babu R",
  "author_email": "chandanrlinux@gmail.com",
  "author_date": "Thu Mar 25 11:55:10 2021 -0700",
  "author_date_iso": "2021-03-25T11:55:10-07:00",
  "committer_name": "Darrick J. Wong",
  "committer_email": "djwong@kernel.org",
  "committer_date": "Wed Apr 7 14:36:34 2021 -0700",
  "committer_date_iso": "2021-04-07T14:36:34-07:00",
  "files_changed": [
    "fs/xfs/libxfs/xfs_bmap.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/xfs/libxfs/xfs_bmap.c",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 2,
  "total_deletions": 1,
  "total_changes": 3,
  "parents": [
    "5147ef30f2cd128c9eedf7a697e8cb2ce2767989"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/xfs/libxfs/xfs_bmap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}