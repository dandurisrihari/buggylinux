commit c1298a3a1139c9a73a188fbb153b6eb83dbd4d7d
Author: Kees Cook <kees@kernel.org>
Date:   Sun May 8 09:15:53 2022 -0700

    big_keys: Use struct for internal payload
    
    The randstruct GCC plugin gets upset when it sees struct path (which is
    randomized) being assigned from a "void *" (which it cannot type-check).
    
    There's no need for these casts, as the entire internal payload use is
    following a normal struct layout. Convert the enum-based void * offset
    dereferencing to the new big_key_payload struct. No meaningful machine
    code changes result after this change, and source readability is improved.
    
    Drop the randstruct exception now that there is no "confusing" cross-type
    assignment.
    
    Cc: David Howells <dhowells@redhat.com>
    Cc: Eric Biggers <ebiggers@kernel.org>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Jarkko Sakkinen <jarkko@kernel.org>
    Cc: James Morris <jmorris@namei.org>
    Cc: "Serge E. Hallyn" <serge@hallyn.com>
    Cc: linux-hardening@vger.kernel.org
    Cc: keyrings@vger.kernel.org
    Cc: linux-security-module@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>

diff --git a/scripts/gcc-plugins/randomize_layout_plugin.c b/scripts/gcc-plugins/randomize_layout_plugin.c
index 19214e573137..5836a7fc7532 100644
--- a/scripts/gcc-plugins/randomize_layout_plugin.c
+++ b/scripts/gcc-plugins/randomize_layout_plugin.c
@@ -50,8 +50,6 @@ static const struct whitelist_entry whitelist[] = {
 	{ "drivers/net/ethernet/sun/niu.c", "page", "address_space" },
 	/* unix_skb_parms via UNIXCB() buffer */
 	{ "net/unix/af_unix.c", "unix_skb_parms", "char" },
-	/* big_key payload.data struct splashing */
-	{ "security/keys/big_key.c", "path", "void *" },
 	{ }
 };