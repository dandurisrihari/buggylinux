{
  "hash": "0eab121ef8750a5c8637d51534d5e9143fb0633f",
  "hash_short": "0eab121e",
  "subject": "net: ping: check minimum size on ICMP header length",
  "body": "Prior to commit c0371da6047a (\"put iov_iter into msghdr\") in v3.19, there\nwas no check that the iovec contained enough bytes for an ICMP header,\nand the read loop would walk across neighboring stack contents. Since the\niov_iter conversion, bad arguments are noticed, but the returned error is\nEFAULT. Returning EINVAL is a clearer error and also solves the problem\nprior to v3.19.\n\nThis was found using trinity with KASAN on v3.18:\n\nBUG: KASAN: stack-out-of-bounds in memcpy_fromiovec+0x60/0x114 at addr ffffffc071077da0\nRead of size 8 by task trinity-c2/9623\npage:ffffffbe034b9a08 count:0 mapcount:0 mapping:          (null) index:0x0\nflags: 0x0()\npage dumped because: kasan: bad access detected\nCPU: 0 PID: 9623 Comm: trinity-c2 Tainted: G    BU         3.18.0-dirty #15\nHardware name: Google Tegra210 Smaug Rev 1,3+ (DT)\nCall trace:\n[<ffffffc000209c98>] dump_backtrace+0x0/0x1ac arch/arm64/kernel/traps.c:90\n[<ffffffc000209e54>] show_stack+0x10/0x1c arch/arm64/kernel/traps.c:171\n[<     inline     >] __dump_stack lib/dump_stack.c:15\n[<ffffffc000f18dc4>] dump_stack+0x7c/0xd0 lib/dump_stack.c:50\n[<     inline     >] print_address_description mm/kasan/report.c:147\n[<     inline     >] kasan_report_error mm/kasan/report.c:236\n[<ffffffc000373dcc>] kasan_report+0x380/0x4b8 mm/kasan/report.c:259\n[<     inline     >] check_memory_region mm/kasan/kasan.c:264\n[<ffffffc00037352c>] __asan_load8+0x20/0x70 mm/kasan/kasan.c:507\n[<ffffffc0005b9624>] memcpy_fromiovec+0x5c/0x114 lib/iovec.c:15\n[<     inline     >] memcpy_from_msg include/linux/skbuff.h:2667\n[<ffffffc000ddeba0>] ping_common_sendmsg+0x50/0x108 net/ipv4/ping.c:674\n[<ffffffc000dded30>] ping_v4_sendmsg+0xd8/0x698 net/ipv4/ping.c:714\n[<ffffffc000dc91dc>] inet_sendmsg+0xe0/0x12c net/ipv4/af_inet.c:749\n[<     inline     >] __sock_sendmsg_nosec net/socket.c:624\n[<     inline     >] __sock_sendmsg net/socket.c:632\n[<ffffffc000cab61c>] sock_sendmsg+0x124/0x164 net/socket.c:643\n[<     inline     >] SYSC_sendto net/socket.c:1797\n[<ffffffc000cad270>] SyS_sendto+0x178/0x1d8 net/socket.c:1761\n\nCVE-2016-8399\n\nReported-by: Qidan He <i@flanker017.me>\nFixes: c319b4d76b9e (\"net: ipv4: add IPPROTO_ICMP socket kind\")\nCc: stable@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "net: ping: check minimum size on ICMP header length\n\nPrior to commit c0371da6047a (\"put iov_iter into msghdr\") in v3.19, there\nwas no check that the iovec contained enough bytes for an ICMP header,\nand the read loop would walk across neighboring stack contents. Since the\niov_iter conversion, bad arguments are noticed, but the returned error is\nEFAULT. Returning EINVAL is a clearer error and also solves the problem\nprior to v3.19.\n\nThis was found using trinity with KASAN on v3.18:\n\nBUG: KASAN: stack-out-of-bounds in memcpy_fromiovec+0x60/0x114 at addr ffffffc071077da0\nRead of size 8 by task trinity-c2/9623\npage:ffffffbe034b9a08 count:0 mapcount:0 mapping:          (null) index:0x0\nflags: 0x0()\npage dumped because: kasan: bad access detected\nCPU: 0 PID: 9623 Comm: trinity-c2 Tainted: G    BU         3.18.0-dirty #15\nHardware name: Google Tegra210 Smaug Rev 1,3+ (DT)\nCall trace:\n[<ffffffc000209c98>] dump_backtrace+0x0/0x1ac arch/arm64/kernel/traps.c:90\n[<ffffffc000209e54>] show_stack+0x10/0x1c arch/arm64/kernel/traps.c:171\n[<     inline     >] __dump_stack lib/dump_stack.c:15\n[<ffffffc000f18dc4>] dump_stack+0x7c/0xd0 lib/dump_stack.c:50\n[<     inline     >] print_address_description mm/kasan/report.c:147\n[<     inline     >] kasan_report_error mm/kasan/report.c:236\n[<ffffffc000373dcc>] kasan_report+0x380/0x4b8 mm/kasan/report.c:259\n[<     inline     >] check_memory_region mm/kasan/kasan.c:264\n[<ffffffc00037352c>] __asan_load8+0x20/0x70 mm/kasan/kasan.c:507\n[<ffffffc0005b9624>] memcpy_fromiovec+0x5c/0x114 lib/iovec.c:15\n[<     inline     >] memcpy_from_msg include/linux/skbuff.h:2667\n[<ffffffc000ddeba0>] ping_common_sendmsg+0x50/0x108 net/ipv4/ping.c:674\n[<ffffffc000dded30>] ping_v4_sendmsg+0xd8/0x698 net/ipv4/ping.c:714\n[<ffffffc000dc91dc>] inet_sendmsg+0xe0/0x12c net/ipv4/af_inet.c:749\n[<     inline     >] __sock_sendmsg_nosec net/socket.c:624\n[<     inline     >] __sock_sendmsg net/socket.c:632\n[<ffffffc000cab61c>] sock_sendmsg+0x124/0x164 net/socket.c:643\n[<     inline     >] SYSC_sendto net/socket.c:1797\n[<ffffffc000cad270>] SyS_sendto+0x178/0x1d8 net/socket.c:1761\n\nCVE-2016-8399\n\nReported-by: Qidan He <i@flanker017.me>\nFixes: c319b4d76b9e (\"net: ipv4: add IPPROTO_ICMP socket kind\")\nCc: stable@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Mon Dec 5 10:34:38 2016 -0800",
  "author_date_iso": "2016-12-05T10:34:38-08:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Mon Dec 5 13:35:38 2016 -0500",
  "committer_date_iso": "2016-12-05T13:35:38-05:00",
  "files_changed": [
    "net/ipv4/ping.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/ipv4/ping.c",
      "insertions": 4,
      "deletions": 0
    }
  ],
  "total_insertions": 4,
  "total_deletions": 0,
  "total_changes": 4,
  "parents": [
    "4606c9e8c541f97034e53e644129376a6170b8c7"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2016-8399"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "net/ipv4/ping.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}