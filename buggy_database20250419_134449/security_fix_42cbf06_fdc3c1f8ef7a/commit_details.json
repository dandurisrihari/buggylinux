{
  "hash": "42cbf06872cc44fb8d2d6665fa6494b5925eaf1c",
  "hash_short": "42cbf068",
  "subject": "KVM: x86: Move #GP injection for VMware into x86_emulate_instruction()",
  "body": "Immediately inject a #GP when VMware emulation fails and return\nEMULATE_DONE instead of propagating EMULATE_FAIL up the stack.  This\nhelps pave the way for removing EMULATE_FAIL altogether.\n\nRename EMULTYPE_VMWARE to EMULTYPE_VMWARE_GP to document that the x86\nemulator is called to handle VMware #GP interception, e.g. why a #GP\nis injected on emulation failure for EMULTYPE_VMWARE_GP.\n\nDrop EMULTYPE_NO_UD_ON_FAIL as a standalone type.  The \"no #UD on fail\"\nis used only in the VMWare case and is obsoleted by having the emulator\nitself reinject #GP.\n\nSigned-off-by: Sean Christopherson <sean.j.christopherson@intel.com>\nReviewed-by: Liran Alon <liran.alon@oracle.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: x86: Move #GP injection for VMware into x86_emulate_instruction()\n\nImmediately inject a #GP when VMware emulation fails and return\nEMULATE_DONE instead of propagating EMULATE_FAIL up the stack.  This\nhelps pave the way for removing EMULATE_FAIL altogether.\n\nRename EMULTYPE_VMWARE to EMULTYPE_VMWARE_GP to document that the x86\nemulator is called to handle VMware #GP interception, e.g. why a #GP\nis injected on emulation failure for EMULTYPE_VMWARE_GP.\n\nDrop EMULTYPE_NO_UD_ON_FAIL as a standalone type.  The \"no #UD on fail\"\nis used only in the VMWare case and is obsoleted by having the emulator\nitself reinject #GP.\n\nSigned-off-by: Sean Christopherson <sean.j.christopherson@intel.com>\nReviewed-by: Liran Alon <liran.alon@oracle.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Sean Christopherson",
  "author_email": "sean.j.christopherson@intel.com",
  "author_date": "Tue Aug 27 14:40:31 2019 -0700",
  "author_date_iso": "2019-08-27T14:40:31-07:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Tue Sep 24 14:30:47 2019 +0200",
  "committer_date_iso": "2019-09-24T14:30:47+02:00",
  "files_changed": [
    "arch/x86/include/asm/kvm_host.h",
    "arch/x86/kvm/svm.c",
    "arch/x86/kvm/vmx/vmx.c",
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/svm.c",
      "insertions": 2,
      "deletions": 8
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "insertions": 2,
      "deletions": 8
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 9,
      "deletions": 5
    }
  ],
  "total_insertions": 14,
  "total_deletions": 23,
  "total_changes": 37,
  "parents": [
    "a6c6ed1e81060e110258dbc7118fda07e9971e48"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.4",
    "v5.4-rc1",
    "v5.4-rc2",
    "v5.4-rc3",
    "v5.4-rc4",
    "v5.4-rc5",
    "v5.4-rc6",
    "v5.4-rc7",
    "v5.4-rc8",
    "v5.5"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/svm.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}