{
  "hash": "2ec5a5c48373d4bc2f0699f86507a65bf0b9df35",
  "hash_short": "2ec5a5c4",
  "subject": "block, bfq: always inject I/O of queues blocked by wakers",
  "body": "Suppose that I/O dispatch is plugged, to wait for new I/O for the\nin-service bfq-queue, say bfqq.  Suppose then that there is a further\nbfq_queue woken by bfqq, and that this woken queue has pending I/O. A\nwoken queue does not steal bandwidth from bfqq, because it remains\nsoon without I/O if bfqq is not served. So there is virtually no risk\nof loss of bandwidth for bfqq if this woken queue has I/O dispatched\nwhile bfqq is waiting for new I/O. In contrast, this extra I/O\ninjection boosts throughput. This commit performs this extra\ninjection.\n\nTested-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Paolo Valente <paolo.valente@linaro.org>\nTested-by: Oleksandr Natalenko <oleksandr@natalenko.name>\nLink: https://lore.kernel.org/r/20210304174627.161-2-paolo.valente@linaro.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "full_message": "block, bfq: always inject I/O of queues blocked by wakers\n\nSuppose that I/O dispatch is plugged, to wait for new I/O for the\nin-service bfq-queue, say bfqq.  Suppose then that there is a further\nbfq_queue woken by bfqq, and that this woken queue has pending I/O. A\nwoken queue does not steal bandwidth from bfqq, because it remains\nsoon without I/O if bfqq is not served. So there is virtually no risk\nof loss of bandwidth for bfqq if this woken queue has I/O dispatched\nwhile bfqq is waiting for new I/O. In contrast, this extra I/O\ninjection boosts throughput. This commit performs this extra\ninjection.\n\nTested-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Paolo Valente <paolo.valente@linaro.org>\nTested-by: Oleksandr Natalenko <oleksandr@natalenko.name>\nLink: https://lore.kernel.org/r/20210304174627.161-2-paolo.valente@linaro.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "author_name": "Paolo Valente",
  "author_email": "paolo.valente@linaro.org",
  "author_date": "Thu Mar 4 18:46:22 2021 +0100",
  "author_date_iso": "2021-03-04T18:46:22+01:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Thu Mar 25 10:50:07 2021 -0600",
  "committer_date_iso": "2021-03-25T10:50:07-06:00",
  "files_changed": [
    "block/bfq-iosched.c",
    "block/bfq-wf2q.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "block/bfq-iosched.c",
      "insertions": 27,
      "deletions": 5
    },
    {
      "file": "block/bfq-wf2q.c",
      "insertions": 8,
      "deletions": 0
    }
  ],
  "total_insertions": 35,
  "total_deletions": 5,
  "total_changes": 40,
  "parents": [
    "9cf1adc6d34f8bb12333afe189a2999131877ea3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "block/bfq-iosched.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "block/bfq-wf2q.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}