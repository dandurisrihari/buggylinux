commit bb3868033a4cccff7be57e9145f2117cbdc91c11
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Jun 14 14:50:47 2024 +0100

    btrfs: do not BUG_ON() when freeing tree block after error
    
    When freeing a tree block, at btrfs_free_tree_block(), if we fail to
    create a delayed reference we don't deal with the error and just do a
    BUG_ON(). The error most likely to happen is -ENOMEM, and we have a
    comment mentioning that only -ENOMEM can happen, but that is not true,
    because in case qgroups are enabled any error returned from
    btrfs_qgroup_trace_extent_post() (can be -EUCLEAN or anything returned
    from btrfs_search_slot() for example) can be propagated back to
    btrfs_free_tree_block().
    
    So stop doing a BUG_ON() and return the error to the callers and make
    them abort the transaction to prevent leaking space. Syzbot was
    triggering this, likely due to memory allocation failure injection.
    
    Reported-by: syzbot+a306f914b4d01b3958fe@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/linux-btrfs/000000000000fcba1e05e998263c@google.com/
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>

diff --git a/fs/btrfs/extent-tree.h b/fs/btrfs/extent-tree.h
index af9f8800d5ac..2ad51130c037 100644
--- a/fs/btrfs/extent-tree.h
+++ b/fs/btrfs/extent-tree.h
@@ -127,10 +127,10 @@ struct extent_buffer *btrfs_alloc_tree_block(struct btrfs_trans_handle *trans,
 					     u64 empty_size,
 					     u64 reloc_src_root,
 					     enum btrfs_lock_nesting nest);
-void btrfs_free_tree_block(struct btrfs_trans_handle *trans,
-			   u64 root_id,
-			   struct extent_buffer *buf,
-			   u64 parent, int last_ref);
+int btrfs_free_tree_block(struct btrfs_trans_handle *trans,
+			  u64 root_id,
+			  struct extent_buffer *buf,
+			  u64 parent, int last_ref);
 int btrfs_alloc_reserved_file_extent(struct btrfs_trans_handle *trans,
 				     struct btrfs_root *root, u64 owner,
 				     u64 offset, u64 ram_bytes,