{
  "hash": "abf75a5033d4da7b8a7e92321d74021d1fcfb502",
  "hash_short": "abf75a50",
  "subject": "[PATCH] Fix prctl privilege escalation and suid_dumpable (CVE-2006-2451)",
  "body": "Based on a patch from Ernie Petrides\n\nDuring security research, Red Hat discovered a behavioral flaw in core\ndump handling. A local user could create a program that would cause a\ncore file to be dumped into a directory they would not normally have\npermissions to write to. This could lead to a denial of service (disk\nconsumption), or allow the local user to gain root privileges.\n\nThe prctl() system call should never allow to set \"dumpable\" to the\nvalue 2. Especially not for non-privileged users.\n\nThis can be split into three cases:\n\n  1) running as root -- then core dumps will already be done as root,\n     and so prctl(PR_SET_DUMPABLE, 2) is not useful\n\n  2) running as non-root w/setuid-to-root -- this is the debatable case\n\n  3) running as non-root w/setuid-to-non-root -- then you definitely\n     do NOT want \"dumpable\" to get set to 2 because you have the\n     privilege escalation vulnerability\n\nWith case #2, the only potential usefulness is for a program that has\ndesigned to run with higher privilege (than the user invoking it) that\nwants to be able to create root-owned root-validated core dumps. This\nmight be useful as a debugging aid, but would only be safe if the program\nhad done a chdir() to a safe directory.\n\nThere is no benefit to a production setuid-to-root utility, because it\nshouldn't be dumping core in the first place. If this is true, then the\nsame debugging aid could also be accomplished with the \"suid_dumpable\"\nsysctl.\n\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>\nSigned-off-by: Linus Torvalds <torvalds@osdl.org>",
  "full_message": "[PATCH] Fix prctl privilege escalation and suid_dumpable (CVE-2006-2451)\n\nBased on a patch from Ernie Petrides\n\nDuring security research, Red Hat discovered a behavioral flaw in core\ndump handling. A local user could create a program that would cause a\ncore file to be dumped into a directory they would not normally have\npermissions to write to. This could lead to a denial of service (disk\nconsumption), or allow the local user to gain root privileges.\n\nThe prctl() system call should never allow to set \"dumpable\" to the\nvalue 2. Especially not for non-privileged users.\n\nThis can be split into three cases:\n\n  1) running as root -- then core dumps will already be done as root,\n     and so prctl(PR_SET_DUMPABLE, 2) is not useful\n\n  2) running as non-root w/setuid-to-root -- this is the debatable case\n\n  3) running as non-root w/setuid-to-non-root -- then you definitely\n     do NOT want \"dumpable\" to get set to 2 because you have the\n     privilege escalation vulnerability\n\nWith case #2, the only potential usefulness is for a program that has\ndesigned to run with higher privilege (than the user invoking it) that\nwants to be able to create root-owned root-validated core dumps. This\nmight be useful as a debugging aid, but would only be safe if the program\nhad done a chdir() to a safe directory.\n\nThere is no benefit to a production setuid-to-root utility, because it\nshouldn't be dumping core in the first place. If this is true, then the\nsame debugging aid could also be accomplished with the \"suid_dumpable\"\nsysctl.\n\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>\nSigned-off-by: Linus Torvalds <torvalds@osdl.org>",
  "author_name": "Marcel Holtmann",
  "author_email": "marcel@holtmann.org",
  "author_date": "Wed Jul 12 13:12:00 2006 +0200",
  "author_date_iso": "2006-07-12T13:12:00+02:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@g5.osdl.org",
  "committer_date": "Wed Jul 12 12:50:25 2006 -0700",
  "committer_date_iso": "2006-07-12T12:50:25-07:00",
  "files_changed": [
    "kernel/sys.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/sys.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "b2d6744849b5bf6b4593b81c136772df7a238ac9"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.18",
    "v2.6.18-rc2",
    "v2.6.18-rc3",
    "v2.6.18-rc4",
    "v2.6.18-rc5",
    "v2.6.18-rc6",
    "v2.6.18-rc7",
    "v2.6.19",
    "v2.6.19-rc1",
    "v2.6.19-rc2"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2006-2451",
      "CVE-2006-2451"
    ],
    "security_keywords": [
      "privilege escalation",
      "vulnerability"
    ]
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "kernel/sys.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}