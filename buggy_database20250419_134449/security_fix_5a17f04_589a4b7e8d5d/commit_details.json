{
  "hash": "5a17f040fa332e71a45ca9ff02d6979d9176a423",
  "hash_short": "5a17f040",
  "subject": "cred: Do not default to init_cred in prepare_kernel_cred()",
  "body": "A common exploit pattern for ROP attacks is to abuse prepare_kernel_cred()\nin order to construct escalated privileges[1]. Instead of providing a\nshort-hand argument (NULL) to the \"daemon\" argument to indicate using\ninit_cred as the base cred, require that \"daemon\" is always set to\nan actual task. Replace all existing callers that were passing NULL\nwith &init_task.\n\nFuture attacks will need to have sufficiently powerful read/write\nprimitives to have found an appropriately privileged task and written it\nto the ROP stack as an argument to succeed, which is similarly difficult\nto the prior effort needed to escalate privileges before struct cred\nexisted: locate the current cred and overwrite the uid member.\n\nThis has the added benefit of meaning that prepare_kernel_cred() can no\nlonger exceed the privileges of the init task, which may have changed from\nthe original init_cred (e.g. dropping capabilities from the bounding set).\n\n[1] https://google.com/search?q=commit_creds(prepare_kernel_cred(0))\n\nCc: \"Eric W. Biederman\" <ebiederm@xmission.com>\nCc: David Howells <dhowells@redhat.com>\nCc: \"Rafael J. Wysocki\" <rafael@kernel.org>\nCc: Steve French <sfrench@samba.org>\nCc: Ronnie Sahlberg <lsahlber@redhat.com>\nCc: Shyam Prasad N <sprasad@microsoft.com>\nCc: Tom Talpey <tom@talpey.com>\nCc: Namjae Jeon <linkinjeon@kernel.org>\nCc: Trond Myklebust <trond.myklebust@hammerspace.com>\nCc: Anna Schumaker <anna@kernel.org>\nCc: Chuck Lever <chuck.lever@oracle.com>\nCc: Jeff Layton <jlayton@kernel.org>\nCc: \"David S. Miller\" <davem@davemloft.net>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Jakub Kicinski <kuba@kernel.org>\nCc: Paolo Abeni <pabeni@redhat.com>\nCc: \"Michal Koutn\u00fd\" <mkoutny@suse.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: linux-cifs@vger.kernel.org\nCc: samba-technical@lists.samba.org\nCc: linux-nfs@vger.kernel.org\nCc: netdev@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Luis Chamberlain <mcgrof@kernel.org>\nReviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>\nAcked-by: Russ Weight <russell.h.weight@intel.com>\nAcked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nAcked-by: Paulo Alcantara (SUSE) <pc@cjr.nz>\nLink: https://lore.kernel.org/r/20221026232943.never.775-kees@kernel.org",
  "full_message": "cred: Do not default to init_cred in prepare_kernel_cred()\n\nA common exploit pattern for ROP attacks is to abuse prepare_kernel_cred()\nin order to construct escalated privileges[1]. Instead of providing a\nshort-hand argument (NULL) to the \"daemon\" argument to indicate using\ninit_cred as the base cred, require that \"daemon\" is always set to\nan actual task. Replace all existing callers that were passing NULL\nwith &init_task.\n\nFuture attacks will need to have sufficiently powerful read/write\nprimitives to have found an appropriately privileged task and written it\nto the ROP stack as an argument to succeed, which is similarly difficult\nto the prior effort needed to escalate privileges before struct cred\nexisted: locate the current cred and overwrite the uid member.\n\nThis has the added benefit of meaning that prepare_kernel_cred() can no\nlonger exceed the privileges of the init task, which may have changed from\nthe original init_cred (e.g. dropping capabilities from the bounding set).\n\n[1] https://google.com/search?q=commit_creds(prepare_kernel_cred(0))\n\nCc: \"Eric W. Biederman\" <ebiederm@xmission.com>\nCc: David Howells <dhowells@redhat.com>\nCc: \"Rafael J. Wysocki\" <rafael@kernel.org>\nCc: Steve French <sfrench@samba.org>\nCc: Ronnie Sahlberg <lsahlber@redhat.com>\nCc: Shyam Prasad N <sprasad@microsoft.com>\nCc: Tom Talpey <tom@talpey.com>\nCc: Namjae Jeon <linkinjeon@kernel.org>\nCc: Trond Myklebust <trond.myklebust@hammerspace.com>\nCc: Anna Schumaker <anna@kernel.org>\nCc: Chuck Lever <chuck.lever@oracle.com>\nCc: Jeff Layton <jlayton@kernel.org>\nCc: \"David S. Miller\" <davem@davemloft.net>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Jakub Kicinski <kuba@kernel.org>\nCc: Paolo Abeni <pabeni@redhat.com>\nCc: \"Michal Koutn\u00fd\" <mkoutny@suse.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: linux-cifs@vger.kernel.org\nCc: samba-technical@lists.samba.org\nCc: linux-nfs@vger.kernel.org\nCc: netdev@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Luis Chamberlain <mcgrof@kernel.org>\nReviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>\nAcked-by: Russ Weight <russell.h.weight@intel.com>\nAcked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nAcked-by: Paulo Alcantara (SUSE) <pc@cjr.nz>\nLink: https://lore.kernel.org/r/20221026232943.never.775-kees@kernel.org",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Wed Oct 26 16:31:11 2022 -0700",
  "author_date_iso": "2022-10-26T16:31:11-07:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Tue Nov 1 10:04:52 2022 -0700",
  "committer_date_iso": "2022-11-01T10:04:52-07:00",
  "files_changed": [
    "drivers/base/firmware_loader/main.c",
    "fs/cifs/cifs_spnego.c",
    "fs/cifs/cifsacl.c",
    "fs/ksmbd/smb_common.c",
    "fs/nfs/flexfilelayout/flexfilelayout.c",
    "fs/nfs/nfs4idmap.c",
    "fs/nfsd/nfs4callback.c",
    "kernel/cred.c",
    "net/dns_resolver/dns_key.c"
  ],
  "files_changed_count": 9,
  "stats": [
    {
      "file": "drivers/base/firmware_loader/main.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/cifs/cifs_spnego.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/cifs/cifsacl.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/ksmbd/smb_common.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/nfs/flexfilelayout/flexfilelayout.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/nfs/nfs4idmap.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/nfsd/nfs4callback.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/cred.c",
      "insertions": 7,
      "deletions": 8
    },
    {
      "file": "net/dns_resolver/dns_key.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 16,
  "total_deletions": 17,
  "total_changes": 33,
  "parents": [
    "e9a40e1585d792751d3a122392695e5a53032809"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/cifs/cifs_spnego.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/base/firmware_loader/main.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/cifsacl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ksmbd/smb_common.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfs/flexfilelayout/flexfilelayout.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfs/nfs4idmap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/cred.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfs4callback.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/dns_resolver/dns_key.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}