{
  "hash": "ce28867fd20c23cd769e78b4d619c4755bf71a1c",
  "hash_short": "ce28867f",
  "subject": "s390/qeth: don't clobber buffer on async TX completion",
  "body": "If qeth_qdio_output_handler() detects that a transmit requires async\ncompletion, it replaces the pending buffer's metadata object\n(qeth_qdio_out_buffer) so that this queue buffer can be re-used while\nthe data is pending completion.\n\nLater when the CQ indicates async completion of such a metadata object,\nqeth_qdio_cq_handler() tries to free any data associated with this\nobject (since HW has now completed the transfer). By calling\nqeth_clear_output_buffer(), it erronously operates on the queue buffer\nthat _previously_ belonged to this transfer ... but which has been\npotentially re-used several times by now.\nThis results in double-free's of the buffer's data, and failing\ntransmits as the buffer descriptor is scrubbed in mid-air.\n\nThe correct way of handling this situation is to\n1. scrub the queue buffer when it is prepared for re-use, and\n2. later obtain the data addresses from the async-completion notifier\n   (ie. the AOB), instead of the queue buffer.\n\nAll this only affects qeth devices used for af_iucv HiperTransport.\n\nFixes: 0da9581ddb0f (\"qeth: exploit asynchronous delivery of storage blocks\")\nSigned-off-by: Julian Wiedmann <jwi@linux.ibm.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "s390/qeth: don't clobber buffer on async TX completion\n\nIf qeth_qdio_output_handler() detects that a transmit requires async\ncompletion, it replaces the pending buffer's metadata object\n(qeth_qdio_out_buffer) so that this queue buffer can be re-used while\nthe data is pending completion.\n\nLater when the CQ indicates async completion of such a metadata object,\nqeth_qdio_cq_handler() tries to free any data associated with this\nobject (since HW has now completed the transfer). By calling\nqeth_clear_output_buffer(), it erronously operates on the queue buffer\nthat _previously_ belonged to this transfer ... but which has been\npotentially re-used several times by now.\nThis results in double-free's of the buffer's data, and failing\ntransmits as the buffer descriptor is scrubbed in mid-air.\n\nThe correct way of handling this situation is to\n1. scrub the queue buffer when it is prepared for re-use, and\n2. later obtain the data addresses from the async-completion notifier\n   (ie. the AOB), instead of the queue buffer.\n\nAll this only affects qeth devices used for af_iucv HiperTransport.\n\nFixes: 0da9581ddb0f (\"qeth: exploit asynchronous delivery of storage blocks\")\nSigned-off-by: Julian Wiedmann <jwi@linux.ibm.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Julian Wiedmann",
  "author_email": "jwi@linux.ibm.com",
  "author_date": "Fri Jun 29 19:45:53 2018 +0200",
  "author_date_iso": "2018-06-29T19:45:53+02:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Sat Jun 30 21:19:48 2018 +0900",
  "committer_date_iso": "2018-06-30T21:19:48+09:00",
  "files_changed": [
    "drivers/s390/net/qeth_core.h",
    "drivers/s390/net/qeth_core_main.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/s390/net/qeth_core.h",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "drivers/s390/net/qeth_core_main.c",
      "insertions": 16,
      "deletions": 6
    }
  ],
  "total_insertions": 27,
  "total_deletions": 6,
  "total_changes": 33,
  "parents": [
    "9d0a58fb9747afd27d490c02a97889a1b59f6be4"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.18",
    "v4.18-rc4",
    "v4.18-rc5",
    "v4.18-rc6",
    "v4.18-rc7",
    "v4.18-rc8",
    "v4.19",
    "v4.19-rc1",
    "v4.19-rc2",
    "v4.19-rc3"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/s390/net/qeth_core.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/s390/net/qeth_core_main.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}