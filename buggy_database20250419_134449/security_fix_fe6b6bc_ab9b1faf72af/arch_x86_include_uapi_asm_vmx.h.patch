commit fe6b6bc802b40081e8a7a1abe8d32b88d10a03e1
Author: Chenyi Qiang <chenyi.qiang@intel.com>
Date:   Fri Nov 6 17:03:14 2020 +0800

    KVM: VMX: Enable bus lock VM exit
    
    Virtual Machine can exploit bus locks to degrade the performance of
    system. Bus lock can be caused by split locked access to writeback(WB)
    memory or by using locks on uncacheable(UC) memory. The bus lock is
    typically >1000 cycles slower than an atomic operation within a cache
    line. It also disrupts performance on other cores (which must wait for
    the bus lock to be released before their memory operations can
    complete).
    
    To address the threat, bus lock VM exit is introduced to notify the VMM
    when a bus lock was acquired, allowing it to enforce throttling or other
    policy based mitigations.
    
    A VMM can enable VM exit due to bus locks by setting a new "Bus Lock
    Detection" VM-execution control(bit 30 of Secondary Processor-based VM
    execution controls). If delivery of this VM exit was preempted by a
    higher priority VM exit (e.g. EPT misconfiguration, EPT violation, APIC
    access VM exit, APIC write VM exit, exception bitmap exiting), bit 26 of
    exit reason in vmcs field is set to 1.
    
    In current implementation, the KVM exposes this capability through
    KVM_CAP_X86_BUS_LOCK_EXIT. The user can get the supported mode bitmap
    (i.e. off and exit) and enable it explicitly (disabled by default). If
    bus locks in guest are detected by KVM, exit to user space even when
    current exit reason is handled by KVM internally. Set a new field
    KVM_RUN_BUS_LOCK in vcpu->run->flags to inform the user space that there
    is a bus lock detected in guest.
    
    Document for Bus Lock VM exit is now available at the latest "Intel
    Architecture Instruction Set Extensions Programming Reference".
    
    Document Link:
    https://software.intel.com/content/www/us/en/develop/download/intel-architecture-instruction-set-extensions-programming-reference.html
    
    Co-developed-by: Xiaoyao Li <xiaoyao.li@intel.com>
    Signed-off-by: Xiaoyao Li <xiaoyao.li@intel.com>
    Signed-off-by: Chenyi Qiang <chenyi.qiang@intel.com>
    Message-Id: <20201106090315.18606-4-chenyi.qiang@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/include/uapi/asm/vmx.h b/arch/x86/include/uapi/asm/vmx.h
index ada955c5ebb6..b8e650a985e3 100644
--- a/arch/x86/include/uapi/asm/vmx.h
+++ b/arch/x86/include/uapi/asm/vmx.h
@@ -89,6 +89,7 @@
 #define EXIT_REASON_XRSTORS             64
 #define EXIT_REASON_UMWAIT              67
 #define EXIT_REASON_TPAUSE              68
+#define EXIT_REASON_BUS_LOCK            74
 
 #define VMX_EXIT_REASONS \
 	{ EXIT_REASON_EXCEPTION_NMI,         "EXCEPTION_NMI" }, \
@@ -150,7 +151,8 @@
 	{ EXIT_REASON_XSAVES,                "XSAVES" }, \
 	{ EXIT_REASON_XRSTORS,               "XRSTORS" }, \
 	{ EXIT_REASON_UMWAIT,                "UMWAIT" }, \
-	{ EXIT_REASON_TPAUSE,                "TPAUSE" }
+	{ EXIT_REASON_TPAUSE,                "TPAUSE" }, \
+	{ EXIT_REASON_BUS_LOCK,              "BUS_LOCK" }
 
 #define VMX_EXIT_REASON_FLAGS \
 	{ VMX_EXIT_REASONS_FAILED_VMENTRY,	"FAILED_VMENTRY" }