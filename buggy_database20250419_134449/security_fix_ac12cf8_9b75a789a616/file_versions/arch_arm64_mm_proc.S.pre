commit f32c7a8e45105bd0af76872bf6eef0438ff12fb2
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Tue Aug 27 18:12:57 2019 +0100

    arm64: kpti: ensure patched kernel text is fetched from PoU
    
    While the MMUs is disabled, I-cache speculation can result in
    instructions being fetched from the PoC. During boot we may patch
    instructions (e.g. for alternatives and jump labels), and these may be
    dirty at the PoU (and stale at the PoC).
    
    Thus, while the MMU is disabled in the KPTI pagetable fixup code we may
    load stale instructions into the I-cache, potentially leading to
    subsequent crashes when executing regions of code which have been
    modified at runtime.
    
    Similarly to commit:
    
      8ec41987436d566f ("arm64: mm: ensure patched kernel text is fetched from PoU")
    
    ... we can invalidate the I-cache after enabling the MMU to prevent such
    issues.
    
    The KPTI pagetable fixup code itself should be clean to the PoC per the
    boot protocol, so no maintenance is required for this code.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Reviewed-by: James Morse <james.morse@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>

diff --git a/arch/arm64/mm/proc.S b/arch/arm64/mm/proc.S
index 7dbf2be470f6..28a8f7b87ff0 100644
--- a/arch/arm64/mm/proc.S
+++ b/arch/arm64/mm/proc.S
@@ -286,6 +286,15 @@ skip_pgd:
 	msr	sctlr_el1, x18
 	isb
 
+	/*
+	 * Invalidate the local I-cache so that any instructions fetched
+	 * speculatively from the PoC are discarded, since they may have
+	 * been dynamically patched at the PoU.
+	 */
+	ic	iallu
+	dsb	nsh
+	isb
+
 	/* Set the flag to zero to indicate that we're all done */
 	str	wzr, [flag_ptr]
 	ret