commit ac12cf85d682a2c1948210c65f7fb21ef01dd9f6
Merge: f32c7a8e4510 b333b0ba2346 d06fa5a118f1 42d038c4fb00 3724e186fead d55c5f28afaf dd753d961c48 ebef746543fd 92af2b696119 5c062ef4155b
Author: Will Deacon <will@kernel.org>
Date:   Fri Aug 30 12:46:12 2019 +0100

    Merge branches 'for-next/52-bit-kva', 'for-next/cpu-topology', 'for-next/error-injection', 'for-next/perf', 'for-next/psci-cpuidle', 'for-next/rng', 'for-next/smpboot', 'for-next/tbi' and 'for-next/tlbi' into for-next/core
    
    * for-next/52-bit-kva: (25 commits)
      Support for 52-bit virtual addressing in kernel space
    
    * for-next/cpu-topology: (9 commits)
      Move CPU topology parsing into core code and add support for ACPI 6.3
    
    * for-next/error-injection: (2 commits)
      Support for function error injection via kprobes
    
    * for-next/perf: (8 commits)
      Support for i.MX8 DDR PMU and proper SMMUv3 group validation
    
    * for-next/psci-cpuidle: (7 commits)
      Move PSCI idle code into a new CPUidle driver
    
    * for-next/rng: (4 commits)
      Support for 'rng-seed' property being passed in the devicetree
    
    * for-next/smpboot: (3 commits)
      Reduce fragility of secondary CPU bringup in debug configurations
    
    * for-next/tbi: (10 commits)
      Introduce new syscall ABI with relaxed requirements for pointer tags
    
    * for-next/tlbi: (6 commits)
      Handle spurious page faults arising from kernel space

diff --cc arch/arm64/Makefile
index dcbbd53b7f5a,a8d2a241ac58,61de992bbea3,61de992bbea3,bb1f1dbb34e8,61de992bbea3,61de992bbea3,61de992bbea3,61de992bbea3,61de992bbea3..2847b36f72ed
--- a/arch/arm64/Makefile
+++ b/arch/arm64/Makefile
@@@@@@@@@@@ -126,17 -126,13 -126,21 -126,21 -126,21 -126,21 -126,21 -126,21 -126,21 -126,21 +126,9 @@@@@@@@@@@ KBUILD_CFLAGS += -DKASAN_SHADOW_SCALE_S
          KBUILD_CPPFLAGS += -DKASAN_SHADOW_SCALE_SHIFT=$(KASAN_SHADOW_SCALE_SHIFT)
          KBUILD_AFLAGS += -DKASAN_SHADOW_SCALE_SHIFT=$(KASAN_SHADOW_SCALE_SHIFT)
          
- --------# KASAN_SHADOW_OFFSET = VA_START + (1 << (VA_BITS - KASAN_SHADOW_SCALE_SHIFT))
- --------#				 - (1 << (64 - KASAN_SHADOW_SCALE_SHIFT))
- --------# in 32-bit arithmetic
- --------KASAN_SHADOW_OFFSET := $(shell printf "0x%08x00000000\n" $$(( \
- --------	(0xffffffff & (-1 << ($(CONFIG_ARM64_VA_BITS) - 32))) \
- --------	+ (1 << ($(CONFIG_ARM64_VA_BITS) - 32 - $(KASAN_SHADOW_SCALE_SHIFT))) \
- --------	- (1 << (64 - 32 - $(KASAN_SHADOW_SCALE_SHIFT))) )) )
- --------
          export	TEXT_OFFSET GZFLAGS
          
 ---------core-y		+= arch/arm64/kernel/ arch/arm64/mm/
 ---------core-$(CONFIG_NET) += arch/arm64/net/
 ---------core-$(CONFIG_KVM) += arch/arm64/kvm/
 ---------core-$(CONFIG_XEN) += arch/arm64/xen/
 ---------core-$(CONFIG_CRYPTO) += arch/arm64/crypto/
 +++++++++core-y		+= arch/arm64/
          libs-y		:= arch/arm64/lib/ $(libs-y)
          core-$(CONFIG_EFI_STUB) += $(objtree)/drivers/firmware/efi/libstub/lib.a