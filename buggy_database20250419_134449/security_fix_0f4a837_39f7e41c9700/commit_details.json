{
  "hash": "0f4a837615ff925ba62648d280a861adf1582df7",
  "hash_short": "0f4a8376",
  "subject": "x86/bhi: Define SPEC_CTRL_BHI_DIS_S",
  "body": "Newer processors supports a hardware control BHI_DIS_S to mitigate\nBranch History Injection (BHI). Setting BHI_DIS_S protects the kernel\nfrom userspace BHI attacks without having to manually overwrite the\nbranch history.\n\nDefine MSR_SPEC_CTRL bit BHI_DIS_S and its enumeration CPUID.BHI_CTRL.\nMitigation is enabled later.\n\nSigned-off-by: Daniel Sneddon <daniel.sneddon@linux.intel.com>\nSigned-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nSigned-off-by: Daniel Sneddon <daniel.sneddon@linux.intel.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Alexandre Chartre <alexandre.chartre@oracle.com>\nReviewed-by: Josh Poimboeuf <jpoimboe@kernel.org>",
  "full_message": "x86/bhi: Define SPEC_CTRL_BHI_DIS_S\n\nNewer processors supports a hardware control BHI_DIS_S to mitigate\nBranch History Injection (BHI). Setting BHI_DIS_S protects the kernel\nfrom userspace BHI attacks without having to manually overwrite the\nbranch history.\n\nDefine MSR_SPEC_CTRL bit BHI_DIS_S and its enumeration CPUID.BHI_CTRL.\nMitigation is enabled later.\n\nSigned-off-by: Daniel Sneddon <daniel.sneddon@linux.intel.com>\nSigned-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nSigned-off-by: Daniel Sneddon <daniel.sneddon@linux.intel.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Alexandre Chartre <alexandre.chartre@oracle.com>\nReviewed-by: Josh Poimboeuf <jpoimboe@kernel.org>",
  "author_name": "Daniel Sneddon",
  "author_email": "daniel.sneddon@linux.intel.com",
  "author_date": "Wed Mar 13 09:47:57 2024 -0700",
  "author_date_iso": "2024-03-13T09:47:57-07:00",
  "committer_name": "Thomas Gleixner",
  "committer_email": "tglx@linutronix.de",
  "committer_date": "Mon Apr 8 19:27:05 2024 +0200",
  "committer_date_iso": "2024-04-08T19:27:05+02:00",
  "files_changed": [
    "arch/x86/include/asm/cpufeatures.h",
    "arch/x86/include/asm/msr-index.h",
    "arch/x86/kernel/cpu/scattered.c",
    "arch/x86/kvm/reverse_cpuid.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/x86/include/asm/cpufeatures.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/msr-index.h",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/cpu/scattered.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/reverse_cpuid.h",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 8,
  "total_deletions": 2,
  "total_changes": 10,
  "parents": [
    "7390db8aea0d64e9deb28b8e1ce716f5020c7ee5"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/cpufeatures.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/msr-index.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/scattered.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/reverse_cpuid.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}