{
  "hash": "dea0d5a2fde62237ff14c41cb05dd151cebf84c0",
  "hash_short": "dea0d5a2",
  "subject": "KVM: x86: Exempt pending triple fault from event injection sanity check",
  "body": "Exempt pending triple faults, a.k.a. KVM_REQ_TRIPLE_FAULT, when asserting\nthat KVM didn't attempt to queue a new exception during event injection.\nKVM needs to emulate the injection itself when emulating Real Mode due to\nlack of unrestricted guest support (VMX) and will queue a triple fault if\nthat emulation fails.\n\nIdeally the assertion would more precisely filter out the emulated Real\nMode triple fault case, but rmode.vm86_active is buried in vcpu_vmx and\ncan't be queried without a new kvm_x86_ops.  And unlike \"regular\"\nexceptions, triple fault cannot put the vCPU into an infinite loop; the\ntriple fault will force either an exit to userspace or a nested VM-Exit,\nand triple fault after nested VM-Exit will force an exit to userspace.\nI.e. there is no functional issue, so just suppress the warning for\ntriple faults.\n\nOpportunistically convert the warning to a one-time thing, when it\nfires, it fires _a lot_, and is usually user triggerable, i.e. can be\nused to spam the kernel log.\n\nFixes: 7055fb113116 (\"KVM: x86: Treat pending TRIPLE_FAULT requests as pending exceptions\")\nReported-by: kernel test robot <yujie.liu@intel.com>\nLink: https://lore.kernel.org/r/202209301338.aca913c3-yujie.liu@intel.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220930230008.1636044-1-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: x86: Exempt pending triple fault from event injection sanity check\n\nExempt pending triple faults, a.k.a. KVM_REQ_TRIPLE_FAULT, when asserting\nthat KVM didn't attempt to queue a new exception during event injection.\nKVM needs to emulate the injection itself when emulating Real Mode due to\nlack of unrestricted guest support (VMX) and will queue a triple fault if\nthat emulation fails.\n\nIdeally the assertion would more precisely filter out the emulated Real\nMode triple fault case, but rmode.vm86_active is buried in vcpu_vmx and\ncan't be queried without a new kvm_x86_ops.  And unlike \"regular\"\nexceptions, triple fault cannot put the vCPU into an infinite loop; the\ntriple fault will force either an exit to userspace or a nested VM-Exit,\nand triple fault after nested VM-Exit will force an exit to userspace.\nI.e. there is no functional issue, so just suppress the warning for\ntriple faults.\n\nOpportunistically convert the warning to a one-time thing, when it\nfires, it fires _a lot_, and is usually user triggerable, i.e. can be\nused to spam the kernel log.\n\nFixes: 7055fb113116 (\"KVM: x86: Treat pending TRIPLE_FAULT requests as pending exceptions\")\nReported-by: kernel test robot <yujie.liu@intel.com>\nLink: https://lore.kernel.org/r/202209301338.aca913c3-yujie.liu@intel.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220930230008.1636044-1-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Fri Sep 30 23:00:08 2022 +0000",
  "author_date_iso": "2022-09-30T23:00:08+00:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Thu Oct 27 05:22:01 2022 -0400",
  "committer_date_iso": "2022-10-27T05:22:01-04:00",
  "files_changed": [
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 14,
      "deletions": 1
    }
  ],
  "total_insertions": 14,
  "total_deletions": 1,
  "total_changes": 15,
  "parents": [
    "44fc40a015af7511408f7b447e2c0c2da056fd95"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}