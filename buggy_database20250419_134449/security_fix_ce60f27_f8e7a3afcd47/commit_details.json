{
  "hash": "ce60f27bb62dfeb1bf827350520f34abc84e0933",
  "hash_short": "ce60f27b",
  "subject": "mm: abstract moving to the next PFN",
  "body": "In order to fix the L1TF vulnerability, x86 can invert the PTE bits for\nPROT_NONE VMAs, which means we cannot move from one PTE to the next by\nadding 1 to the PFN field of the PTE.  This results in the BUG reported at\n[1].\n\nAbstract advancing the PTE to the next PFN through a pte_next_pfn()\nfunction/macro.\n\nLink: https://lkml.kernel.org/r/20230920040958.866520-1-willy@infradead.org\nFixes: bcc6cc832573 (\"mm: add default definition of set_ptes()\")\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReported-by: syzbot+55cc72f8cc3a549119df@syzkaller.appspotmail.com\nCloses: https://lkml.kernel.org/r/000000000000d099fa0604f03351@google.com [1]\nReviewed-by: Yin Fengwei <fengwei.yin@intel.com>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: David Hildenbrand <david@redhat.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "full_message": "mm: abstract moving to the next PFN\n\nIn order to fix the L1TF vulnerability, x86 can invert the PTE bits for\nPROT_NONE VMAs, which means we cannot move from one PTE to the next by\nadding 1 to the PFN field of the PTE.  This results in the BUG reported at\n[1].\n\nAbstract advancing the PTE to the next PFN through a pte_next_pfn()\nfunction/macro.\n\nLink: https://lkml.kernel.org/r/20230920040958.866520-1-willy@infradead.org\nFixes: bcc6cc832573 (\"mm: add default definition of set_ptes()\")\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReported-by: syzbot+55cc72f8cc3a549119df@syzkaller.appspotmail.com\nCloses: https://lkml.kernel.org/r/000000000000d099fa0604f03351@google.com [1]\nReviewed-by: Yin Fengwei <fengwei.yin@intel.com>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: David Hildenbrand <david@redhat.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "author_name": "Matthew Wilcox (Oracle)",
  "author_email": "willy@infradead.org",
  "author_date": "Wed Sep 20 05:09:58 2023 +0100",
  "author_date_iso": "2023-09-20T05:09:58+01:00",
  "committer_name": "Andrew Morton",
  "committer_email": "akpm@linux-foundation.org",
  "committer_date": "Fri Sep 29 17:20:46 2023 -0700",
  "committer_date_iso": "2023-09-29T17:20:46-07:00",
  "files_changed": [
    "arch/x86/include/asm/pgtable.h",
    "include/linux/pgtable.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/include/asm/pgtable.h",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "include/linux/pgtable.h",
      "insertions": 9,
      "deletions": 1
    }
  ],
  "total_insertions": 17,
  "total_deletions": 1,
  "total_changes": 18,
  "parents": [
    "a501a0703044f00180d7697b32cacd7ff46d02d8"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/pgtable.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/pgtable.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}