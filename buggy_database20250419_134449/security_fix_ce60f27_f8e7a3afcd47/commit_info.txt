Commit Hash: ce60f27bb62dfeb1bf827350520f34abc84e0933
Subject: mm: abstract moving to the next PFN


Security Keywords:
- vulnerability

Full commit message:
mm: abstract moving to the next PFN

In order to fix the L1TF vulnerability, x86 can invert the PTE bits for
PROT_NONE VMAs, which means we cannot move from one PTE to the next by
adding 1 to the PFN field of the PTE.  This results in the BUG reported at
[1].

Abstract advancing the PTE to the next PFN through a pte_next_pfn()
function/macro.

Link: https://lkml.kernel.org/r/20230920040958.866520-1-willy@infradead.org
Fixes: bcc6cc832573 ("mm: add default definition of set_ptes()")
Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
Reported-by: syzbot+55cc72f8cc3a549119df@syzkaller.appspotmail.com
Closes: https://lkml.kernel.org/r/000000000000d099fa0604f03351@google.com [1]
Reviewed-by: Yin Fengwei <fengwei.yin@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

Metadata:
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Author Date: Wed Sep 20 05:09:58 2023 +0100
Committer: Andrew Morton <akpm@linux-foundation.org>
Commit Date: Fri Sep 29 17:20:46 2023 -0700

Files Changed: 2
Lines Added: 17
Lines Removed: 1
Total Changes: 18
