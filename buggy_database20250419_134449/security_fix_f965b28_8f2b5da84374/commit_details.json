{
  "hash": "f965b281fd872b2e18bd82dd97730db9834d0750",
  "hash_short": "f965b281",
  "subject": "nvmet-auth: complete a request only after freeing the dhchap pointers",
  "body": "It may happen that the work to destroy a queue\n(for example nvmet_tcp_release_queue_work()) is started while\nan auth-send or auth-receive command is still completing.\n\nnvmet_sq_destroy() will block, waiting for all the references\nto the sq to be dropped, the last reference is then\ndropped when nvmet_req_complete() is called.\n\nWhen this happens, both nvmet_sq_destroy() and\nnvmet_execute_auth_send()/_receive() will free the dhchap pointers by\ncalling nvmet_auth_sq_free().\nSince there isn't any lock, the two threads may race against each other,\ncausing double frees and memory corruptions, as reported by KASAN.\n\nReproduced by stress blktests nvme/041 nvme/042 nvme/043\n\n nvme nvme2: qid 0: authenticated with hash hmac(sha512) dhgroup ffdhe4096\n ==================================================================\n BUG: KASAN: double-free in kfree+0xec/0x4b0\n\n Call Trace:\n  <TASK>\n  kfree+0xec/0x4b0\n  nvmet_auth_sq_free+0xe1/0x160 [nvmet]\n  nvmet_execute_auth_send+0x482/0x16d0 [nvmet]\n  process_one_work+0x8e5/0x1510\n\n Allocated by task 191846:\n  __kasan_kmalloc+0x81/0xa0\n  nvmet_auth_ctrl_sesskey+0xf6/0x380 [nvmet]\n  nvmet_auth_reply+0x119/0x990 [nvmet]\n\n Freed by task 143270:\n  kfree+0xec/0x4b0\n  nvmet_auth_sq_free+0xe1/0x160 [nvmet]\n  process_one_work+0x8e5/0x1510\n\nFix this bug by calling nvmet_req_complete() only after freeing the\npointers, so we will prevent the race by holding the sq reference.\n\nV2: remove redundant code\n\nFixes: db1312dd9548 (\"nvmet: implement basic In-Band Authentication\")\nSigned-off-by: Maurizio Lombardi <mlombard@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Keith Busch <kbusch@kernel.org>",
  "full_message": "nvmet-auth: complete a request only after freeing the dhchap pointers\n\nIt may happen that the work to destroy a queue\n(for example nvmet_tcp_release_queue_work()) is started while\nan auth-send or auth-receive command is still completing.\n\nnvmet_sq_destroy() will block, waiting for all the references\nto the sq to be dropped, the last reference is then\ndropped when nvmet_req_complete() is called.\n\nWhen this happens, both nvmet_sq_destroy() and\nnvmet_execute_auth_send()/_receive() will free the dhchap pointers by\ncalling nvmet_auth_sq_free().\nSince there isn't any lock, the two threads may race against each other,\ncausing double frees and memory corruptions, as reported by KASAN.\n\nReproduced by stress blktests nvme/041 nvme/042 nvme/043\n\n nvme nvme2: qid 0: authenticated with hash hmac(sha512) dhgroup ffdhe4096\n ==================================================================\n BUG: KASAN: double-free in kfree+0xec/0x4b0\n\n Call Trace:\n  <TASK>\n  kfree+0xec/0x4b0\n  nvmet_auth_sq_free+0xe1/0x160 [nvmet]\n  nvmet_execute_auth_send+0x482/0x16d0 [nvmet]\n  process_one_work+0x8e5/0x1510\n\n Allocated by task 191846:\n  __kasan_kmalloc+0x81/0xa0\n  nvmet_auth_ctrl_sesskey+0xf6/0x380 [nvmet]\n  nvmet_auth_reply+0x119/0x990 [nvmet]\n\n Freed by task 143270:\n  kfree+0xec/0x4b0\n  nvmet_auth_sq_free+0xe1/0x160 [nvmet]\n  process_one_work+0x8e5/0x1510\n\nFix this bug by calling nvmet_req_complete() only after freeing the\npointers, so we will prevent the race by holding the sq reference.\n\nV2: remove redundant code\n\nFixes: db1312dd9548 (\"nvmet: implement basic In-Band Authentication\")\nSigned-off-by: Maurizio Lombardi <mlombard@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Keith Busch <kbusch@kernel.org>",
  "author_name": "Maurizio Lombardi",
  "author_email": "mlombard@redhat.com",
  "author_date": "Tue Oct 17 10:28:45 2023 +0200",
  "author_date_iso": "2023-10-17T10:28:45+02:00",
  "committer_name": "Keith Busch",
  "committer_email": "kbusch@kernel.org",
  "committer_date": "Wed Oct 18 14:08:39 2023 -0700",
  "committer_date_iso": "2023-10-18T14:08:39-07:00",
  "files_changed": [
    "drivers/nvme/target/fabrics-cmd-auth.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/nvme/target/fabrics-cmd-auth.c",
      "insertions": 6,
      "deletions": 3
    }
  ],
  "total_insertions": 6,
  "total_deletions": 3,
  "total_changes": 9,
  "parents": [
    "2b32c76e2b0154b98b9322ae7546b8156cd703e6"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "auth"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/nvme/target/fabrics-cmd-auth.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}