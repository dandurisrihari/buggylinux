commit 0e33cf955f07e3991e45109cb3e29fbc9ca51d06
Merge: 855684c7d938 2a0180129d72
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 12 09:31:39 2024 -0700

    Merge tag 'rfds-for-linus-2024-03-11' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 RFDS mitigation from Dave Hansen:
     "RFDS is a CPU vulnerability that may allow a malicious userspace to
      infer stale register values from kernel space. Kernel registers can
      have all kinds of secrets in them so the mitigation is basically to
      wait until the kernel is about to return to userspace and has user
      values in the registers. At that point there is little chance of
      kernel secrets ending up in the registers and the microarchitectural
      state can be cleared.
    
      This leverages some recent robustness fixes for the existing MDS
      vulnerability. Both MDS and RFDS use the VERW instruction for
      mitigation"
    
    * tag 'rfds-for-linus-2024-03-11' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      KVM/x86: Export RFDS_NO and RFDS_CLEAR to guests
      x86/rfds: Mitigate Register File Data Sampling (RFDS)
      Documentation/hw-vuln: Add documentation for RFDS
      x86/mmio: Disable KVM mitigation when X86_FEATURE_CLEAR_CPU_BUF is set

diff --cc arch/x86/kernel/cpu/bugs.c
index 4dd00066c12a,01ac18f56147..e7ba936d798b
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@@ -2846,9 -2922,9 +2923,14 @@@ ssize_t cpu_show_gds(struct device *dev
  {
  	return cpu_show_common(dev, attr, buf, X86_BUG_GDS);
  }
+ 
+ ssize_t cpu_show_reg_file_data_sampling(struct device *dev, struct device_attribute *attr, char *buf)
+ {
+ 	return cpu_show_common(dev, attr, buf, X86_BUG_RFDS);
+ }
  #endif
 +
 +void __warn_thunk(void)
 +{
 +	WARN_ONCE(1, "Unpatched return thunk in use. This should not happen!\n");
 +}