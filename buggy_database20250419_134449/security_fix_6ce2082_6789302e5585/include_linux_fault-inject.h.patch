commit 6ce2082fd3a25d5a8c756120959237cace0379f1
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Tue Aug 13 15:12:35 2024 +0300

    fault-inject: improve build for CONFIG_FAULT_INJECTION=n
    
    The fault-inject.h users across the kernel need to add a lot of #ifdef
    CONFIG_FAULT_INJECTION to cater for shortcomings in the header.  Make
    fault-inject.h self-contained for CONFIG_FAULT_INJECTION=n, and add stubs
    for DECLARE_FAULT_ATTR(), setup_fault_attr(), should_fail_ex(), and
    should_fail() to allow removal of conditional compilation.
    
    [akpm@linux-foundation.org: repair fallout from no longer including debugfs.h into fault-inject.h]
    [akpm@linux-foundation.org: fix drivers/misc/xilinx_tmr_inject.c]
    [akpm@linux-foundation.org: Add debugfs.h inclusion to more files, per Stephen]
    Link: https://lkml.kernel.org/r/20240813121237.2382534-1-jani.nikula@intel.com
    Fixes: 6ff1cb355e62 ("[PATCH] fault-injection capabilities infrastructure")
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Cc: Akinobu Mita <akinobu.mita@gmail.com>
    Cc: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Cc: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Cc: Himal Prasad Ghimiray <himal.prasad.ghimiray@intel.com>
    Cc: Lucas De Marchi <lucas.demarchi@intel.com>
    Cc: Rob Clark <robdclark@gmail.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Thomas Hellstr√∂m <thomas.hellstrom@linux.intel.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

diff --git a/include/linux/fault-inject.h b/include/linux/fault-inject.h
index 354413950d34..8c829d28dcf3 100644
--- a/include/linux/fault-inject.h
+++ b/include/linux/fault-inject.h
@@ -2,13 +2,17 @@
 #ifndef _LINUX_FAULT_INJECT_H
 #define _LINUX_FAULT_INJECT_H
 
+#include <linux/err.h>
+#include <linux/types.h>
+
+struct dentry;
+struct kmem_cache;
+
 #ifdef CONFIG_FAULT_INJECTION
 
-#include <linux/types.h>
-#include <linux/debugfs.h>
+#include <linux/atomic.h>
 #include <linux/configfs.h>
 #include <linux/ratelimit.h>
-#include <linux/atomic.h>
 
 /*
  * For explanation of the elements of this struct, see
@@ -51,6 +55,28 @@ int setup_fault_attr(struct fault_attr *attr, char *str);
 bool should_fail_ex(struct fault_attr *attr, ssize_t size, int flags);
 bool should_fail(struct fault_attr *attr, ssize_t size);
 
+#else /* CONFIG_FAULT_INJECTION */
+
+struct fault_attr {
+};
+
+#define DECLARE_FAULT_ATTR(name) struct fault_attr name = {}
+
+static inline int setup_fault_attr(struct fault_attr *attr, char *str)
+{
+	return 0; /* Note: 0 means error for __setup() handlers! */
+}
+static inline bool should_fail_ex(struct fault_attr *attr, ssize_t size, int flags)
+{
+	return false;
+}
+static inline bool should_fail(struct fault_attr *attr, ssize_t size)
+{
+	return false;
+}
+
+#endif /* CONFIG_FAULT_INJECTION */
+
 #ifdef CONFIG_FAULT_INJECTION_DEBUG_FS
 
 struct dentry *fault_create_debugfs_attr(const char *name,
@@ -87,10 +113,6 @@ static inline void fault_config_init(struct fault_config *config,
 
 #endif /* CONFIG_FAULT_INJECTION_CONFIGFS */
 
-#endif /* CONFIG_FAULT_INJECTION */
-
-struct kmem_cache;
-
 #ifdef CONFIG_FAIL_PAGE_ALLOC
 bool should_fail_alloc_page(gfp_t gfp_mask, unsigned int order);
 #else