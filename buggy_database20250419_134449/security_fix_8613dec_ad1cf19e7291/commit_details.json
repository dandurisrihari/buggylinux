{
  "hash": "8613dec04e746f698418e9b8344acf19efff4997",
  "hash_short": "8613dec0",
  "subject": "Merge tag 'nvme-6.2-2022-11-29' of git://git.infradead.org/nvme into for-6.2/block",
  "body": "Pull NVMe updates from Christoph:\n\n\"nvme updates for Linux 6.2\n\n - support some passthrough commands without CAP_SYS_ADMIN\n   (Kanchan Joshi)\n - refactor PCIe probing and reset (Christoph Hellwig)\n - various fabrics authentication fixes and improvements (Sagi Grimberg)\n - avoid fallback to sequential scan due to transient issues\n   (Uday Shankar)\n - implement support for the DEAC bit in Write Zeroes (Christoph Hellwig)\n - allow overriding the IEEE OUI and firmware revision in configfs for\n   nvmet (Aleksandr Miloserdov)\n - force reconnect when number of queue changes in nvmet (Daniel Wagner)\n - minor fixes and improvements (Uros Bizjak, Joel Granados,\n   Sagi Grimberg, Christoph Hellwig, Christophe JAILLET)\"\n\n* tag 'nvme-6.2-2022-11-29' of git://git.infradead.org/nvme: (45 commits)\n  nvmet: expose firmware revision to configfs\n  nvmet: expose IEEE OUI to configfs\n  nvme: rename the queue quiescing helpers\n  nvmet: fix a memory leak in nvmet_auth_set_key\n  nvme: return err on nvme_init_non_mdts_limits fail\n  nvme: avoid fallback to sequential scan due to transient issues\n  nvme-rdma: stop auth work after tearing down queues in error recovery\n  nvme-tcp: stop auth work after tearing down queues in error recovery\n  nvme-auth: have dhchap_auth_work wait for queues auth to complete\n  nvme-auth: remove redundant auth_work flush\n  nvme-auth: convert dhchap_auth_list to an array\n  nvme-auth: check chap ctrl_key once constructed\n  nvme-auth: no need to reset chap contexts on re-authentication\n  nvme-auth: remove redundant deallocations\n  nvme-auth: clear sensitive info right after authentication completes\n  nvme-auth: guarantee dhchap buffers under memory pressure\n  nvme-auth: don't keep long lived 4k dhchap buffer\n  nvme-auth: remove redundant if statement\n  nvme-auth: don't override ctrl keys before validation\n  nvme-auth: don't ignore key generation failures when initializing ctrl keys\n  ...",
  "full_message": "Merge tag 'nvme-6.2-2022-11-29' of git://git.infradead.org/nvme into for-6.2/block\n\nPull NVMe updates from Christoph:\n\n\"nvme updates for Linux 6.2\n\n - support some passthrough commands without CAP_SYS_ADMIN\n   (Kanchan Joshi)\n - refactor PCIe probing and reset (Christoph Hellwig)\n - various fabrics authentication fixes and improvements (Sagi Grimberg)\n - avoid fallback to sequential scan due to transient issues\n   (Uday Shankar)\n - implement support for the DEAC bit in Write Zeroes (Christoph Hellwig)\n - allow overriding the IEEE OUI and firmware revision in configfs for\n   nvmet (Aleksandr Miloserdov)\n - force reconnect when number of queue changes in nvmet (Daniel Wagner)\n - minor fixes and improvements (Uros Bizjak, Joel Granados,\n   Sagi Grimberg, Christoph Hellwig, Christophe JAILLET)\"\n\n* tag 'nvme-6.2-2022-11-29' of git://git.infradead.org/nvme: (45 commits)\n  nvmet: expose firmware revision to configfs\n  nvmet: expose IEEE OUI to configfs\n  nvme: rename the queue quiescing helpers\n  nvmet: fix a memory leak in nvmet_auth_set_key\n  nvme: return err on nvme_init_non_mdts_limits fail\n  nvme: avoid fallback to sequential scan due to transient issues\n  nvme-rdma: stop auth work after tearing down queues in error recovery\n  nvme-tcp: stop auth work after tearing down queues in error recovery\n  nvme-auth: have dhchap_auth_work wait for queues auth to complete\n  nvme-auth: remove redundant auth_work flush\n  nvme-auth: convert dhchap_auth_list to an array\n  nvme-auth: check chap ctrl_key once constructed\n  nvme-auth: no need to reset chap contexts on re-authentication\n  nvme-auth: remove redundant deallocations\n  nvme-auth: clear sensitive info right after authentication completes\n  nvme-auth: guarantee dhchap buffers under memory pressure\n  nvme-auth: don't keep long lived 4k dhchap buffer\n  nvme-auth: remove redundant if statement\n  nvme-auth: don't override ctrl keys before validation\n  nvme-auth: don't ignore key generation failures when initializing ctrl keys\n  ...",
  "author_name": "Jens Axboe",
  "author_email": "axboe@kernel.dk",
  "author_date": "Tue Nov 29 06:54:57 2022 -0700",
  "author_date_iso": "2022-11-29T06:54:57-07:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Tue Nov 29 06:54:57 2022 -0700",
  "committer_date_iso": "2022-11-29T06:54:57-07:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "drivers/nvme/host/apple.c",
      "insertions": 7,
      "deletions": 7
    },
    {
      "file": "drivers/nvme/host/auth.c",
      "insertions": 136,
      "deletions": 122
    },
    {
      "file": "drivers/nvme/host/core.c",
      "insertions": 93,
      "deletions": 32
    },
    {
      "file": "drivers/nvme/host/fc.c",
      "insertions": 18,
      "deletions": 17
    },
    {
      "file": "drivers/nvme/host/ioctl.c",
      "insertions": 83,
      "deletions": 33
    },
    {
      "file": "drivers/nvme/host/nvme.h",
      "insertions": 23,
      "deletions": 12
    },
    {
      "file": "drivers/nvme/host/pci.c",
      "insertions": 205,
      "deletions": 218
    },
    {
      "file": "drivers/nvme/host/rdma.c",
      "insertions": 15,
      "deletions": 15
    },
    {
      "file": "drivers/nvme/host/tcp.c",
      "insertions": 16,
      "deletions": 16
    },
    {
      "file": "drivers/nvme/target/admin-cmd.c",
      "insertions": 3,
      "deletions": 6
    },
    {
      "file": "drivers/nvme/target/auth.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "drivers/nvme/target/configfs.c",
      "insertions": 120,
      "deletions": 1
    },
    {
      "file": "drivers/nvme/target/core.c",
      "insertions": 31,
      "deletions": 13
    },
    {
      "file": "drivers/nvme/target/io-cmd-file.c",
      "insertions": 3,
      "deletions": 13
    },
    {
      "file": "drivers/nvme/target/loop.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "drivers/nvme/target/nvmet.h",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "include/linux/nvme.h",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 766,
  "total_deletions": 510,
  "total_changes": 1276,
  "parents": [
    "3692fec8bb476e8583e559ff5783a6adef306cf2",
    "68c5444c317208f5a114f671140373f47f0a2cf6"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": []
}