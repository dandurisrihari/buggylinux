{
  "hash": "203b1152d18c04823f73b843eb3b0ad646e4dbb2",
  "hash_short": "203b1152",
  "subject": "arm64/crash_core: Export KERNELPACMASK in vmcoreinfo",
  "body": "Recently arm64 linux kernel added support for Armv8.3-A Pointer\nAuthentication feature. If this feature is enabled in the kernel and the\nhardware supports address authentication then the return addresses are\nsigned and stored in the stack to prevent ROP kind of attack. Kdump tool\nwill now dump the kernel with signed lr values in the stack.\n\nAny user analysis tool for this kernel dump may need the kernel pac mask\ninformation in vmcoreinfo to generate the correct return address for\nstacktrace purpose as well as to resolve the symbol name.\n\nThis patch is similar to commit ec6e822d1a22d0eef (\"arm64: expose user PAC\nbit positions via ptrace\") which exposes pac mask information via ptrace\ninterfaces.\n\nThe config gaurd ARM64_PTR_AUTH is removed form asm/compiler.h so macros\nlike ptrauth_kernel_pac_mask can be used ungaurded. This config protection\nis confusing as the pointer authentication feature may be missing at\nruntime even though this config is present.\n\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Will Deacon <will@kernel.org>\nCc: Mark Rutland <mark.rutland@arm.com>\nLink: https://lore.kernel.org/r/1589202116-18265-1-git-send-email-amit.kachhap@arm.com\nSigned-off-by: Will Deacon <will@kernel.org>",
  "full_message": "arm64/crash_core: Export KERNELPACMASK in vmcoreinfo\n\nRecently arm64 linux kernel added support for Armv8.3-A Pointer\nAuthentication feature. If this feature is enabled in the kernel and the\nhardware supports address authentication then the return addresses are\nsigned and stored in the stack to prevent ROP kind of attack. Kdump tool\nwill now dump the kernel with signed lr values in the stack.\n\nAny user analysis tool for this kernel dump may need the kernel pac mask\ninformation in vmcoreinfo to generate the correct return address for\nstacktrace purpose as well as to resolve the symbol name.\n\nThis patch is similar to commit ec6e822d1a22d0eef (\"arm64: expose user PAC\nbit positions via ptrace\") which exposes pac mask information via ptrace\ninterfaces.\n\nThe config gaurd ARM64_PTR_AUTH is removed form asm/compiler.h so macros\nlike ptrauth_kernel_pac_mask can be used ungaurded. This config protection\nis confusing as the pointer authentication feature may be missing at\nruntime even though this config is present.\n\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Will Deacon <will@kernel.org>\nCc: Mark Rutland <mark.rutland@arm.com>\nLink: https://lore.kernel.org/r/1589202116-18265-1-git-send-email-amit.kachhap@arm.com\nSigned-off-by: Will Deacon <will@kernel.org>",
  "author_name": "Amit Daniel Kachhap",
  "author_email": "amit.kachhap@arm.com",
  "author_date": "Mon May 11 18:31:55 2020 +0530",
  "author_date_iso": "2020-05-11T18:31:55+05:30",
  "committer_name": "Will Deacon",
  "committer_email": "will@kernel.org",
  "committer_date": "Mon May 11 14:29:10 2020 +0100",
  "committer_date_iso": "2020-05-11T14:29:10+01:00",
  "files_changed": [
    "arch/arm64/include/asm/compiler.h",
    "arch/arm64/kernel/crash_core.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm64/include/asm/compiler.h",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "arch/arm64/kernel/crash_core.c",
      "insertions": 4,
      "deletions": 0
    }
  ],
  "total_insertions": 4,
  "total_deletions": 4,
  "total_changes": 8,
  "parents": [
    "62a679cb2825488387f458c16dff32be41eb3d32"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/compiler.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/crash_core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}