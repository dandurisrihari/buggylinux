commit e8b7db38449ac5b950a3f00519171c4be3e226ff
Author: Andres Beltran <lkmlabelt@gmail.com>
Date:   Mon Nov 9 11:04:00 2020 +0100

    Drivers: hv: vmbus: Add vmbus_requestor data structure for VMBus hardening
    
    Currently, VMbus drivers use pointers into guest memory as request IDs
    for interactions with Hyper-V. To be more robust in the face of errors
    or malicious behavior from a compromised Hyper-V, avoid exposing
    guest memory addresses to Hyper-V. Also avoid Hyper-V giving back a
    bad request ID that is then treated as the address of a guest data
    structure with no validation. Instead, encapsulate these memory
    addresses and provide small integers as request IDs.
    
    Signed-off-by: Andres Beltran <lkmlabelt@gmail.com>
    Co-developed-by: Andrea Parri (Microsoft) <parri.andrea@gmail.com>
    Signed-off-by: Andrea Parri (Microsoft) <parri.andrea@gmail.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Reviewed-by: Wei Liu <wei.liu@kernel.org>
    Link: https://lore.kernel.org/r/20201109100402.8946-2-parri.andrea@gmail.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>

diff --git a/drivers/hv/hyperv_vmbus.h b/drivers/hv/hyperv_vmbus.h
index 40e2b9f91163..02f3e8988836 100644
--- a/drivers/hv/hyperv_vmbus.h
+++ b/drivers/hv/hyperv_vmbus.h
@@ -179,7 +179,8 @@ int hv_ringbuffer_init(struct hv_ring_buffer_info *ring_info,
 void hv_ringbuffer_cleanup(struct hv_ring_buffer_info *ring_info);
 
 int hv_ringbuffer_write(struct vmbus_channel *channel,
-			const struct kvec *kv_list, u32 kv_count);
+			const struct kvec *kv_list, u32 kv_count,
+			u64 requestid);
 
 int hv_ringbuffer_read(struct vmbus_channel *channel,
 		       void *buffer, u32 buflen, u32 *buffer_actual_len,