commit 9a47c1ef5a95d1fd229ee5e375985f809a9d8177
Author: Veerendranath Jakkam <quic_vjakkam@quicinc.com>
Date:   Mon Jan 16 18:20:58 2023 +0530

    wifi: cfg80211: Authentication offload to user space for MLO connection in STA mode
    
    Currently authentication request event interface doesn't have support to
    indicate the user space whether it should enable MLO or not during the
    authentication with the specified AP. But driver needs such capability
    since the connection is MLO or not decided by the driver in case of SME
    offload to the driver.
    
    Add support for driver to indicate MLD address of the AP in
    authentication offload request to inform user space to enable MLO during
    authentication process. Driver shall look at NL80211_ATTR_MLO_SUPPORT
    flag capability in NL80211_CMD_CONNECT to know whether the user space
    supports enabling MLO during the authentication offload.
    
    User space should enable MLO during the authentication only when it
    receives the AP MLD address in authentication offload request. User
    space shouldn't enable MLO if the authentication offload request doesn't
    indicate the AP MLD address even if the AP is MLO capable.
    
    When MLO is enabled, user space should use the MAC address of the
    interface (on which driver sent request) as self MLD address. User space
    and driver to use MLD addresses in RA, TA and BSSID fields of the frames
    between them, and driver translates the MLD addresses to/from link
    addresses based on the link chosen for the authentication.
    
    Signed-off-by: Veerendranath Jakkam <quic_vjakkam@quicinc.com>
    Link: https://lore.kernel.org/r/20230116125058.1604843-1-quic_vjakkam@quicinc.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 64cf6110ce9d..a0858d747e45 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -19720,7 +19720,9 @@ int cfg80211_external_auth_request(struct net_device *dev,
 			params->action) ||
 	    nla_put(msg, NL80211_ATTR_BSSID, ETH_ALEN, params->bssid) ||
 	    nla_put(msg, NL80211_ATTR_SSID, params->ssid.ssid_len,
-		    params->ssid.ssid))
+		    params->ssid.ssid) ||
+	    (!is_zero_ether_addr(params->mld_addr) &&
+	     nla_put(msg, NL80211_ATTR_MLD_ADDR, ETH_ALEN, params->mld_addr)))
 		goto nla_put_failure;
 
 	genlmsg_end(msg, hdr);