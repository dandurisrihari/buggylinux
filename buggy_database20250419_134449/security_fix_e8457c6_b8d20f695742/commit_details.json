{
  "hash": "e8457c67a4ec1268ec616bd8be1d9f1cc20f1493",
  "hash_short": "e8457c67",
  "subject": "KVM: nVMX: Fix conditions for interrupt injection",
  "body": "If we are entering guest mode, we do not want L0 to interrupt this\nvmentry with all its side effects on the vmcs. Therefore, injection\nshall be disallowed during L1->L2 transitions, as in the previous\nversion. However, this check is conceptually independent of\nnested_exit_on_intr, so decouple it.\n\nIf L1 traps external interrupts, we can kick the guest from L2 to L1,\nalso just like the previous code worked. But we no longer need to\nconsider L1's idt_vectoring_info_field. It will always be empty at this\npoint. Instead, if L2 has pending events, those are now found in the\narchitectural queues and will, thus, prevent vmx_interrupt_allowed from\nbeing called at all.\n\nSigned-off-by: Jan Kiszka <jan.kiszka@siemens.com>\nSigned-off-by: Gleb Natapov <gleb@redhat.com>",
  "full_message": "KVM: nVMX: Fix conditions for interrupt injection\n\nIf we are entering guest mode, we do not want L0 to interrupt this\nvmentry with all its side effects on the vmcs. Therefore, injection\nshall be disallowed during L1->L2 transitions, as in the previous\nversion. However, this check is conceptually independent of\nnested_exit_on_intr, so decouple it.\n\nIf L1 traps external interrupts, we can kick the guest from L2 to L1,\nalso just like the previous code worked. But we no longer need to\nconsider L1's idt_vectoring_info_field. It will always be empty at this\npoint. Instead, if L2 has pending events, those are now found in the\narchitectural queues and will, thus, prevent vmx_interrupt_allowed from\nbeing called at all.\n\nSigned-off-by: Jan Kiszka <jan.kiszka@siemens.com>\nSigned-off-by: Gleb Natapov <gleb@redhat.com>",
  "author_name": "Jan Kiszka",
  "author_email": "jan.kiszka@siemens.com",
  "author_date": "Sun Apr 14 12:12:48 2013 +0200",
  "author_date_iso": "2013-04-14T12:12:48+02:00",
  "committer_name": "Gleb Natapov",
  "committer_email": "gleb@redhat.com",
  "committer_date": "Sun Apr 14 18:27:09 2013 +0300",
  "committer_date_iso": "2013-04-14T18:27:09+03:00",
  "files_changed": [
    "arch/x86/kvm/vmx.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/vmx.c",
      "insertions": 12,
      "deletions": 8
    }
  ],
  "total_insertions": 12,
  "total_deletions": 8,
  "total_changes": 20,
  "parents": [
    "5f3d5799974b89100268ba813cec8db7bd0693fb"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.10",
    "v3.10-rc1",
    "v3.10-rc2",
    "v3.10-rc3",
    "v3.10-rc4",
    "v3.10-rc5",
    "v3.10-rc6",
    "v3.10-rc7",
    "v3.11",
    "v3.11-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/vmx.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}