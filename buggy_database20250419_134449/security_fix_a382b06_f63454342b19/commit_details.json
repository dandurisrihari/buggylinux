{
  "hash": "a382b06d297e78ed7ac67afd0d8e8690406ac4ca",
  "hash_short": "a382b06d",
  "subject": "Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm",
  "body": "Pull KVM fixes from Paolo Bonzini:\n \"arm64:\n\n   - Fix a couple of bugs affecting pKVM's PSCI relay implementation\n     when running in the hVHE mode, resulting in the host being entered\n     with the MMU in an unknown state, and EL2 being in the wrong mode\n\n  x86:\n\n   - Set RFLAGS.IF in C code on SVM to get VMRUN out of the STI shadow\n\n   - Ensure DEBUGCTL is context switched on AMD to avoid running the\n     guest with the host's value, which can lead to unexpected bus lock\n     #DBs\n\n   - Suppress DEBUGCTL.BTF on AMD (to match Intel), as KVM doesn't\n     properly emulate BTF. KVM's lack of context switching has meant BTF\n     has always been broken to some extent\n\n   - Always save DR masks for SNP vCPUs if DebugSwap is *supported*, as\n     the guest can enable DebugSwap without KVM's knowledge\n\n   - Fix a bug in mmu_stress_tests where a vCPU could finish the \"writes\n     to RO memory\" phase without actually generating a write-protection\n     fault\n\n   - Fix a printf() goof in the SEV smoke test that causes build\n     failures with -Werror\n\n   - Explicitly zero EAX and EBX in CPUID.0x8000_0022 output when\n     PERFMON_V2 isn't supported by KVM\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: x86: Explicitly zero EAX and EBX when PERFMON_V2 isn't supported by KVM\n  KVM: selftests: Fix printf() format goof in SEV smoke test\n  KVM: selftests: Ensure all vCPUs hit -EFAULT during initial RO stage\n  KVM: SVM: Don't rely on DebugSwap to restore host DR0..DR3\n  KVM: SVM: Save host DR masks on CPUs with DebugSwap\n  KVM: arm64: Initialize SCTLR_EL1 in __kvm_hyp_init_cpu()\n  KVM: arm64: Initialize HCR_EL2.E2H early\n  KVM: x86: Snapshot the host's DEBUGCTL after disabling IRQs\n  KVM: SVM: Manually context switch DEBUGCTL if LBR virtualization is disabled\n  KVM: x86: Snapshot the host's DEBUGCTL in common x86\n  KVM: SVM: Suppress DEBUGCTL.BTF on AMD\n  KVM: SVM: Drop DEBUGCTL[5:2] from guest's effective value\n  KVM: selftests: Assert that STI blocking isn't set after event injection\n  KVM: SVM: Set RFLAGS.IF=1 in C code, to get VMRUN out of the STI shadow",
  "full_message": "Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull KVM fixes from Paolo Bonzini:\n \"arm64:\n\n   - Fix a couple of bugs affecting pKVM's PSCI relay implementation\n     when running in the hVHE mode, resulting in the host being entered\n     with the MMU in an unknown state, and EL2 being in the wrong mode\n\n  x86:\n\n   - Set RFLAGS.IF in C code on SVM to get VMRUN out of the STI shadow\n\n   - Ensure DEBUGCTL is context switched on AMD to avoid running the\n     guest with the host's value, which can lead to unexpected bus lock\n     #DBs\n\n   - Suppress DEBUGCTL.BTF on AMD (to match Intel), as KVM doesn't\n     properly emulate BTF. KVM's lack of context switching has meant BTF\n     has always been broken to some extent\n\n   - Always save DR masks for SNP vCPUs if DebugSwap is *supported*, as\n     the guest can enable DebugSwap without KVM's knowledge\n\n   - Fix a bug in mmu_stress_tests where a vCPU could finish the \"writes\n     to RO memory\" phase without actually generating a write-protection\n     fault\n\n   - Fix a printf() goof in the SEV smoke test that causes build\n     failures with -Werror\n\n   - Explicitly zero EAX and EBX in CPUID.0x8000_0022 output when\n     PERFMON_V2 isn't supported by KVM\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: x86: Explicitly zero EAX and EBX when PERFMON_V2 isn't supported by KVM\n  KVM: selftests: Fix printf() format goof in SEV smoke test\n  KVM: selftests: Ensure all vCPUs hit -EFAULT during initial RO stage\n  KVM: SVM: Don't rely on DebugSwap to restore host DR0..DR3\n  KVM: SVM: Save host DR masks on CPUs with DebugSwap\n  KVM: arm64: Initialize SCTLR_EL1 in __kvm_hyp_init_cpu()\n  KVM: arm64: Initialize HCR_EL2.E2H early\n  KVM: x86: Snapshot the host's DEBUGCTL after disabling IRQs\n  KVM: SVM: Manually context switch DEBUGCTL if LBR virtualization is disabled\n  KVM: x86: Snapshot the host's DEBUGCTL in common x86\n  KVM: SVM: Suppress DEBUGCTL.BTF on AMD\n  KVM: SVM: Drop DEBUGCTL[5:2] from guest's effective value\n  KVM: selftests: Assert that STI blocking isn't set after event injection\n  KVM: SVM: Set RFLAGS.IF=1 in C code, to get VMRUN out of the STI shadow",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Sun Mar 9 09:04:08 2025 -1000",
  "author_date_iso": "2025-03-09T09:04:08-10:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Sun Mar 9 09:04:08 2025 -1000",
  "committer_date_iso": "2025-03-09T09:04:08-10:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "arch/arm64/include/asm/el2_setup.h",
      "insertions": 26,
      "deletions": 5
    },
    {
      "file": "arch/arm64/kernel/head.S",
      "insertions": 3,
      "deletions": 19
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/hyp-init.S",
      "insertions": 7,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/psci-relay.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/cpuid.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/svm/sev.c",
      "insertions": 17,
      "deletions": 7
    },
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "insertions": 49,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/svm/svm.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/svm/vmenter.S",
      "insertions": 1,
      "deletions": 9
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "insertions": 2,
      "deletions": 6
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.h",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/mmu_stress_test.c",
      "insertions": 13,
      "deletions": 8
    },
    {
      "file": "tools/testing/selftests/kvm/x86/nested_exceptions_test.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/x86/sev_smoke_test.c",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 130,
  "total_deletions": 62,
  "total_changes": 192,
  "parents": [
    "1110ce6a1e34fe1fdc1bfe4ad52405f327d5083b",
    "ea9bd29a9c0d757b3384ae3e633e6bbaddf00725"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": []
}