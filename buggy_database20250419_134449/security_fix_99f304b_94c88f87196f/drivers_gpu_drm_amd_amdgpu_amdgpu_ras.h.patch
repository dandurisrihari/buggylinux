commit 99f304beb82a86713dc4bc1fd65b8dfda25b1f5e
Author: Dan Carpenter <error27@gmail.com>
Date:   Sat Jun 8 12:23:57 2019 +0300

    drm/amdgpu: Fix bounds checking in amdgpu_ras_is_supported()
    
    The "block" variable can be set by the user through debugfs, so it can
    be quite large which leads to shift wrapping here.  This means we report
    a "block" as supported when it's not, and that leads to array overflows
    later on.
    
    This bug is not really a security issue in real life, because debugfs is
    generally root only.
    
    Fixes: 36ea1bd2d084 ("drm/amdgpu: add debugfs ctrl node")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_ras.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_ras.h
index eaef5edefc34..24c6e5fcda86 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_ras.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_ras.h
@@ -172,6 +172,8 @@ static inline int amdgpu_ras_is_supported(struct amdgpu_device *adev,
 {
 	struct amdgpu_ras *ras = amdgpu_ras_get_context(adev);
 
+	if (block >= AMDGPU_RAS_BLOCK_COUNT)
+		return 0;
 	return ras && (ras->supported & (1 << block));
 }