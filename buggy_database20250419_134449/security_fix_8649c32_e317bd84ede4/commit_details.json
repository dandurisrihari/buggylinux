{
  "hash": "8649c322f75c96e7ced2fec201e123b2b073bf09",
  "hash_short": "8649c322",
  "subject": "pid: Implement pidfd_getfd syscall",
  "body": "This syscall allows for the retrieval of file descriptors from other\nprocesses, based on their pidfd. This is possible using ptrace, and\ninjection of parasitic code to inject code which leverages SCM_RIGHTS\nto move file descriptors between a tracee and a tracer. Unfortunately,\nptrace comes with a high cost of requiring the process to be stopped,\nand breaks debuggers. This does not require stopping the process under\nmanipulation.\n\nOne reason to use this is to allow sandboxers to take actions on file\ndescriptors on the behalf of another process. For example, this can be\ncombined with seccomp-bpf's user notification to do on-demand fd\nextraction and take privileged actions. One such privileged action\nis binding a socket to a privileged port.\n\n/* prototype */\n  /* flags is currently reserved and should be set to 0 */\n  int sys_pidfd_getfd(int pidfd, int fd, unsigned int flags);\n\n/* testing */\nRan self-test suite on x86_64\n\nSigned-off-by: Sargun Dhillon <sargun@sargun.me>\nAcked-by: Christian Brauner <christian.brauner@ubuntu.com>\nReviewed-by: Arnd Bergmann <arnd@arndb.de>\nLink: https://lore.kernel.org/r/20200107175927.4558-3-sargun@sargun.me\nSigned-off-by: Christian Brauner <christian.brauner@ubuntu.com>",
  "full_message": "pid: Implement pidfd_getfd syscall\n\nThis syscall allows for the retrieval of file descriptors from other\nprocesses, based on their pidfd. This is possible using ptrace, and\ninjection of parasitic code to inject code which leverages SCM_RIGHTS\nto move file descriptors between a tracee and a tracer. Unfortunately,\nptrace comes with a high cost of requiring the process to be stopped,\nand breaks debuggers. This does not require stopping the process under\nmanipulation.\n\nOne reason to use this is to allow sandboxers to take actions on file\ndescriptors on the behalf of another process. For example, this can be\ncombined with seccomp-bpf's user notification to do on-demand fd\nextraction and take privileged actions. One such privileged action\nis binding a socket to a privileged port.\n\n/* prototype */\n  /* flags is currently reserved and should be set to 0 */\n  int sys_pidfd_getfd(int pidfd, int fd, unsigned int flags);\n\n/* testing */\nRan self-test suite on x86_64\n\nSigned-off-by: Sargun Dhillon <sargun@sargun.me>\nAcked-by: Christian Brauner <christian.brauner@ubuntu.com>\nReviewed-by: Arnd Bergmann <arnd@arndb.de>\nLink: https://lore.kernel.org/r/20200107175927.4558-3-sargun@sargun.me\nSigned-off-by: Christian Brauner <christian.brauner@ubuntu.com>",
  "author_name": "Sargun Dhillon",
  "author_email": "sargun@sargun.me",
  "author_date": "Tue Jan 7 09:59:25 2020 -0800",
  "author_date_iso": "2020-01-07T09:59:25-08:00",
  "committer_name": "Christian Brauner",
  "committer_email": "christian.brauner@ubuntu.com",
  "committer_date": "Mon Jan 13 21:49:36 2020 +0100",
  "committer_date_iso": "2020-01-13T21:49:36+01:00",
  "files_changed": [
    "kernel/pid.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/pid.c",
      "insertions": 90,
      "deletions": 0
    }
  ],
  "total_insertions": 90,
  "total_deletions": 0,
  "total_changes": 90,
  "parents": [
    "5e876fb43dbf24c941a323139752bcb2f0a80da0"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.6",
    "v5.6-rc1",
    "v5.6-rc2",
    "v5.6-rc3",
    "v5.6-rc4",
    "v5.6-rc5",
    "v5.6-rc6",
    "v5.6-rc7",
    "v5.7-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/pid.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}