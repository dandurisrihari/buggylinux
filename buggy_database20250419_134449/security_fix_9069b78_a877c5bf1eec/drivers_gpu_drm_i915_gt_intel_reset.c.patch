commit 9069b783cd42963ecb47f7a614b663b4d257a5a7
Author: Sebastian Brzezinka <sebastian.brzezinka@intel.com>
Date:   Thu Jan 23 14:38:40 2025 +0000

    Revert "drm/i915/gt: Log reason for setting TAINT_WARN at reset"
    
    This reverts commit 835443da6f50d9516b58bba5a4fdf9e563d961c7.
    
    Logging with gt_err() causes CI to detect an error even in cases
    of intentional error injection. Since real errors are already
    correctly reported by CI, this additional message is unnecessary.
    
    Furthermore, a GT wedge is already being logged elsewhere, so
    instead of adjusting the log level, revert the above mentioned
    commit to prevent redundant error reporting.
    
    Signed-off-by: Sebastian Brzezinka <sebastian.brzezinka@intel.com>
    Reviewed-by: Krzysztof Karas <krzysztof.karas@intel.com>
    Reviewed-by: Krzysztof Niemiec <krzysztof.niemiec@intel.com>
    Reviewed-by: Andi Shyti <andi.shyti@linux.intel.com>
    Signed-off-by: Andi Shyti <andi.shyti@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/pynwwza2xyvicokflxc6lduwwrzwoihihaan54ago3m2xzzagu@qva2ue4tydie

diff --git a/drivers/gpu/drm/i915/gt/intel_reset.c b/drivers/gpu/drm/i915/gt/intel_reset.c
index 9e7c4879245e..76810ebb5e83 100644
--- a/drivers/gpu/drm/i915/gt/intel_reset.c
+++ b/drivers/gpu/drm/i915/gt/intel_reset.c
@@ -1113,7 +1113,6 @@ static bool __intel_gt_unset_wedged(struct intel_gt *gt)
 		 * Warn CI about the unrecoverable wedged condition.
 		 * Time for a reboot.
 		 */
-		gt_err(gt, "Unrecoverable wedged condition\n");
 		add_taint_for_CI(gt->i915, TAINT_WARN);
 		return false;
 	}
@@ -1264,10 +1263,8 @@ void intel_gt_reset(struct intel_gt *gt,
 	}
 
 	ret = resume(gt);
-	if (ret) {
-		gt_err(gt, "Failed to resume (%d)\n", ret);
+	if (ret)
 		goto taint;
-	}
 
 finish:
 	reset_finish(gt, awake);
@@ -1610,7 +1607,6 @@ void intel_gt_set_wedged_on_init(struct intel_gt *gt)
 	set_bit(I915_WEDGED_ON_INIT, &gt->reset.flags);
 
 	/* Wedged on init is non-recoverable */
-	gt_err(gt, "Non-recoverable wedged on init\n");
 	add_taint_for_CI(gt->i915, TAINT_WARN);
 }