{
  "hash": "ff49c86f27e4726a86f5034543e6e684daf41955",
  "hash_short": "ff49c86f",
  "subject": "Merge tag 'f2fs-for-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs",
  "body": "Pull f2fs updates from Jaegeuk Kim:\n \"In this round, we've made more work into per-file compression support.\n\n  For example, F2FS_IOC_GET | SET_COMPRESS_OPTION provides a way to\n  change the algorithm or cluster size per file. F2FS_IOC_COMPRESS |\n  DECOMPRESS_FILE provides a way to compress and decompress the existing\n  normal files manually.\n\n  There is also a new mount option, compress_mode=fs|user, which can\n  control who compresses the data.\n\n  Chao also added a checksum feature with a mount option so that\n  we are able to detect any corrupted cluster.\n\n  In addition, Daniel contributed casefolding with encryption patch,\n  which will be used for Android devices.\n\n  Summary:\n\n  Enhancements:\n   - add ioctls and mount option to manage per-file compression feature\n   - support casefolding with encryption\n   - support checksum for compressed cluster\n   - avoid IO starvation by replacing mutex with rwsem\n   - add sysfs, max_io_bytes, to control max bio size\n\n  Bug fixes:\n   - fix use-after-free issue when compression and fsverity are enabled\n   - fix consistency corruption during fault injection test\n   - fix data offset for lseek\n   - get rid of buffer_head which has 32bits limit in fiemap\n   - fix some bugs in multi-partitions support\n   - fix nat entry count calculation in shrinker\n   - fix some stat information\n\n  And, we've refactored some logics and fix minor bugs as well\"\n\n* tag 'f2fs-for-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (36 commits)\n  f2fs: compress: fix compression chksum\n  f2fs: fix shift-out-of-bounds in sanity_check_raw_super()\n  f2fs: fix race of pending_pages in decompression\n  f2fs: fix to account inline xattr correctly during recovery\n  f2fs: inline: fix wrong inline inode stat\n  f2fs: inline: correct comment in f2fs_recover_inline_data\n  f2fs: don't check PAGE_SIZE again in sanity_check_raw_super()\n  f2fs: convert to F2FS_*_INO macro\n  f2fs: introduce max_io_bytes, a sysfs entry, to limit bio size\n  f2fs: don't allow any writes on readonly mount\n  f2fs: avoid race condition for shrinker count\n  f2fs: add F2FS_IOC_DECOMPRESS_FILE and F2FS_IOC_COMPRESS_FILE\n  f2fs: add compress_mode mount option\n  f2fs: Remove unnecessary unlikely()\n  f2fs: init dirty_secmap incorrectly\n  f2fs: remove buffer_head which has 32bits limit\n  f2fs: fix wrong block count instead of bytes\n  f2fs: use new conversion functions between blks and bytes\n  f2fs: rename logical_to_blk and blk_to_logical\n  f2fs: fix kbytes written stat for multi-device case\n  ...",
  "full_message": "Merge tag 'f2fs-for-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, we've made more work into per-file compression support.\n\n  For example, F2FS_IOC_GET | SET_COMPRESS_OPTION provides a way to\n  change the algorithm or cluster size per file. F2FS_IOC_COMPRESS |\n  DECOMPRESS_FILE provides a way to compress and decompress the existing\n  normal files manually.\n\n  There is also a new mount option, compress_mode=fs|user, which can\n  control who compresses the data.\n\n  Chao also added a checksum feature with a mount option so that\n  we are able to detect any corrupted cluster.\n\n  In addition, Daniel contributed casefolding with encryption patch,\n  which will be used for Android devices.\n\n  Summary:\n\n  Enhancements:\n   - add ioctls and mount option to manage per-file compression feature\n   - support casefolding with encryption\n   - support checksum for compressed cluster\n   - avoid IO starvation by replacing mutex with rwsem\n   - add sysfs, max_io_bytes, to control max bio size\n\n  Bug fixes:\n   - fix use-after-free issue when compression and fsverity are enabled\n   - fix consistency corruption during fault injection test\n   - fix data offset for lseek\n   - get rid of buffer_head which has 32bits limit in fiemap\n   - fix some bugs in multi-partitions support\n   - fix nat entry count calculation in shrinker\n   - fix some stat information\n\n  And, we've refactored some logics and fix minor bugs as well\"\n\n* tag 'f2fs-for-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (36 commits)\n  f2fs: compress: fix compression chksum\n  f2fs: fix shift-out-of-bounds in sanity_check_raw_super()\n  f2fs: fix race of pending_pages in decompression\n  f2fs: fix to account inline xattr correctly during recovery\n  f2fs: inline: fix wrong inline inode stat\n  f2fs: inline: correct comment in f2fs_recover_inline_data\n  f2fs: don't check PAGE_SIZE again in sanity_check_raw_super()\n  f2fs: convert to F2FS_*_INO macro\n  f2fs: introduce max_io_bytes, a sysfs entry, to limit bio size\n  f2fs: don't allow any writes on readonly mount\n  f2fs: avoid race condition for shrinker count\n  f2fs: add F2FS_IOC_DECOMPRESS_FILE and F2FS_IOC_COMPRESS_FILE\n  f2fs: add compress_mode mount option\n  f2fs: Remove unnecessary unlikely()\n  f2fs: init dirty_secmap incorrectly\n  f2fs: remove buffer_head which has 32bits limit\n  f2fs: fix wrong block count instead of bytes\n  f2fs: use new conversion functions between blks and bytes\n  f2fs: rename logical_to_blk and blk_to_logical\n  f2fs: fix kbytes written stat for multi-device case\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Thu Dec 17 11:18:00 2020 -0800",
  "author_date_iso": "2020-12-17T11:18:00-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Dec 17 11:18:00 2020 -0800",
  "committer_date_iso": "2020-12-17T11:18:00-08:00",
  "files_changed": [
    "MAINTAINERS",
    "fs/crypto/fname.c",
    "fs/crypto/fscrypt_private.h",
    "fs/crypto/hooks.c",
    "fs/ext4/dir.c",
    "fs/ext4/ext4.h",
    "fs/ext4/namei.c",
    "fs/ext4/super.c",
    "fs/f2fs/checkpoint.c",
    "fs/f2fs/dir.c",
    "fs/f2fs/f2fs.h",
    "fs/f2fs/file.c",
    "fs/f2fs/super.c",
    "fs/f2fs/sysfs.c",
    "fs/libfs.c",
    "fs/ubifs/dir.c",
    "include/linux/fs.h",
    "include/linux/fscrypt.h"
  ],
  "files_changed_count": 18,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-fs-f2fs",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "Documentation/filesystems/f2fs.rst",
      "insertions": 36,
      "deletions": 0
    },
    {
      "file": "MAINTAINERS",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/crypto/fname.c",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "fs/crypto/fscrypt_private.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "fs/crypto/hooks.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "fs/ext4/dir.c",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "fs/ext4/ext4.h",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "fs/ext4/namei.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/ext4/super.c",
      "insertions": 0,
      "deletions": 5
    },
    {
      "file": "fs/f2fs/acl.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/checkpoint.c",
      "insertions": 29,
      "deletions": 8
    },
    {
      "file": "fs/f2fs/compress.c",
      "insertions": 23,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/compress.h",
      "insertions": 0,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/data.c",
      "insertions": 119,
      "deletions": 92
    },
    {
      "file": "fs/f2fs/debug.c",
      "insertions": 6,
      "deletions": 5
    },
    {
      "file": "fs/f2fs/dir.c",
      "insertions": 76,
      "deletions": 29
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "insertions": 75,
      "deletions": 106
    },
    {
      "file": "fs/f2fs/file.c",
      "insertions": 381,
      "deletions": 41
    },
    {
      "file": "fs/f2fs/gc.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/hash.c",
      "insertions": 10,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/inline.c",
      "insertions": 9,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/inode.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/namei.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/node.c",
      "insertions": 27,
      "deletions": 14
    },
    {
      "file": "fs/f2fs/node.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/recovery.c",
      "insertions": 13,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/segment.c",
      "insertions": 29,
      "deletions": 22
    },
    {
      "file": "fs/f2fs/shrinker.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/super.c",
      "insertions": 42,
      "deletions": 26
    },
    {
      "file": "fs/f2fs/sysfs.c",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "fs/libfs.c",
      "insertions": 70,
      "deletions": 0
    },
    {
      "file": "fs/ubifs/dir.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/f2fs_fs.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "include/linux/fs.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/fscrypt.h",
      "insertions": 5,
      "deletions": 2
    },
    {
      "file": "include/trace/events/f2fs.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/f2fs.h",
      "insertions": 98,
      "deletions": 0
    }
  ],
  "total_insertions": 1075,
  "total_deletions": 386,
  "total_changes": 1461,
  "parents": [
    "b97d4c424e362ebf88fd9aa1b7ad82e3a28c26d3",
    "75e91c888989cf2df5c78b251b07de1f5052e30e"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/crypto/fscrypt_private.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/crypto/hooks.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/crypto/fname.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext4/dir.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext4/namei.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext4/ext4.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext4/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "MAINTAINERS",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/checkpoint.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/dir.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/sysfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ubifs/dir.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/fscrypt.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/libfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}