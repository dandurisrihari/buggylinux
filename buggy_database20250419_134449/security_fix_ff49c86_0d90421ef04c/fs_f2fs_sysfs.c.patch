commit ff49c86f27e4726a86f5034543e6e684daf41955
Merge: b97d4c424e36 75e91c888989
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 17 11:18:00 2020 -0800

    Merge tag 'f2fs-for-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs
    
    Pull f2fs updates from Jaegeuk Kim:
     "In this round, we've made more work into per-file compression support.
    
      For example, F2FS_IOC_GET | SET_COMPRESS_OPTION provides a way to
      change the algorithm or cluster size per file. F2FS_IOC_COMPRESS |
      DECOMPRESS_FILE provides a way to compress and decompress the existing
      normal files manually.
    
      There is also a new mount option, compress_mode=fs|user, which can
      control who compresses the data.
    
      Chao also added a checksum feature with a mount option so that
      we are able to detect any corrupted cluster.
    
      In addition, Daniel contributed casefolding with encryption patch,
      which will be used for Android devices.
    
      Summary:
    
      Enhancements:
       - add ioctls and mount option to manage per-file compression feature
       - support casefolding with encryption
       - support checksum for compressed cluster
       - avoid IO starvation by replacing mutex with rwsem
       - add sysfs, max_io_bytes, to control max bio size
    
      Bug fixes:
       - fix use-after-free issue when compression and fsverity are enabled
       - fix consistency corruption during fault injection test
       - fix data offset for lseek
       - get rid of buffer_head which has 32bits limit in fiemap
       - fix some bugs in multi-partitions support
       - fix nat entry count calculation in shrinker
       - fix some stat information
    
      And, we've refactored some logics and fix minor bugs as well"
    
    * tag 'f2fs-for-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (36 commits)
      f2fs: compress: fix compression chksum
      f2fs: fix shift-out-of-bounds in sanity_check_raw_super()
      f2fs: fix race of pending_pages in decompression
      f2fs: fix to account inline xattr correctly during recovery
      f2fs: inline: fix wrong inline inode stat
      f2fs: inline: correct comment in f2fs_recover_inline_data
      f2fs: don't check PAGE_SIZE again in sanity_check_raw_super()
      f2fs: convert to F2FS_*_INO macro
      f2fs: introduce max_io_bytes, a sysfs entry, to limit bio size
      f2fs: don't allow any writes on readonly mount
      f2fs: avoid race condition for shrinker count
      f2fs: add F2FS_IOC_DECOMPRESS_FILE and F2FS_IOC_COMPRESS_FILE
      f2fs: add compress_mode mount option
      f2fs: Remove unnecessary unlikely()
      f2fs: init dirty_secmap incorrectly
      f2fs: remove buffer_head which has 32bits limit
      f2fs: fix wrong block count instead of bytes
      f2fs: use new conversion functions between blks and bytes
      f2fs: rename logical_to_blk and blk_to_logical
      f2fs: fix kbytes written stat for multi-device case
      ...

diff --cc fs/f2fs/sysfs.c
index 24e876e849c5,989a649cfa8b..30bae57428d1
--- a/fs/f2fs/sysfs.c
+++ b/fs/f2fs/sysfs.c
@@@ -90,9 -90,15 +90,10 @@@ static ssize_t free_segments_show(struc
  static ssize_t lifetime_write_kbytes_show(struct f2fs_attr *a,
  		struct f2fs_sb_info *sbi, char *buf)
  {
 -	struct super_block *sb = sbi->sb;
 -
 -	if (!sb->s_bdev->bd_part)
 -		return sprintf(buf, "0\n");
 -
  	return sprintf(buf, "%llu\n",
  			(unsigned long long)(sbi->kbytes_written +
- 			BD_PART_WRITTEN(sbi)));
+ 			((f2fs_get_sectors_written(sbi) -
+ 				sbi->sectors_written_start) >> 1)));
  }
  
  static ssize_t features_show(struct f2fs_attr *a,