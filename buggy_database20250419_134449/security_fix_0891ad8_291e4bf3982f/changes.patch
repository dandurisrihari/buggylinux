diff --cc drivers/char/random.c
index 4fe5609eeb72,cdf4cfb2da4d..429b75bb60e8
--- a/drivers/char/random.c
+++ b/drivers/char/random.c
@@@ -255,7 -255,11 +255,8 @@@
  #include <linux/fips.h>
  #include <linux/ptrace.h>
  #include <linux/kmemcheck.h>
+ #include <linux/workqueue.h>
 -
 -#ifdef CONFIG_GENERIC_HARDIRQS
 -# include <linux/irq.h>
 -#endif
 +#include <linux/irq.h>
  
  #include <asm/processor.h>
  #include <asm/uaccess.h>
@@@ -601,12 -654,14 +651,13 @@@ retry
  	if (cmpxchg(&r->entropy_count, orig, entropy_count) != orig)
  		goto retry;
  
- 	if (!r->initialized && nbits > 0) {
- 		r->entropy_total += nbits;
- 		if (r->entropy_total > 128) {
- 			r->initialized = 1;
- 			if (r == &nonblocking_pool)
- 				prandom_reseed_late();
+ 	r->entropy_total += nbits;
 -	if (!r->initialized && nbits > 0) {
 -		if (r->entropy_total > 128) {
 -			if (r == &nonblocking_pool)
 -				pr_notice("random: %s pool is initialized\n",
 -					  r->name);
 -			r->initialized = 1;
 -			r->entropy_total = 0;
++	if (!r->initialized && r->entropy_total > 128) {
++		r->initialized = 1;
++		r->entropy_total = 0;
++		if (r == &nonblocking_pool) {
++			prandom_reseed_late();
++			pr_notice("random: %s pool is initialized\n", r->name);
  		}
  	}