{
  "hash": "25c4e6c3f0c14d1575aa488ff4ca47e045ae51a0",
  "hash_short": "25c4e6c3",
  "subject": "Merge tag 'for-f2fs-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs",
  "body": "Pull f2fs updates from Jaegeuk Kim:\n \"This round introduces several interesting features such as on-disk NAT\n  bitmaps, IO alignment, and a discard thread. And it includes a couple\n  of major bug fixes as below.\n\n  Enhancements:\n\n   - introduce on-disk bitmaps to avoid scanning NAT blocks when getting\n     free nids\n\n   - support IO alignment to prepare open-channel SSD integration in\n     future\n\n   - introduce a discard thread to avoid long latency during checkpoint\n     and fstrim\n\n   - use SSR for warm node and enable inline_xattr by default\n\n   - introduce in-memory bitmaps to check FS consistency for debugging\n\n   - improve write_begin by avoiding needless read IO\n\n  Bug fixes:\n\n   - fix broken zone_reset behavior for SMR drive\n\n   - fix wrong victim selection policy during GC\n\n   - fix missing behavior when preparing discard commands\n\n   - fix bugs in atomic write support and fiemap\n\n   - workaround to handle multiple f2fs_add_link calls having same name\n\n  ... and it includes a bunch of clean-up patches as well\"\n\n* tag 'for-f2fs-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (97 commits)\n  f2fs: avoid to flush nat journal entries\n  f2fs: avoid to issue redundant discard commands\n  f2fs: fix a plint compile warning\n  f2fs: add f2fs_drop_inode tracepoint\n  f2fs: Fix zoned block device support\n  f2fs: remove redundant set_page_dirty()\n  f2fs: fix to enlarge size of write_io_dummy mempool\n  f2fs: fix memory leak of write_io_dummy mempool during umount\n  f2fs: fix to update F2FS_{CP_}WB_DATA count correctly\n  f2fs: use MAX_FREE_NIDS for the free nids target\n  f2fs: introduce free nid bitmap\n  f2fs: new helper cur_cp_crc() getting crc in f2fs_checkpoint\n  f2fs: update the comment of default nr_pages to skipping\n  f2fs: drop the duplicate pval in f2fs_getxattr\n  f2fs: Don't update the xattr data that same as the exist\n  f2fs: kill __is_extent_same\n  f2fs: avoid bggc->fggc when enough free segments are avaliable after cp\n  f2fs: select target segment with closer temperature in SSR mode\n  f2fs: show simple call stack in fault injection message\n  f2fs: no need lock_op in f2fs_write_inline_data\n  ...",
  "full_message": "Merge tag 'for-f2fs-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"This round introduces several interesting features such as on-disk NAT\n  bitmaps, IO alignment, and a discard thread. And it includes a couple\n  of major bug fixes as below.\n\n  Enhancements:\n\n   - introduce on-disk bitmaps to avoid scanning NAT blocks when getting\n     free nids\n\n   - support IO alignment to prepare open-channel SSD integration in\n     future\n\n   - introduce a discard thread to avoid long latency during checkpoint\n     and fstrim\n\n   - use SSR for warm node and enable inline_xattr by default\n\n   - introduce in-memory bitmaps to check FS consistency for debugging\n\n   - improve write_begin by avoiding needless read IO\n\n  Bug fixes:\n\n   - fix broken zone_reset behavior for SMR drive\n\n   - fix wrong victim selection policy during GC\n\n   - fix missing behavior when preparing discard commands\n\n   - fix bugs in atomic write support and fiemap\n\n   - workaround to handle multiple f2fs_add_link calls having same name\n\n  ... and it includes a bunch of clean-up patches as well\"\n\n* tag 'for-f2fs-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (97 commits)\n  f2fs: avoid to flush nat journal entries\n  f2fs: avoid to issue redundant discard commands\n  f2fs: fix a plint compile warning\n  f2fs: add f2fs_drop_inode tracepoint\n  f2fs: Fix zoned block device support\n  f2fs: remove redundant set_page_dirty()\n  f2fs: fix to enlarge size of write_io_dummy mempool\n  f2fs: fix memory leak of write_io_dummy mempool during umount\n  f2fs: fix to update F2FS_{CP_}WB_DATA count correctly\n  f2fs: use MAX_FREE_NIDS for the free nids target\n  f2fs: introduce free nid bitmap\n  f2fs: new helper cur_cp_crc() getting crc in f2fs_checkpoint\n  f2fs: update the comment of default nr_pages to skipping\n  f2fs: drop the duplicate pval in f2fs_getxattr\n  f2fs: Don't update the xattr data that same as the exist\n  f2fs: kill __is_extent_same\n  f2fs: avoid bggc->fggc when enough free segments are avaliable after cp\n  f2fs: select target segment with closer temperature in SSR mode\n  f2fs: show simple call stack in fault injection message\n  f2fs: no need lock_op in f2fs_write_inline_data\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Wed Mar 1 15:55:04 2017 -0800",
  "author_date_iso": "2017-03-01T15:55:04-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Mar 1 15:55:04 2017 -0800",
  "committer_date_iso": "2017-03-01T15:55:04-08:00",
  "files_changed": [
    "fs/f2fs/dir.c",
    "fs/f2fs/f2fs.h",
    "fs/f2fs/file.c",
    "fs/f2fs/namei.c",
    "fs/f2fs/super.c"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "Documentation/filesystems/f2fs.txt",
      "insertions": 5,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/checkpoint.c",
      "insertions": 49,
      "deletions": 21
    },
    {
      "file": "fs/f2fs/data.c",
      "insertions": 142,
      "deletions": 49
    },
    {
      "file": "fs/f2fs/debug.c",
      "insertions": 26,
      "deletions": 5
    },
    {
      "file": "fs/f2fs/dir.c",
      "insertions": 32,
      "deletions": 6
    },
    {
      "file": "fs/f2fs/extent_cache.c",
      "insertions": 23,
      "deletions": 29
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "insertions": 386,
      "deletions": 258
    },
    {
      "file": "fs/f2fs/file.c",
      "insertions": 23,
      "deletions": 13
    },
    {
      "file": "fs/f2fs/gc.c",
      "insertions": 53,
      "deletions": 26
    },
    {
      "file": "fs/f2fs/inode.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/namei.c",
      "insertions": 15,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/node.c",
      "insertions": 436,
      "deletions": 124
    },
    {
      "file": "fs/f2fs/node.h",
      "insertions": 18,
      "deletions": 15
    },
    {
      "file": "fs/f2fs/recovery.c",
      "insertions": 6,
      "deletions": 11
    },
    {
      "file": "fs/f2fs/segment.c",
      "insertions": 364,
      "deletions": 137
    },
    {
      "file": "fs/f2fs/segment.h",
      "insertions": 38,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/super.c",
      "insertions": 110,
      "deletions": 28
    },
    {
      "file": "fs/f2fs/xattr.c",
      "insertions": 130,
      "deletions": 21
    },
    {
      "file": "fs/f2fs/xattr.h",
      "insertions": 4,
      "deletions": 3
    },
    {
      "file": "include/linux/f2fs_fs.h",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "include/trace/events/f2fs.h",
      "insertions": 95,
      "deletions": 56
    }
  ],
  "total_insertions": 1966,
  "total_deletions": 810,
  "total_changes": 2776,
  "parents": [
    "6053dc981449718d90a429933e99b441e1adaea6",
    "900f736251c81886f3064c9d489c85eddee921b7"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.11",
    "v4.11-rc1",
    "v4.11-rc2",
    "v4.11-rc3",
    "v4.11-rc4",
    "v4.11-rc5",
    "v4.11-rc6",
    "v4.11-rc7",
    "v4.11-rc8",
    "v4.12"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/f2fs/dir.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/namei.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}