{
  "hash": "70ef8f0d37573079e093305214d0cc9eb71100f7",
  "hash_short": "70ef8f0d",
  "subject": "Merge tag 'for-f2fs-4.12' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs",
  "body": "Pull f2fs updates from Jaegeuk Kim:\n \"In this round, we've focused on enhancing performance with regards to\n  block allocation, GC, and discard/in-place-update IO controls. There\n  are a bunch of clean-ups as well as minor bug fixes.\n\n  Enhancements:\n   - disable heap-based allocation by default\n   - issue small-sized discard commands by default\n   - change the policy of data hotness for logging\n   - distinguish IOs in terms of size and wbc type\n   - start SSR earlier to avoid foreground GC\n   - enhance data structures managing discard commands\n   - enhance in-place update flow\n   - add some more fault injection routines\n   - secure one more xattr entry\n\n  Bug fixes:\n   - calculate victim cost for GC correctly\n   - remain correct victim segment number for GC\n   - race condition in nid allocator and initializer\n   - stale pointer produced by atomic_writes\n   - fix missing REQ_SYNC for flush commands\n   - handle missing errors in more corner cases\"\n\n* tag 'for-f2fs-4.12' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (111 commits)\n  f2fs: fix a mount fail for wrong next_scan_nid\n  f2fs: enhance scalability of trace macro\n  f2fs: relocate inode_{,un}lock in F2FS_IOC_SETFLAGS\n  f2fs: Make flush bios explicitely sync\n  f2fs: show available_nids in f2fs/status\n  f2fs: flush dirty nats periodically\n  f2fs: introduce CP_TRIMMED_FLAG to avoid unneeded discard\n  f2fs: allow cpc->reason to indicate more than one reason\n  f2fs: release cp and dnode lock before IPU\n  f2fs: shrink size of struct discard_cmd\n  f2fs: don't hold cmd_lock during waiting discard command\n  f2fs: nullify fio->encrypted_page for each writes\n  f2fs: sanity check segment count\n  f2fs: introduce valid_ipu_blkaddr to clean up\n  f2fs: lookup extent cache first under IPU scenario\n  f2fs: reconstruct code to write a data page\n  f2fs: introduce __wait_discard_cmd\n  f2fs: introduce __issue_discard_cmd\n  f2fs: enable small discard by default\n  f2fs: delay awaking discard thread\n  ...",
  "full_message": "Merge tag 'for-f2fs-4.12' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, we've focused on enhancing performance with regards to\n  block allocation, GC, and discard/in-place-update IO controls. There\n  are a bunch of clean-ups as well as minor bug fixes.\n\n  Enhancements:\n   - disable heap-based allocation by default\n   - issue small-sized discard commands by default\n   - change the policy of data hotness for logging\n   - distinguish IOs in terms of size and wbc type\n   - start SSR earlier to avoid foreground GC\n   - enhance data structures managing discard commands\n   - enhance in-place update flow\n   - add some more fault injection routines\n   - secure one more xattr entry\n\n  Bug fixes:\n   - calculate victim cost for GC correctly\n   - remain correct victim segment number for GC\n   - race condition in nid allocator and initializer\n   - stale pointer produced by atomic_writes\n   - fix missing REQ_SYNC for flush commands\n   - handle missing errors in more corner cases\"\n\n* tag 'for-f2fs-4.12' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (111 commits)\n  f2fs: fix a mount fail for wrong next_scan_nid\n  f2fs: enhance scalability of trace macro\n  f2fs: relocate inode_{,un}lock in F2FS_IOC_SETFLAGS\n  f2fs: Make flush bios explicitely sync\n  f2fs: show available_nids in f2fs/status\n  f2fs: flush dirty nats periodically\n  f2fs: introduce CP_TRIMMED_FLAG to avoid unneeded discard\n  f2fs: allow cpc->reason to indicate more than one reason\n  f2fs: release cp and dnode lock before IPU\n  f2fs: shrink size of struct discard_cmd\n  f2fs: don't hold cmd_lock during waiting discard command\n  f2fs: nullify fio->encrypted_page for each writes\n  f2fs: sanity check segment count\n  f2fs: introduce valid_ipu_blkaddr to clean up\n  f2fs: lookup extent cache first under IPU scenario\n  f2fs: reconstruct code to write a data page\n  f2fs: introduce __wait_discard_cmd\n  f2fs: introduce __issue_discard_cmd\n  f2fs: enable small discard by default\n  f2fs: delay awaking discard thread\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Mon May 8 12:24:17 2017 -0700",
  "author_date_iso": "2017-05-08T12:24:17-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon May 8 12:24:17 2017 -0700",
  "committer_date_iso": "2017-05-08T12:24:17-07:00",
  "files_changed": [
    "fs/f2fs/dir.c",
    "fs/f2fs/f2fs.h",
    "fs/f2fs/inline.c",
    "fs/f2fs/namei.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "fs/f2fs/checkpoint.c",
      "insertions": 51,
      "deletions": 26
    },
    {
      "file": "fs/f2fs/data.c",
      "insertions": 147,
      "deletions": 53
    },
    {
      "file": "fs/f2fs/debug.c",
      "insertions": 44,
      "deletions": 18
    },
    {
      "file": "fs/f2fs/dir.c",
      "insertions": 14,
      "deletions": 32
    },
    {
      "file": "fs/f2fs/extent_cache.c",
      "insertions": 196,
      "deletions": 130
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "insertions": 205,
      "deletions": 115
    },
    {
      "file": "fs/f2fs/file.c",
      "insertions": 126,
      "deletions": 47
    },
    {
      "file": "fs/f2fs/gc.c",
      "insertions": 61,
      "deletions": 32
    },
    {
      "file": "fs/f2fs/inline.c",
      "insertions": 17,
      "deletions": 17
    },
    {
      "file": "fs/f2fs/inode.c",
      "insertions": 13,
      "deletions": 10
    },
    {
      "file": "fs/f2fs/namei.c",
      "insertions": 12,
      "deletions": 41
    },
    {
      "file": "fs/f2fs/node.c",
      "insertions": 86,
      "deletions": 58
    },
    {
      "file": "fs/f2fs/node.h",
      "insertions": 17,
      "deletions": 14
    },
    {
      "file": "fs/f2fs/recovery.c",
      "insertions": 5,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/segment.c",
      "insertions": 561,
      "deletions": 215
    },
    {
      "file": "fs/f2fs/segment.h",
      "insertions": 80,
      "deletions": 59
    },
    {
      "file": "fs/f2fs/super.c",
      "insertions": 38,
      "deletions": 10
    },
    {
      "file": "fs/f2fs/trace.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/xattr.c",
      "insertions": 15,
      "deletions": 16
    },
    {
      "file": "fs/f2fs/xattr.h",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "include/linux/f2fs_fs.h",
      "insertions": 12,
      "deletions": 5
    },
    {
      "file": "include/trace/events/f2fs.h",
      "insertions": 41,
      "deletions": 21
    }
  ],
  "total_insertions": 1747,
  "total_deletions": 928,
  "total_changes": 2675,
  "parents": [
    "677375cef8cb7763ef620e007873117b9bad72a0",
    "e9cdd307704b5a8f685fa3fff4403691fbf64f97"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.12",
    "v4.12-rc1",
    "v4.12-rc2",
    "v4.12-rc3",
    "v4.12-rc4",
    "v4.12-rc5",
    "v4.12-rc6",
    "v4.12-rc7",
    "v4.13",
    "v4.13-rc1"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/f2fs/dir.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/inline.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/namei.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}