commit 70ef8f0d37573079e093305214d0cc9eb71100f7
Merge: 677375cef8cb e9cdd307704b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 8 12:24:17 2017 -0700

    Merge tag 'for-f2fs-4.12' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs
    
    Pull f2fs updates from Jaegeuk Kim:
     "In this round, we've focused on enhancing performance with regards to
      block allocation, GC, and discard/in-place-update IO controls. There
      are a bunch of clean-ups as well as minor bug fixes.
    
      Enhancements:
       - disable heap-based allocation by default
       - issue small-sized discard commands by default
       - change the policy of data hotness for logging
       - distinguish IOs in terms of size and wbc type
       - start SSR earlier to avoid foreground GC
       - enhance data structures managing discard commands
       - enhance in-place update flow
       - add some more fault injection routines
       - secure one more xattr entry
    
      Bug fixes:
       - calculate victim cost for GC correctly
       - remain correct victim segment number for GC
       - race condition in nid allocator and initializer
       - stale pointer produced by atomic_writes
       - fix missing REQ_SYNC for flush commands
       - handle missing errors in more corner cases"
    
    * tag 'for-f2fs-4.12' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (111 commits)
      f2fs: fix a mount fail for wrong next_scan_nid
      f2fs: enhance scalability of trace macro
      f2fs: relocate inode_{,un}lock in F2FS_IOC_SETFLAGS
      f2fs: Make flush bios explicitely sync
      f2fs: show available_nids in f2fs/status
      f2fs: flush dirty nats periodically
      f2fs: introduce CP_TRIMMED_FLAG to avoid unneeded discard
      f2fs: allow cpc->reason to indicate more than one reason
      f2fs: release cp and dnode lock before IPU
      f2fs: shrink size of struct discard_cmd
      f2fs: don't hold cmd_lock during waiting discard command
      f2fs: nullify fio->encrypted_page for each writes
      f2fs: sanity check segment count
      f2fs: introduce valid_ipu_blkaddr to clean up
      f2fs: lookup extent cache first under IPU scenario
      f2fs: reconstruct code to write a data page
      f2fs: introduce __wait_discard_cmd
      f2fs: introduce __issue_discard_cmd
      f2fs: enable small discard by default
      f2fs: delay awaking discard thread
      ...

diff --cc fs/f2fs/inline.c
index fa729ff6b2f9,0ccdefe9fdba..e4c527c4e7d0
--- a/fs/f2fs/inline.c
+++ b/fs/f2fs/inline.c
@@@ -533,8 -533,8 +533,8 @@@ int f2fs_add_inline_entry(struct inode 
  
  	f2fs_wait_on_page_writeback(ipage, NODE, true);
  
 -	name_hash = f2fs_dentry_hash(new_name);
 +	name_hash = f2fs_dentry_hash(new_name, NULL);
- 	make_dentry_ptr(NULL, &d, (void *)dentry_blk, 2);
+ 	make_dentry_ptr_inline(NULL, &d, dentry_blk);
  	f2fs_update_dentry(ino, mode, &d, new_name, name_hash, bit_pos);
  
  	set_page_dirty(ipage);