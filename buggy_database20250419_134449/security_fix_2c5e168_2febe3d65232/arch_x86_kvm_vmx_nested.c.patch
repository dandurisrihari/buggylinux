commit 2c5e168e5ce154592667a8e384012117c917d790
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Nov 27 17:34:06 2024 -0800

    KVM: x86: Rename "governed features" helpers to use "guest_cpu_cap"
    
    As the first step toward replacing KVM's so-called "governed features"
    framework with a more comprehensive, less poorly named implementation,
    replace the "kvm_governed_feature" function prefix with "guest_cpu_cap"
    and rename guest_can_use() to guest_cpu_cap_has().
    
    The "guest_cpu_cap" naming scheme mirrors that of "kvm_cpu_cap", and
    provides a more clear distinction between guest capabilities, which are
    KVM controlled (heh, or one might say "governed"), and guest CPUID, which
    with few exceptions is fully userspace controlled.
    
    Opportunistically rewrite the comment about XSS passthrough for SEV-ES
    guests to avoid referencing so many functions, as such comments are prone
    to becoming stale (case in point...).
    
    No functional change intended.
    
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Reviewed-by: Binbin Wu <binbin.wu@linux.intel.com>
    Link: https://lore.kernel.org/r/20241128013424.4096668-40-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>

diff --git a/arch/x86/kvm/vmx/nested.c b/arch/x86/kvm/vmx/nested.c
index aa78b6f38dfe..9aaa703f5f98 100644
--- a/arch/x86/kvm/vmx/nested.c
+++ b/arch/x86/kvm/vmx/nested.c
@@ -6617,7 +6617,7 @@ static int vmx_get_nested_state(struct kvm_vcpu *vcpu,
 	vmx = to_vmx(vcpu);
 	vmcs12 = get_vmcs12(vcpu);
 
-	if (guest_can_use(vcpu, X86_FEATURE_VMX) &&
+	if (guest_cpu_cap_has(vcpu, X86_FEATURE_VMX) &&
 	    (vmx->nested.vmxon || vmx->nested.smm.vmxon)) {
 		kvm_state.hdr.vmx.vmxon_pa = vmx->nested.vmxon_ptr;
 		kvm_state.hdr.vmx.vmcs12_pa = vmx->nested.current_vmptr;
@@ -6758,7 +6758,7 @@ static int vmx_set_nested_state(struct kvm_vcpu *vcpu,
 		if (kvm_state->flags & ~KVM_STATE_NESTED_EVMCS)
 			return -EINVAL;
 	} else {
-		if (!guest_can_use(vcpu, X86_FEATURE_VMX))
+		if (!guest_cpu_cap_has(vcpu, X86_FEATURE_VMX))
 			return -EINVAL;
 
 		if (!page_address_valid(vcpu, kvm_state->hdr.vmx.vmxon_pa))
@@ -6792,7 +6792,7 @@ static int vmx_set_nested_state(struct kvm_vcpu *vcpu,
 		return -EINVAL;
 
 	if ((kvm_state->flags & KVM_STATE_NESTED_EVMCS) &&
-	    (!guest_can_use(vcpu, X86_FEATURE_VMX) ||
+	    (!guest_cpu_cap_has(vcpu, X86_FEATURE_VMX) ||
 	     !vmx->nested.enlightened_vmcs_enabled))
 			return -EINVAL;