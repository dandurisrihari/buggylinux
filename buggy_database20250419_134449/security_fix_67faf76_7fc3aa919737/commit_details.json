{
  "hash": "67faf76d2674a013b322d68e1c324c2d8cdd875a",
  "hash_short": "67faf76d",
  "subject": "Merge branch 'add-sparx5i-driver'",
  "body": "Steen Hegelund says:\n\n====================\nAdding the Sparx5i Switch Driver\n\nThis series provides the Microchip Sparx5i Switch Driver\n\nThe SparX-5 Enterprise Ethernet switch family provides a rich set of\nEnterprise switching features such as advanced TCAM-based VLAN and QoS\nprocessing enabling delivery of differentiated services, and security\nthrough TCAMbased frame processing using versatile content aware processor\n(VCAP). IPv4/IPv6 Layer 3 (L3) unicast and multicast routing is supported\nwith up to 18K IPv4/9K IPv6 unicast LPM entries and up to 9K IPv4/3K IPv6\n(S,G) multicast groups. L3 security features include source guard and\nreverse path forwarding (uRPF) tasks. Additional L3 features include\nVRF-Lite and IP tunnels (IP over GRE/IP).\n\nThe SparX-5 switch family features a highly flexible set of Ethernet ports\nwith support for 10G and 25G aggregation links, QSGMII, USGMII, and\nUSXGMII.  The device integrates a powerful 1 GHz dual-core ARM\u00ae Cortex\u00ae-A53\nCPU enabling full management of the switch and advanced Enterprise\napplications.\n\nThe SparX-5 switch family targets managed Layer 2 and Layer 3 equipment in\nSMB, SME, and Enterprise where high port count 1G/2.5G/5G/10G switching\nwith 10G/25G aggregation links is required.\n\nThe SparX-5 switch family consists of following SKUs:\n\n  VSC7546 SparX-5-64 supports up to 64 Gbps of bandwidth with the following\n  primary port configurations.\n   - 6 \u00d710G\n   - 16 \u00d7 2.5G + 2 \u00d7 10G\n   - 24 \u00d7 1G + 4 \u00d7 10G\n\n  VSC7549 SparX-5-90 supports up to 90 Gbps of bandwidth with the following\n  primary port configurations.\n   - 9 \u00d7 10G\n   - 16 \u00d7 2.5G + 4 \u00d7 10G\n   - 48 \u00d7 1G + 4 \u00d7 10G\n\n  VSC7552 SparX-5-128 supports up to 128 Gbps of bandwidth with the\n  following primary port configurations.\n   - 12 \u00d7 10G\n   - 6 x 10G + 2 x 25G\n   - 16 \u00d7 2.5G + 8 \u00d7 10G\n   - 48 \u00d7 1G + 8 \u00d7 10G\n\n  VSC7556 SparX-5-160 supports up to 160 Gbps of bandwidth with the\n  following primary port configurations.\n   - 16 \u00d7 10G\n   - 10 \u00d7 10G + 2 \u00d7 25G\n   - 16 \u00d7 2.5G + 10 \u00d7 10G\n   - 48 \u00d7 1G + 10 \u00d7 10G\n\n  VSC7558 SparX-5-200 supports up to 200 Gbps of bandwidth with the\n  following primary port configurations.\n   - 20 \u00d7 10G\n   - 8 \u00d7 25G\n\nIn addition, the device supports one 10/100/1000/2500/5000 Mbps\nSGMII/SerDes node processor interface (NPI) Ethernet port.\n\nTime sensitive networking (TSN) is supported through a comprehensive set of\nfeatures including frame preemption, cut-through, frame replication and\nelimination for reliability, enhanced scheduling: credit-based shaping,\ntime-aware shaping, cyclic queuing, and forwarding, and per-stream policing\nand filtering.\n\nTogether with IEEE 1588 and IEEE 802.1AS support, this guarantees\nlow-latency deterministic networking for Industrial Ethernet.\n\nThe Sparx5i support is developed on the PCB134 and PCB135 evaluation boards.\n\n- PCB134 main networking features:\n  - 12x SFP+ front 10G module slots (connected to Sparx5i through SFI).\n  - 8x SFP28 front 25G module slots (connected to Sparx5i through SFI high\n    speed).\n  - Optional, one additional 10/100/1000BASE-T (RJ45) Ethernet port\n    (on-board VSC8211 PHY connected to Sparx5i through SGMII).\n\n- PCB135 main networking features:\n  - 48x1G (10/100/1000M) RJ45 front ports using 12xVSC8514 QuadPHY\u2019s each\n    connected to VSC7558 through QSGMII.\n  - 4x10G (1G/2.5G/5G/10G) RJ45 front ports using the AQR407 10G QuadPHY\n    each port connects to VSC7558 through SFI.\n  - 4x SFP28 25G module slots on back connected to VSC7558 through SFI high\n    speed.\n  - Optional, one additional 1G (10/100/1000M) RJ45 port using an on-board\n    VSC8211 PHY, which can be connected to VSC7558 NPI port through SGMII\n    using a loopback add-on PCB)\n\nThis series provides support for:\n  - SFPs and DAC cables via PHYLINK with a number of 5G, 10G and 25G\n    devices and media types.\n  - Port module configuration for 10M to 25G speeds with SGMII, QSGMII,\n    1000BASEX, 2500BASEX and 10GBASER as appropriate for these modes.\n  - SerDes configuration via the Sparx5i SerDes driver (see below).\n  - Host mode providing register based injection and extraction.\n  - Switch mode providing MAC/VLAN table learning and Layer2 switching\n    offloaded to the Sparx5i switch.\n  - STP state, VLAN support, host/bridge port mode, Forwarding DB, and\n    configuration and statistics via ethtool.\n\nMore support will be added at a later stage.\n\nThe Sparx5i Chip Register Model can be browsed at this location:\nhttps://github.com/microchip-ung/sparx-5_reginfo\nand the datasheet is available here:\nhttps://ww1.microchip.com/downloads/en/DeviceDoc/SparX-5_Family_L2L3_Enterprise_10G_Ethernet_Switches_Datasheet_00003822B.pdf\n\nThe series depends on the following series currently on their way\ninto the kernel:\n\n- 25G Base-R phy mode\n  Link: https://lore.kernel.org/r/20210611125453.313308-1-steen.hegelund@microchip.com/\n- Sparx5 Reset Driver\n  Link: https://lore.kernel.org/r/20210416084054.2922327-1-steen.hegelund@microchip.com/\n\nChangeLog:\nv5:\n    - cover letter\n        - updated the description to match the latest data sheets\n    - basic driver\n        - added error message in case of reset controller error\n        - port struct: replacing has_sfp with inband, adding pause_adv\n    - host mode\n        - port cleanup: unregisters netdevs and then removes phylink etc\n        - checking for pause_adv when comparing port config changes\n        - getting duplex and pause state in the link_up callback.\n        - getting inband, autoneg and pause_adv config in the pcs_config\n          callback.\n    - port\n        - use only the pause_adv bits when getting aneg status\n        - use the inband state when updating the PCS and port config\nv4:\n    - basic driver:\n        Using devm_reset_control_get_optional_shared to get the reset\n        control, and let the reset framework check if it is valid.\n    - host mode (phylink):\n        Use the PCS operations to get state and update configuration.\n        Removed the setting of interface modes.  Let phylink control this.\n        Using the new 5gbase-r and 25gbase-r modes.\n        Using a helper function to check if one of the 3 base-r modes has\n        been selected.\n        Currently it will not be possible to change the interface mode by\n        changing the speed (e.g via ethtool).  This will be added later.\nv3:\n    - basic driver:\n        - removed unneeded braces\n        - release reference to ports node after use\n        - use dev_err_probe to handle DEFER\n        - update error value when bailing out (a few cases)\n        - updated formatting of port struct and grouping of bool values\n        - simplified the spx5_rmw and spx5_inst_rmw inline functions\n    - host mode (netdev):\n        - removed lockless flag\n        - added port timer init\n    - host mode (packet - manual injection):\n        - updated error counters in error situations\n        - implemented timer handling of watermark threshold: stop and\n          restart netif queues.\n        - fixed error message handling (rate limited)\n        - fixed comment style error\n        - used DIV_ROUND_UP macro\n        - removed a debug message for open ports\n\nv2:\n    - Updated bindings:\n        - drop minItems for the reg property\n    - Statistics implementation:\n        - Reorganized statistics into ethtool groups:\n            eth-phy, eth-mac, eth-ctrl, rmon\n          as defined by the IEEE 802.3 categories and RFC 2819.\n        - The remaining statistics are provided by the classic ethtool\n          statistics command.\n    - Hostmode support:\n        - Removed netdev renaming\n        - Validate ethernet address in sparx5_set_mac_address()\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "Merge branch 'add-sparx5i-driver'\n\nSteen Hegelund says:\n\n====================\nAdding the Sparx5i Switch Driver\n\nThis series provides the Microchip Sparx5i Switch Driver\n\nThe SparX-5 Enterprise Ethernet switch family provides a rich set of\nEnterprise switching features such as advanced TCAM-based VLAN and QoS\nprocessing enabling delivery of differentiated services, and security\nthrough TCAMbased frame processing using versatile content aware processor\n(VCAP). IPv4/IPv6 Layer 3 (L3) unicast and multicast routing is supported\nwith up to 18K IPv4/9K IPv6 unicast LPM entries and up to 9K IPv4/3K IPv6\n(S,G) multicast groups. L3 security features include source guard and\nreverse path forwarding (uRPF) tasks. Additional L3 features include\nVRF-Lite and IP tunnels (IP over GRE/IP).\n\nThe SparX-5 switch family features a highly flexible set of Ethernet ports\nwith support for 10G and 25G aggregation links, QSGMII, USGMII, and\nUSXGMII.  The device integrates a powerful 1 GHz dual-core ARM\u00ae Cortex\u00ae-A53\nCPU enabling full management of the switch and advanced Enterprise\napplications.\n\nThe SparX-5 switch family targets managed Layer 2 and Layer 3 equipment in\nSMB, SME, and Enterprise where high port count 1G/2.5G/5G/10G switching\nwith 10G/25G aggregation links is required.\n\nThe SparX-5 switch family consists of following SKUs:\n\n  VSC7546 SparX-5-64 supports up to 64 Gbps of bandwidth with the following\n  primary port configurations.\n   - 6 \u00d710G\n   - 16 \u00d7 2.5G + 2 \u00d7 10G\n   - 24 \u00d7 1G + 4 \u00d7 10G\n\n  VSC7549 SparX-5-90 supports up to 90 Gbps of bandwidth with the following\n  primary port configurations.\n   - 9 \u00d7 10G\n   - 16 \u00d7 2.5G + 4 \u00d7 10G\n   - 48 \u00d7 1G + 4 \u00d7 10G\n\n  VSC7552 SparX-5-128 supports up to 128 Gbps of bandwidth with the\n  following primary port configurations.\n   - 12 \u00d7 10G\n   - 6 x 10G + 2 x 25G\n   - 16 \u00d7 2.5G + 8 \u00d7 10G\n   - 48 \u00d7 1G + 8 \u00d7 10G\n\n  VSC7556 SparX-5-160 supports up to 160 Gbps of bandwidth with the\n  following primary port configurations.\n   - 16 \u00d7 10G\n   - 10 \u00d7 10G + 2 \u00d7 25G\n   - 16 \u00d7 2.5G + 10 \u00d7 10G\n   - 48 \u00d7 1G + 10 \u00d7 10G\n\n  VSC7558 SparX-5-200 supports up to 200 Gbps of bandwidth with the\n  following primary port configurations.\n   - 20 \u00d7 10G\n   - 8 \u00d7 25G\n\nIn addition, the device supports one 10/100/1000/2500/5000 Mbps\nSGMII/SerDes node processor interface (NPI) Ethernet port.\n\nTime sensitive networking (TSN) is supported through a comprehensive set of\nfeatures including frame preemption, cut-through, frame replication and\nelimination for reliability, enhanced scheduling: credit-based shaping,\ntime-aware shaping, cyclic queuing, and forwarding, and per-stream policing\nand filtering.\n\nTogether with IEEE 1588 and IEEE 802.1AS support, this guarantees\nlow-latency deterministic networking for Industrial Ethernet.\n\nThe Sparx5i support is developed on the PCB134 and PCB135 evaluation boards.\n\n- PCB134 main networking features:\n  - 12x SFP+ front 10G module slots (connected to Sparx5i through SFI).\n  - 8x SFP28 front 25G module slots (connected to Sparx5i through SFI high\n    speed).\n  - Optional, one additional 10/100/1000BASE-T (RJ45) Ethernet port\n    (on-board VSC8211 PHY connected to Sparx5i through SGMII).\n\n- PCB135 main networking features:\n  - 48x1G (10/100/1000M) RJ45 front ports using 12xVSC8514 QuadPHY\u2019s each\n    connected to VSC7558 through QSGMII.\n  - 4x10G (1G/2.5G/5G/10G) RJ45 front ports using the AQR407 10G QuadPHY\n    each port connects to VSC7558 through SFI.\n  - 4x SFP28 25G module slots on back connected to VSC7558 through SFI high\n    speed.\n  - Optional, one additional 1G (10/100/1000M) RJ45 port using an on-board\n    VSC8211 PHY, which can be connected to VSC7558 NPI port through SGMII\n    using a loopback add-on PCB)\n\nThis series provides support for:\n  - SFPs and DAC cables via PHYLINK with a number of 5G, 10G and 25G\n    devices and media types.\n  - Port module configuration for 10M to 25G speeds with SGMII, QSGMII,\n    1000BASEX, 2500BASEX and 10GBASER as appropriate for these modes.\n  - SerDes configuration via the Sparx5i SerDes driver (see below).\n  - Host mode providing register based injection and extraction.\n  - Switch mode providing MAC/VLAN table learning and Layer2 switching\n    offloaded to the Sparx5i switch.\n  - STP state, VLAN support, host/bridge port mode, Forwarding DB, and\n    configuration and statistics via ethtool.\n\nMore support will be added at a later stage.\n\nThe Sparx5i Chip Register Model can be browsed at this location:\nhttps://github.com/microchip-ung/sparx-5_reginfo\nand the datasheet is available here:\nhttps://ww1.microchip.com/downloads/en/DeviceDoc/SparX-5_Family_L2L3_Enterprise_10G_Ethernet_Switches_Datasheet_00003822B.pdf\n\nThe series depends on the following series currently on their way\ninto the kernel:\n\n- 25G Base-R phy mode\n  Link: https://lore.kernel.org/r/20210611125453.313308-1-steen.hegelund@microchip.com/\n- Sparx5 Reset Driver\n  Link: https://lore.kernel.org/r/20210416084054.2922327-1-steen.hegelund@microchip.com/\n\nChangeLog:\nv5:\n    - cover letter\n        - updated the description to match the latest data sheets\n    - basic driver\n        - added error message in case of reset controller error\n        - port struct: replacing has_sfp with inband, adding pause_adv\n    - host mode\n        - port cleanup: unregisters netdevs and then removes phylink etc\n        - checking for pause_adv when comparing port config changes\n        - getting duplex and pause state in the link_up callback.\n        - getting inband, autoneg and pause_adv config in the pcs_config\n          callback.\n    - port\n        - use only the pause_adv bits when getting aneg status\n        - use the inband state when updating the PCS and port config\nv4:\n    - basic driver:\n        Using devm_reset_control_get_optional_shared to get the reset\n        control, and let the reset framework check if it is valid.\n    - host mode (phylink):\n        Use the PCS operations to get state and update configuration.\n        Removed the setting of interface modes.  Let phylink control this.\n        Using the new 5gbase-r and 25gbase-r modes.\n        Using a helper function to check if one of the 3 base-r modes has\n        been selected.\n        Currently it will not be possible to change the interface mode by\n        changing the speed (e.g via ethtool).  This will be added later.\nv3:\n    - basic driver:\n        - removed unneeded braces\n        - release reference to ports node after use\n        - use dev_err_probe to handle DEFER\n        - update error value when bailing out (a few cases)\n        - updated formatting of port struct and grouping of bool values\n        - simplified the spx5_rmw and spx5_inst_rmw inline functions\n    - host mode (netdev):\n        - removed lockless flag\n        - added port timer init\n    - host mode (packet - manual injection):\n        - updated error counters in error situations\n        - implemented timer handling of watermark threshold: stop and\n          restart netif queues.\n        - fixed error message handling (rate limited)\n        - fixed comment style error\n        - used DIV_ROUND_UP macro\n        - removed a debug message for open ports\n\nv2:\n    - Updated bindings:\n        - drop minItems for the reg property\n    - Statistics implementation:\n        - Reorganized statistics into ethtool groups:\n            eth-phy, eth-mac, eth-ctrl, rmon\n          as defined by the IEEE 802.3 categories and RFC 2819.\n        - The remaining statistics are provided by the classic ethtool\n          statistics command.\n    - Hostmode support:\n        - Removed netdev renaming\n        - Validate ethernet address in sparx5_set_mac_address()\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "David S. Miller",
  "author_email": "davem@davemloft.net",
  "author_date": "Thu Jun 24 11:28:13 2021 -0700",
  "author_date_iso": "2021-06-24T11:28:13-07:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Thu Jun 24 11:28:13 2021 -0700",
  "committer_date_iso": "2021-06-24T11:28:13-07:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "Documentation/devicetree/bindings/net/microchip,sparx5-switch.yaml",
      "insertions": 226,
      "deletions": 0
    },
    {
      "file": "arch/arm64/boot/dts/microchip/sparx5.dtsi",
      "insertions": 92,
      "deletions": 2
    },
    {
      "file": "arch/arm64/boot/dts/microchip/sparx5_pcb134_board.dtsi",
      "insertions": 423,
      "deletions": 58
    },
    {
      "file": "arch/arm64/boot/dts/microchip/sparx5_pcb135_board.dtsi",
      "insertions": 597,
      "deletions": 24
    },
    {
      "file": "drivers/net/ethernet/microchip/Kconfig",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/Kconfig",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/Makefile",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_calendar.c",
      "insertions": 596,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_ethtool.c",
      "insertions": 1227,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_mactable.c",
      "insertions": 500,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_main.c",
      "insertions": 852,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_main.h",
      "insertions": 375,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_main_regs.h",
      "insertions": 4642,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_netdev.c",
      "insertions": 264,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_packet.c",
      "insertions": 320,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_phylink.c",
      "insertions": 210,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_port.c",
      "insertions": 1146,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_port.h",
      "insertions": 93,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_switchdev.c",
      "insertions": 508,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/microchip/sparx5/sparx5_vlan.c",
      "insertions": 224,
      "deletions": 0
    }
  ],
  "total_insertions": 12318,
  "total_deletions": 84,
  "total_changes": 12402,
  "parents": [
    "c88c192dc3ea209694cc08f4ccf51f920d26bdae",
    "d0f482bb06f9447d44d2cae0386a0bd768c3cc16"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": []
}