{
  "hash": "ea5c8ef296681b53480ebeeffd06083bb60e693d",
  "hash_short": "ea5c8ef2",
  "subject": "media: cec-pin: add low-level pin hardware support",
  "body": "Add support for CEC hardware that relies on low-level pin polling or\nGPIO interrupts.\n\nOne example is the Allwinner SoC. But any GPIO-based CEC implementation can\nuse this as well.\n\nA GPIO implementation is very suitable as well for debugging: it can use\ninterrupts to detect state changes and report it. Userspace can then verify\nif the bus traffic is correct. This also makes error injection possible.\n\nThe disadvantage is that it is hard to get the timings right since linux\nisn't a hard realtime system.\n\nIn general on an idle system it works quite well, but under load the timer\nwill miss its mark every so often.\n\nThe debugfs file /sys/kernel/debug/cec/cecX/status gives some statistics\nwith respect to the timer overruns.\n\nWhen the adapter is unconfigured and the low-level driver supports\ninterrupts, then the interrupt will be used to detect changes. This should\nbe quite accurate. But when the adapter is configured a hrtimer has to be\nused.\n\nThe hrtimer implements a state machine where for each state the code will\nread the bus or drive the bus and go on to the next state. It will re-arm\nthe timer with a delay based on the next state.\n\nSigned-off-by: Hans Verkuil <hans.verkuil@cisco.com>\nReviewed-by: Maxime Ripard <maxime.ripard@free-electrons.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
  "full_message": "media: cec-pin: add low-level pin hardware support\n\nAdd support for CEC hardware that relies on low-level pin polling or\nGPIO interrupts.\n\nOne example is the Allwinner SoC. But any GPIO-based CEC implementation can\nuse this as well.\n\nA GPIO implementation is very suitable as well for debugging: it can use\ninterrupts to detect state changes and report it. Userspace can then verify\nif the bus traffic is correct. This also makes error injection possible.\n\nThe disadvantage is that it is hard to get the timings right since linux\nisn't a hard realtime system.\n\nIn general on an idle system it works quite well, but under load the timer\nwill miss its mark every so often.\n\nThe debugfs file /sys/kernel/debug/cec/cecX/status gives some statistics\nwith respect to the timer overruns.\n\nWhen the adapter is unconfigured and the low-level driver supports\ninterrupts, then the interrupt will be used to detect changes. This should\nbe quite accurate. But when the adapter is configured a hrtimer has to be\nused.\n\nThe hrtimer implements a state machine where for each state the code will\nread the bus or drive the bus and go on to the next state. It will re-arm\nthe timer with a delay based on the next state.\n\nSigned-off-by: Hans Verkuil <hans.verkuil@cisco.com>\nReviewed-by: Maxime Ripard <maxime.ripard@free-electrons.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
  "author_name": "Hans Verkuil",
  "author_email": "hans.verkuil@cisco.com",
  "author_date": "Tue Jul 11 03:30:42 2017 -0300",
  "author_date_iso": "2017-07-11T03:30:42-03:00",
  "committer_name": "Mauro Carvalho Chehab",
  "committer_email": "mchehab@s-opensource.com",
  "committer_date": "Tue Jul 18 12:57:18 2017 -0300",
  "committer_date_iso": "2017-07-18T12:57:18-03:00",
  "files_changed": [
    "drivers/media/Kconfig",
    "drivers/media/cec/Makefile",
    "drivers/media/cec/cec-api.c",
    "drivers/media/cec/cec-pin.c",
    "include/media/cec-pin.h",
    "include/media/cec.h"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "drivers/media/Kconfig",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "drivers/media/cec/Makefile",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "drivers/media/cec/cec-api.c",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "drivers/media/cec/cec-pin.c",
      "insertions": 794,
      "deletions": 0
    },
    {
      "file": "include/media/cec-pin.h",
      "insertions": 183,
      "deletions": 0
    },
    {
      "file": "include/media/cec.h",
      "insertions": 4,
      "deletions": 0
    }
  ],
  "total_insertions": 998,
  "total_deletions": 0,
  "total_changes": 998,
  "parents": [
    "b8d62f50b1df2571afcf47107bbbe9cd60f8aafd"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.14",
    "v4.14-rc1",
    "v4.14-rc2",
    "v4.14-rc3",
    "v4.14-rc4",
    "v4.14-rc5",
    "v4.14-rc6",
    "v4.14-rc7",
    "v4.14-rc8",
    "v4.15"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/media/cec/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/media/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/media/cec/cec-pin.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/media/cec-pin.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/media/cec.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/media/cec/cec-api.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}