commit e306784a8de08868d0ecbf78dd42a0051d0e14ce
Author: Subrat Mishra <subratm@codeaurora.org>
Date:   Wed Sep 15 11:22:23 2021 +0530

    cfg80211: AP mode driver offload for FILS association crypto
    
    Add a driver FILS crypto offload extended capability flag to indicate
    that the driver running in AP mode is capable of handling encryption
    and decryption of (Re)Association request and response frames.
    Add a command to set FILS AAD data to driver.
    
    This feature is supported on drivers running in AP mode only.
    This extended capability is exchanged with hostapd during cfg80211
    init. If the driver indicates this capability, then before sending the
    Authentication response frame, hostapd sets FILS AAD data to the
    driver. This allows the driver to decrypt (Re)Association Request
    frame and encrypt (Re)Association Response frame. FILS Key derivation
    will still be done in hostapd.
    
    Signed-off-by: Subrat Mishra <subratm@codeaurora.org>
    Link: https://lore.kernel.org/r/1631685143-13530-1-git-send-email-subratm@codeaurora.org
    [fix whitespace]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index 62dd8422e0dc..125f563d66a1 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -739,6 +739,22 @@ struct cfg80211_tid_config {
 	struct cfg80211_tid_cfg tid_conf[];
 };
 
+/**
+ * struct cfg80211_fils_aad - FILS AAD data
+ * @macaddr: STA MAC address
+ * @kek: FILS KEK
+ * @kek_len: FILS KEK length
+ * @snonce: STA Nonce
+ * @anonce: AP Nonce
+ */
+struct cfg80211_fils_aad {
+	const u8 *macaddr;
+	const u8 *kek;
+	u8 kek_len;
+	const u8 *snonce;
+	const u8 *anonce;
+};
+
 /**
  * cfg80211_get_chandef_type - return old channel type from chandef
  * @chandef: the channel definition
@@ -4018,6 +4034,10 @@ struct mgmt_frame_regs {
  * @set_sar_specs: Update the SAR (TX power) settings.
  *
  * @color_change: Initiate a color change.
+ *
+ * @set_fils_aad: Set FILS AAD data to the AP driver so that the driver can use
+ *	those to decrypt (Re)Association Request and encrypt (Re)Association
+ *	Response frame.
  */
 struct cfg80211_ops {
 	int	(*suspend)(struct wiphy *wiphy, struct cfg80211_wowlan *wow);
@@ -4348,6 +4368,8 @@ struct cfg80211_ops {
 	int	(*color_change)(struct wiphy *wiphy,
 				struct net_device *dev,
 				struct cfg80211_color_change_settings *params);
+	int     (*set_fils_aad)(struct wiphy *wiphy, struct net_device *dev,
+				struct cfg80211_fils_aad *fils_aad);
 };
 
 /*