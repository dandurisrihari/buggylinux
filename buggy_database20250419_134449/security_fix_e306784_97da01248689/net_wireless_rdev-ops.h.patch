commit e306784a8de08868d0ecbf78dd42a0051d0e14ce
Author: Subrat Mishra <subratm@codeaurora.org>
Date:   Wed Sep 15 11:22:23 2021 +0530

    cfg80211: AP mode driver offload for FILS association crypto
    
    Add a driver FILS crypto offload extended capability flag to indicate
    that the driver running in AP mode is capable of handling encryption
    and decryption of (Re)Association request and response frames.
    Add a command to set FILS AAD data to driver.
    
    This feature is supported on drivers running in AP mode only.
    This extended capability is exchanged with hostapd during cfg80211
    init. If the driver indicates this capability, then before sending the
    Authentication response frame, hostapd sets FILS AAD data to the
    driver. This allows the driver to decrypt (Re)Association Request
    frame and encrypt (Re)Association Response frame. FILS Key derivation
    will still be done in hostapd.
    
    Signed-off-by: Subrat Mishra <subratm@codeaurora.org>
    Link: https://lore.kernel.org/r/1631685143-13530-1-git-send-email-subratm@codeaurora.org
    [fix whitespace]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/net/wireless/rdev-ops.h b/net/wireless/rdev-ops.h
index ce6bf218a1a3..cc1efec4b27b 100644
--- a/net/wireless/rdev-ops.h
+++ b/net/wireless/rdev-ops.h
@@ -1381,4 +1381,18 @@ static inline int rdev_color_change(struct cfg80211_registered_device *rdev,
 	return ret;
 }
 
+static inline int
+rdev_set_fils_aad(struct cfg80211_registered_device *rdev,
+		  struct net_device *dev, struct cfg80211_fils_aad *fils_aad)
+{
+	int ret = -EOPNOTSUPP;
+
+	trace_rdev_set_fils_aad(&rdev->wiphy, dev, fils_aad);
+	if (rdev->ops->set_fils_aad)
+		ret = rdev->ops->set_fils_aad(&rdev->wiphy, dev, fils_aad);
+	trace_rdev_return_int(&rdev->wiphy, ret);
+
+	return ret;
+}
+
 #endif /* __CFG80211_RDEV_OPS */