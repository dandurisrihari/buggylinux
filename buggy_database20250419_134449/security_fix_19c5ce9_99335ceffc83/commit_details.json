{
  "hash": "19c5ce9c5ff80a26cba3afb3684d56539444ee40",
  "hash_short": "19c5ce9c",
  "subject": "Bluetooth: Add workaround for broken OS X legacy SMP pairing",
  "body": "OS X version 10.10.2 (and possibly older versions) doesn't support LE\nSecure Connections but incorrectly copies all authentication request\nbits from a Security Request to its Pairing Request. The result is that\nan SC capable initiator (such as BlueZ) will think OS X intends to do SC\nwhen in fact it's incapable of it:\n\n< ACL Data TX: Handle 3585 flags 0x00 dlen 6\n      SMP: Security Request (0x0b) len 1\n        Authentication requirement: Bonding, No MITM, SC, No Keypresses (0x09)\n> ACL Data RX: Handle 3585 flags 0x02 dlen 11\n      SMP: Pairing Request (0x01) len 6\n        IO capability: KeyboardDisplay (0x04)\n        OOB data: Authentication data not present (0x00)\n        Authentication requirement: Bonding, No MITM, SC, No Keypresses (0x09)\n        Max encryption key size: 16\n        Initiator key distribution: EncKey (0x01)\n        Responder key distribution: EncKey IdKey Sign (0x07)\n< ACL Data TX: Handle 3585 flags 0x00 dlen 11\n      SMP: Pairing Response (0x02) len 6\n        IO capability: NoInputNoOutput (0x03)\n        OOB data: Authentication data not present (0x00)\n        Authentication requirement: Bonding, No MITM, SC, No Keypresses (0x09)\n        Max encryption key size: 16\n        Initiator key distribution: EncKey (0x01)\n        Responder key distribution: EncKey Sign (0x05)\n\nThe pairing eventually fails when we get an unexpected Pairing Confirm\nPDU instead of a Public Key PDU:\n\n> ACL Data RX: Handle 3585 flags 0x02 dlen 21\n      SMP: Pairing Confirm (0x03) len 16\n        Confim value: bcc3bed31b8f313a78ec3cce32685faf\n\nIt is only at this point that we can speculate that the remote doesn't\nreally support SC. This patch creates a workaround for the just-works\nmodel, however the MITM case is unsolvable because the OS X user has\nalready been requested to enter a PIN which we're now expected to\nrandomly generate and show the user (i.e. a chicken-and-egg problem).\n\nSigned-off-by: Johan Hedberg <johan.hedberg@intel.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>",
  "full_message": "Bluetooth: Add workaround for broken OS X legacy SMP pairing\n\nOS X version 10.10.2 (and possibly older versions) doesn't support LE\nSecure Connections but incorrectly copies all authentication request\nbits from a Security Request to its Pairing Request. The result is that\nan SC capable initiator (such as BlueZ) will think OS X intends to do SC\nwhen in fact it's incapable of it:\n\n< ACL Data TX: Handle 3585 flags 0x00 dlen 6\n      SMP: Security Request (0x0b) len 1\n        Authentication requirement: Bonding, No MITM, SC, No Keypresses (0x09)\n> ACL Data RX: Handle 3585 flags 0x02 dlen 11\n      SMP: Pairing Request (0x01) len 6\n        IO capability: KeyboardDisplay (0x04)\n        OOB data: Authentication data not present (0x00)\n        Authentication requirement: Bonding, No MITM, SC, No Keypresses (0x09)\n        Max encryption key size: 16\n        Initiator key distribution: EncKey (0x01)\n        Responder key distribution: EncKey IdKey Sign (0x07)\n< ACL Data TX: Handle 3585 flags 0x00 dlen 11\n      SMP: Pairing Response (0x02) len 6\n        IO capability: NoInputNoOutput (0x03)\n        OOB data: Authentication data not present (0x00)\n        Authentication requirement: Bonding, No MITM, SC, No Keypresses (0x09)\n        Max encryption key size: 16\n        Initiator key distribution: EncKey (0x01)\n        Responder key distribution: EncKey Sign (0x05)\n\nThe pairing eventually fails when we get an unexpected Pairing Confirm\nPDU instead of a Public Key PDU:\n\n> ACL Data RX: Handle 3585 flags 0x02 dlen 21\n      SMP: Pairing Confirm (0x03) len 16\n        Confim value: bcc3bed31b8f313a78ec3cce32685faf\n\nIt is only at this point that we can speculate that the remote doesn't\nreally support SC. This patch creates a workaround for the just-works\nmodel, however the MITM case is unsolvable because the OS X user has\nalready been requested to enter a PIN which we're now expected to\nrandomly generate and show the user (i.e. a chicken-and-egg problem).\n\nSigned-off-by: Johan Hedberg <johan.hedberg@intel.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>",
  "author_name": "Johan Hedberg",
  "author_email": "johan.hedberg@intel.com",
  "author_date": "Sun Mar 15 19:34:04 2015 +0200",
  "author_date_iso": "2015-03-15T19:34:04+02:00",
  "committer_name": "Marcel Holtmann",
  "committer_email": "marcel@holtmann.org",
  "committer_date": "Tue Mar 17 18:58:24 2015 +0100",
  "committer_date_iso": "2015-03-17T18:58:24+01:00",
  "files_changed": [
    "net/bluetooth/smp.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/bluetooth/smp.c",
      "insertions": 67,
      "deletions": 8
    }
  ],
  "total_insertions": 67,
  "total_deletions": 8,
  "total_changes": 75,
  "parents": [
    "fa4335d71a1408d0112c15874538f3f4e153ba01"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.1",
    "v4.1-rc1",
    "v4.1-rc2",
    "v4.1-rc3",
    "v4.1-rc4",
    "v4.1-rc5",
    "v4.1-rc6",
    "v4.1-rc7",
    "v4.1-rc8",
    "v4.10"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/bluetooth/smp.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}