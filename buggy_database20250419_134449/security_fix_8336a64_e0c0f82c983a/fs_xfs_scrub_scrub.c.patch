commit 8336a64eb75cba4cc4749d9c4770fef53afdc1ad
Author: Darrick J. Wong <djwong@kernel.org>
Date:   Thu Aug 10 07:48:10 2023 -0700

    xfs: don't complain about unfixed metadata when repairs were injected
    
    While debugging other parts of online repair, I noticed that if someone
    injects FORCE_SCRUB_REPAIR, starts an IFLAG_REPAIR scrub on a piece of
    metadata, and the metadata repair fails, we'll log a message about
    uncorrected errors in the filesystem.
    
    This isn't strictly true if the scrub function didn't set OFLAG_CORRUPT
    and we're only doing the repair because the error injection knob is set.
    Repair functions are allowed to abort the entire operation at any point
    before committing new metadata, in which case the piece of metadata is
    in the same state as it was before.  Therefore, the log message should
    be gated on the results of the scrub.  Refactor the predicate and
    rearrange the code flow to make this happen.
    
    Note: If the repair function errors out after it commits the new
    metadata, the transaction cancellation will shut down the filesystem,
    which is an obvious sign of corrupt metadata.
    
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>

diff --git a/fs/xfs/scrub/scrub.c b/fs/xfs/scrub/scrub.c
index 939d1d12917b..aade9d3b0283 100644
--- a/fs/xfs/scrub/scrub.c
+++ b/fs/xfs/scrub/scrub.c
@@ -535,15 +535,12 @@ xfs_scrub_metadata(
 
 	if ((sc->sm->sm_flags & XFS_SCRUB_IFLAG_REPAIR) &&
 	    !(sc->flags & XREP_ALREADY_FIXED)) {
-		bool needs_fix;
+		bool needs_fix = xchk_needs_repair(sc->sm);
 
 		/* Let debug users force us into the repair routines. */
 		if (XFS_TEST_ERROR(false, mp, XFS_ERRTAG_FORCE_SCRUB_REPAIR))
-			sc->sm->sm_flags |= XFS_SCRUB_OFLAG_CORRUPT;
+			needs_fix = true;
 
-		needs_fix = (sc->sm->sm_flags & (XFS_SCRUB_OFLAG_CORRUPT |
-						 XFS_SCRUB_OFLAG_XCORRUPT |
-						 XFS_SCRUB_OFLAG_PREEN));
 		/*
 		 * If userspace asked for a repair but it wasn't necessary,
 		 * report that back to userspace.