{
  "hash": "8336a64eb75cba4cc4749d9c4770fef53afdc1ad",
  "hash_short": "8336a64e",
  "subject": "xfs: don't complain about unfixed metadata when repairs were injected",
  "body": "While debugging other parts of online repair, I noticed that if someone\ninjects FORCE_SCRUB_REPAIR, starts an IFLAG_REPAIR scrub on a piece of\nmetadata, and the metadata repair fails, we'll log a message about\nuncorrected errors in the filesystem.\n\nThis isn't strictly true if the scrub function didn't set OFLAG_CORRUPT\nand we're only doing the repair because the error injection knob is set.\nRepair functions are allowed to abort the entire operation at any point\nbefore committing new metadata, in which case the piece of metadata is\nin the same state as it was before.  Therefore, the log message should\nbe gated on the results of the scrub.  Refactor the predicate and\nrearrange the code flow to make this happen.\n\nNote: If the repair function errors out after it commits the new\nmetadata, the transaction cancellation will shut down the filesystem,\nwhich is an obvious sign of corrupt metadata.\n\nSigned-off-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-by: Dave Chinner <dchinner@redhat.com>",
  "full_message": "xfs: don't complain about unfixed metadata when repairs were injected\n\nWhile debugging other parts of online repair, I noticed that if someone\ninjects FORCE_SCRUB_REPAIR, starts an IFLAG_REPAIR scrub on a piece of\nmetadata, and the metadata repair fails, we'll log a message about\nuncorrected errors in the filesystem.\n\nThis isn't strictly true if the scrub function didn't set OFLAG_CORRUPT\nand we're only doing the repair because the error injection knob is set.\nRepair functions are allowed to abort the entire operation at any point\nbefore committing new metadata, in which case the piece of metadata is\nin the same state as it was before.  Therefore, the log message should\nbe gated on the results of the scrub.  Refactor the predicate and\nrearrange the code flow to make this happen.\n\nNote: If the repair function errors out after it commits the new\nmetadata, the transaction cancellation will shut down the filesystem,\nwhich is an obvious sign of corrupt metadata.\n\nSigned-off-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-by: Dave Chinner <dchinner@redhat.com>",
  "author_name": "Darrick J. Wong",
  "author_email": "djwong@kernel.org",
  "author_date": "Thu Aug 10 07:48:10 2023 -0700",
  "author_date_iso": "2023-08-10T07:48:10-07:00",
  "committer_name": "Darrick J. Wong",
  "committer_email": "djwong@kernel.org",
  "committer_date": "Thu Aug 10 07:48:10 2023 -0700",
  "committer_date_iso": "2023-08-10T07:48:10-07:00",
  "files_changed": [
    "fs/xfs/scrub/common.h",
    "fs/xfs/scrub/scrub.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "fs/xfs/scrub/common.h",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/scrub.c",
      "insertions": 2,
      "deletions": 5
    }
  ],
  "total_insertions": 14,
  "total_deletions": 5,
  "total_changes": 19,
  "parents": [
    "d728f4e3b21e74910e370b09bab54629eb66badb"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/xfs/scrub/common.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/scrub/scrub.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}