{
  "hash": "53dabce2652fb854eae84609ce9c37429d5d87ba",
  "hash_short": "53dabce2",
  "subject": "mm, page_alloc: put should_fail_alloc_page() back behing CONFIG_FAIL_PAGE_ALLOC",
  "body": "This mostly reverts commit af3b854492f3 (\"mm/page_alloc.c: allow error\ninjection\").  The commit made should_fail_alloc_page() a noinline function\nthat's always called from the page allocation hotpath, even if it's empty\nbecause CONFIG_FAIL_PAGE_ALLOC is not enabled, and there is no option to\ndisable it and prevent the associated function call overhead.\n\nAs with the preceding patch \"mm, slab: put should_failslab back behind\nCONFIG_SHOULD_FAILSLAB\" and for the same reasons, put the\nshould_fail_alloc_page() back behind the config option.  When enabled, the\nALLOW_ERROR_INJECTION and BTF_ID records are preserved so it's not a\ncomplete revert.\n\nLink: https://lkml.kernel.org/r/20240711-b4-fault-injection-reverts-v1-2-9e2651945d68@suse.cz\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>\nCc: Akinobu Mita <akinobu.mita@gmail.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Christoph Lameter <cl@linux.com>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: David Rientjes <rientjes@google.com>\nCc: Eduard Zingerman <eddyz87@gmail.com>\nCc: Hao Luo <haoluo@google.com>\nCc: Hyeonggon Yoo <42.hyeyoo@gmail.com>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: John Fastabend <john.fastabend@gmail.com>\nCc: KP Singh <kpsingh@kernel.org>\nCc: Martin KaFai Lau <martin.lau@linux.dev>\nCc: Mateusz Guzik <mjguzik@gmail.com>\nCc: Roman Gushchin <roman.gushchin@linux.dev>\nCc: Song Liu <song@kernel.org>\nCc: Stanislav Fomichev <sdf@fomichev.me>\nCc: Yonghong Song <yonghong.song@linux.dev>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "full_message": "mm, page_alloc: put should_fail_alloc_page() back behing CONFIG_FAIL_PAGE_ALLOC\n\nThis mostly reverts commit af3b854492f3 (\"mm/page_alloc.c: allow error\ninjection\").  The commit made should_fail_alloc_page() a noinline function\nthat's always called from the page allocation hotpath, even if it's empty\nbecause CONFIG_FAIL_PAGE_ALLOC is not enabled, and there is no option to\ndisable it and prevent the associated function call overhead.\n\nAs with the preceding patch \"mm, slab: put should_failslab back behind\nCONFIG_SHOULD_FAILSLAB\" and for the same reasons, put the\nshould_fail_alloc_page() back behind the config option.  When enabled, the\nALLOW_ERROR_INJECTION and BTF_ID records are preserved so it's not a\ncomplete revert.\n\nLink: https://lkml.kernel.org/r/20240711-b4-fault-injection-reverts-v1-2-9e2651945d68@suse.cz\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>\nCc: Akinobu Mita <akinobu.mita@gmail.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Christoph Lameter <cl@linux.com>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: David Rientjes <rientjes@google.com>\nCc: Eduard Zingerman <eddyz87@gmail.com>\nCc: Hao Luo <haoluo@google.com>\nCc: Hyeonggon Yoo <42.hyeyoo@gmail.com>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: John Fastabend <john.fastabend@gmail.com>\nCc: KP Singh <kpsingh@kernel.org>\nCc: Martin KaFai Lau <martin.lau@linux.dev>\nCc: Mateusz Guzik <mjguzik@gmail.com>\nCc: Roman Gushchin <roman.gushchin@linux.dev>\nCc: Song Liu <song@kernel.org>\nCc: Stanislav Fomichev <sdf@fomichev.me>\nCc: Yonghong Song <yonghong.song@linux.dev>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "author_name": "Vlastimil Babka",
  "author_email": "vbabka@suse.cz",
  "author_date": "Thu Jul 11 18:35:31 2024 +0200",
  "author_date_iso": "2024-07-11T18:35:31+02:00",
  "committer_name": "Andrew Morton",
  "committer_email": "akpm@linux-foundation.org",
  "committer_date": "Wed Jul 17 21:05:18 2024 -0700",
  "committer_date_iso": "2024-07-17T21:05:18-07:00",
  "files_changed": [
    "include/linux/fault-inject.h",
    "kernel/bpf/verifier.c",
    "mm/fail_page_alloc.c",
    "mm/page_alloc.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "include/linux/fault-inject.h",
      "insertions": 2,
      "deletions": 4
    },
    {
      "file": "kernel/bpf/verifier.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "mm/fail_page_alloc.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "mm/page_alloc.c",
      "insertions": 0,
      "deletions": 6
    }
  ],
  "total_insertions": 7,
  "total_deletions": 11,
  "total_changes": 18,
  "parents": [
    "a7526fe8b94eced7d82aa00b2bcca44e39ae0769"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/fault-inject.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/bpf/verifier.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/fail_page_alloc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/page_alloc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}