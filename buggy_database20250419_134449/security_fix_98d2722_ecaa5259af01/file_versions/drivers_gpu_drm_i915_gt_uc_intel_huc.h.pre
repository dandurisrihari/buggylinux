commit 6a9b6c4580af184f1f8744ade1fe1979e3da05ac
Author: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
Date:   Wed May 31 16:54:11 2023 -0700

    drm/i915/huc: Load GSC-enabled HuC via DMA xfer if the fuse says so
    
    In the previous patch we extracted the offset of the legacy-style HuC
    binary located within the GSC-enabled blob, so now we can use that to
    load the HuC via DMA if the fuse is set that way.
    Note that we now need to differentiate between "GSC-enabled binary" and
    "loaded by GSC", so the former case has been renamed to "has GSC headers"
    for clarity, while the latter is now based on the fuse instead of the
    binary format. This way, all the legacy load paths are automatically
    taken (including the auth by GuC) without having to implement further
    code changes.
    
    v2: s/is_meu_binary/has_gsc_headers/, clearer logs (John)
    
    v3: split check for GSC access, better comments (John)
    
    Signed-off-by: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
    Cc: Alan Previn <alan.previn.teres.alexis@intel.com>
    Cc: John Harrison <John.C.Harrison@Intel.com>
    Reviewed-by: John Harrison <John.C.Harrison@Intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230531235415.1467475-4-daniele.ceraolospurio@intel.com

diff --git a/drivers/gpu/drm/i915/gt/uc/intel_huc.h b/drivers/gpu/drm/i915/gt/uc/intel_huc.h
index 0789184d81a2..112f0dce4702 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_huc.h
+++ b/drivers/gpu/drm/i915/gt/uc/intel_huc.h
@@ -39,6 +39,8 @@ struct intel_huc {
 		struct notifier_block nb;
 		enum intel_huc_delayed_load_status status;
 	} delayed_load;
+
+	bool loaded_via_gsc;
 };
 
 int intel_huc_sanitize(struct intel_huc *huc);
@@ -73,7 +75,7 @@ static inline bool intel_huc_is_used(struct intel_huc *huc)
 
 static inline bool intel_huc_is_loaded_by_gsc(const struct intel_huc *huc)
 {
-	return huc->fw.loaded_via_gsc;
+	return huc->loaded_via_gsc;
 }
 
 static inline bool intel_huc_wait_required(struct intel_huc *huc)