{
  "hash": "dfdcbf1fc3ecc395e56afcacf0aa601dfadebd28",
  "hash_short": "dfdcbf1f",
  "subject": "Merge tag 'nvme-6.1-2022-09-28' of git://git.infradead.org/nvme into for-6.1/block",
  "body": "Pull NVMe updates from Christoph:\n\n\"nvme updates for Linux 6.1\n\n - handle effects after freeing the request (Keith Busch)\n - copy firmware_rev on each init (Keith Busch)\n - restrict management ioctls to admin (Keith Busch)\n - ensure subsystem reset is single threaded (Keith Busch)\n - report the actual number of tagset maps in nvme-pci (Keith Busch)\n - small fabrics authentication fixups (Christoph Hellwig)\n - add common code for tagset allocation and freeing (Christoph Hellwig)\n - stop using the request_queue in nvmet (Christoph Hellwig)\n - set min_align_mask before calculating max_hw_sectors\n   (Rishabh Bhatnagar)\n - send a rediscover uevent when a persistent discovery controller\n   reconnects (Sagi Grimberg)\n - misc nvmet-tcp fixes (Varun Prakash, zhenwei pi)\"\n\n* tag 'nvme-6.1-2022-09-28' of git://git.infradead.org/nvme: (31 commits)\n  nvmet: don't look at the request_queue in nvmet_bdev_set_limits\n  nvmet: don't look at the request_queue in nvmet_bdev_zone_mgmt_emulate_all\n  nvme: remove nvme_ctrl_init_connect_q\n  nvme-loop: use the tagset alloc/free helpers\n  nvme-loop: store the generic nvme_ctrl in set->driver_data\n  nvme-loop: initialize sqsize later\n  nvme-fc: use the tagset alloc/free helpers\n  nvme-fc: store the generic nvme_ctrl in set->driver_data\n  nvme-fc: keep ctrl->sqsize in sync with opts->queue_size\n  nvme-rdma: use the tagset alloc/free helpers\n  nvme-rdma: store the generic nvme_ctrl in set->driver_data\n  nvme-tcp: use the tagset alloc/free helpers\n  nvme-tcp: store the generic nvme_ctrl in set->driver_data\n  nvme-tcp: remove the unused queue_size member in nvme_tcp_queue\n  nvme: add common helpers to allocate and free tagsets\n  nvme-auth: add a MAINTAINERS entry\n  nvmet: add helpers to set the result field for connect commands\n  nvme: improve the NVME_CONNECT_AUTHREQ* definitions\n  nvmet-auth: don't try to cancel a non-initialized work_struct\n  nvmet-tcp: remove nvmet_tcp_finish_cmd\n  ...",
  "full_message": "Merge tag 'nvme-6.1-2022-09-28' of git://git.infradead.org/nvme into for-6.1/block\n\nPull NVMe updates from Christoph:\n\n\"nvme updates for Linux 6.1\n\n - handle effects after freeing the request (Keith Busch)\n - copy firmware_rev on each init (Keith Busch)\n - restrict management ioctls to admin (Keith Busch)\n - ensure subsystem reset is single threaded (Keith Busch)\n - report the actual number of tagset maps in nvme-pci (Keith Busch)\n - small fabrics authentication fixups (Christoph Hellwig)\n - add common code for tagset allocation and freeing (Christoph Hellwig)\n - stop using the request_queue in nvmet (Christoph Hellwig)\n - set min_align_mask before calculating max_hw_sectors\n   (Rishabh Bhatnagar)\n - send a rediscover uevent when a persistent discovery controller\n   reconnects (Sagi Grimberg)\n - misc nvmet-tcp fixes (Varun Prakash, zhenwei pi)\"\n\n* tag 'nvme-6.1-2022-09-28' of git://git.infradead.org/nvme: (31 commits)\n  nvmet: don't look at the request_queue in nvmet_bdev_set_limits\n  nvmet: don't look at the request_queue in nvmet_bdev_zone_mgmt_emulate_all\n  nvme: remove nvme_ctrl_init_connect_q\n  nvme-loop: use the tagset alloc/free helpers\n  nvme-loop: store the generic nvme_ctrl in set->driver_data\n  nvme-loop: initialize sqsize later\n  nvme-fc: use the tagset alloc/free helpers\n  nvme-fc: store the generic nvme_ctrl in set->driver_data\n  nvme-fc: keep ctrl->sqsize in sync with opts->queue_size\n  nvme-rdma: use the tagset alloc/free helpers\n  nvme-rdma: store the generic nvme_ctrl in set->driver_data\n  nvme-tcp: use the tagset alloc/free helpers\n  nvme-tcp: store the generic nvme_ctrl in set->driver_data\n  nvme-tcp: remove the unused queue_size member in nvme_tcp_queue\n  nvme: add common helpers to allocate and free tagsets\n  nvme-auth: add a MAINTAINERS entry\n  nvmet: add helpers to set the result field for connect commands\n  nvme: improve the NVME_CONNECT_AUTHREQ* definitions\n  nvmet-auth: don't try to cancel a non-initialized work_struct\n  nvmet-tcp: remove nvmet_tcp_finish_cmd\n  ...",
  "author_name": "Jens Axboe",
  "author_email": "axboe@kernel.dk",
  "author_date": "Wed Sep 28 11:11:16 2022 -0600",
  "author_date_iso": "2022-09-28T11:11:16-06:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Wed Sep 28 11:11:16 2022 -0600",
  "committer_date_iso": "2022-09-28T11:11:16-06:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "MAINTAINERS",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "drivers/nvme/host/core.c",
      "insertions": 120,
      "deletions": 12
    },
    {
      "file": "drivers/nvme/host/fc.c",
      "insertions": 28,
      "deletions": 93
    },
    {
      "file": "drivers/nvme/host/ioctl.c",
      "insertions": 14,
      "deletions": 1
    },
    {
      "file": "drivers/nvme/host/nvme.h",
      "insertions": 30,
      "deletions": 14
    },
    {
      "file": "drivers/nvme/host/pci.c",
      "insertions": 6,
      "deletions": 3
    },
    {
      "file": "drivers/nvme/host/rdma.c",
      "insertions": 38,
      "deletions": 103
    },
    {
      "file": "drivers/nvme/host/tcp.c",
      "insertions": 23,
      "deletions": 95
    },
    {
      "file": "drivers/nvme/target/core.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/nvme/target/fabrics-cmd-auth.c",
      "insertions": 4,
      "deletions": 9
    },
    {
      "file": "drivers/nvme/target/fabrics-cmd.c",
      "insertions": 8,
      "deletions": 10
    },
    {
      "file": "drivers/nvme/target/io-cmd-bdev.c",
      "insertions": 5,
      "deletions": 6
    },
    {
      "file": "drivers/nvme/target/loop.c",
      "insertions": 23,
      "deletions": 68
    },
    {
      "file": "drivers/nvme/target/nvmet.h",
      "insertions": 4,
      "deletions": 3
    },
    {
      "file": "drivers/nvme/target/passthru.c",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "drivers/nvme/target/tcp.c",
      "insertions": 34,
      "deletions": 13
    },
    {
      "file": "drivers/nvme/target/zns.c",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "include/linux/nvme.h",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 356,
  "total_deletions": 435,
  "total_changes": 791,
  "parents": [
    "c68f4f4e296b6011032b4f88d0ce72eb72a6bb07",
    "84fe64f898913ef69f70a8d91aea613b5722b63b"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": []
}