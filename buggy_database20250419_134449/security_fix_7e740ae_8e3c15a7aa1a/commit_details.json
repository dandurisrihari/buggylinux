{
  "hash": "7e740ae6350407d68d2069ce79a6344bf1b58fe1",
  "hash_short": "7e740ae6",
  "subject": "Merge tag 'ras_core_for_v5.17_rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip",
  "body": "Pull RAS updates from Borislav Petkov:\n \"A relatively big amount of movements in RAS-land this time around:\n\n   - First part of a series to move the AMD address translation code\n     from arch/x86/ to amd64_edac as that is its only user anyway\n\n   - Some MCE error injection improvements to the AMD side\n\n   - Reorganization of the #MC handler code and the facilities it calls\n     to make it noinstr-safe\n\n   - Add support for new AMD MCA bank types and non-uniform banks layout\n\n   - The usual set of cleanups and fixes\"\n\n* tag 'ras_core_for_v5.17_rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (24 commits)\n  x86/mce: Reduce number of machine checks taken during recovery\n  x86/mce/inject: Avoid out-of-bounds write when setting flags\n  x86/MCE/AMD, EDAC/mce_amd: Support non-uniform MCA bank type enumeration\n  x86/MCE/AMD, EDAC/mce_amd: Add new SMCA bank types\n  x86/mce: Check regs before accessing it\n  x86/mce: Mark mce_start() noinstr\n  x86/mce: Mark mce_timed_out() noinstr\n  x86/mce: Move the tainting outside of the noinstr region\n  x86/mce: Mark mce_read_aux() noinstr\n  x86/mce: Mark mce_end() noinstr\n  x86/mce: Mark mce_panic() noinstr\n  x86/mce: Prevent severity computation from being instrumented\n  x86/mce: Allow instrumentation during task work queueing\n  x86/mce: Remove noinstr annotation from mce_setup()\n  x86/mce: Use mce_rdmsrl() in severity checking code\n  x86/mce: Remove function-local cpus variables\n  x86/mce: Do not use memset to clear the banks bitmaps\n  x86/mce/inject: Set the valid bit in MCA_STATUS before error injection\n  x86/mce/inject: Check if a bank is populated before injecting\n  x86/mce: Get rid of cpu_missing\n  ...",
  "full_message": "Merge tag 'ras_core_for_v5.17_rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull RAS updates from Borislav Petkov:\n \"A relatively big amount of movements in RAS-land this time around:\n\n   - First part of a series to move the AMD address translation code\n     from arch/x86/ to amd64_edac as that is its only user anyway\n\n   - Some MCE error injection improvements to the AMD side\n\n   - Reorganization of the #MC handler code and the facilities it calls\n     to make it noinstr-safe\n\n   - Add support for new AMD MCA bank types and non-uniform banks layout\n\n   - The usual set of cleanups and fixes\"\n\n* tag 'ras_core_for_v5.17_rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (24 commits)\n  x86/mce: Reduce number of machine checks taken during recovery\n  x86/mce/inject: Avoid out-of-bounds write when setting flags\n  x86/MCE/AMD, EDAC/mce_amd: Support non-uniform MCA bank type enumeration\n  x86/MCE/AMD, EDAC/mce_amd: Add new SMCA bank types\n  x86/mce: Check regs before accessing it\n  x86/mce: Mark mce_start() noinstr\n  x86/mce: Mark mce_timed_out() noinstr\n  x86/mce: Move the tainting outside of the noinstr region\n  x86/mce: Mark mce_read_aux() noinstr\n  x86/mce: Mark mce_end() noinstr\n  x86/mce: Mark mce_panic() noinstr\n  x86/mce: Prevent severity computation from being instrumented\n  x86/mce: Allow instrumentation during task work queueing\n  x86/mce: Remove noinstr annotation from mce_setup()\n  x86/mce: Use mce_rdmsrl() in severity checking code\n  x86/mce: Remove function-local cpus variables\n  x86/mce: Do not use memset to clear the banks bitmaps\n  x86/mce/inject: Set the valid bit in MCA_STATUS before error injection\n  x86/mce/inject: Check if a bank is populated before injecting\n  x86/mce: Get rid of cpu_missing\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Mon Jan 10 11:43:09 2022 -0800",
  "author_date_iso": "2022-01-10T11:43:09-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Jan 10 11:43:09 2022 -0800",
  "committer_date_iso": "2022-01-10T11:43:09-08:00",
  "files_changed": [
    "arch/x86/lib/copy_user_64.S"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/include/asm/amd_nb.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/x86/include/asm/mce.h",
      "insertions": 8,
      "deletions": 20
    },
    {
      "file": "arch/x86/kernel/amd_nb.c",
      "insertions": 1,
      "deletions": 48
    },
    {
      "file": "arch/x86/kernel/cpu/mce/amd.c",
      "insertions": 51,
      "deletions": 229
    },
    {
      "file": "arch/x86/kernel/cpu/mce/core.c",
      "insertions": 105,
      "deletions": 44
    },
    {
      "file": "arch/x86/kernel/cpu/mce/inject.c",
      "insertions": 44,
      "deletions": 2
    },
    {
      "file": "arch/x86/kernel/cpu/mce/internal.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/mce/severity.c",
      "insertions": 27,
      "deletions": 14
    },
    {
      "file": "arch/x86/lib/copy_user_64.S",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "drivers/edac/amd64_edac.c",
      "insertions": 275,
      "deletions": 0
    },
    {
      "file": "drivers/edac/mce_amd.c",
      "insertions": 130,
      "deletions": 16
    },
    {
      "file": "drivers/gpu/drm/amd/amdgpu/amdgpu_ras.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 653,
  "total_deletions": 375,
  "total_changes": 1028,
  "parents": [
    "48a60bdb2be807767eba6878fdf2fe5bea5d8d27",
    "3376136300a00df9a864b88fa969177d6c3be8e5"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/lib/copy_user_64.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}