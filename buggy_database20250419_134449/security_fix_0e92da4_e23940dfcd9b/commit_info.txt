Commit Hash: 0e92da4acb763272c6060f0b14adc2377b627d07
Subject: [PATCH] x86_64: Don't clobber r8-r11 in int 0x80 handler


Security Keywords:
- security issue

Full commit message:
[PATCH] x86_64: Don't clobber r8-r11 in int 0x80 handler

When int 0x80 is called from long mode r8-r11 would leak out of the
kernel (or rather they would be filled with some values from
the kernel stack). I don't think it's a security issue because
the values come from the fixed stack frame which should be near
always user registers from a previous interrupt.

Still better fix it.

Longer term the register save macros need to be cleaned up
to avoid such mistakes in the future.

Original analysis from Richard Brunner, fix by me.

Cc: Richard.Brunner@amd.com

Signed-off-by: Andi Kleen <ak@suse.de>
Signed-off-by: Linus Torvalds <torvalds@osdl.org>

Metadata:
Author: Andi Kleen <ak@suse.de>
Author Date: Fri Jul 28 14:44:45 2006 +0200
Committer: Linus Torvalds <torvalds@g5.osdl.org>
Commit Date: Fri Jul 28 19:28:00 2006 -0700

Files Changed: 1
Lines Added: 1
Lines Removed: 1
Total Changes: 2
