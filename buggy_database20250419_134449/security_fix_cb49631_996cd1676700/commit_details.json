{
  "hash": "cb49631ad111570f1bad37702c11c2ae07fa2e3c",
  "hash_short": "cb49631a",
  "subject": "KVM: SVM: Don't inject #UD if KVM attempts to skip SEV guest insn",
  "body": "Don't inject a #UD if KVM attempts to \"emulate\" to skip an instruction\nfor an SEV guest, and instead resume the guest and hope that it can make\nforward progress.  When commit 04c40f344def (\"KVM: SVM: Inject #UD on\nattempted emulation for SEV guest w/o insn buffer\") added the completely\narbitrary #UD behavior, there were no known scenarios where a well-behaved\nguest would induce a VM-Exit that triggered emulation, i.e. it was thought\nthat injecting #UD would be helpful.\n\nHowever, now that KVM (correctly) attempts to re-inject INT3/INTO, e.g. if\na #NPF is encountered when attempting to deliver the INT3/INTO, an SEV\nguest can trigger emulation without a buffer, through no fault of its own.\nResuming the guest and retrying the INT3/INTO is architecturally wrong,\ne.g. the vCPU will incorrectly re-hit code #DBs, but for SEV guests there\nis literally no other option that has a chance of making forward progress.\n\nDrop the #UD injection for all \"skip\" emulation, not just those related to\nINT3/INTO, even though that means that the guest will likely end up in an\ninfinite loop instead of getting a #UD (the vCPU may also crash, e.g. if\nKVM emulated everything about an instruction except for advancing RIP).\nThere's no evidence that suggests that an unexpected #UD is actually\nbetter than hanging the vCPU, e.g. a soft-hung vCPU can still respond to\nIRQs and NMIs to generate a backtrace.\n\nReported-by: Wu Zongyo <wuzongyo@mail.ustc.edu.cn>\nCloses: https://lore.kernel.org/all/8eb933fd-2cf3-d7a9-32fe-2a1d82eac42a@mail.ustc.edu.cn\nFixes: 6ef88d6e36c2 (\"KVM: SVM: Re-inject INT3/INTO instead of retrying the instruction\")\nCc: stable@vger.kernel.org\nCc: Tom Lendacky <thomas.lendacky@amd.com>\nLink: https://lore.kernel.org/r/20230825013621.2845700-2-seanjc@google.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>",
  "full_message": "KVM: SVM: Don't inject #UD if KVM attempts to skip SEV guest insn\n\nDon't inject a #UD if KVM attempts to \"emulate\" to skip an instruction\nfor an SEV guest, and instead resume the guest and hope that it can make\nforward progress.  When commit 04c40f344def (\"KVM: SVM: Inject #UD on\nattempted emulation for SEV guest w/o insn buffer\") added the completely\narbitrary #UD behavior, there were no known scenarios where a well-behaved\nguest would induce a VM-Exit that triggered emulation, i.e. it was thought\nthat injecting #UD would be helpful.\n\nHowever, now that KVM (correctly) attempts to re-inject INT3/INTO, e.g. if\na #NPF is encountered when attempting to deliver the INT3/INTO, an SEV\nguest can trigger emulation without a buffer, through no fault of its own.\nResuming the guest and retrying the INT3/INTO is architecturally wrong,\ne.g. the vCPU will incorrectly re-hit code #DBs, but for SEV guests there\nis literally no other option that has a chance of making forward progress.\n\nDrop the #UD injection for all \"skip\" emulation, not just those related to\nINT3/INTO, even though that means that the guest will likely end up in an\ninfinite loop instead of getting a #UD (the vCPU may also crash, e.g. if\nKVM emulated everything about an instruction except for advancing RIP).\nThere's no evidence that suggests that an unexpected #UD is actually\nbetter than hanging the vCPU, e.g. a soft-hung vCPU can still respond to\nIRQs and NMIs to generate a backtrace.\n\nReported-by: Wu Zongyo <wuzongyo@mail.ustc.edu.cn>\nCloses: https://lore.kernel.org/all/8eb933fd-2cf3-d7a9-32fe-2a1d82eac42a@mail.ustc.edu.cn\nFixes: 6ef88d6e36c2 (\"KVM: SVM: Re-inject INT3/INTO instead of retrying the instruction\")\nCc: stable@vger.kernel.org\nCc: Tom Lendacky <thomas.lendacky@amd.com>\nLink: https://lore.kernel.org/r/20230825013621.2845700-2-seanjc@google.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Thu Aug 24 18:36:18 2023 -0700",
  "author_date_iso": "2023-08-24T18:36:18-07:00",
  "committer_name": "Sean Christopherson",
  "committer_email": "seanjc@google.com",
  "committer_date": "Fri Aug 25 09:00:40 2023 -0700",
  "committer_date_iso": "2023-08-25T09:00:40-07:00",
  "files_changed": [
    "arch/x86/kvm/svm/svm.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "insertions": 27,
      "deletions": 8
    }
  ],
  "total_insertions": 27,
  "total_deletions": 8,
  "total_changes": 35,
  "parents": [
    "1952e74da96fb3e48b72a2d0ece78c688a5848c1"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}