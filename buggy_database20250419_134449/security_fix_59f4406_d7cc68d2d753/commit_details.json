{
  "hash": "59f44069e0527523f27948da7b77599a73dab157",
  "hash_short": "59f44069",
  "subject": "arm64: mte: fix restoration of GCR_EL1 from suspend",
  "body": "Since commit:\n\n  bad1e1c663e0a72f (\"arm64: mte: switch GCR_EL1 in kernel entry and exit\")\n\nwe saved/restored the user GCR_EL1 value at exception boundaries, and\nupdate_gcr_el1_excl() is no longer used for this. However it is used to\nrestore the kernel's GCR_EL1 value when returning from a suspend state.\nThus, the comment is misleading (and an ISB is necessary).\n\nWhen restoring the kernel's GCR value, we need an ISB to ensure this is\nused by subsequent instructions. We don't necessarily get an ISB by\nother means (e.g. if the kernel is built without support for pointer\nauthentication). As __cpu_setup() initialised GCR_EL1.Exclude to 0xffff,\nuntil a context synchronization event, allocation tag 0 may be used\nrather than the desired set of tags.\n\nThis patch drops the misleading comment, adds the missing ISB, and for\nclarity folds update_gcr_el1_excl() into its only user.\n\nFixes: bad1e1c663e0 (\"arm64: mte: switch GCR_EL1 in kernel entry and exit\")\nSigned-off-by: Mark Rutland <mark.rutland@arm.com>\nCc: Andrey Konovalov <andreyknvl@gmail.com>\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Vincenzo Frascino <vincenzo.frascino@arm.com>\nCc: Will Deacon <will@kernel.org>\nLink: https://lore.kernel.org/r/20210714143843.56537-2-mark.rutland@arm.com\nSigned-off-by: Will Deacon <will@kernel.org>",
  "full_message": "arm64: mte: fix restoration of GCR_EL1 from suspend\n\nSince commit:\n\n  bad1e1c663e0a72f (\"arm64: mte: switch GCR_EL1 in kernel entry and exit\")\n\nwe saved/restored the user GCR_EL1 value at exception boundaries, and\nupdate_gcr_el1_excl() is no longer used for this. However it is used to\nrestore the kernel's GCR_EL1 value when returning from a suspend state.\nThus, the comment is misleading (and an ISB is necessary).\n\nWhen restoring the kernel's GCR value, we need an ISB to ensure this is\nused by subsequent instructions. We don't necessarily get an ISB by\nother means (e.g. if the kernel is built without support for pointer\nauthentication). As __cpu_setup() initialised GCR_EL1.Exclude to 0xffff,\nuntil a context synchronization event, allocation tag 0 may be used\nrather than the desired set of tags.\n\nThis patch drops the misleading comment, adds the missing ISB, and for\nclarity folds update_gcr_el1_excl() into its only user.\n\nFixes: bad1e1c663e0 (\"arm64: mte: switch GCR_EL1 in kernel entry and exit\")\nSigned-off-by: Mark Rutland <mark.rutland@arm.com>\nCc: Andrey Konovalov <andreyknvl@gmail.com>\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Vincenzo Frascino <vincenzo.frascino@arm.com>\nCc: Will Deacon <will@kernel.org>\nLink: https://lore.kernel.org/r/20210714143843.56537-2-mark.rutland@arm.com\nSigned-off-by: Will Deacon <will@kernel.org>",
  "author_name": "Mark Rutland",
  "author_email": "mark.rutland@arm.com",
  "author_date": "Wed Jul 14 15:38:41 2021 +0100",
  "author_date_iso": "2021-07-14T15:38:41+01:00",
  "committer_name": "Will Deacon",
  "committer_email": "will@kernel.org",
  "committer_date": "Thu Jul 15 17:34:46 2021 +0100",
  "committer_date_iso": "2021-07-15T17:34:46+01:00",
  "files_changed": [
    "arch/arm64/kernel/mte.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/arm64/kernel/mte.c",
      "insertions": 2,
      "deletions": 13
    }
  ],
  "total_insertions": 2,
  "total_deletions": 13,
  "total_changes": 15,
  "parents": [
    "295cf156231ca3f9e3a66bde7fab5e09c41835e0"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/kernel/mte.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}