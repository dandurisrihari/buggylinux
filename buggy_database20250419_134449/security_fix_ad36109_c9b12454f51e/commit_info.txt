Commit Hash: ad3610919e6f6a4d815c5bf163556b950d6aea56
Subject: kvm: x86: avoid atomic operations on APICv vmentry


Security Keywords:
- injection

Full commit message:
kvm: x86: avoid atomic operations on APICv vmentry

On some benchmarks (e.g. netperf with ioeventfd disabled), APICv
posted interrupts turn out to be slower than interrupt injection via
KVM_REQ_EVENT.

This patch optimizes a bit the IRR update, avoiding expensive atomic
operations in the common case where PI.ON=0 at vmentry or the PIR vector
is mostly zero.  This saves at least 20 cycles (1%) per vmexit, as
measured by kvm-unit-tests' inl_from_qemu test (20 runs):

              | enable_apicv=1  |  enable_apicv=0
              | mean     stdev  |  mean     stdev
    ----------|-----------------|------------------
    before    | 5826     32.65  |  5765     47.09
    after     | 5809     43.42  |  5777     77.02

Of course, any change in the right column is just placebo effect. :)
The savings are bigger if interrupts are frequent.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

Metadata:
Author: Paolo Bonzini <pbonzini@redhat.com>
Author Date: Tue Sep 20 16:15:05 2016 +0200
Committer: Paolo Bonzini <pbonzini@redhat.com>
Commit Date: Thu Nov 3 12:27:51 2016 +0100

Files Changed: 2
Lines Added: 17
Lines Removed: 3
Total Changes: 20
