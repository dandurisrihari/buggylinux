{
  "hash": "ad3610919e6f6a4d815c5bf163556b950d6aea56",
  "hash_short": "ad361091",
  "subject": "kvm: x86: avoid atomic operations on APICv vmentry",
  "body": "On some benchmarks (e.g. netperf with ioeventfd disabled), APICv\nposted interrupts turn out to be slower than interrupt injection via\nKVM_REQ_EVENT.\n\nThis patch optimizes a bit the IRR update, avoiding expensive atomic\noperations in the common case where PI.ON=0 at vmentry or the PIR vector\nis mostly zero.  This saves at least 20 cycles (1%) per vmexit, as\nmeasured by kvm-unit-tests' inl_from_qemu test (20 runs):\n\n              | enable_apicv=1  |  enable_apicv=0\n              | mean     stdev  |  mean     stdev\n    ----------|-----------------|------------------\n    before    | 5826     32.65  |  5765     47.09\n    after     | 5809     43.42  |  5777     77.02\n\nOf course, any change in the right column is just placebo effect. :)\nThe savings are bigger if interrupts are frequent.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "kvm: x86: avoid atomic operations on APICv vmentry\n\nOn some benchmarks (e.g. netperf with ioeventfd disabled), APICv\nposted interrupts turn out to be slower than interrupt injection via\nKVM_REQ_EVENT.\n\nThis patch optimizes a bit the IRR update, avoiding expensive atomic\noperations in the common case where PI.ON=0 at vmentry or the PIR vector\nis mostly zero.  This saves at least 20 cycles (1%) per vmexit, as\nmeasured by kvm-unit-tests' inl_from_qemu test (20 runs):\n\n              | enable_apicv=1  |  enable_apicv=0\n              | mean     stdev  |  mean     stdev\n    ----------|-----------------|------------------\n    before    | 5826     32.65  |  5765     47.09\n    after     | 5809     43.42  |  5777     77.02\n\nOf course, any change in the right column is just placebo effect. :)\nThe savings are bigger if interrupts are frequent.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Paolo Bonzini",
  "author_email": "pbonzini@redhat.com",
  "author_date": "Tue Sep 20 16:15:05 2016 +0200",
  "author_date_iso": "2016-09-20T16:15:05+02:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Thu Nov 3 12:27:51 2016 +0100",
  "committer_date_iso": "2016-11-03T12:27:51+01:00",
  "files_changed": [
    "arch/x86/kvm/lapic.c",
    "arch/x86/kvm/vmx.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/kvm/lapic.c",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/vmx.c",
      "insertions": 13,
      "deletions": 1
    }
  ],
  "total_insertions": 17,
  "total_deletions": 3,
  "total_changes": 20,
  "parents": [
    "1b07304c587d4fe572ea50bdefaa6047dc9a6d1a"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/lapic.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}