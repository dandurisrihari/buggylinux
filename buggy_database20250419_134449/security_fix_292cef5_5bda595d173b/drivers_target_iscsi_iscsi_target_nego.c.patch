commit 292cef5e6262e7976dca310ed9c86f135b807bb4
Author: Dmitry Bogdanov <d.bogdanov@yadro.com>
Date:   Mon Jul 18 18:25:55 2022 +0300

    scsi: target: iscsi: Do not require target authentication
    
    RFC7143 states that Initiator decides what type of authentication to
    use:
    
    The initiator MUST continue with:
        CHAP_N=<N> CHAP_R=<R>
    or, if it requires target authentication, with:
        CHAP_N=<N> CHAP_R=<R> CHAP_I=<I> CHAP_C=<C>
    
    Allow one way authentication if mutual authentication is configured.  That
    passes some tests from Windows HLK for Mutual CHAP with iSNS.
    
    Link: https://lore.kernel.org/r/20220718152555.17084-5-d.bogdanov@yadro.com
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Dmitry Bogdanov <d.bogdanov@yadro.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

diff --git a/drivers/target/iscsi/iscsi_target_nego.c b/drivers/target/iscsi/iscsi_target_nego.c
index a167fab80588..f2919319ad38 100644
--- a/drivers/target/iscsi/iscsi_target_nego.c
+++ b/drivers/target/iscsi/iscsi_target_nego.c
@@ -62,15 +62,15 @@ int extract_param(
 	int len;
 
 	if (!in_buf || !pattern || !out_buf || !type)
-		return -1;
+		return -EINVAL;
 
 	ptr = strstr(in_buf, pattern);
 	if (!ptr)
-		return -1;
+		return -ENOENT;
 
 	ptr = strstr(ptr, "=");
 	if (!ptr)
-		return -1;
+		return -EINVAL;
 
 	ptr += 1;
 	if (*ptr == '0' && (*(ptr+1) == 'x' || *(ptr+1) == 'X')) {
@@ -84,12 +84,12 @@ int extract_param(
 
 	len = strlen_semi(ptr);
 	if (len < 0)
-		return -1;
+		return -EINVAL;
 
 	if (len >= max_length) {
 		pr_err("Length of input: %d exceeds max_length:"
 			" %d\n", len, max_length);
-		return -1;
+		return -EINVAL;
 	}
 	memcpy(out_buf, ptr, len);
 	out_buf[len] = '\0';