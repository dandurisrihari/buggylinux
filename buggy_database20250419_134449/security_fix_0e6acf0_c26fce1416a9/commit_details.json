{
  "hash": "0e6acf0204da5b8705722a5f6806a4f55ed379d6",
  "hash_short": "0e6acf02",
  "subject": "Merge tag 'xfs-for-linus-4.8-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/dgc/linux-xfs",
  "body": "Pull xfs updates from Dave Chinner:\n \"The major addition is the new iomap based block mapping\n  infrastructure.  We've been kicking this about locally for years, but\n  there are other filesystems want to use it too (e.g. gfs2).  Now it\n  is fully working, reviewed and ready for merge and be used by other\n  filesystems.\n\n  There are a lot of other fixes and cleanups in the tree, but those are\n  XFS internal things and none are of the scale or visibility of the\n  iomap changes.  See below for details.\n\n  I am likely to send another pull request next week - we're just about\n  ready to merge some new functionality (on disk block->owner reverse\n  mapping infrastructure), but that's a huge chunk of code (74 files\n  changed, 7283 insertions(+), 1114 deletions(-)) so I'm keeping that\n  separate to all the \"normal\" pull request changes so they don't get\n  lost in the noise.\n\n  Summary of changes in this update:\n   - generic iomap based IO path infrastructure\n   - generic iomap based fiemap implementation\n   - xfs iomap based Io path implementation\n   - buffer error handling fixes\n   - tracking of in flight buffer IO for unmount serialisation\n   - direct IO and DAX io path separation and simplification\n   - shortform directory format definition changes for wider platform\n     compatibility\n   - various buffer cache fixes\n   - cleanups in preparation for rmap merge\n   - error injection cleanups and fixes\n   - log item format buffer memory allocation restructuring to prevent\n     rare OOM reclaim deadlocks\n   - sparse inode chunks are now fully supported\"\n\n* tag 'xfs-for-linus-4.8-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/dgc/linux-xfs: (53 commits)\n  xfs: remove EXPERIMENTAL tag from sparse inode feature\n  xfs: bufferhead chains are invalid after end_page_writeback\n  xfs: allocate log vector buffers outside CIL context lock\n  libxfs: directory node splitting does not have an extra block\n  xfs: remove dax code from object file when disabled\n  xfs: skip dirty pages in ->releasepage()\n  xfs: remove __arch_pack\n  xfs: kill xfs_dir2_inou_t\n  xfs: kill xfs_dir2_sf_off_t\n  xfs: split direct I/O and DAX path\n  xfs: direct calls in the direct I/O path\n  xfs: stop using generic_file_read_iter for direct I/O\n  xfs: split xfs_file_read_iter into buffered and direct I/O helpers\n  xfs: remove s_maxbytes enforcement in xfs_file_read_iter\n  xfs: kill ioflags\n  xfs: don't pass ioflags around in the ioctl path\n  xfs: track and serialize in-flight async buffers against unmount\n  xfs: exclude never-released buffers from buftarg I/O accounting\n  xfs: don't reset b_retries to 0 on every failure\n  xfs: remove extraneous buffer flag changes\n  ...",
  "full_message": "Merge tag 'xfs-for-linus-4.8-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/dgc/linux-xfs\n\nPull xfs updates from Dave Chinner:\n \"The major addition is the new iomap based block mapping\n  infrastructure.  We've been kicking this about locally for years, but\n  there are other filesystems want to use it too (e.g. gfs2).  Now it\n  is fully working, reviewed and ready for merge and be used by other\n  filesystems.\n\n  There are a lot of other fixes and cleanups in the tree, but those are\n  XFS internal things and none are of the scale or visibility of the\n  iomap changes.  See below for details.\n\n  I am likely to send another pull request next week - we're just about\n  ready to merge some new functionality (on disk block->owner reverse\n  mapping infrastructure), but that's a huge chunk of code (74 files\n  changed, 7283 insertions(+), 1114 deletions(-)) so I'm keeping that\n  separate to all the \"normal\" pull request changes so they don't get\n  lost in the noise.\n\n  Summary of changes in this update:\n   - generic iomap based IO path infrastructure\n   - generic iomap based fiemap implementation\n   - xfs iomap based Io path implementation\n   - buffer error handling fixes\n   - tracking of in flight buffer IO for unmount serialisation\n   - direct IO and DAX io path separation and simplification\n   - shortform directory format definition changes for wider platform\n     compatibility\n   - various buffer cache fixes\n   - cleanups in preparation for rmap merge\n   - error injection cleanups and fixes\n   - log item format buffer memory allocation restructuring to prevent\n     rare OOM reclaim deadlocks\n   - sparse inode chunks are now fully supported\"\n\n* tag 'xfs-for-linus-4.8-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/dgc/linux-xfs: (53 commits)\n  xfs: remove EXPERIMENTAL tag from sparse inode feature\n  xfs: bufferhead chains are invalid after end_page_writeback\n  xfs: allocate log vector buffers outside CIL context lock\n  libxfs: directory node splitting does not have an extra block\n  xfs: remove dax code from object file when disabled\n  xfs: skip dirty pages in ->releasepage()\n  xfs: remove __arch_pack\n  xfs: kill xfs_dir2_inou_t\n  xfs: kill xfs_dir2_sf_off_t\n  xfs: split direct I/O and DAX path\n  xfs: direct calls in the direct I/O path\n  xfs: stop using generic_file_read_iter for direct I/O\n  xfs: split xfs_file_read_iter into buffered and direct I/O helpers\n  xfs: remove s_maxbytes enforcement in xfs_file_read_iter\n  xfs: kill ioflags\n  xfs: don't pass ioflags around in the ioctl path\n  xfs: track and serialize in-flight async buffers against unmount\n  xfs: exclude never-released buffers from buftarg I/O accounting\n  xfs: don't reset b_retries to 0 on every failure\n  xfs: remove extraneous buffer flag changes\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Wed Jul 27 09:53:35 2016 -0700",
  "author_date_iso": "2016-07-27T09:53:35-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Jul 27 09:53:35 2016 -0700",
  "committer_date_iso": "2016-07-27T09:53:35-07:00",
  "files_changed": [
    "fs/buffer.c",
    "fs/internal.h",
    "fs/nfsd/blocklayout.c",
    "fs/xfs/xfs_aops.c",
    "fs/xfs/xfs_buf.c",
    "fs/xfs/xfs_file.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "fs/Kconfig",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/buffer.c",
      "insertions": 71,
      "deletions": 5
    },
    {
      "file": "fs/internal.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/iomap.c",
      "insertions": 497,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/blocklayout.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/blocklayoutxdr.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/Kconfig",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_alloc.c",
      "insertions": 57,
      "deletions": 44
    },
    {
      "file": "fs/xfs/libxfs/xfs_alloc.h",
      "insertions": 2,
      "deletions": 7
    },
    {
      "file": "fs/xfs/libxfs/xfs_attr_leaf.h",
      "insertions": 0,
      "deletions": 3
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap.c",
      "insertions": 17,
      "deletions": 34
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap.h",
      "insertions": 10,
      "deletions": 8
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap_btree.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/libxfs/xfs_btree.c",
      "insertions": 23,
      "deletions": 4
    },
    {
      "file": "fs/xfs/libxfs/xfs_btree.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_da_btree.c",
      "insertions": 29,
      "deletions": 30
    },
    {
      "file": "fs/xfs/libxfs/xfs_da_format.c",
      "insertions": 13,
      "deletions": 18
    },
    {
      "file": "fs/xfs/libxfs/xfs_da_format.h",
      "insertions": 12,
      "deletions": 31
    },
    {
      "file": "fs/xfs/libxfs/xfs_dir2_sf.c",
      "insertions": 12,
      "deletions": 26
    },
    {
      "file": "fs/xfs/libxfs/xfs_format.h",
      "insertions": 41,
      "deletions": 25
    },
    {
      "file": "fs/xfs/libxfs/xfs_fs.h",
      "insertions": 2,
      "deletions": 6
    },
    {
      "file": "fs/xfs/libxfs/xfs_ialloc.c",
      "insertions": 9,
      "deletions": 19
    },
    {
      "file": "fs/xfs/libxfs/xfs_rtbitmap.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_aops.c",
      "insertions": 48,
      "deletions": 284
    },
    {
      "file": "fs/xfs/xfs_aops.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_attr_inactive.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_attr_list.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_bmap_util.c",
      "insertions": 157,
      "deletions": 224
    },
    {
      "file": "fs/xfs/xfs_bmap_util.h",
      "insertions": 0,
      "deletions": 3
    },
    {
      "file": "fs/xfs/xfs_buf.c",
      "insertions": 166,
      "deletions": 70
    },
    {
      "file": "fs/xfs/xfs_buf.h",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_buf_item.c",
      "insertions": 20,
      "deletions": 11
    },
    {
      "file": "fs/xfs/xfs_dquot.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_dquot_item.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_error.c",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_error.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_extfree_item.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_file.c",
      "insertions": 188,
      "deletions": 237
    },
    {
      "file": "fs/xfs/xfs_fsops.c",
      "insertions": 60,
      "deletions": 45
    },
    {
      "file": "fs/xfs/xfs_icache.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_icache.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_inode.c",
      "insertions": 4,
      "deletions": 12
    },
    {
      "file": "fs/xfs/xfs_inode.h",
      "insertions": 2,
      "deletions": 18
    },
    {
      "file": "fs/xfs/xfs_inode_item.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_ioctl.c",
      "insertions": 13,
      "deletions": 14
    },
    {
      "file": "fs/xfs/xfs_ioctl.h",
      "insertions": 0,
      "deletions": 3
    },
    {
      "file": "fs/xfs/xfs_ioctl32.c",
      "insertions": 1,
      "deletions": 5
    },
    {
      "file": "fs/xfs/xfs_iomap.c",
      "insertions": 171,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_iomap.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_iops.c",
      "insertions": 22,
      "deletions": 91
    },
    {
      "file": "fs/xfs/xfs_linux.h",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "fs/xfs/xfs_log.c",
      "insertions": 7,
      "deletions": 6
    },
    {
      "file": "fs/xfs/xfs_log.h",
      "insertions": 0,
      "deletions": 5
    },
    {
      "file": "fs/xfs/xfs_log_cil.c",
      "insertions": 194,
      "deletions": 64
    },
    {
      "file": "fs/xfs/xfs_mount.c",
      "insertions": 6,
      "deletions": 4
    },
    {
      "file": "fs/xfs/xfs_ondisk.h",
      "insertions": 25,
      "deletions": 6
    },
    {
      "file": "fs/xfs/xfs_pnfs.c",
      "insertions": 1,
      "deletions": 26
    },
    {
      "file": "fs/xfs/xfs_rtalloc.h",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "fs/xfs/xfs_super.c",
      "insertions": 12,
      "deletions": 7
    },
    {
      "file": "fs/xfs/xfs_super.h",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "fs/xfs/xfs_sysfs.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_trace.h",
      "insertions": 14,
      "deletions": 11
    },
    {
      "file": "fs/xfs/xfs_trans.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/exportfs.h",
      "insertions": 1,
      "deletions": 15
    },
    {
      "file": "include/linux/iomap.h",
      "insertions": 70,
      "deletions": 0
    }
  ],
  "total_insertions": 2026,
  "total_deletions": 1440,
  "total_changes": 3466,
  "parents": [
    "0e06f5c0deeef0332a5da2ecb8f1fcf3e024d958",
    "f2bdfda9a1c668539bc85baf5625f6f14bc510b1"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/internal.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_aops.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/buffer.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/blocklayout.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_buf.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}