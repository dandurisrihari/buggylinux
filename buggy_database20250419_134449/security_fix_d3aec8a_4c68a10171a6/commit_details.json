{
  "hash": "d3aec8a28be3b88bf75442e7c24fd9da8d69a6df",
  "hash_short": "d3aec8a2",
  "subject": "arm64: capabilities: Restrict KPTI detection to boot-time CPUs",
  "body": "KPTI is treated as a system wide feature and is only detected if all\nthe CPUs in the sysetm needs the defense, unless it is forced via kernel\ncommand line. This leaves a system with a mix of CPUs with and without\nthe defense vulnerable. Also, if a late CPU needs KPTI but KPTI was not\nactivated at boot time, the CPU is currently allowed to boot, which is a\npotential security vulnerability.\nThis patch ensures that the KPTI is turned on if at least one CPU detects\nthe capability (i.e, change scope to SCOPE_LOCAL_CPU). Also rejetcs a late\nCPU, if it requires the defense, when the system hasn't enabled it,\n\nCc: Will Deacon <will.deacon@arm.com>\nReviewed-by: Dave Martin <dave.martin@arm.com>\nSigned-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nSigned-off-by: Will Deacon <will.deacon@arm.com>",
  "full_message": "arm64: capabilities: Restrict KPTI detection to boot-time CPUs\n\nKPTI is treated as a system wide feature and is only detected if all\nthe CPUs in the sysetm needs the defense, unless it is forced via kernel\ncommand line. This leaves a system with a mix of CPUs with and without\nthe defense vulnerable. Also, if a late CPU needs KPTI but KPTI was not\nactivated at boot time, the CPU is currently allowed to boot, which is a\npotential security vulnerability.\nThis patch ensures that the KPTI is turned on if at least one CPU detects\nthe capability (i.e, change scope to SCOPE_LOCAL_CPU). Also rejetcs a late\nCPU, if it requires the defense, when the system hasn't enabled it,\n\nCc: Will Deacon <will.deacon@arm.com>\nReviewed-by: Dave Martin <dave.martin@arm.com>\nSigned-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nSigned-off-by: Will Deacon <will.deacon@arm.com>",
  "author_name": "Suzuki K Poulose",
  "author_email": "suzuki.poulose@arm.com",
  "author_date": "Mon Mar 26 15:12:40 2018 +0100",
  "author_date_iso": "2018-03-26T15:12:40+01:00",
  "committer_name": "Will Deacon",
  "committer_email": "will.deacon@arm.com",
  "committer_date": "Mon Mar 26 18:01:40 2018 +0100",
  "committer_date_iso": "2018-03-26T18:01:40+01:00",
  "files_changed": [
    "arch/arm64/include/asm/cpufeature.h",
    "arch/arm64/kernel/cpufeature.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "insertions": 11,
      "deletions": 5
    }
  ],
  "total_insertions": 20,
  "total_deletions": 5,
  "total_changes": 25,
  "parents": [
    "5c137714dd8cae464dbd5f028c07af149e6d09fc"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7",
    "v4.18",
    "v4.18-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security vulnerability",
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}