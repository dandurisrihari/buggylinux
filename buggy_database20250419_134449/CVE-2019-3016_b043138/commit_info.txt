Commit Hash: b043138246a41064527cf019a3d51d9f015e9796
Subject: x86/KVM: Make sure KVM_VCPU_FLUSH_TLB flag is not missed

CVE Identifiers:
- CVE-2019-3016

Full commit message:
x86/KVM: Make sure KVM_VCPU_FLUSH_TLB flag is not missed

There is a potential race in record_steal_time() between setting
host-local vcpu->arch.st.steal.preempted to zero (i.e. clearing
KVM_VCPU_PREEMPTED) and propagating this value to the guest with
kvm_write_guest_cached(). Between those two events the guest may
still see KVM_VCPU_PREEMPTED in its copy of kvm_steal_time, set
KVM_VCPU_FLUSH_TLB and assume that hypervisor will do the right
thing. Which it won't.

Instad of copying, we should map kvm_steal_time and that will
guarantee atomicity of accesses to @preempted.

This is part of CVE-2019-3016.

Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Reviewed-by: Joao Martins <joao.m.martins@oracle.com>
Cc: stable@vger.kernel.org
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

Metadata:
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Author Date: Thu Dec 5 03:45:32 2019 +0000
Committer: Paolo Bonzini <pbonzini@redhat.com>
Commit Date: Thu Jan 30 18:45:55 2020 +0100

Files Changed: 1
Lines Added: 30
Lines Removed: 21
Total Changes: 51
