commit f20765fdfdc2c8f47b41cb08489fdad3194a8465
Author: Eric Snowberg <eric.snowberg@oracle.com>
Date:   Wed Jul 26 17:17:25 2023 -0400

    integrity: Always reference the blacklist keyring with appraisal
    
    Commit 273df864cf746 ("ima: Check against blacklisted hashes for files with
    modsig") introduced an appraise_flag option for referencing the blacklist
    keyring.  Any matching binary found on this keyring fails signature
    validation. This flag only works with module appended signatures.
    
    An important part of a PKI infrastructure is to have the ability to do
    revocation at a later time should a vulnerability be found.  Expand the
    revocation flag usage to all appraisal functions. The flag is now
    enabled by default. Setting the flag with an IMA policy has been
    deprecated. Without a revocation capability like this in place, only
    authenticity can be maintained. With this change, integrity can now be
    achieved with digital signature based IMA appraisal.
    
    Signed-off-by: Eric Snowberg <eric.snowberg@oracle.com>
    Reviewed-by: Nayna Jain <nayna@linux.ibm.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>

diff --git a/security/integrity/ima/ima_appraise.c b/security/integrity/ima/ima_appraise.c
index 491c1aca0b1c..870dde67707b 100644
--- a/security/integrity/ima/ima_appraise.c
+++ b/security/integrity/ima/ima_appraise.c
@@ -458,11 +458,13 @@ int ima_check_blacklist(struct integrity_iint_cache *iint,
 		ima_get_modsig_digest(modsig, &hash_algo, &digest, &digestsize);
 
 		rc = is_binary_blacklisted(digest, digestsize);
-		if ((rc == -EPERM) && (iint->flags & IMA_MEASURE))
-			process_buffer_measurement(&nop_mnt_idmap, NULL, digest, digestsize,
-						   "blacklisted-hash", NONE,
-						   pcr, NULL, false, NULL, 0);
-	}
+	} else if (iint->flags & IMA_DIGSIG_REQUIRED && iint->ima_hash)
+		rc = is_binary_blacklisted(iint->ima_hash->digest, iint->ima_hash->length);
+
+	if ((rc == -EPERM) && (iint->flags & IMA_MEASURE))
+		process_buffer_measurement(&nop_mnt_idmap, NULL, digest, digestsize,
+					   "blacklisted-hash", NONE,
+					   pcr, NULL, false, NULL, 0);
 
 	return rc;
 }