{
  "hash": "17c560113231ddc20088553c7b499b289b664311",
  "hash_short": "17c56011",
  "subject": "net: dsa: mt7530: trap link-local frames regardless of ST Port State",
  "body": "In Clause 5 of IEEE Std 802-2014, two sublayers of the data link layer\n(DLL) of the Open Systems Interconnection basic reference model (OSI/RM)\nare described; the medium access control (MAC) and logical link control\n(LLC) sublayers. The MAC sublayer is the one facing the physical layer.\n\nIn 8.2 of IEEE Std 802.1Q-2022, the Bridge architecture is described. A\nBridge component comprises a MAC Relay Entity for interconnecting the Ports\nof the Bridge, at least two Ports, and higher layer entities with at least\na Spanning Tree Protocol Entity included.\n\nEach Bridge Port also functions as an end station and shall provide the MAC\nService to an LLC Entity. Each instance of the MAC Service is provided to a\ndistinct LLC Entity that supports protocol identification, multiplexing,\nand demultiplexing, for protocol data unit (PDU) transmission and reception\nby one or more higher layer entities.\n\nIt is described in 8.13.9 of IEEE Std 802.1Q-2022 that in a Bridge, the LLC\nEntity associated with each Bridge Port is modeled as being directly\nconnected to the attached Local Area Network (LAN).\n\nOn the switch with CPU port architecture, CPU port functions as Management\nPort, and the Management Port functionality is provided by software which\nfunctions as an end station. Software is connected to an IEEE 802 LAN that\nis wholly contained within the system that incorporates the Bridge.\nSoftware provides access to the LLC Entity associated with each Bridge Port\nby the value of the source port field on the special tag on the frame\nreceived by software.\n\nWe call frames that carry control information to determine the active\ntopology and current extent of each Virtual Local Area Network (VLAN),\ni.e., spanning tree or Shortest Path Bridging (SPB) and Multiple VLAN\nRegistration Protocol Data Units (MVRPDUs), and frames from other link\nconstrained protocols, such as Extensible Authentication Protocol over LAN\n(EAPOL) and Link Layer Discovery Protocol (LLDP), link-local frames. They\nare not forwarded by a Bridge. Permanently configured entries in the\nfiltering database (FDB) ensure that such frames are discarded by the\nForwarding Process. In 8.6.3 of IEEE Std 802.1Q-2022, this is described in\ndetail:\n\nEach of the reserved MAC addresses specified in Table 8-1\n(01-80-C2-00-00-[00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F]) shall be\npermanently configured in the FDB in C-VLAN components and ERs.\n\nEach of the reserved MAC addresses specified in Table 8-2\n(01-80-C2-00-00-[01,02,03,04,05,06,07,08,09,0A,0E]) shall be permanently\nconfigured in the FDB in S-VLAN components.\n\nEach of the reserved MAC addresses specified in Table 8-3\n(01-80-C2-00-00-[01,02,04,0E]) shall be permanently configured in the FDB\nin TPMR components.\n\nThe FDB entries for reserved MAC addresses shall specify filtering for all\nBridge Ports and all VIDs. Management shall not provide the capability to\nmodify or remove entries for reserved MAC addresses.\n\nThe addresses in Table 8-1, Table 8-2, and Table 8-3 determine the scope of\npropagation of PDUs within a Bridged Network, as follows:\n\n  The Nearest Bridge group address (01-80-C2-00-00-0E) is an address that\n  no conformant Two-Port MAC Relay (TPMR) component, Service VLAN (S-VLAN)\n  component, Customer VLAN (C-VLAN) component, or MAC Bridge can forward.\n  PDUs transmitted using this destination address, or any other addresses\n  that appear in Table 8-1, Table 8-2, and Table 8-3\n  (01-80-C2-00-00-[00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F]), can\n  therefore travel no further than those stations that can be reached via a\n  single individual LAN from the originating station.\n\n  The Nearest non-TPMR Bridge group address (01-80-C2-00-00-03), is an\n  address that no conformant S-VLAN component, C-VLAN component, or MAC\n  Bridge can forward; however, this address is relayed by a TPMR component.\n  PDUs using this destination address, or any of the other addresses that\n  appear in both Table 8-1 and Table 8-2 but not in Table 8-3\n  (01-80-C2-00-00-[00,03,05,06,07,08,09,0A,0B,0C,0D,0F]), will be relayed\n  by any TPMRs but will propagate no further than the nearest S-VLAN\n  component, C-VLAN component, or MAC Bridge.\n\n  The Nearest Customer Bridge group address (01-80-C2-00-00-00) is an\n  address that no conformant C-VLAN component, MAC Bridge can forward;\n  however, it is relayed by TPMR components and S-VLAN components. PDUs\n  using this destination address, or any of the other addresses that appear\n  in Table 8-1 but not in either Table 8-2 or Table 8-3\n  (01-80-C2-00-00-[00,0B,0C,0D,0F]), will be relayed by TPMR components and\n  S-VLAN components but will propagate no further than the nearest C-VLAN\n  component or MAC Bridge.\n\nBecause the LLC Entity associated with each Bridge Port is provided via CPU\nport, we must not filter these frames but forward them to CPU port.\n\nIn a Bridge, the transmission Port is majorly decided by ingress and egress\nrules, FDB, and spanning tree Port State functions of the Forwarding\nProcess. For link-local frames, only CPU port should be designated as\ndestination port in the FDB, and the other functions of the Forwarding\nProcess must not interfere with the decision of the transmission Port. We\ncall this process trapping frames to CPU port.\n\nTherefore, on the switch with CPU port architecture, link-local frames must\nbe trapped to CPU port, and certain link-local frames received by a Port of\na Bridge comprising a TPMR component or an S-VLAN component must be\nexcluded from it.\n\nA Bridge of the switch with CPU port architecture cannot comprise a\nTwo-Port MAC Relay (TPMR) component as a TPMR component supports only a\nsubset of the functionality of a MAC Bridge. A Bridge comprising two Ports\n(Management Port doesn't count) of this architecture will either function\nas a standard MAC Bridge or a standard VLAN Bridge.\n\nTherefore, a Bridge of this architecture can only comprise S-VLAN\ncomponents, C-VLAN components, or MAC Bridge components. Since there's no\nTPMR component, we don't need to relay PDUs using the destination addresses\nspecified on the Nearest non-TPMR section, and the proportion of the\nNearest Customer Bridge section where they must be relayed by TPMR\ncomponents.\n\nOne option to trap link-local frames to CPU port is to add static FDB\nentries with CPU port designated as destination port. However, because that\nIndependent VLAN Learning (IVL) is being used on every VID, each entry only\napplies to a single VLAN Identifier (VID). For a Bridge comprising a MAC\nBridge component or a C-VLAN component, there would have to be 16 times\n4096 entries. This switch intellectual property can only hold a maximum of\n2048 entries. Using this option, there also isn't a mechanism to prevent\nlink-local frames from being discarded when the spanning tree Port State of\nthe reception Port is discarding.\n\nThe remaining option is to utilise the BPC, RGAC1, RGAC2, RGAC3, and RGAC4\nregisters. Whilst this applies to every VID, it doesn't contain all of the\nreserved MAC addresses without affecting the remaining Standard Group MAC\nAddresses. The REV_UN frame tag utilised using the RGAC4 register covers\nthe remaining 01-80-C2-00-00-[04,05,06,07,08,09,0A,0B,0C,0D,0F] destination\naddresses. It also includes the 01-80-C2-00-00-22 to 01-80-C2-00-00-FF\ndestination addresses which may be relayed by MAC Bridges or VLAN Bridges.\nThe latter option provides better but not complete conformance.\n\nThis switch intellectual property also does not provide a mechanism to trap\nlink-local frames with specific destination addresses to CPU port by\nBridge, to conform to the filtering rules for the distinct Bridge\ncomponents.\n\nTherefore, regardless of the type of the Bridge component, link-local\nframes with these destination addresses will be trapped to CPU port:\n\n01-80-C2-00-00-[00,01,02,03,0E]\n\nIn a Bridge comprising a MAC Bridge component or a C-VLAN component:\n\n  Link-local frames with these destination addresses won't be trapped to\n  CPU port which won't conform to IEEE Std 802.1Q-2022:\n\n  01-80-C2-00-00-[04,05,06,07,08,09,0A,0B,0C,0D,0F]\n\nIn a Bridge comprising an S-VLAN component:\n\n  Link-local frames with these destination addresses will be trapped to CPU\n  port which won't conform to IEEE Std 802.1Q-2022:\n\n  01-80-C2-00-00-00\n\n  Link-local frames with these destination addresses won't be trapped to\n  CPU port which won't conform to IEEE Std 802.1Q-2022:\n\n  01-80-C2-00-00-[04,05,06,07,08,09,0A]\n\nCurrently on this switch intellectual property, if the spanning tree Port\nState of the reception Port is discarding, link-local frames will be\ndiscarded.\n\nTo trap link-local frames regardless of the spanning tree Port State, make\nthe switch regard them as Bridge Protocol Data Units (BPDUs). This switch\nintellectual property only lets the frames regarded as BPDUs bypass the\nspanning tree Port State function of the Forwarding Process.\n\nWith this change, the only remaining interference is the ingress rules.\nWhen the reception Port has no PVID assigned on software, VLAN-untagged\nframes won't be allowed in. There doesn't seem to be a mechanism on the\nswitch intellectual property to have link-local frames bypass this function\nof the Forwarding Process.\n\nFixes: b8f126a8d543 (\"net-next: dsa: add dsa support for Mediatek MT7530 switch\")\nReviewed-by: Daniel Golle <daniel@makrotopia.org>\nSigned-off-by: Ar\u0131n\u00e7 \u00dcNAL <arinc.unal@arinc9.com>\nLink: https://lore.kernel.org/r/20240409-b4-for-net-mt7530-fix-link-local-when-stp-discarding-v2-1-07b1150164ac@arinc9.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "full_message": "net: dsa: mt7530: trap link-local frames regardless of ST Port State\n\nIn Clause 5 of IEEE Std 802-2014, two sublayers of the data link layer\n(DLL) of the Open Systems Interconnection basic reference model (OSI/RM)\nare described; the medium access control (MAC) and logical link control\n(LLC) sublayers. The MAC sublayer is the one facing the physical layer.\n\nIn 8.2 of IEEE Std 802.1Q-2022, the Bridge architecture is described. A\nBridge component comprises a MAC Relay Entity for interconnecting the Ports\nof the Bridge, at least two Ports, and higher layer entities with at least\na Spanning Tree Protocol Entity included.\n\nEach Bridge Port also functions as an end station and shall provide the MAC\nService to an LLC Entity. Each instance of the MAC Service is provided to a\ndistinct LLC Entity that supports protocol identification, multiplexing,\nand demultiplexing, for protocol data unit (PDU) transmission and reception\nby one or more higher layer entities.\n\nIt is described in 8.13.9 of IEEE Std 802.1Q-2022 that in a Bridge, the LLC\nEntity associated with each Bridge Port is modeled as being directly\nconnected to the attached Local Area Network (LAN).\n\nOn the switch with CPU port architecture, CPU port functions as Management\nPort, and the Management Port functionality is provided by software which\nfunctions as an end station. Software is connected to an IEEE 802 LAN that\nis wholly contained within the system that incorporates the Bridge.\nSoftware provides access to the LLC Entity associated with each Bridge Port\nby the value of the source port field on the special tag on the frame\nreceived by software.\n\nWe call frames that carry control information to determine the active\ntopology and current extent of each Virtual Local Area Network (VLAN),\ni.e., spanning tree or Shortest Path Bridging (SPB) and Multiple VLAN\nRegistration Protocol Data Units (MVRPDUs), and frames from other link\nconstrained protocols, such as Extensible Authentication Protocol over LAN\n(EAPOL) and Link Layer Discovery Protocol (LLDP), link-local frames. They\nare not forwarded by a Bridge. Permanently configured entries in the\nfiltering database (FDB) ensure that such frames are discarded by the\nForwarding Process. In 8.6.3 of IEEE Std 802.1Q-2022, this is described in\ndetail:\n\nEach of the reserved MAC addresses specified in Table 8-1\n(01-80-C2-00-00-[00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F]) shall be\npermanently configured in the FDB in C-VLAN components and ERs.\n\nEach of the reserved MAC addresses specified in Table 8-2\n(01-80-C2-00-00-[01,02,03,04,05,06,07,08,09,0A,0E]) shall be permanently\nconfigured in the FDB in S-VLAN components.\n\nEach of the reserved MAC addresses specified in Table 8-3\n(01-80-C2-00-00-[01,02,04,0E]) shall be permanently configured in the FDB\nin TPMR components.\n\nThe FDB entries for reserved MAC addresses shall specify filtering for all\nBridge Ports and all VIDs. Management shall not provide the capability to\nmodify or remove entries for reserved MAC addresses.\n\nThe addresses in Table 8-1, Table 8-2, and Table 8-3 determine the scope of\npropagation of PDUs within a Bridged Network, as follows:\n\n  The Nearest Bridge group address (01-80-C2-00-00-0E) is an address that\n  no conformant Two-Port MAC Relay (TPMR) component, Service VLAN (S-VLAN)\n  component, Customer VLAN (C-VLAN) component, or MAC Bridge can forward.\n  PDUs transmitted using this destination address, or any other addresses\n  that appear in Table 8-1, Table 8-2, and Table 8-3\n  (01-80-C2-00-00-[00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F]), can\n  therefore travel no further than those stations that can be reached via a\n  single individual LAN from the originating station.\n\n  The Nearest non-TPMR Bridge group address (01-80-C2-00-00-03), is an\n  address that no conformant S-VLAN component, C-VLAN component, or MAC\n  Bridge can forward; however, this address is relayed by a TPMR component.\n  PDUs using this destination address, or any of the other addresses that\n  appear in both Table 8-1 and Table 8-2 but not in Table 8-3\n  (01-80-C2-00-00-[00,03,05,06,07,08,09,0A,0B,0C,0D,0F]), will be relayed\n  by any TPMRs but will propagate no further than the nearest S-VLAN\n  component, C-VLAN component, or MAC Bridge.\n\n  The Nearest Customer Bridge group address (01-80-C2-00-00-00) is an\n  address that no conformant C-VLAN component, MAC Bridge can forward;\n  however, it is relayed by TPMR components and S-VLAN components. PDUs\n  using this destination address, or any of the other addresses that appear\n  in Table 8-1 but not in either Table 8-2 or Table 8-3\n  (01-80-C2-00-00-[00,0B,0C,0D,0F]), will be relayed by TPMR components and\n  S-VLAN components but will propagate no further than the nearest C-VLAN\n  component or MAC Bridge.\n\nBecause the LLC Entity associated with each Bridge Port is provided via CPU\nport, we must not filter these frames but forward them to CPU port.\n\nIn a Bridge, the transmission Port is majorly decided by ingress and egress\nrules, FDB, and spanning tree Port State functions of the Forwarding\nProcess. For link-local frames, only CPU port should be designated as\ndestination port in the FDB, and the other functions of the Forwarding\nProcess must not interfere with the decision of the transmission Port. We\ncall this process trapping frames to CPU port.\n\nTherefore, on the switch with CPU port architecture, link-local frames must\nbe trapped to CPU port, and certain link-local frames received by a Port of\na Bridge comprising a TPMR component or an S-VLAN component must be\nexcluded from it.\n\nA Bridge of the switch with CPU port architecture cannot comprise a\nTwo-Port MAC Relay (TPMR) component as a TPMR component supports only a\nsubset of the functionality of a MAC Bridge. A Bridge comprising two Ports\n(Management Port doesn't count) of this architecture will either function\nas a standard MAC Bridge or a standard VLAN Bridge.\n\nTherefore, a Bridge of this architecture can only comprise S-VLAN\ncomponents, C-VLAN components, or MAC Bridge components. Since there's no\nTPMR component, we don't need to relay PDUs using the destination addresses\nspecified on the Nearest non-TPMR section, and the proportion of the\nNearest Customer Bridge section where they must be relayed by TPMR\ncomponents.\n\nOne option to trap link-local frames to CPU port is to add static FDB\nentries with CPU port designated as destination port. However, because that\nIndependent VLAN Learning (IVL) is being used on every VID, each entry only\napplies to a single VLAN Identifier (VID). For a Bridge comprising a MAC\nBridge component or a C-VLAN component, there would have to be 16 times\n4096 entries. This switch intellectual property can only hold a maximum of\n2048 entries. Using this option, there also isn't a mechanism to prevent\nlink-local frames from being discarded when the spanning tree Port State of\nthe reception Port is discarding.\n\nThe remaining option is to utilise the BPC, RGAC1, RGAC2, RGAC3, and RGAC4\nregisters. Whilst this applies to every VID, it doesn't contain all of the\nreserved MAC addresses without affecting the remaining Standard Group MAC\nAddresses. The REV_UN frame tag utilised using the RGAC4 register covers\nthe remaining 01-80-C2-00-00-[04,05,06,07,08,09,0A,0B,0C,0D,0F] destination\naddresses. It also includes the 01-80-C2-00-00-22 to 01-80-C2-00-00-FF\ndestination addresses which may be relayed by MAC Bridges or VLAN Bridges.\nThe latter option provides better but not complete conformance.\n\nThis switch intellectual property also does not provide a mechanism to trap\nlink-local frames with specific destination addresses to CPU port by\nBridge, to conform to the filtering rules for the distinct Bridge\ncomponents.\n\nTherefore, regardless of the type of the Bridge component, link-local\nframes with these destination addresses will be trapped to CPU port:\n\n01-80-C2-00-00-[00,01,02,03,0E]\n\nIn a Bridge comprising a MAC Bridge component or a C-VLAN component:\n\n  Link-local frames with these destination addresses won't be trapped to\n  CPU port which won't conform to IEEE Std 802.1Q-2022:\n\n  01-80-C2-00-00-[04,05,06,07,08,09,0A,0B,0C,0D,0F]\n\nIn a Bridge comprising an S-VLAN component:\n\n  Link-local frames with these destination addresses will be trapped to CPU\n  port which won't conform to IEEE Std 802.1Q-2022:\n\n  01-80-C2-00-00-00\n\n  Link-local frames with these destination addresses won't be trapped to\n  CPU port which won't conform to IEEE Std 802.1Q-2022:\n\n  01-80-C2-00-00-[04,05,06,07,08,09,0A]\n\nCurrently on this switch intellectual property, if the spanning tree Port\nState of the reception Port is discarding, link-local frames will be\ndiscarded.\n\nTo trap link-local frames regardless of the spanning tree Port State, make\nthe switch regard them as Bridge Protocol Data Units (BPDUs). This switch\nintellectual property only lets the frames regarded as BPDUs bypass the\nspanning tree Port State function of the Forwarding Process.\n\nWith this change, the only remaining interference is the ingress rules.\nWhen the reception Port has no PVID assigned on software, VLAN-untagged\nframes won't be allowed in. There doesn't seem to be a mechanism on the\nswitch intellectual property to have link-local frames bypass this function\nof the Forwarding Process.\n\nFixes: b8f126a8d543 (\"net-next: dsa: add dsa support for Mediatek MT7530 switch\")\nReviewed-by: Daniel Golle <daniel@makrotopia.org>\nSigned-off-by: Ar\u0131n\u00e7 \u00dcNAL <arinc.unal@arinc9.com>\nLink: https://lore.kernel.org/r/20240409-b4-for-net-mt7530-fix-link-local-when-stp-discarding-v2-1-07b1150164ac@arinc9.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "author_name": "Ar\u0131n\u00e7 \u00dcNAL",
  "author_email": "arinc.unal@arinc9.com",
  "author_date": "Tue Apr 9 18:01:14 2024 +0300",
  "author_date_iso": "2024-04-09T18:01:14+03:00",
  "committer_name": "Paolo Abeni",
  "committer_email": "pabeni@redhat.com",
  "committer_date": "Thu Apr 11 09:26:41 2024 +0200",
  "committer_date_iso": "2024-04-11T09:26:41+02:00",
  "files_changed": [
    "drivers/net/dsa/mt7530.c",
    "drivers/net/dsa/mt7530.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/net/dsa/mt7530.c",
      "insertions": 195,
      "deletions": 34
    },
    {
      "file": "drivers/net/dsa/mt7530.h",
      "insertions": 5,
      "deletions": 0
    }
  ],
  "total_insertions": 200,
  "total_deletions": 34,
  "total_changes": 234,
  "parents": [
    "d51dc8dd6ab6f93a894ff8b38d3b8d02c98eb9fb"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Authentication",
      "bypass"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/dsa/mt7530.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/dsa/mt7530.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}