{
  "hash": "6a9b88204cb00da2140afda27848b5d17a7402a3",
  "hash_short": "6a9b8820",
  "subject": "vfs: Define usercopy region in names_cache slab caches",
  "body": "VFS pathnames are stored in the names_cache slab cache, either inline\nor across an entire allocation entry (when approaching PATH_MAX). These\nare copied to/from userspace, so they must be entirely whitelisted.\n\ncache object allocation:\n    include/linux/fs.h:\n        #define __getname()    kmem_cache_alloc(names_cachep, GFP_KERNEL)\n\nexample usage trace:\n    strncpy_from_user+0x4d/0x170\n    getname_flags+0x6f/0x1f0\n    user_path_at_empty+0x23/0x40\n    do_mount+0x69/0xda0\n    SyS_mount+0x83/0xd0\n\n    fs/namei.c:\n        getname_flags(...):\n            ...\n            result = __getname();\n            ...\n            kname = (char *)result->iname;\n            result->name = kname;\n            len = strncpy_from_user(kname, filename, EMBEDDED_NAME_MAX);\n            ...\n            if (unlikely(len == EMBEDDED_NAME_MAX)) {\n                const size_t size = offsetof(struct filename, iname[1]);\n                kname = (char *)result;\n\n                result = kzalloc(size, GFP_KERNEL);\n                ...\n                result->name = kname;\n                len = strncpy_from_user(kname, filename, PATH_MAX);\n\nIn support of usercopy hardening, this patch defines the entire cache\nobject in the names_cache slab cache as whitelisted, since it may entirely\nhold name strings to be copied to/from userspace.\n\nThis patch is verbatim from Brad Spengler/PaX Team's PAX_USERCOPY\nwhitelisting code in the last public patch of grsecurity/PaX based on my\nunderstanding of the code. Changes or omissions from the original code are\nmine and don't reflect the original grsecurity/PaX code.\n\nSigned-off-by: David Windsor <dave@nullcore.net>\n[kees: adjust commit log, add usage trace]\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: linux-fsdevel@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "vfs: Define usercopy region in names_cache slab caches\n\nVFS pathnames are stored in the names_cache slab cache, either inline\nor across an entire allocation entry (when approaching PATH_MAX). These\nare copied to/from userspace, so they must be entirely whitelisted.\n\ncache object allocation:\n    include/linux/fs.h:\n        #define __getname()    kmem_cache_alloc(names_cachep, GFP_KERNEL)\n\nexample usage trace:\n    strncpy_from_user+0x4d/0x170\n    getname_flags+0x6f/0x1f0\n    user_path_at_empty+0x23/0x40\n    do_mount+0x69/0xda0\n    SyS_mount+0x83/0xd0\n\n    fs/namei.c:\n        getname_flags(...):\n            ...\n            result = __getname();\n            ...\n            kname = (char *)result->iname;\n            result->name = kname;\n            len = strncpy_from_user(kname, filename, EMBEDDED_NAME_MAX);\n            ...\n            if (unlikely(len == EMBEDDED_NAME_MAX)) {\n                const size_t size = offsetof(struct filename, iname[1]);\n                kname = (char *)result;\n\n                result = kzalloc(size, GFP_KERNEL);\n                ...\n                result->name = kname;\n                len = strncpy_from_user(kname, filename, PATH_MAX);\n\nIn support of usercopy hardening, this patch defines the entire cache\nobject in the names_cache slab cache as whitelisted, since it may entirely\nhold name strings to be copied to/from userspace.\n\nThis patch is verbatim from Brad Spengler/PaX Team's PAX_USERCOPY\nwhitelisting code in the last public patch of grsecurity/PaX based on my\nunderstanding of the code. Changes or omissions from the original code are\nmine and don't reflect the original grsecurity/PaX code.\n\nSigned-off-by: David Windsor <dave@nullcore.net>\n[kees: adjust commit log, add usage trace]\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: linux-fsdevel@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "David Windsor",
  "author_email": "dave@nullcore.net",
  "author_date": "Sat Jun 10 22:50:30 2017 -0400",
  "author_date_iso": "2017-06-10T22:50:30-04:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Mon Jan 15 12:07:50 2018 -0800",
  "committer_date_iso": "2018-01-15T12:07:50-08:00",
  "files_changed": [
    "fs/dcache.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/dcache.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 2,
  "total_deletions": 2,
  "total_changes": 4,
  "parents": [
    "80344266c19b82a27e018083e9dd501048a6a06a"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc1",
    "v4.16-rc2",
    "v4.16-rc3",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/dcache.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}