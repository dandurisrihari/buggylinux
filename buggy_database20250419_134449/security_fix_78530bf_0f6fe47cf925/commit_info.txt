Commit Hash: 78530bf7f2559b317c04991b52217c1608d5a58d
Subject: UBIFS: fix oops when R/O file-system is fsync'ed


Security Keywords:
- exploit

Full commit message:
UBIFS: fix oops when R/O file-system is fsync'ed

This patch fixes severe UBIFS bug: UBIFS oopses when we 'fsync()' an
file on R/O-mounter file-system. We (the UBIFS authors) incorrectly
thought that VFS would not propagate 'fsync()' down to the file-system
if it is read-only, but this is not the case.

It is easy to exploit this bug using the following simple perl script:

use strict;
use File::Sync qw(fsync sync);

die "File path is not specified" if not defined $ARGV[0];
my $path = $ARGV[0];

open FILE, "<", "$path" or die "Cannot open $path: $!";
fsync(\*FILE) or die "cannot fsync $path: $!";
close FILE or die "Cannot close $path: $!";

Thanks to Reuben Dowle <Reuben.Dowle@navico.com> for reporting about this
issue.

Signed-off-by: Artem Bityutskiy <Artem.Bityutskiy@nokia.com>
Reported-by: Reuben Dowle <Reuben.Dowle@navico.com>
Cc: stable@kernel.org

Metadata:
Author: Artem Bityutskiy <Artem.Bityutskiy@nokia.com>
Author Date: Wed Apr 13 10:31:52 2011 +0300
Committer: Artem Bityutskiy <Artem.Bityutskiy@nokia.com>
Commit Date: Wed Apr 13 10:43:32 2011 +0300

Files Changed: 1
Lines Added: 3
Lines Removed: 0
Total Changes: 3
