{
  "hash": "165ea85f14831f27fc6fe3b02b35e42e50b9ed94",
  "hash_short": "165ea85f",
  "subject": "btrfs: do not write supers if we have an fs error",
  "body": "Error injection testing uncovered a pretty severe problem where we could\nend up committing a super that pointed to the wrong tree roots,\nresulting in transid mismatch errors.\n\nThe way we commit the transaction is we update the super copy with the\ncurrent generations and bytenrs of the important roots, and then copy\nthat into our super_for_commit.  Then we allow transactions to continue\nagain, we write out the dirty pages for the transaction, and then we\nwrite the super.  If the write out fails we'll bail and skip writing the\nsupers.\n\nHowever since we've allowed a new transaction to start, we can have a\nlog attempting to sync at this point, which would be blocked on\nfs_info->tree_log_mutex.  Once the commit fails we're allowed to do the\nlog tree commit, which uses super_for_commit, which now points at fs\ntree's that were not written out.\n\nFix this by checking BTRFS_FS_STATE_ERROR once we acquire the\ntree_log_mutex.  This way if the transaction commit fails we're sure to\nsee this bit set and we can skip writing the super out.  This patch\nfixes this specific transid mismatch error I was seeing with this\nparticular error path.\n\nCC: stable@vger.kernel.org # 5.12+\nReviewed-by: Filipe Manana <fdmanana@suse.com>\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "full_message": "btrfs: do not write supers if we have an fs error\n\nError injection testing uncovered a pretty severe problem where we could\nend up committing a super that pointed to the wrong tree roots,\nresulting in transid mismatch errors.\n\nThe way we commit the transaction is we update the super copy with the\ncurrent generations and bytenrs of the important roots, and then copy\nthat into our super_for_commit.  Then we allow transactions to continue\nagain, we write out the dirty pages for the transaction, and then we\nwrite the super.  If the write out fails we'll bail and skip writing the\nsupers.\n\nHowever since we've allowed a new transaction to start, we can have a\nlog attempting to sync at this point, which would be blocked on\nfs_info->tree_log_mutex.  Once the commit fails we're allowed to do the\nlog tree commit, which uses super_for_commit, which now points at fs\ntree's that were not written out.\n\nFix this by checking BTRFS_FS_STATE_ERROR once we acquire the\ntree_log_mutex.  This way if the transaction commit fails we're sure to\nsee this bit set and we can skip writing the super out.  This patch\nfixes this specific transid mismatch error I was seeing with this\nparticular error path.\n\nCC: stable@vger.kernel.org # 5.12+\nReviewed-by: Filipe Manana <fdmanana@suse.com>\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "author_name": "Josef Bacik",
  "author_email": "josef@toxicpanda.com",
  "author_date": "Wed May 19 17:15:53 2021 -0400",
  "author_date_iso": "2021-05-19T17:15:53-04:00",
  "committer_name": "David Sterba",
  "committer_email": "dsterba@suse.com",
  "committer_date": "Fri Jun 4 13:11:38 2021 +0200",
  "committer_date_iso": "2021-06-04T13:11:38+02:00",
  "files_changed": [
    "fs/btrfs/tree-log.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/btrfs/tree-log.c",
      "insertions": 16,
      "deletions": 0
    }
  ],
  "total_insertions": 16,
  "total_deletions": 0,
  "total_changes": 16,
  "parents": [
    "503d1acb01826b42e5afb496dfcc32751bec9478"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/tree-log.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}