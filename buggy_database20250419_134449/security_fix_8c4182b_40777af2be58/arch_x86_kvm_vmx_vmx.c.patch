commit 8c4182bd27cafc2b0f94564485c89ed366c1572c
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Jul 10 17:48:10 2020 +0200

    KVM: VMX: optimize #PF injection when MAXPHYADDR does not match
    
    Ignore non-present page faults, since those cannot have reserved
    bits set.
    
    When running access.flat with "-cpu Haswell,phys-bits=36", the
    number of trapped page faults goes down from 8872644 to 3978948.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <20200710154811.418214-9-mgamal@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index 5518f75c9b19..962a78c7dde5 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -4355,6 +4355,16 @@ static void init_vmcs(struct vcpu_vmx *vmx)
 		vmx->pt_desc.guest.output_mask = 0x7F;
 		vmcs_write64(GUEST_IA32_RTIT_CTL, 0);
 	}
+
+	/*
+	 * If EPT is enabled, #PF is only trapped if MAXPHYADDR is mismatched
+	 * between guest and host.  In that case we only care about present
+	 * faults.
+	 */
+	if (enable_ept) {
+		vmcs_write32(PAGE_FAULT_ERROR_CODE_MASK, PFERR_PRESENT_MASK);
+		vmcs_write32(PAGE_FAULT_ERROR_CODE_MATCH, PFERR_PRESENT_MASK);
+	}
 }
 
 static void vmx_vcpu_reset(struct kvm_vcpu *vcpu, bool init_event)