{
  "hash": "2482ddec670fb83717d129012bc558777cb159f7",
  "hash_short": "2482ddec",
  "subject": "mm: add SLUB free list pointer obfuscation",
  "body": "This SLUB free list pointer obfuscation code is modified from Brad\nSpengler/PaX Team's code in the last public patch of grsecurity/PaX\nbased on my understanding of the code.  Changes or omissions from the\noriginal code are mine and don't reflect the original grsecurity/PaX\ncode.\n\nThis adds a per-cache random value to SLUB caches that is XORed with\ntheir freelist pointer address and value.  This adds nearly zero\noverhead and frustrates the very common heap overflow exploitation\nmethod of overwriting freelist pointers.\n\nA recent example of the attack is written up here:\n\n  http://cyseclabs.com/blog/cve-2016-6187-heap-off-by-one-exploit\n\nand there is a section dedicated to the technique the book \"A Guide to\nKernel Exploitation: Attacking the Core\".\n\nThis is based on patches by Daniel Micay, and refactored to minimize the\nuse of #ifdef.\n\nWith 200-count cycles of \"hackbench -g 20 -l 1000\" I saw the following\nrun times:\n\n before:\n \tmean 10.11882499999999999995\n\tvariance .03320378329145728642\n\tstdev .18221905304181911048\n\n  after:\n\tmean 10.12654000000000000014\n\tvariance .04700556623115577889\n\tstdev .21680767106160192064\n\nThe difference gets lost in the noise, but if the above is to be taken\nliterally, using CONFIG_FREELIST_HARDENED is 0.07% slower.\n\nLink: http://lkml.kernel.org/r/20170802180609.GA66807@beast\nSigned-off-by: Kees Cook <keescook@chromium.org>\nSuggested-by: Daniel Micay <danielmicay@gmail.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Tycho Andersen <tycho@docker.com>\nCc: Alexander Popov <alex.popov@linux.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "mm: add SLUB free list pointer obfuscation\n\nThis SLUB free list pointer obfuscation code is modified from Brad\nSpengler/PaX Team's code in the last public patch of grsecurity/PaX\nbased on my understanding of the code.  Changes or omissions from the\noriginal code are mine and don't reflect the original grsecurity/PaX\ncode.\n\nThis adds a per-cache random value to SLUB caches that is XORed with\ntheir freelist pointer address and value.  This adds nearly zero\noverhead and frustrates the very common heap overflow exploitation\nmethod of overwriting freelist pointers.\n\nA recent example of the attack is written up here:\n\n  http://cyseclabs.com/blog/cve-2016-6187-heap-off-by-one-exploit\n\nand there is a section dedicated to the technique the book \"A Guide to\nKernel Exploitation: Attacking the Core\".\n\nThis is based on patches by Daniel Micay, and refactored to minimize the\nuse of #ifdef.\n\nWith 200-count cycles of \"hackbench -g 20 -l 1000\" I saw the following\nrun times:\n\n before:\n \tmean 10.11882499999999999995\n\tvariance .03320378329145728642\n\tstdev .18221905304181911048\n\n  after:\n\tmean 10.12654000000000000014\n\tvariance .04700556623115577889\n\tstdev .21680767106160192064\n\nThe difference gets lost in the noise, but if the above is to be taken\nliterally, using CONFIG_FREELIST_HARDENED is 0.07% slower.\n\nLink: http://lkml.kernel.org/r/20170802180609.GA66807@beast\nSigned-off-by: Kees Cook <keescook@chromium.org>\nSuggested-by: Daniel Micay <danielmicay@gmail.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Tycho Andersen <tycho@docker.com>\nCc: Alexander Popov <alex.popov@linux.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Wed Sep 6 16:19:18 2017 -0700",
  "author_date_iso": "2017-09-06T16:19:18-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Sep 6 17:27:24 2017 -0700",
  "committer_date_iso": "2017-09-06T17:27:24-07:00",
  "files_changed": [
    "include/linux/slub_def.h",
    "init/Kconfig",
    "mm/slub.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "include/linux/slub_def.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "init/Kconfig",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "mm/slub.c",
      "insertions": 37,
      "deletions": 5
    }
  ],
  "total_insertions": 50,
  "total_deletions": 5,
  "total_changes": 55,
  "parents": [
    "ea37df54d2b7950d607800ee417a1d59b95068c2"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.14",
    "v4.14-rc1",
    "v4.14-rc2",
    "v4.14-rc3",
    "v4.14-rc4",
    "v4.14-rc5",
    "v4.14-rc6",
    "v4.14-rc7",
    "v4.14-rc8",
    "v4.15"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/slub_def.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "init/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slub.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}