commit 4fec15d1bd8352b6fc1edd71ae35ab138df010fc
Author: Imre Deak <imre.deak@intel.com>
Date:   Wed Mar 16 13:39:08 2016 +0200

    drm/i915: Add fault injection support
    
    Add support for forcing an error at selected places in the driver. As an
    example add 4 options to fail during driver loading.
    
    Requested by Chris.
    
    v2:
    - Add fault point for modeset initialization
    - Print debug message when injecting an error
    v3:
    - Rename inject_fault to inject_load_failure, rename the related macros
      and helper accordingly (Chris)
    - Use a counter instead of a mask to identify the failure point (Daniel)
    - Mark the module option as _unsafe and keep i915_params ordered (Joonas)
    v4:
    - Rebase on latest -nightly
    v5:
    - Use DRM_INFO instead of DRM_DEBUG_DRIVER, making it clearer in CI reports
      that a following error message is expected (IRC r-b from Chris on v5)
    
    CC: Chris Wilson <chris@chris-wilson.co.uk>
    CC: Daniel Vetter <daniel.vetter@ffwll.ch>
    CC: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>

diff --git a/drivers/gpu/drm/i915/i915_params.c b/drivers/gpu/drm/i915/i915_params.c
index 97691f1f679c..1779f02e6df8 100644
--- a/drivers/gpu/drm/i915/i915_params.c
+++ b/drivers/gpu/drm/i915/i915_params.c
@@ -57,6 +57,7 @@ struct i915_params i915 __read_mostly = {
 	.enable_guc_submission = false,
 	.guc_log_level = -1,
 	.enable_dp_mst = true,
+	.inject_load_failure = 0,
 };
 
 module_param_named(modeset, i915.modeset, int, 0400);
@@ -206,3 +207,6 @@ MODULE_PARM_DESC(guc_log_level,
 module_param_named_unsafe(enable_dp_mst, i915.enable_dp_mst, bool, 0600);
 MODULE_PARM_DESC(enable_dp_mst,
 	"Enable multi-stream transport (MST) for new DisplayPort sinks. (default: true)");
+module_param_named_unsafe(inject_load_failure, i915.inject_load_failure, uint, 0400);
+MODULE_PARM_DESC(inject_load_failure,
+	"Force an error after a number of failure check points (0:disabled (default), N:force failure at the Nth failure check point)");