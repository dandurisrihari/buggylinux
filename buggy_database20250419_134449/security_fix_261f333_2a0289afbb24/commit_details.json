{
  "hash": "261f33388c29f6f3c12a724e6d89172b7f6d5996",
  "hash_short": "261f3338",
  "subject": "media: uvcvideo: Fix missing check to determine if element is found in list",
  "body": "The list iterator will point to a bogus position containing HEAD if\nthe list is empty or the element is not found in list. This case\nshould be checked before any use of the iterator, otherwise it will\nlead to a invalid memory access. The missing check here is before\n\"pin = iterm->id;\", just add check here to fix the security bug.\n\nIn addition, the list iterator value will *always* be set and non-NULL\nby list_for_each_entry(), so it is incorrect to assume that the iterator\nvalue will be NULL if the element is not found in list, considering\nthe (mis)use here: \"if (iterm == NULL\".\n\nUse a new value 'it' as the list iterator, while use the old value\n'iterm' as a dedicated pointer to point to the found element, which\n1. can fix this bug, due to 'iterm' is NULL only if it's not found.\n2. do not need to change all the uses of 'iterm' after the loop.\n3. can also limit the scope of the list iterator 'it' *only inside*\n   the traversal loop by simply declaring 'it' inside the loop in the\n   future, as usage of the iterator outside of the list_for_each_entry\n   is considered harmful. https://lkml.org/lkml/2022/2/17/1032\n\nFixes: d5e90b7a6cd1c (\"[media] uvcvideo: Move to video_ioctl2\")\nSigned-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>\nSigned-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>",
  "full_message": "media: uvcvideo: Fix missing check to determine if element is found in list\n\nThe list iterator will point to a bogus position containing HEAD if\nthe list is empty or the element is not found in list. This case\nshould be checked before any use of the iterator, otherwise it will\nlead to a invalid memory access. The missing check here is before\n\"pin = iterm->id;\", just add check here to fix the security bug.\n\nIn addition, the list iterator value will *always* be set and non-NULL\nby list_for_each_entry(), so it is incorrect to assume that the iterator\nvalue will be NULL if the element is not found in list, considering\nthe (mis)use here: \"if (iterm == NULL\".\n\nUse a new value 'it' as the list iterator, while use the old value\n'iterm' as a dedicated pointer to point to the found element, which\n1. can fix this bug, due to 'iterm' is NULL only if it's not found.\n2. do not need to change all the uses of 'iterm' after the loop.\n3. can also limit the scope of the list iterator 'it' *only inside*\n   the traversal loop by simply declaring 'it' inside the loop in the\n   future, as usage of the iterator outside of the list_for_each_entry\n   is considered harmful. https://lkml.org/lkml/2022/2/17/1032\n\nFixes: d5e90b7a6cd1c (\"[media] uvcvideo: Move to video_ioctl2\")\nSigned-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>\nSigned-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>",
  "author_name": "Xiaomeng Tong",
  "author_email": "xiam0nd.tong@gmail.com",
  "author_date": "Sat Mar 19 11:22:22 2022 +0100",
  "author_date_iso": "2022-03-19T11:22:22+01:00",
  "committer_name": "Mauro Carvalho Chehab",
  "committer_email": "mchehab@kernel.org",
  "committer_date": "Sun May 8 07:08:53 2022 +0200",
  "committer_date_iso": "2022-05-08T07:08:53+02:00",
  "files_changed": [
    "drivers/media/usb/uvc/uvc_v4l2.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/media/usb/uvc/uvc_v4l2.c",
      "insertions": 11,
      "deletions": 9
    }
  ],
  "total_insertions": 11,
  "total_deletions": 9,
  "total_changes": 20,
  "parents": [
    "e3a0f5569e17b4ddb24487f6243ae0cae3879550"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security bug"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/media/usb/uvc/uvc_v4l2.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}