{
  "hash": "ba9d1d3e3e7c34826b62498f7d6563b73c22ac13",
  "hash_short": "ba9d1d3e",
  "subject": "arm64: cpufeature: Modify address authentication cpufeature to exact",
  "body": "The current address authentication cpufeature levels are set as LOWER_SAFE\nwhich is not compatible with the different configurations added for Armv8.3\nptrauth enhancements as the different levels have different behaviour and\nthere is no tunable to enable the lower safe versions. This is rectified\nby setting those cpufeature type as EXACT.\n\nThe current cpufeature framework also does not interfere in the booting of\nnon-exact secondary cpus but rather marks them as tainted. As a workaround\nthis is fixed by replacing the generic match handler with a new handler\nspecific to ptrauth.\n\nAfter this change, if there is any variation in ptrauth configurations in\nsecondary cpus from boot cpu then those mismatched cpus are parked in an\ninfinite loop.\n\nFollowing ptrauth crash log is observed in Arm fastmodel with simulated\nmismatched cpus without this fix,\n\n CPU features: SANITY CHECK: Unexpected variation in SYS_ID_AA64ISAR1_EL1. Boot CPU: 0x11111110211402, CPU4: 0x11111110211102\n CPU features: Unsupported CPU feature variation detected.\n GICv3: CPU4: found redistributor 100 region 0:0x000000002f180000\n CPU4: Booted secondary processor 0x0000000100 [0x410fd0f0]\n Unable to handle kernel paging request at virtual address bfff800010dadf3c\n Mem abort info:\n   ESR = 0x86000004\n   EC = 0x21: IABT (current EL), IL = 32 bits\n   SET = 0, FnV = 0\n   EA = 0, S1PTW = 0\n [bfff800010dadf3c] address between user and kernel address ranges\n Internal error: Oops: 86000004 [#1] PREEMPT SMP\n Modules linked in:\n CPU: 4 PID: 29 Comm: migration/4 Tainted: G S                5.8.0-rc4-00005-ge658591d66d1-dirty #158\n Hardware name: Foundation-v8A (DT)\n pstate: 60000089 (nZCv daIf -PAN -UAO BTYPE=--)\n pc : 0xbfff800010dadf3c\n lr : __schedule+0x2b4/0x5a8\n sp : ffff800012043d70\n x29: ffff800012043d70 x28: 0080000000000000\n x27: ffff800011cbe000 x26: ffff00087ad37580\n x25: ffff00087ad37000 x24: ffff800010de7d50\n x23: ffff800011674018 x22: 0784800010dae2a8\n x21: ffff00087ad37000 x20: ffff00087acb8000\n x19: ffff00087f742100 x18: 0000000000000030\n x17: 0000000000000000 x16: 0000000000000000\n x15: ffff800011ac1000 x14: 00000000000001bd\n x13: 0000000000000000 x12: 0000000000000000\n x11: 0000000000000000 x10: 71519a147ddfeb82\n x9 : 825d5ec0fb246314 x8 : ffff00087ad37dd8\n x7 : 0000000000000000 x6 : 00000000fffedb0e\n x5 : 00000000ffffffff x4 : 0000000000000000\n x3 : 0000000000000028 x2 : ffff80086e11e000\n x1 : ffff00087ad37000 x0 : ffff00087acdc600\n Call trace:\n  0xbfff800010dadf3c\n  schedule+0x78/0x110\n  schedule_preempt_disabled+0x24/0x40\n  __kthread_parkme+0x68/0xd0\n  kthread+0x138/0x160\n  ret_from_fork+0x10/0x34\n Code: bad PC value\n\nAfter this fix, the mismatched CPU4 is parked as,\n CPU features: CPU4: Detected conflict for capability 39 (Address authentication (IMP DEF algorithm)), System: 1, CPU: 0\n CPU4: will not boot\n CPU4: failed to come online\n CPU4: died during early boot\n\n[Suzuki: Introduce new matching function for address authentication]\n\nSuggested-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nReviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nReviewed-by: Catalin Marinas <catalin.marinas@arm.com>\nLink: https://lore.kernel.org/r/20200914083656.21428-5-amit.kachhap@arm.com\nSigned-off-by: Will Deacon <will@kernel.org>",
  "full_message": "arm64: cpufeature: Modify address authentication cpufeature to exact\n\nThe current address authentication cpufeature levels are set as LOWER_SAFE\nwhich is not compatible with the different configurations added for Armv8.3\nptrauth enhancements as the different levels have different behaviour and\nthere is no tunable to enable the lower safe versions. This is rectified\nby setting those cpufeature type as EXACT.\n\nThe current cpufeature framework also does not interfere in the booting of\nnon-exact secondary cpus but rather marks them as tainted. As a workaround\nthis is fixed by replacing the generic match handler with a new handler\nspecific to ptrauth.\n\nAfter this change, if there is any variation in ptrauth configurations in\nsecondary cpus from boot cpu then those mismatched cpus are parked in an\ninfinite loop.\n\nFollowing ptrauth crash log is observed in Arm fastmodel with simulated\nmismatched cpus without this fix,\n\n CPU features: SANITY CHECK: Unexpected variation in SYS_ID_AA64ISAR1_EL1. Boot CPU: 0x11111110211402, CPU4: 0x11111110211102\n CPU features: Unsupported CPU feature variation detected.\n GICv3: CPU4: found redistributor 100 region 0:0x000000002f180000\n CPU4: Booted secondary processor 0x0000000100 [0x410fd0f0]\n Unable to handle kernel paging request at virtual address bfff800010dadf3c\n Mem abort info:\n   ESR = 0x86000004\n   EC = 0x21: IABT (current EL), IL = 32 bits\n   SET = 0, FnV = 0\n   EA = 0, S1PTW = 0\n [bfff800010dadf3c] address between user and kernel address ranges\n Internal error: Oops: 86000004 [#1] PREEMPT SMP\n Modules linked in:\n CPU: 4 PID: 29 Comm: migration/4 Tainted: G S                5.8.0-rc4-00005-ge658591d66d1-dirty #158\n Hardware name: Foundation-v8A (DT)\n pstate: 60000089 (nZCv daIf -PAN -UAO BTYPE=--)\n pc : 0xbfff800010dadf3c\n lr : __schedule+0x2b4/0x5a8\n sp : ffff800012043d70\n x29: ffff800012043d70 x28: 0080000000000000\n x27: ffff800011cbe000 x26: ffff00087ad37580\n x25: ffff00087ad37000 x24: ffff800010de7d50\n x23: ffff800011674018 x22: 0784800010dae2a8\n x21: ffff00087ad37000 x20: ffff00087acb8000\n x19: ffff00087f742100 x18: 0000000000000030\n x17: 0000000000000000 x16: 0000000000000000\n x15: ffff800011ac1000 x14: 00000000000001bd\n x13: 0000000000000000 x12: 0000000000000000\n x11: 0000000000000000 x10: 71519a147ddfeb82\n x9 : 825d5ec0fb246314 x8 : ffff00087ad37dd8\n x7 : 0000000000000000 x6 : 00000000fffedb0e\n x5 : 00000000ffffffff x4 : 0000000000000000\n x3 : 0000000000000028 x2 : ffff80086e11e000\n x1 : ffff00087ad37000 x0 : ffff00087acdc600\n Call trace:\n  0xbfff800010dadf3c\n  schedule+0x78/0x110\n  schedule_preempt_disabled+0x24/0x40\n  __kthread_parkme+0x68/0xd0\n  kthread+0x138/0x160\n  ret_from_fork+0x10/0x34\n Code: bad PC value\n\nAfter this fix, the mismatched CPU4 is parked as,\n CPU features: CPU4: Detected conflict for capability 39 (Address authentication (IMP DEF algorithm)), System: 1, CPU: 0\n CPU4: will not boot\n CPU4: failed to come online\n CPU4: died during early boot\n\n[Suzuki: Introduce new matching function for address authentication]\n\nSuggested-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nReviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nReviewed-by: Catalin Marinas <catalin.marinas@arm.com>\nLink: https://lore.kernel.org/r/20200914083656.21428-5-amit.kachhap@arm.com\nSigned-off-by: Will Deacon <will@kernel.org>",
  "author_name": "Amit Daniel Kachhap",
  "author_email": "amit.kachhap@arm.com",
  "author_date": "Mon Sep 14 14:06:54 2020 +0530",
  "author_date_iso": "2020-09-14T14:06:54+05:30",
  "committer_name": "Will Deacon",
  "committer_email": "will@kernel.org",
  "committer_date": "Mon Sep 14 12:07:02 2020 +0100",
  "committer_date_iso": "2020-09-14T12:07:02+01:00",
  "files_changed": [
    "arch/arm64/kernel/cpufeature.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "insertions": 35,
      "deletions": 9
    }
  ],
  "total_insertions": 35,
  "total_deletions": 9,
  "total_changes": 44,
  "parents": [
    "e16aeb072682d3dcdbdad452c974baa0d2b0c6db"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}