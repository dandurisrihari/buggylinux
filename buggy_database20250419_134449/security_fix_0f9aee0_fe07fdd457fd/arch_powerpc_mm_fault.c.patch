commit 0f9aee0cb9da7db7d96f63cfa2dc5e4f1bffeb87
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Mon Dec 23 07:54:22 2019 +0000

    powerpc/mm: Don't log user reads to 0xffffffff
    
    Running vdsotest leaves many times the following log:
    
      [   79.629901] vdsotest[396]: User access of kernel address (ffffffff) - exploit attempt? (uid: 0)
    
    A pointer set to (-1) is likely a programming error similar to
    a NULL pointer and is not worth logging as an exploit attempt.
    
    Don't log user accesses to 0xffffffff.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/0728849e826ba16f1fbd6fa7f5c6cc87bd64e097.1577087627.git.christophe.leroy@c-s.fr

diff --git a/arch/powerpc/mm/fault.c b/arch/powerpc/mm/fault.c
index 9e119f98a725..7534ee5bf9b2 100644
--- a/arch/powerpc/mm/fault.c
+++ b/arch/powerpc/mm/fault.c
@@ -350,6 +350,9 @@ static void sanity_check_fault(bool is_write, bool is_user,
 	 * Userspace trying to access kernel address, we get PROTFAULT for that.
 	 */
 	if (is_user && address >= TASK_SIZE) {
+		if ((long)address == -1)
+			return;
+
 		pr_crit_ratelimited("%s[%d]: User access of kernel address (%lx) - exploit attempt? (uid: %d)\n",
 				   current->comm, current->pid, address,
 				   from_kuid(&init_user_ns, current_uid()));