{
  "hash": "6f7630b1b5bc672b54c1285ee6aba752b446672c",
  "hash_short": "6f7630b1",
  "subject": "fortify: Capture __bos() results in const temp vars",
  "body": "In two recent run-time memcpy() bound checking bug reports (NFS[1] and\nJFS[2]), the _detection_ was working correctly (in the sense that the\nrequested copy size was larger than the destination field size), but\nthe _warning text_ was showing the destination field size as SIZE_MAX\n(\"unknown size\"). This should be impossible, since the detection function\nwill explicitly give up if the destination field size is unknown. For\nexample, the JFS warning was:\n\n  memcpy: detected field-spanning write (size 132) of single field \"ip->i_link\" at fs/jfs/namei.c:950 (size 18446744073709551615)\n\nOther cases of this warning (e.g.[3]) have reported correctly,\nand the reproducer only happens under GCC (at least 10.2 and 12.1),\nso this currently appears to be a GCC bug. Explicitly capturing the\n__builtin_object_size() results in const temporary variables fixes the\nreport. For example, the JFS reproducer now correctly reports the field\nsize (128):\n\n  memcpy: detected field-spanning write (size 132) of single field \"ip->i_link\" at fs/jfs/namei.c:950 (size 128)\n\nExamination of the .text delta (which is otherwise identical), shows\nthe literal value used in the report changing:\n\n-     mov    $0xffffffffffffffff,%rcx\n+     mov    $0x80,%ecx\n\n[1] https://lore.kernel.org/lkml/Y0zEzZwhOxTDcBTB@codemonkey.org.uk/\n[2] https://syzkaller.appspot.com/bug?id=23d613df5259b977dac1696bec77f61a85890e3d\n[3] https://lore.kernel.org/all/202210110948.26b43120-yujie.liu@intel.com/\n\nCc: \"Dr. David Alan Gilbert\" <linux@treblig.org>\nCc: llvm@lists.linux.dev\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "fortify: Capture __bos() results in const temp vars\n\nIn two recent run-time memcpy() bound checking bug reports (NFS[1] and\nJFS[2]), the _detection_ was working correctly (in the sense that the\nrequested copy size was larger than the destination field size), but\nthe _warning text_ was showing the destination field size as SIZE_MAX\n(\"unknown size\"). This should be impossible, since the detection function\nwill explicitly give up if the destination field size is unknown. For\nexample, the JFS warning was:\n\n  memcpy: detected field-spanning write (size 132) of single field \"ip->i_link\" at fs/jfs/namei.c:950 (size 18446744073709551615)\n\nOther cases of this warning (e.g.[3]) have reported correctly,\nand the reproducer only happens under GCC (at least 10.2 and 12.1),\nso this currently appears to be a GCC bug. Explicitly capturing the\n__builtin_object_size() results in const temporary variables fixes the\nreport. For example, the JFS reproducer now correctly reports the field\nsize (128):\n\n  memcpy: detected field-spanning write (size 132) of single field \"ip->i_link\" at fs/jfs/namei.c:950 (size 128)\n\nExamination of the .text delta (which is otherwise identical), shows\nthe literal value used in the report changing:\n\n-     mov    $0xffffffffffffffff,%rcx\n+     mov    $0x80,%ecx\n\n[1] https://lore.kernel.org/lkml/Y0zEzZwhOxTDcBTB@codemonkey.org.uk/\n[2] https://syzkaller.appspot.com/bug?id=23d613df5259b977dac1696bec77f61a85890e3d\n[3] https://lore.kernel.org/all/202210110948.26b43120-yujie.liu@intel.com/\n\nCc: \"Dr. David Alan Gilbert\" <linux@treblig.org>\nCc: llvm@lists.linux.dev\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Fri Oct 28 15:32:07 2022 -0700",
  "author_date_iso": "2022-10-28T15:32:07-07:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Fri Oct 28 16:07:01 2022 -0700",
  "committer_date_iso": "2022-10-28T16:07:01-07:00",
  "files_changed": [
    "include/linux/fortify-string.h"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "include/linux/fortify-string.h",
      "insertions": 9,
      "deletions": 4
    }
  ],
  "total_insertions": 9,
  "total_deletions": 4,
  "total_changes": 13,
  "parents": [
    "72c3ebea375c39413d02113758319b74ecd790bd"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/fortify-string.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}