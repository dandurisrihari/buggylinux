commit 0c86b42439b6c11d758b3392a21117934fef00c1
Merge: 51aad189f8e0 cf05922d63e2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Mar 28 17:44:52 2025 -0700

    Merge tag 'drm-next-2025-03-28' of https://gitlab.freedesktop.org/drm/kernel
    
    Pull drm updates from Dave Airlie:
     "Outside of drm there are some rust patches from Danilo who maintains
      that area in here, and some pieces for drm header check tests.
    
      The major things in here are a new driver supporting the touchbar
      displays on M1/M2, the nova-core stub driver which is just the vehicle
      for adding rust abstractions and start developing a real driver inside
      of.
    
      xe adds support for SVM with a non-driver specific SVM core
      abstraction that will hopefully be useful for other drivers, along
      with support for shrinking for TTM devices. I'm sure xe and AMD
      support new devices, but the pipeline depth on these things is hard to
      know what they end up being in the marketplace!
    
      uapi:
       - add mediatek tiled fourcc
       - add support for notifying userspace on device wedged
    
      new driver:
       - appletbdrm: support for Apple Touchbar displays on m1/m2
       - nova-core: skeleton rust driver to develop nova inside off
    
      firmware:
       - add some rust firmware pieces
    
      rust:
       - add 'LocalModule' type alias
    
      component:
       - add helper to query bound status
    
      fbdev:
       - fbtft: remove access to page->index
    
      media:
       - cec: tda998x: import driver from drm
    
      dma-buf:
       - add fast path for single fence merging
    
      tests:
       - fix lockdep warnings
    
      atomic:
       - allow full modeset on connector changes
       - clarify semantics of allow_modeset and drm_atomic_helper_check
       - async-flip: support on arbitary planes
       - writeback: fix UAF
       - Document atomic-state history
    
      format-helper:
       - support ARGB8888 to ARGB4444 conversions
    
      buddy:
       - fix multi-root cleanup
    
      ci:
       - update IGT
    
      dp:
       - support extended wake timeout
       - mst: fix RAD to string conversion
       - increase DPCD eDP control CAP size to 5 bytes
       - add DPCD eDP v1.5 definition
       - add helpers for LTTPR transparent mode
    
      panic:
       - encode QR code according to Fido 2.2
    
      scheduler:
       - add parameter struct for init
       - improve job peek/pop operations
       - optimise drm_sched_job struct layout
    
      ttm:
       - refactor pool allocation
       - add helpers for TTM shrinker
    
      panel-orientation:
       - add a bunch of new quirks
    
      panel:
       - convert panels to multi-style functions
       - edp: Add support for B140UAN04.4, BOE NV140FHM-NZ, CSW MNB601LS1-3,
         LG LP079QX1-SP0V, MNE007QS3-7, STA 116QHD024002, Starry
         116KHD024006, Lenovo T14s Gen6 Snapdragon
       - himax-hx83102: Add support for CSOT PNA957QT1-1, Kingdisplay
         kd110n11-51ie, Starry 2082109qfh040022-50e
       - visionox-r66451: use multi-style MIPI-DSI functions
       - raydium-rm67200: Add driver for Raydium RM67200
       - simple: Add support for BOE AV123Z7M-N17, BOE AV123Z7M-N17
       - sony-td4353-jdi: Use MIPI-DSI multi-func interface
       - summit: Add driver for Apple Summit display panel
       - visionox-rm692e5: Add driver for Visionox RM692E5
    
      bridge:
       - pass full atomic state to various callbacks
       - adv7511: Report correct capabilities
       - it6505: Fix HDCP V compare
       - snd65dsi86: fix device IDs
       - nwl-dsi: set bridge type
       - ti-sn65si83: add error recovery and set bridge type
       - synopsys: add HDMI audio support
    
      xe:
       - support device-wedged event
       - add mmap support for PCI memory barrier
       - perf pmu integration and expose per-engien activity
       - add EU stall sampling support
       - GPU SVM and Xe SVM implementation
       - use TTM shrinker
       - add survivability mode to allow the driver to do firmware updates
         in critical failure states
       - PXP HWDRM support for MTL and LNL
       - expose package/vram temps over hwmon
       - enable DP tunneling
       - drop mmio_ext abstraction
       - Reject BO evcition if BO is bound to current VM
       - Xe suballocator improvements
       - re-use display vmas when possible
       - add GuC Buffer Cache abstraction
       - PCI ID update for Panther Lake and Battlemage
       - Enable SRIOV for Panther Lake
       - Refactor VRAM manager location
    
      i915:
       - enable extends wake timeout
       - support device-wedged event
       - Enable DP 128b/132b SST DSC
       - FBC dirty rectangle support for display version 30+
       - convert i915/xe to drm client setup
       - Compute HDMI PLLS for rates not in fixed tables
       - Allow DSB usage when PSR is enabled on LNL+
       - Enable panel replay without full modeset
       - Enable async flips with compressed buffers on ICL+
       - support luminance based brightness via DPCD for eDP
       - enable VRR enable/disable without full modeset
       - allow GuC SLPC default strategies on MTL+ for performance
       - lots of display refactoring in move to struct intel_display
    
      amdgpu:
       - add device wedged event
       - support async page flips on overlay planes
       - enable broadcast RGB drm property
       - add info ioctl for virt mode
       - OEM i2c support for RGB lights
       - GC 11.5.2 + 11.5.3 support
       - SDMA 6.1.3 support
       - NBIO 7.9.1 + 7.11.2 support
       - MMHUB 1.8.1 + 3.3.2 support
       - DCN 3.6.0 support
       - Add dynamic workload profile switching for GC 10-12
       - support larger VBIOS sizes
       - Mark gttsize parameters as deprecated
       - Initial JPEG queue resset support
    
      amdkfd:
       - add KFD per process flags for setting precision
       - sync pasid values between KGD and KFD
       - improve GTT/VRAM handling for APUs
       - fix user queue validation on GC7/8
       - SDMA queue reset support
    
      raedeon:
       - rs400 hyperz fix
    
      i2c:
       - td998x: drop platform_data, split driver into media and bridge
    
      ast:
       - transmitter chip detection refactoring
       - vbios display mode refactoring
       - astdp: fix connection status and filter unsupported modes
       - cursor handling refactoring
    
      imagination:
       - check job dependencies with sched helper
    
      ivpu:
       - improve command queue handling
       - use workqueue for IRQ handling
       - add support HW fault injection
       - locking fixes
    
      mgag200:
       - add support for G200eH5
    
      msm:
       - dpu: add concurrent writeback support for DPU 10.x+
       - use LTTPR helpers
       - GPU:
         - Fix obscure GMU suspend failure
         - Expose syncobj timeline support
         - Extend GPU devcoredump with pagetable info
         - a623 support
         - Fix a6xx gen1/gen2 indexed-register blocks in gpu snapshot /
           devcoredump
       - Display:
         - Add cpu-cfg interconnect paths on SM8560 and SM8650
         - Introduce KMS OMMU fault handler, causing devcoredump snapshot
         - Fixed error pointer dereference in msm_kms_init_aspace()
       - DPU:
         - Fix mode_changing handling
         - Add writeback support on SM6150 (QCS615)
         - Fix DSC programming in 1:1:1 topology
         - Reworked hardware resource allocation, moving it to the CRTC code
         - Enabled support for Concurrent WriteBack (CWB) on SM8650
         - Enabled CDM blocks on all relevant platforms
         - Reworked debugfs interface for BW/clocks debugging
         - Clear perf params before calculating bw
         - Support YUV formats on writeback
         - Fixed double inclusion
         - Fixed writeback in YUV formats when using cloned output, Dropped
           wb2_formats_rgb
         - Corrected dpu_crtc_check_mode_changed and struct dpu_encoder_virt
           kerneldocs
         - Fixed uninitialized variable in dpu_crtc_kickoff_clone_mode()
       - DSI:
         - DSC-related fixes
         - Rework clock programming
       - DSI PHY:
         - Fix 7nm (and lower) PHY programming
         - Add proper DT schema definitions for DSI PHY clocks
       - HDMI:
         - Rework the driver, enabling the use of the HDMI Connector
           framework
       - Bindings:
         - Added eDP PHY on SA8775P
    
      nouveau:
       - move drm_slave_encoder interface into driver
       - nvkm: refactor GSP RPC
       - use LTTPR helpers
    
      mediatek:
       - HDMI fixup and refinement
       - add MT8188 dsc compatible
       - MT8365 SoC support
    
      panthor:
       - Expose sizes of intenral BOs via fdinfo
       - Fix race between reset and suspend
       - Improve locking
    
      qaic:
       - Add support for AIC200
    
      renesas:
       - Fix limits in DT bindings
    
      rockchip:
       - support rk3562-mali
       - rk3576: Add HDMI support
       - vop2: Add new display modes on RK3588 HDMI0 up to 4K
       - Don't change HDMI reference clock rate
       - Fix DT bindings
       - analogix_dp: add eDP support
       - fix shutodnw
    
      solomon:
       - Set SPI device table to silence warnings
       - Fix pixel and scanline encoding
    
      v3d:
       - handle clock
    
      vc4:
       - Use drm_exec
       - Use dma-resv for wait-BO ioctl
       - Remove seqno infrastructure
    
      virtgpu:
       - Support partial mappings of GEM objects
       - Reserve VGA resources during initialization
       - Fix UAF in virtgpu_dma_buf_free_obj()
       - Add panic support
    
      vkms:
       - Switch to a managed modesetting pipeline
       - Add support for ARGB8888
       - fix UAf
    
      xlnx:
       - Set correct DMA segment size
       - use mutex guards
       - Fix error handling
       - Fix docs"
    
    * tag 'drm-next-2025-03-28' of https://gitlab.freedesktop.org/drm/kernel: (1762 commits)
      drm/amd/pm: Update feature list for smu_v13_0_6
      drm/amdgpu: Add parameter documentation for amdgpu_sync_fence
      drm/amdgpu/discovery: optionally use fw based ip discovery
      drm/amdgpu/discovery: use specific ip_discovery.bin for legacy asics
      drm/amdgpu/discovery: check ip_discovery fw file available
      drm/amd/pm: Remove unnecessay UQ10 to UINT conversion
      drm/amd/pm: Remove unnecessay UQ10 to UINT conversion
      drm/amdgpu/sdma_v4_4_2: update VM flush implementation for SDMA
      drm/amdgpu: Optimize VM invalidation engine allocation and synchronize GPU TLB flush
      drm/amd/amdgpu: Increase max rings to enable SDMA page ring
      drm/amdgpu: Decode deferred error type in gfx aca bank parser
      drm/amdgpu/gfx11: Add Cleaner Shader Support for GFX11.5 GPUs
      drm/amdgpu/mes: clean up SDMA HQD loop
      drm/amdgpu/mes: enable compute pipes across all MEC
      drm/amdgpu/mes: drop MES 10.x leftovers
      drm/amdgpu/mes: optimize compute loop handling
      drm/amdgpu/sdma: guilty tracking is per instance
      drm/amdgpu/sdma: fix engine reset handling
      drm/amdgpu: remove invalid usage of sched.ready
      drm/amdgpu: add cleaner shader trace point
      ...

diff --cc drivers/gpu/drm/xe/xe_bo.h
index 43bf6f140d40,bda3fdd408da..ec3e4446d027
--- a/drivers/gpu/drm/xe/xe_bo.h
+++ b/drivers/gpu/drm/xe/xe_bo.h
@@@ -341,6 -391,21 +391,20 @@@ static inline unsigned int xe_sg_segmen
  	return round_down(max / 2, PAGE_SIZE);
  }
  
+ /**
+  * struct xe_bo_shrink_flags - flags governing the shrink behaviour.
+  * @purge: Only purging allowed. Don't shrink if bo not purgeable.
+  * @writeback: Attempt to immediately move content to swap.
+  */
+ struct xe_bo_shrink_flags {
+ 	u32 purge : 1;
+ 	u32 writeback : 1;
+ };
+ 
+ long xe_bo_shrink(struct ttm_operation_ctx *ctx, struct ttm_buffer_object *bo,
+ 		  const struct xe_bo_shrink_flags flags,
+ 		  unsigned long *scanned);
+ 
 -#if IS_ENABLED(CONFIG_DRM_XE_KUNIT_TEST)
  /**
   * xe_bo_is_mem_type - Whether the bo currently resides in the given
   * TTM memory type