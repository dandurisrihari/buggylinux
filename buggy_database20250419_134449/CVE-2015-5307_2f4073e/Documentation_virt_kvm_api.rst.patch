commit 2f4073e08f4cc5a41e35d777c240aaadd0257051
Author: Tao Xu <tao3.xu@intel.com>
Date:   Tue May 24 21:56:24 2022 +0800

    KVM: VMX: Enable Notify VM exit
    
    There are cases that malicious virtual machines can cause CPU stuck (due
    to event windows don't open up), e.g., infinite loop in microcode when
    nested #AC (CVE-2015-5307). No event window means no event (NMI, SMI and
    IRQ) can be delivered. It leads the CPU to be unavailable to host or
    other VMs.
    
    VMM can enable notify VM exit that a VM exit generated if no event
    window occurs in VM non-root mode for a specified amount of time (notify
    window).
    
    Feature enabling:
    - The new vmcs field SECONDARY_EXEC_NOTIFY_VM_EXITING is introduced to
      enable this feature. VMM can set NOTIFY_WINDOW vmcs field to adjust
      the expected notify window.
    - Add a new KVM capability KVM_CAP_X86_NOTIFY_VMEXIT so that user space
      can query and enable this feature in per-VM scope. The argument is a
      64bit value: bits 63:32 are used for notify window, and bits 31:0 are
      for flags. Current supported flags:
      - KVM_X86_NOTIFY_VMEXIT_ENABLED: enable the feature with the notify
        window provided.
      - KVM_X86_NOTIFY_VMEXIT_USER: exit to userspace once the exits happen.
    - It's safe to even set notify window to zero since an internal hardware
      threshold is added to vmcs.notify_window.
    
    VM exit handling:
    - Introduce a vcpu state notify_window_exits to records the count of
      notify VM exits and expose it through the debugfs.
    - Notify VM exit can happen incident to delivery of a vector event.
      Allow it in KVM.
    - Exit to userspace unconditionally for handling when VM_CONTEXT_INVALID
      bit is set.
    
    Nested handling
    - Nested notify VM exits are not supported yet. Keep the same notify
      window control in vmcs02 as vmcs01, so that L1 can't escape the
      restriction of notify VM exits through launching L2 VM.
    
    Notify VM exit is defined in latest Intel Architecture Instruction Set
    Extensions Programming Reference, chapter 9.2.
    
    Co-developed-by: Xiaoyao Li <xiaoyao.li@intel.com>
    Signed-off-by: Xiaoyao Li <xiaoyao.li@intel.com>
    Signed-off-by: Tao Xu <tao3.xu@intel.com>
    Co-developed-by: Chenyi Qiang <chenyi.qiang@intel.com>
    Signed-off-by: Chenyi Qiang <chenyi.qiang@intel.com>
    Message-Id: <20220524135624.22988-5-chenyi.qiang@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/Documentation/virt/kvm/api.rst b/Documentation/virt/kvm/api.rst
index f67e367c4059..30e31a886422 100644
--- a/Documentation/virt/kvm/api.rst
+++ b/Documentation/virt/kvm/api.rst
@@ -6557,6 +6557,26 @@ array field represents return values. The userspace should update the return
 values of SBI call before resuming the VCPU. For more details on RISC-V SBI
 spec refer, https://github.com/riscv/riscv-sbi-doc.
 
+::
+
+    /* KVM_EXIT_NOTIFY */
+    struct {
+  #define KVM_NOTIFY_CONTEXT_INVALID	(1 << 0)
+      __u32 flags;
+    } notify;
+
+Used on x86 systems. When the VM capability KVM_CAP_X86_NOTIFY_VMEXIT is
+enabled, a VM exit generated if no event window occurs in VM non-root mode
+for a specified amount of time. Once KVM_X86_NOTIFY_VMEXIT_USER is set when
+enabling the cap, it would exit to userspace with the exit reason
+KVM_EXIT_NOTIFY for further handling. The "flags" field contains more
+detailed info.
+
+The valid value for 'flags' is:
+
+  - KVM_NOTIFY_CONTEXT_INVALID -- the VM context is corrupted and not valid
+    in VMCS. It would run into unknown result if resume the target VM.
+
 ::
 
 		/* Fix the size of the union. */
@@ -7523,6 +7543,35 @@ if the value was set to zero or KVM_ENABLE_CAP was not invoked, KVM
 uses the return value of KVM_CHECK_EXTENSION(KVM_CAP_MAX_VCPU_ID) as
 the maximum APIC ID.
 
+7.33 KVM_CAP_X86_NOTIFY_VMEXIT
+------------------------------
+
+:Architectures: x86
+:Target: VM
+:Parameters: args[0] is the value of notify window as well as some flags
+:Returns: 0 on success, -EINVAL if args[0] contains invalid flags or notify
+          VM exit is unsupported.
+
+Bits 63:32 of args[0] are used for notify window.
+Bits 31:0 of args[0] are for some flags. Valid bits are::
+
+  #define KVM_X86_NOTIFY_VMEXIT_ENABLED    (1 << 0)
+  #define KVM_X86_NOTIFY_VMEXIT_USER       (1 << 1)
+
+This capability allows userspace to configure the notify VM exit on/off
+in per-VM scope during VM creation. Notify VM exit is disabled by default.
+When userspace sets KVM_X86_NOTIFY_VMEXIT_ENABLED bit in args[0], VMM will
+enable this feature with the notify window provided, which will generate
+a VM exit if no event window occurs in VM non-root mode for a specified of
+time (notify window).
+
+If KVM_X86_NOTIFY_VMEXIT_USER is set in args[0], upon notify VM exits happen,
+KVM would exit to userspace for handling.
+
+This capability is aimed to mitigate the threat that malicious VMs can
+cause CPU stuck (due to event windows don't open up) and make the CPU
+unavailable to host or other VMs.
+
 8. Other capabilities.
 ======================