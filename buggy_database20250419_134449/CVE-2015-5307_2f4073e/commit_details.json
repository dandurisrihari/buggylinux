{
  "hash": "2f4073e08f4cc5a41e35d777c240aaadd0257051",
  "hash_short": "2f4073e0",
  "subject": "KVM: VMX: Enable Notify VM exit",
  "body": "There are cases that malicious virtual machines can cause CPU stuck (due\nto event windows don't open up), e.g., infinite loop in microcode when\nnested #AC (CVE-2015-5307). No event window means no event (NMI, SMI and\nIRQ) can be delivered. It leads the CPU to be unavailable to host or\nother VMs.\n\nVMM can enable notify VM exit that a VM exit generated if no event\nwindow occurs in VM non-root mode for a specified amount of time (notify\nwindow).\n\nFeature enabling:\n- The new vmcs field SECONDARY_EXEC_NOTIFY_VM_EXITING is introduced to\n  enable this feature. VMM can set NOTIFY_WINDOW vmcs field to adjust\n  the expected notify window.\n- Add a new KVM capability KVM_CAP_X86_NOTIFY_VMEXIT so that user space\n  can query and enable this feature in per-VM scope. The argument is a\n  64bit value: bits 63:32 are used for notify window, and bits 31:0 are\n  for flags. Current supported flags:\n  - KVM_X86_NOTIFY_VMEXIT_ENABLED: enable the feature with the notify\n    window provided.\n  - KVM_X86_NOTIFY_VMEXIT_USER: exit to userspace once the exits happen.\n- It's safe to even set notify window to zero since an internal hardware\n  threshold is added to vmcs.notify_window.\n\nVM exit handling:\n- Introduce a vcpu state notify_window_exits to records the count of\n  notify VM exits and expose it through the debugfs.\n- Notify VM exit can happen incident to delivery of a vector event.\n  Allow it in KVM.\n- Exit to userspace unconditionally for handling when VM_CONTEXT_INVALID\n  bit is set.\n\nNested handling\n- Nested notify VM exits are not supported yet. Keep the same notify\n  window control in vmcs02 as vmcs01, so that L1 can't escape the\n  restriction of notify VM exits through launching L2 VM.\n\nNotify VM exit is defined in latest Intel Architecture Instruction Set\nExtensions Programming Reference, chapter 9.2.\n\nCo-developed-by: Xiaoyao Li <xiaoyao.li@intel.com>\nSigned-off-by: Xiaoyao Li <xiaoyao.li@intel.com>\nSigned-off-by: Tao Xu <tao3.xu@intel.com>\nCo-developed-by: Chenyi Qiang <chenyi.qiang@intel.com>\nSigned-off-by: Chenyi Qiang <chenyi.qiang@intel.com>\nMessage-Id: <20220524135624.22988-5-chenyi.qiang@intel.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: VMX: Enable Notify VM exit\n\nThere are cases that malicious virtual machines can cause CPU stuck (due\nto event windows don't open up), e.g., infinite loop in microcode when\nnested #AC (CVE-2015-5307). No event window means no event (NMI, SMI and\nIRQ) can be delivered. It leads the CPU to be unavailable to host or\nother VMs.\n\nVMM can enable notify VM exit that a VM exit generated if no event\nwindow occurs in VM non-root mode for a specified amount of time (notify\nwindow).\n\nFeature enabling:\n- The new vmcs field SECONDARY_EXEC_NOTIFY_VM_EXITING is introduced to\n  enable this feature. VMM can set NOTIFY_WINDOW vmcs field to adjust\n  the expected notify window.\n- Add a new KVM capability KVM_CAP_X86_NOTIFY_VMEXIT so that user space\n  can query and enable this feature in per-VM scope. The argument is a\n  64bit value: bits 63:32 are used for notify window, and bits 31:0 are\n  for flags. Current supported flags:\n  - KVM_X86_NOTIFY_VMEXIT_ENABLED: enable the feature with the notify\n    window provided.\n  - KVM_X86_NOTIFY_VMEXIT_USER: exit to userspace once the exits happen.\n- It's safe to even set notify window to zero since an internal hardware\n  threshold is added to vmcs.notify_window.\n\nVM exit handling:\n- Introduce a vcpu state notify_window_exits to records the count of\n  notify VM exits and expose it through the debugfs.\n- Notify VM exit can happen incident to delivery of a vector event.\n  Allow it in KVM.\n- Exit to userspace unconditionally for handling when VM_CONTEXT_INVALID\n  bit is set.\n\nNested handling\n- Nested notify VM exits are not supported yet. Keep the same notify\n  window control in vmcs02 as vmcs01, so that L1 can't escape the\n  restriction of notify VM exits through launching L2 VM.\n\nNotify VM exit is defined in latest Intel Architecture Instruction Set\nExtensions Programming Reference, chapter 9.2.\n\nCo-developed-by: Xiaoyao Li <xiaoyao.li@intel.com>\nSigned-off-by: Xiaoyao Li <xiaoyao.li@intel.com>\nSigned-off-by: Tao Xu <tao3.xu@intel.com>\nCo-developed-by: Chenyi Qiang <chenyi.qiang@intel.com>\nSigned-off-by: Chenyi Qiang <chenyi.qiang@intel.com>\nMessage-Id: <20220524135624.22988-5-chenyi.qiang@intel.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Tao Xu",
  "author_email": "tao3.xu@intel.com",
  "author_date": "Tue May 24 21:56:24 2022 +0800",
  "author_date_iso": "2022-05-24T21:56:24+08:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Wed Jun 8 05:56:24 2022 -0400",
  "committer_date_iso": "2022-06-08T05:56:24-04:00",
  "files_changed": [
    "Documentation/virt/kvm/api.rst",
    "arch/x86/include/asm/kvm_host.h",
    "arch/x86/include/asm/vmx.h",
    "arch/x86/include/asm/vmxfeatures.h",
    "arch/x86/include/uapi/asm/vmx.h",
    "arch/x86/kvm/vmx/capabilities.h",
    "arch/x86/kvm/vmx/nested.c",
    "arch/x86/kvm/vmx/vmx.c",
    "arch/x86/kvm/x86.c",
    "arch/x86/kvm/x86.h",
    "include/uapi/linux/kvm.h"
  ],
  "files_changed_count": 11,
  "stats": [
    {
      "file": "Documentation/virt/kvm/api.rst",
      "insertions": 49,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/vmx.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/vmxfeatures.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/uapi/asm/vmx.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/vmx/capabilities.h",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "insertions": 38,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 21,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/x86.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/kvm.h",
      "insertions": 11,
      "deletions": 0
    }
  ],
  "total_insertions": 158,
  "total_deletions": 4,
  "total_changes": 162,
  "parents": [
    "938c8745bcf2f732ee928a0b9bd592198a88cfa4"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2015-5307"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "Documentation/virt/kvm/api.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/uapi/asm/vmx.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/vmxfeatures.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/vmx.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/capabilities.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/linux/kvm.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}