{
  "hash": "5f4d487d01ff5349da38f7a09ca36bf6aa2e29fb",
  "hash_short": "5f4d487d",
  "subject": "net: phy: mxl-gpy: add MDINT workaround",
  "body": "At least the GPY215B and GPY215C has a bug where it is still driving the\ninterrupt line (MDINT) even after the interrupt status register is read\nand its bits are cleared. This will cause an interrupt storm.\n\nAlthough the MDINT is multiplexed with a GPIO pin and theoretically we\ncould switch the pinmux to GPIO input mode, this isn't possible because\nthe access to this register will stall exactly as long as the interrupt\nline is asserted. We exploit this very fact and just read a random\ninternal register in our interrupt handler. This way, it will be delayed\nuntil the external interrupt line is released and an interrupt storm is\navoided.\n\nThe internal register access via the mailbox was deduced by looking at\nthe downstream PHY API because the datasheet doesn't mention any of\nthis.\n\nFixes: 7d901a1e878a (\"net: phy: add Maxlinear GPY115/21x/24x driver\")\nSigned-off-by: Michael Walle <michael@walle.cc>\nReviewed-by: Andrew Lunn <andrew@lunn.ch>\nLink: https://lore.kernel.org/r/20221205200453.3447866-1-michael@walle.cc\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "net: phy: mxl-gpy: add MDINT workaround\n\nAt least the GPY215B and GPY215C has a bug where it is still driving the\ninterrupt line (MDINT) even after the interrupt status register is read\nand its bits are cleared. This will cause an interrupt storm.\n\nAlthough the MDINT is multiplexed with a GPIO pin and theoretically we\ncould switch the pinmux to GPIO input mode, this isn't possible because\nthe access to this register will stall exactly as long as the interrupt\nline is asserted. We exploit this very fact and just read a random\ninternal register in our interrupt handler. This way, it will be delayed\nuntil the external interrupt line is released and an interrupt storm is\navoided.\n\nThe internal register access via the mailbox was deduced by looking at\nthe downstream PHY API because the datasheet doesn't mention any of\nthis.\n\nFixes: 7d901a1e878a (\"net: phy: add Maxlinear GPY115/21x/24x driver\")\nSigned-off-by: Michael Walle <michael@walle.cc>\nReviewed-by: Andrew Lunn <andrew@lunn.ch>\nLink: https://lore.kernel.org/r/20221205200453.3447866-1-michael@walle.cc\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Michael Walle",
  "author_email": "michael@walle.cc",
  "author_date": "Mon Dec 5 21:04:53 2022 +0100",
  "author_date_iso": "2022-12-05T21:04:53+01:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Wed Dec 7 20:04:11 2022 -0800",
  "committer_date_iso": "2022-12-07T20:04:11-08:00",
  "files_changed": [
    "drivers/net/phy/mxl-gpy.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/phy/mxl-gpy.c",
      "insertions": 85,
      "deletions": 0
    }
  ],
  "total_insertions": 85,
  "total_deletions": 0,
  "total_changes": 85,
  "parents": [
    "65e349f766a6f63d9f8679697fce8cfba1cce672"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/phy/mxl-gpy.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}