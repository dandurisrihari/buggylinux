commit ef2e78ddadbb939ce79553b10dee0131d65d8f3e
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Nov 7 16:04:12 2019 +0000

    KVM: arm64: Opportunistically turn off WFI trapping when using direct LPI injection
    
    Just like we do for WFE trapping, it can be useful to turn off
    WFI trapping when the physical CPU is not oversubscribed (that
    is, the vcpu is the only runnable process on this CPU) *and*
    that we're using direct injection of interrupts.
    
    The conditions are reevaluated on each vcpu_load(), ensuring that
    we don't switch to this mode on a busy system.
    
    On a GICv4 system, this has the effect of reducing the generation
    of doorbell interrupts to zero when the right conditions are
    met, which is a huge improvement over the current situation
    (where the doorbells are screaming if the CPU ever hits a
    blocking WFI).
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Zenghui Yu <yuzenghui@huawei.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@arm.com>
    Link: https://lore.kernel.org/r/20191107160412.30301-3-maz@kernel.org

diff --git a/arch/arm64/include/asm/kvm_emulate.h b/arch/arm64/include/asm/kvm_emulate.h
index 6e92f6c7b1e4..5a542d801f07 100644
--- a/arch/arm64/include/asm/kvm_emulate.h
+++ b/arch/arm64/include/asm/kvm_emulate.h
@@ -87,14 +87,19 @@ static inline unsigned long *vcpu_hcr(struct kvm_vcpu *vcpu)
 	return (unsigned long *)&vcpu->arch.hcr_el2;
 }
 
-static inline void vcpu_clear_wfe_traps(struct kvm_vcpu *vcpu)
+static inline void vcpu_clear_wfx_traps(struct kvm_vcpu *vcpu)
 {
 	vcpu->arch.hcr_el2 &= ~HCR_TWE;
+	if (atomic_read(&vcpu->arch.vgic_cpu.vgic_v3.its_vpe.vlpi_count))
+		vcpu->arch.hcr_el2 &= ~HCR_TWI;
+	else
+		vcpu->arch.hcr_el2 |= HCR_TWI;
 }
 
-static inline void vcpu_set_wfe_traps(struct kvm_vcpu *vcpu)
+static inline void vcpu_set_wfx_traps(struct kvm_vcpu *vcpu)
 {
 	vcpu->arch.hcr_el2 |= HCR_TWE;
+	vcpu->arch.hcr_el2 |= HCR_TWI;
 }
 
 static inline void vcpu_ptrauth_enable(struct kvm_vcpu *vcpu)