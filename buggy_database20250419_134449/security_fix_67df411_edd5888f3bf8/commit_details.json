{
  "hash": "67df411db3f0209e4bb5227d4dd9d41b21368b9d",
  "hash_short": "67df411d",
  "subject": "ALSA: usb-audio: Add quirk for Tascam Model 12",
  "body": "Tascam's Model 12 is a mixer which can also operate as a USB audio\ninterface.  The audio interface uses explicit feedback but it seems that\nit does not correctly handle missing isochronous frames.\n\nWhen injecting an xrun (or doing anything else that pauses the playback\nstream) the feedback rate climbs (for example, at 44,100Hz nominal, I\nsee a stable rate around 44,099 but xrun injection sees this peak at\naround 44,135 in most cases) and glitches are heard in the audio stream\nfor several seconds - this is significantly worse than the single glitch\nexpected for an underrun.\n\nWhile the stream does normally recover and the feedback rate returns to\na stable value, I have seen some occurrences where this does not happen\nand the rate continues to increase while no audio is heard from the\noutput.  I have not found a solid reproduction for this.\n\nThis misbehaviour can be avoided by totally resetting the stream state\nby switching the interface to alt 0 and back before restarting the\nplayback stream.\n\nAdd a new quirk flag which forces the endpoint and interface to be\nreconfigured whenever the stream is stopped, and use this for the Tascam\nModel 12.\n\nSeparate interfaces are used for the playback and capture endpoints, so\nresetting the playback interface here will not affect the capture stream\nif it is running.  While there are two endpoints on the interface,\nthese are the OUT data endpoint and the IN explicit feedback endpoint\ncorresponding to it and these are always stopped and started together.\n\nSigned-off-by: John Keeping <john@metanate.com>\nLink: https://lore.kernel.org/r/20221129130100.1257904-1-john@metanate.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
  "full_message": "ALSA: usb-audio: Add quirk for Tascam Model 12\n\nTascam's Model 12 is a mixer which can also operate as a USB audio\ninterface.  The audio interface uses explicit feedback but it seems that\nit does not correctly handle missing isochronous frames.\n\nWhen injecting an xrun (or doing anything else that pauses the playback\nstream) the feedback rate climbs (for example, at 44,100Hz nominal, I\nsee a stable rate around 44,099 but xrun injection sees this peak at\naround 44,135 in most cases) and glitches are heard in the audio stream\nfor several seconds - this is significantly worse than the single glitch\nexpected for an underrun.\n\nWhile the stream does normally recover and the feedback rate returns to\na stable value, I have seen some occurrences where this does not happen\nand the rate continues to increase while no audio is heard from the\noutput.  I have not found a solid reproduction for this.\n\nThis misbehaviour can be avoided by totally resetting the stream state\nby switching the interface to alt 0 and back before restarting the\nplayback stream.\n\nAdd a new quirk flag which forces the endpoint and interface to be\nreconfigured whenever the stream is stopped, and use this for the Tascam\nModel 12.\n\nSeparate interfaces are used for the playback and capture endpoints, so\nresetting the playback interface here will not affect the capture stream\nif it is running.  While there are two endpoints on the interface,\nthese are the OUT data endpoint and the IN explicit feedback endpoint\ncorresponding to it and these are always stopped and started together.\n\nSigned-off-by: John Keeping <john@metanate.com>\nLink: https://lore.kernel.org/r/20221129130100.1257904-1-john@metanate.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
  "author_name": "John Keeping",
  "author_email": "john@metanate.com",
  "author_date": "Tue Nov 29 13:00:59 2022 +0000",
  "author_date_iso": "2022-11-29T13:00:59+00:00",
  "committer_name": "Takashi Iwai",
  "committer_email": "tiwai@suse.de",
  "committer_date": "Tue Nov 29 15:04:17 2022 +0100",
  "committer_date_iso": "2022-11-29T15:04:17+01:00",
  "files_changed": [
    "sound/usb/endpoint.c",
    "sound/usb/quirks.c",
    "sound/usb/usbaudio.h"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "sound/usb/endpoint.c",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "sound/usb/quirks.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "sound/usb/usbaudio.h",
      "insertions": 4,
      "deletions": 0
    }
  ],
  "total_insertions": 13,
  "total_deletions": 0,
  "total_changes": 13,
  "parents": [
    "1d8025ec722d5e011f9299c46274eb21fb54a428"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "sound/usb/endpoint.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "sound/usb/quirks.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "sound/usb/usbaudio.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}