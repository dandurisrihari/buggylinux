commit 0159a9305d401fd21a1cda5e7baaf62122c46a5b
Author: Dan Carpenter <error27@gmail.com>
Date:   Wed Jul 6 10:59:48 2022 +0300

    can: slcan: use scnprintf() as a hardening measure
    
    The snprintf() function returns the number of bytes which *would* have
    been copied if there were no space. So, since this code does not check
    the return value, there if the buffer was not large enough then there
    would be a buffer overflow two lines later when it does:
    
            actual = sl->tty->ops->write(sl->tty, sl->xbuff, n);
    
    Use scnprintf() instead because that returns the number of bytes which
    were actually copied.
    
    Fixes: 52f9ac85b876 ("can: slcan: allow to send commands to the adapter")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/all/YsVA9KoY/ZSvNGYk@kili
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

diff --git a/drivers/net/can/slcan/slcan-core.c b/drivers/net/can/slcan/slcan-core.c
index 54d29a410ad5..92bdd49996d1 100644
--- a/drivers/net/can/slcan/slcan-core.c
+++ b/drivers/net/can/slcan/slcan-core.c
@@ -647,7 +647,7 @@ static int slcan_transmit_cmd(struct slcan *sl, const unsigned char *cmd)
 		return -ENODEV;
 	}
 
-	n = snprintf(sl->xbuff, sizeof(sl->xbuff), "%s", cmd);
+	n = scnprintf(sl->xbuff, sizeof(sl->xbuff), "%s", cmd);
 	set_bit(TTY_DO_WRITE_WAKEUP, &sl->tty->flags);
 	actual = sl->tty->ops->write(sl->tty, sl->xbuff, n);
 	sl->xleft = n - actual;