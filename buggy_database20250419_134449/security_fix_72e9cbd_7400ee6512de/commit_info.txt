Commit Hash: 72e9cbdb43384ceacc49e2fb6b8c8fb7c5988778
Subject: KVM: nVMX: fix SMI injection in guest mode


Security Keywords:
- injection

Full commit message:
KVM: nVMX: fix SMI injection in guest mode

Entering SMM while running in guest mode wasn't working very well because several
pieces of the vcpu state were left set up for nested operation.

Some of the issues observed:

* L1 was getting unexpected VM exits (using L1 interception controls but running
  in SMM execution environment)
* SMM handler couldn't write to vmx_set_cr4 because of incorrect validity checks
  predicated on nested.vmxon
* MMU was confused (walk_mmu was still set to nested_mmu)

Intel SDM actually prescribes the logical processor to "leave VMX operation" upon
entering SMM in 34.14.1 Default Treatment of SMI Delivery. What we need to do is
basically get out of guest mode and set nested.vmxon to false for the duration of
SMM. All this completely transparent to L1, i.e. L1 is not given control and no
L1 observable state changes.

To avoid code duplication this commit takes advantage of the existing nested
vmexit and run functionality, perhaps at the cost of efficiency. To get out of
guest mode, nested_vmx_vmexit with exit_reason == -1 is called, a trick already
used in vmx_leave_nested. Re-entering is cleaner, using enter_vmx_non_root_mode.

This commit fixes running Windows Server 2016 with Hyper-V enabled in a VM with
OVMF firmware (OVMF_CODE-need-smm.fd).

Signed-off-by: Ladi Prosek <lprosek@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

Metadata:
Author: Ladi Prosek <lprosek@redhat.com>
Author Date: Wed Oct 11 16:54:43 2017 +0200
Committer: Paolo Bonzini <pbonzini@redhat.com>
Commit Date: Thu Oct 12 14:01:55 2017 +0200

Files Changed: 1
Lines Added: 49
Lines Removed: 11
Total Changes: 60
