{
  "hash": "72e9cbdb43384ceacc49e2fb6b8c8fb7c5988778",
  "hash_short": "72e9cbdb",
  "subject": "KVM: nVMX: fix SMI injection in guest mode",
  "body": "Entering SMM while running in guest mode wasn't working very well because several\npieces of the vcpu state were left set up for nested operation.\n\nSome of the issues observed:\n\n* L1 was getting unexpected VM exits (using L1 interception controls but running\n  in SMM execution environment)\n* SMM handler couldn't write to vmx_set_cr4 because of incorrect validity checks\n  predicated on nested.vmxon\n* MMU was confused (walk_mmu was still set to nested_mmu)\n\nIntel SDM actually prescribes the logical processor to \"leave VMX operation\" upon\nentering SMM in 34.14.1 Default Treatment of SMI Delivery. What we need to do is\nbasically get out of guest mode and set nested.vmxon to false for the duration of\nSMM. All this completely transparent to L1, i.e. L1 is not given control and no\nL1 observable state changes.\n\nTo avoid code duplication this commit takes advantage of the existing nested\nvmexit and run functionality, perhaps at the cost of efficiency. To get out of\nguest mode, nested_vmx_vmexit with exit_reason == -1 is called, a trick already\nused in vmx_leave_nested. Re-entering is cleaner, using enter_vmx_non_root_mode.\n\nThis commit fixes running Windows Server 2016 with Hyper-V enabled in a VM with\nOVMF firmware (OVMF_CODE-need-smm.fd).\n\nSigned-off-by: Ladi Prosek <lprosek@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: nVMX: fix SMI injection in guest mode\n\nEntering SMM while running in guest mode wasn't working very well because several\npieces of the vcpu state were left set up for nested operation.\n\nSome of the issues observed:\n\n* L1 was getting unexpected VM exits (using L1 interception controls but running\n  in SMM execution environment)\n* SMM handler couldn't write to vmx_set_cr4 because of incorrect validity checks\n  predicated on nested.vmxon\n* MMU was confused (walk_mmu was still set to nested_mmu)\n\nIntel SDM actually prescribes the logical processor to \"leave VMX operation\" upon\nentering SMM in 34.14.1 Default Treatment of SMI Delivery. What we need to do is\nbasically get out of guest mode and set nested.vmxon to false for the duration of\nSMM. All this completely transparent to L1, i.e. L1 is not given control and no\nL1 observable state changes.\n\nTo avoid code duplication this commit takes advantage of the existing nested\nvmexit and run functionality, perhaps at the cost of efficiency. To get out of\nguest mode, nested_vmx_vmexit with exit_reason == -1 is called, a trick already\nused in vmx_leave_nested. Re-entering is cleaner, using enter_vmx_non_root_mode.\n\nThis commit fixes running Windows Server 2016 with Hyper-V enabled in a VM with\nOVMF firmware (OVMF_CODE-need-smm.fd).\n\nSigned-off-by: Ladi Prosek <lprosek@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Ladi Prosek",
  "author_email": "lprosek@redhat.com",
  "author_date": "Wed Oct 11 16:54:43 2017 +0200",
  "author_date_iso": "2017-10-11T16:54:43+02:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Thu Oct 12 14:01:55 2017 +0200",
  "committer_date_iso": "2017-10-12T14:01:55+02:00",
  "files_changed": [
    "arch/x86/kvm/vmx.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/vmx.c",
      "insertions": 49,
      "deletions": 11
    }
  ],
  "total_insertions": 49,
  "total_deletions": 11,
  "total_changes": 60,
  "parents": [
    "21f2d551183847bc7fbe8d866151d00cdad18752"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.15",
    "v4.15-rc1",
    "v4.15-rc2",
    "v4.15-rc3",
    "v4.15-rc4",
    "v4.15-rc5",
    "v4.15-rc6",
    "v4.15-rc7",
    "v4.15-rc8",
    "v4.15-rc9"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/vmx.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}