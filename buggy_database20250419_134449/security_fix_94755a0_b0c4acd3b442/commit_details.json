{
  "hash": "94755a00a4e79236d4bfa6dc671a339828fb38ce",
  "hash_short": "94755a00",
  "subject": "udf: replace deprecated strncpy/strcpy with strscpy",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces. Also replace an instance of strcpy() which is also\ndeprecated.\n\ns_volume_ident is a NUL-terminated string which is evident from its\nusage in udf_debug:\n|\tudf_debug(\"volIdent[] = '%s'\\n\", UDF_SB(sb)->s_volume_ident);\n\ns_volume_ident should also be NUL-padded as it is copied out to\nuserspace:\n|\tif (copy_to_user((char __user *)arg,\n|\t\t\t\tUDF_SB(inode->i_sb)->s_volume_ident, 32))\n|\t\treturn -EFAULT;\n\nConsidering the above, a suitable replacement is `strscpy_pad` [2] due\nto the fact that it guarantees both NUL-termination and NUL-padding on\nthe destination buffer.\n\nTo simplify the code, let's use the new 2-argument version of\nstrscpy_pad() introduced in Commit e6584c3964f2f (\"string: Allow\n2-argument strscpy()\"). Also zero-allocate @outstr so we can safely use\na non-@ret length argument. This is just in case udf_dstrCS0toChar()\ndoesn't include the NUL-byte in its return length, we won't truncate\n@outstr or write garbage bytes either.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nSigned-off-by: Jan Kara <jack@suse.cz>\nMessage-Id: <20240401-strncpy-fs-udf-super-c-v1-1-80cddab7a281@google.com>",
  "full_message": "udf: replace deprecated strncpy/strcpy with strscpy\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces. Also replace an instance of strcpy() which is also\ndeprecated.\n\ns_volume_ident is a NUL-terminated string which is evident from its\nusage in udf_debug:\n|\tudf_debug(\"volIdent[] = '%s'\\n\", UDF_SB(sb)->s_volume_ident);\n\ns_volume_ident should also be NUL-padded as it is copied out to\nuserspace:\n|\tif (copy_to_user((char __user *)arg,\n|\t\t\t\tUDF_SB(inode->i_sb)->s_volume_ident, 32))\n|\t\treturn -EFAULT;\n\nConsidering the above, a suitable replacement is `strscpy_pad` [2] due\nto the fact that it guarantees both NUL-termination and NUL-padding on\nthe destination buffer.\n\nTo simplify the code, let's use the new 2-argument version of\nstrscpy_pad() introduced in Commit e6584c3964f2f (\"string: Allow\n2-argument strscpy()\"). Also zero-allocate @outstr so we can safely use\na non-@ret length argument. This is just in case udf_dstrCS0toChar()\ndoesn't include the NUL-byte in its return length, we won't truncate\n@outstr or write garbage bytes either.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nSigned-off-by: Jan Kara <jack@suse.cz>\nMessage-Id: <20240401-strncpy-fs-udf-super-c-v1-1-80cddab7a281@google.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Mon Apr 1 20:01:51 2024 +0000",
  "author_date_iso": "2024-04-01T20:01:51+00:00",
  "committer_name": "Jan Kara",
  "committer_email": "jack@suse.cz",
  "committer_date": "Tue Apr 2 15:23:47 2024 +0200",
  "committer_date_iso": "2024-04-02T15:23:47+02:00",
  "files_changed": [
    "fs/udf/super.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/udf/super.c",
      "insertions": 3,
      "deletions": 3
    }
  ],
  "total_insertions": 3,
  "total_deletions": 3,
  "total_changes": 6,
  "parents": [
    "8777446a3f2dd6dab0859e4aedef6e0240955fdb"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/udf/super.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}