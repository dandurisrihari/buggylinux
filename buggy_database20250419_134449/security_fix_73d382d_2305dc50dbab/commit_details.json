{
  "hash": "73d382deccac186d103496bf10388bc2432a8384",
  "hash_short": "73d382de",
  "subject": "x86: Kill handle_signal()->set_fs()",
  "body": "handle_signal()->set_fs() has a nice comment which explains what\nset_fs() is, but it doesn't explain why it is needed and why it\ndepends on CONFIG_X86_64.\n\nAfaics, the history of this confusion is:\n\n\t1. I guess today nobody can explain why it was needed\n\t   in arch/i386/kernel/signal.c, perhaps it was always\n\t   wrong. This predates 2.4.0 kernel.\n\n\t2. then it was copy-and-past'ed to the new x86_64 arch.\n\n\t3. then it was removed from i386 (but not from x86_64)\n\t   by b93b6ca3 \"i386: remove unnecessary code\".\n\n\t4. then it was reintroduced under CONFIG_X86_64 when x86\n\t   unified i386 and x86_64, because the patch above didn't\n\t   touch x86_64.\n\nRemove it. ->addr_limit should be correct. Even if it was possible\nthat it is wrong, it is too late to fix it after setup_rt_frame().\n\nLinus commented in:\nhttp://lkml.kernel.org/r/alpine.LFD.0.999.0707170902570.19166@woody.linux-foundation.org\n\n... about the equivalent bit from i386:\n\nHeh. I think it's entirely historical.\n\nPlease realize that the whole reason that function is called \"set_fs()\" is \nthat it literally used to set the %fs segment register, not \n\"->addr_limit\".\n\nSo I think the \"set_fs(USER_DS)\" is there _only_ to match the other\n\n        regs->xds = __USER_DS;\n        regs->xes = __USER_DS;\n        regs->xss = __USER_DS;\n        regs->xcs = __USER_CS;\n\nthings, and never mattered. And now it matters even less, and has been \ncopied to all other architectures where it is just totally insane.\n\nSigned-off-by: Oleg Nesterov <oleg@redhat.com>\nLink: http://lkml.kernel.org/r/20110710164424.GA20261@redhat.com\nSigned-off-by: H. Peter Anvin <hpa@linux.intel.com>",
  "full_message": "x86: Kill handle_signal()->set_fs()\n\nhandle_signal()->set_fs() has a nice comment which explains what\nset_fs() is, but it doesn't explain why it is needed and why it\ndepends on CONFIG_X86_64.\n\nAfaics, the history of this confusion is:\n\n\t1. I guess today nobody can explain why it was needed\n\t   in arch/i386/kernel/signal.c, perhaps it was always\n\t   wrong. This predates 2.4.0 kernel.\n\n\t2. then it was copy-and-past'ed to the new x86_64 arch.\n\n\t3. then it was removed from i386 (but not from x86_64)\n\t   by b93b6ca3 \"i386: remove unnecessary code\".\n\n\t4. then it was reintroduced under CONFIG_X86_64 when x86\n\t   unified i386 and x86_64, because the patch above didn't\n\t   touch x86_64.\n\nRemove it. ->addr_limit should be correct. Even if it was possible\nthat it is wrong, it is too late to fix it after setup_rt_frame().\n\nLinus commented in:\nhttp://lkml.kernel.org/r/alpine.LFD.0.999.0707170902570.19166@woody.linux-foundation.org\n\n... about the equivalent bit from i386:\n\nHeh. I think it's entirely historical.\n\nPlease realize that the whole reason that function is called \"set_fs()\" is \nthat it literally used to set the %fs segment register, not \n\"->addr_limit\".\n\nSo I think the \"set_fs(USER_DS)\" is there _only_ to match the other\n\n        regs->xds = __USER_DS;\n        regs->xes = __USER_DS;\n        regs->xss = __USER_DS;\n        regs->xcs = __USER_CS;\n\nthings, and never mattered. And now it matters even less, and has been \ncopied to all other architectures where it is just totally insane.\n\nSigned-off-by: Oleg Nesterov <oleg@redhat.com>\nLink: http://lkml.kernel.org/r/20110710164424.GA20261@redhat.com\nSigned-off-by: H. Peter Anvin <hpa@linux.intel.com>",
  "author_name": "Oleg Nesterov",
  "author_email": "oleg@redhat.com",
  "author_date": "Sun Jul 10 18:44:24 2011 +0200",
  "author_date_iso": "2011-07-10T18:44:24+02:00",
  "committer_name": "H. Peter Anvin",
  "committer_email": "hpa@linux.intel.com",
  "committer_date": "Thu Jul 14 21:46:20 2011 -0700",
  "committer_date_iso": "2011-07-14T21:46:20-07:00",
  "files_changed": [
    "arch/x86/kernel/signal.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kernel/signal.c",
      "insertions": 0,
      "deletions": 9
    }
  ],
  "total_insertions": 0,
  "total_deletions": 9,
  "total_changes": 9,
  "parents": [
    "9b429620740945363b746414e8b9a84b8119914c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.1",
    "v3.1-rc1",
    "v3.1-rc10",
    "v3.1-rc2",
    "v3.1-rc3",
    "v3.1-rc4",
    "v3.1-rc5",
    "v3.1-rc6",
    "v3.1-rc7",
    "v3.1-rc8"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "xss"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kernel/signal.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}