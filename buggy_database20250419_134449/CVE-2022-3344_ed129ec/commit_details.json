{
  "hash": "ed129ec9057f89d615ba0c81a4984a90345a1684",
  "hash_short": "ed129ec9",
  "subject": "KVM: x86: forcibly leave nested mode on vCPU reset",
  "body": "While not obivous, kvm_vcpu_reset() leaves the nested mode by clearing\n'vcpu->arch.hflags' but it does so without all the required housekeeping.\n\nOn SVM,\tit is possible to have a vCPU reset while in guest mode because\nunlike VMX, on SVM, INIT's are not latched in SVM non root mode and in\naddition to that L1 doesn't have to intercept triple fault, which should\nalso trigger L1's reset if happens in L2 while L1 didn't intercept it.\n\nIf one of the above conditions happen, KVM will\tcontinue to use vmcb02\nwhile not having in the guest mode.\n\nLater the IA32_EFER will be cleared which will lead to freeing of the\nnested guest state which will (correctly) free the vmcb02, but since\nKVM still uses it (incorrectly) this will lead to a use after free\nand kernel crash.\n\nThis issue is assigned CVE-2022-3344\n\nCc: stable@vger.kernel.org\nSigned-off-by: Maxim Levitsky <mlevitsk@redhat.com>\nMessage-Id: <20221103141351.50662-5-mlevitsk@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: x86: forcibly leave nested mode on vCPU reset\n\nWhile not obivous, kvm_vcpu_reset() leaves the nested mode by clearing\n'vcpu->arch.hflags' but it does so without all the required housekeeping.\n\nOn SVM,\tit is possible to have a vCPU reset while in guest mode because\nunlike VMX, on SVM, INIT's are not latched in SVM non root mode and in\naddition to that L1 doesn't have to intercept triple fault, which should\nalso trigger L1's reset if happens in L2 while L1 didn't intercept it.\n\nIf one of the above conditions happen, KVM will\tcontinue to use vmcb02\nwhile not having in the guest mode.\n\nLater the IA32_EFER will be cleared which will lead to freeing of the\nnested guest state which will (correctly) free the vmcb02, but since\nKVM still uses it (incorrectly) this will lead to a use after free\nand kernel crash.\n\nThis issue is assigned CVE-2022-3344\n\nCc: stable@vger.kernel.org\nSigned-off-by: Maxim Levitsky <mlevitsk@redhat.com>\nMessage-Id: <20221103141351.50662-5-mlevitsk@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Maxim Levitsky",
  "author_email": "mlevitsk@redhat.com",
  "author_date": "Thu Nov 3 16:13:46 2022 +0200",
  "author_date_iso": "2022-11-03T16:13:46+02:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Thu Nov 17 11:39:57 2022 -0500",
  "committer_date_iso": "2022-11-17T11:39:57-05:00",
  "files_changed": [
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 10,
      "deletions": 0
    }
  ],
  "total_insertions": 10,
  "total_deletions": 0,
  "total_changes": 10,
  "parents": [
    "f9697df251438b0798780900e8b43bdb12a56d64"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2022-3344"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}