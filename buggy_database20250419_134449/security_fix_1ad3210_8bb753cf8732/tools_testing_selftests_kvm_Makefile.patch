commit 1ad32105d78e4b5da60688eca014bcd45271318f
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Tue Sep 14 18:48:13 2021 +0300

    KVM: x86: selftests: test simultaneous uses of V_IRQ from L1 and L0
    
    Test that if:
    
    * L1 disables virtual interrupt masking, and INTR intercept.
    
    * L1 setups a virtual interrupt to be injected to L2 and enters L2 with
      interrupts disabled, thus the virtual interrupt is pending.
    
    * Now an external interrupt arrives in L1 and since
      L1 doesn't intercept it, it should be delivered to L2 when
      it enables interrupts.
    
      to do this L0 (abuses) V_IRQ to setup an
      interrupt window, and returns to L2.
    
    * L2 enables interrupts.
      This should trigger the interrupt window,
      injection of the external interrupt and delivery
      of the virtual interrupt that can now be done.
    
    * Test that now L2 gets those interrupts.
    
    This is the test that demonstrates the issue that was
    fixed in the previous patch.
    
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Message-Id: <20210914154825.104886-3-mlevitsk@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/tools/testing/selftests/kvm/Makefile b/tools/testing/selftests/kvm/Makefile
index 9ac325cfc94a..d1774f461393 100644
--- a/tools/testing/selftests/kvm/Makefile
+++ b/tools/testing/selftests/kvm/Makefile
@@ -56,6 +56,7 @@ TEST_GEN_PROGS_x86_64 += x86_64/smm_test
 TEST_GEN_PROGS_x86_64 += x86_64/state_test
 TEST_GEN_PROGS_x86_64 += x86_64/vmx_preemption_timer_test
 TEST_GEN_PROGS_x86_64 += x86_64/svm_vmcall_test
+TEST_GEN_PROGS_x86_64 += x86_64/svm_int_ctl_test
 TEST_GEN_PROGS_x86_64 += x86_64/sync_regs_test
 TEST_GEN_PROGS_x86_64 += x86_64/userspace_msr_exit_test
 TEST_GEN_PROGS_x86_64 += x86_64/vmx_apic_access_test