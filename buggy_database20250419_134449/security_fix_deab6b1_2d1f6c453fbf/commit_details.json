{
  "hash": "deab6b1cd9789bb9bd466d5e76aecb8b336259b4",
  "hash_short": "deab6b1c",
  "subject": "net: dsa: tag_ocelot: break circular dependency with ocelot switch lib driver",
  "body": "As explained here:\nhttps://lore.kernel.org/netdev/20210908220834.d7gmtnwrorhharna@skbuf/\nDSA tagging protocol drivers cannot depend on symbols exported by switch\ndrivers, because this creates a circular dependency that breaks module\nautoloading.\n\nThe tag_ocelot.c file depends on the ocelot_ptp_rew_op() function\nexported by the common ocelot switch lib. This function looks at\nOCELOT_SKB_CB(skb) and computes how to populate the REW_OP field of the\nDSA tag, for PTP timestamping (the command: one-step/two-step, and the\nTX timestamp identifier).\n\nNone of that requires deep insight into the driver, it is quite\nstateless, as it only depends upon the skb->cb. So let's make it a\nstatic inline function and put it in include/linux/dsa/ocelot.h, a\nfile that despite its name is used by the ocelot switch driver for\npopulating the injection header too - since commit 40d3f295b5fe (\"net:\nmscc: ocelot: use common tag parsing code with DSA\").\n\nWith that function declared as static inline, its body is expanded\ninside each call site, so the dependency is broken and the DSA tagger\ncan be built without the switch library, upon which the felix driver\ndepends.\n\nFixes: 39e5308b3250 (\"net: mscc: ocelot: support PTP Sync one-step timestamping\")\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nReviewed-by: Florian Fainelli <f.fainelli@gmail.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "net: dsa: tag_ocelot: break circular dependency with ocelot switch lib driver\n\nAs explained here:\nhttps://lore.kernel.org/netdev/20210908220834.d7gmtnwrorhharna@skbuf/\nDSA tagging protocol drivers cannot depend on symbols exported by switch\ndrivers, because this creates a circular dependency that breaks module\nautoloading.\n\nThe tag_ocelot.c file depends on the ocelot_ptp_rew_op() function\nexported by the common ocelot switch lib. This function looks at\nOCELOT_SKB_CB(skb) and computes how to populate the REW_OP field of the\nDSA tag, for PTP timestamping (the command: one-step/two-step, and the\nTX timestamp identifier).\n\nNone of that requires deep insight into the driver, it is quite\nstateless, as it only depends upon the skb->cb. So let's make it a\nstatic inline function and put it in include/linux/dsa/ocelot.h, a\nfile that despite its name is used by the ocelot switch driver for\npopulating the injection header too - since commit 40d3f295b5fe (\"net:\nmscc: ocelot: use common tag parsing code with DSA\").\n\nWith that function declared as static inline, its body is expanded\ninside each call site, so the dependency is broken and the DSA tagger\ncan be built without the switch library, upon which the felix driver\ndepends.\n\nFixes: 39e5308b3250 (\"net: mscc: ocelot: support PTP Sync one-step timestamping\")\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nReviewed-by: Florian Fainelli <f.fainelli@gmail.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Vladimir Oltean",
  "author_email": "vladimir.oltean@nxp.com",
  "author_date": "Tue Oct 12 14:40:40 2021 +0300",
  "author_date_iso": "2021-10-12T14:40:40+03:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Tue Oct 12 17:35:18 2021 -0700",
  "committer_date_iso": "2021-10-12T17:35:18-07:00",
  "files_changed": [
    "drivers/net/ethernet/mscc/ocelot.c",
    "drivers/net/ethernet/mscc/ocelot_net.c",
    "include/linux/dsa/ocelot.h",
    "include/soc/mscc/ocelot.h",
    "net/dsa/Kconfig",
    "net/dsa/tag_ocelot.c",
    "net/dsa/tag_ocelot_8021q.c"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "drivers/net/ethernet/mscc/ocelot.c",
      "insertions": 0,
      "deletions": 17
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot_net.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/dsa/ocelot.h",
      "insertions": 37,
      "deletions": 0
    },
    {
      "file": "include/soc/mscc/ocelot.h",
      "insertions": 0,
      "deletions": 24
    },
    {
      "file": "net/dsa/Kconfig",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "net/dsa/tag_ocelot.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "net/dsa/tag_ocelot_8021q.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 39,
  "total_deletions": 44,
  "total_changes": 83,
  "parents": [
    "ebb4c6a990f786d7e0e4618a0d3766cd660125d8"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/dsa/ocelot.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/dsa/tag_ocelot.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/soc/mscc/ocelot.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/dsa/tag_ocelot_8021q.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/dsa/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot_net.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}