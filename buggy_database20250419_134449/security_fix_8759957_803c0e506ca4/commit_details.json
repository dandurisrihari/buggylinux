{
  "hash": "8759957b77ac1b5b5bdfac5ba049789107e85190",
  "hash_short": "8759957b",
  "subject": "Merge tag 'libnvdimm-for-4.6' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm",
  "body": "Pull libnvdimm updates from Dan Williams:\n\n - Asynchronous address range scrub:\n\n     Given the capacities of next generation persistent memory devices a\n     scrub operation to find all poison may take 10s of seconds.  We\n     want this scrub work to be done asynchronously with the rest of\n     system initialization, so we move it out of line from the NFIT\n     probing, i.e. acpi_nfit_add().\n\n - Clear poison:\n\n     ACPI 6.1 introduces the ability to send \"clear error\" commands to\n     the ACPI0012:00 device representing the root of an \"nvdimm bus\".\n     Similar to relocating a bad block on a disk, this support clears\n     media errors in response to a write.\n\n - Persistent memory resource tracking:\n\n     A persistent memory range may be designated as simply \"reserved\" by\n     platform firmware in the efi/e820 memory map.  Later when the NFIT\n     driver loads it discovers that the range is \"Persistent Memory\".\n\n     The NFIT bus driver inserts a resource to advertise that\n     \"persistent\" attribute in the system resource tree for /proc/iomem\n     and kernel-internal usages.\n\n - Miscellaneous cleanups and fixes:\n\n     Workaround section misaligned pmem ranges when allocating a struct\n     page memmap, fix handling of the read-only case in the ioctl path,\n     and clean up block device major number allocation.\n\n* tag 'libnvdimm-for-4.6' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (26 commits)\n  libnvdimm, pmem: clear poison on write\n  libnvdimm, pmem: fix kmap_atomic() leak in error path\n  nvdimm/btt: don't allocate unused major device number\n  nvdimm/blk: don't allocate unused major device number\n  pmem: don't allocate unused major device number\n  ACPI: Change NFIT driver to insert new resource\n  resource: Export insert_resource and remove_resource\n  resource: Add remove_resource interface\n  resource: Change __request_region to inherit from immediate parent\n  libnvdimm, pmem: fix ia64 build, use PHYS_PFN\n  nfit, libnvdimm: clear poison command support\n  libnvdimm, pfn: 'resource'-address and 'size' attributes for pfn devices\n  libnvdimm, pmem: adjust for section collisions with 'System RAM'\n  libnvdimm, pmem: fix 'pfn' support for section-misaligned namespaces\n  libnvdimm: Fix security issue with DSM IOCTL.\n  libnvdimm: Clean-up access mode check.\n  tools/testing/nvdimm: expand ars unit testing\n  nfit: disable userspace initiated ars during scrub\n  nfit: scrub and register regions in a workqueue\n  nfit, libnvdimm: async region scrub workqueue\n  ...",
  "full_message": "Merge tag 'libnvdimm-for-4.6' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n\nPull libnvdimm updates from Dan Williams:\n\n - Asynchronous address range scrub:\n\n     Given the capacities of next generation persistent memory devices a\n     scrub operation to find all poison may take 10s of seconds.  We\n     want this scrub work to be done asynchronously with the rest of\n     system initialization, so we move it out of line from the NFIT\n     probing, i.e. acpi_nfit_add().\n\n - Clear poison:\n\n     ACPI 6.1 introduces the ability to send \"clear error\" commands to\n     the ACPI0012:00 device representing the root of an \"nvdimm bus\".\n     Similar to relocating a bad block on a disk, this support clears\n     media errors in response to a write.\n\n - Persistent memory resource tracking:\n\n     A persistent memory range may be designated as simply \"reserved\" by\n     platform firmware in the efi/e820 memory map.  Later when the NFIT\n     driver loads it discovers that the range is \"Persistent Memory\".\n\n     The NFIT bus driver inserts a resource to advertise that\n     \"persistent\" attribute in the system resource tree for /proc/iomem\n     and kernel-internal usages.\n\n - Miscellaneous cleanups and fixes:\n\n     Workaround section misaligned pmem ranges when allocating a struct\n     page memmap, fix handling of the read-only case in the ioctl path,\n     and clean up block device major number allocation.\n\n* tag 'libnvdimm-for-4.6' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (26 commits)\n  libnvdimm, pmem: clear poison on write\n  libnvdimm, pmem: fix kmap_atomic() leak in error path\n  nvdimm/btt: don't allocate unused major device number\n  nvdimm/blk: don't allocate unused major device number\n  pmem: don't allocate unused major device number\n  ACPI: Change NFIT driver to insert new resource\n  resource: Export insert_resource and remove_resource\n  resource: Add remove_resource interface\n  resource: Change __request_region to inherit from immediate parent\n  libnvdimm, pmem: fix ia64 build, use PHYS_PFN\n  nfit, libnvdimm: clear poison command support\n  libnvdimm, pfn: 'resource'-address and 'size' attributes for pfn devices\n  libnvdimm, pmem: adjust for section collisions with 'System RAM'\n  libnvdimm, pmem: fix 'pfn' support for section-misaligned namespaces\n  libnvdimm: Fix security issue with DSM IOCTL.\n  libnvdimm: Clean-up access mode check.\n  tools/testing/nvdimm: expand ars unit testing\n  nfit: disable userspace initiated ars during scrub\n  nfit: scrub and register regions in a workqueue\n  nfit, libnvdimm: async region scrub workqueue\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Wed Mar 16 17:45:56 2016 -0700",
  "author_date_iso": "2016-03-16T17:45:56-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Mar 16 17:45:56 2016 -0700",
  "committer_date_iso": "2016-03-16T17:45:56-07:00",
  "files_changed": [
    "include/linux/ioport.h"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/include/asm/pmem.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/nfit.c",
      "insertions": 585,
      "deletions": 213
    },
    {
      "file": "drivers/acpi/nfit.h",
      "insertions": 26,
      "deletions": 4
    },
    {
      "file": "drivers/nvdimm/blk.c",
      "insertions": 1,
      "deletions": 17
    },
    {
      "file": "drivers/nvdimm/btt.c",
      "insertions": 2,
      "deletions": 17
    },
    {
      "file": "drivers/nvdimm/bus.c",
      "insertions": 115,
      "deletions": 16
    },
    {
      "file": "drivers/nvdimm/core.c",
      "insertions": 72,
      "deletions": 38
    },
    {
      "file": "drivers/nvdimm/dimm_devs.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "drivers/nvdimm/namespace_devs.c",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/nd.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/pfn.h",
      "insertions": 21,
      "deletions": 2
    },
    {
      "file": "drivers/nvdimm/pfn_devs.c",
      "insertions": 61,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/pmem.c",
      "insertions": 162,
      "deletions": 57
    },
    {
      "file": "drivers/nvdimm/region.c",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "include/linux/ioport.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/libnvdimm.h",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "include/linux/nd.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "include/linux/pmem.h",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/ndctl.h",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "kernel/resource.c",
      "insertions": 52,
      "deletions": 8
    },
    {
      "file": "tools/testing/nvdimm/test/nfit.c",
      "insertions": 222,
      "deletions": 63
    }
  ],
  "total_insertions": 1394,
  "total_deletions": 439,
  "total_changes": 1833,
  "parents": [
    "6968e6f8329d014920331dd2cf166ccd474b5299",
    "489011652a2d5555901def04c24d68874e8ba9a1"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/ioport.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}