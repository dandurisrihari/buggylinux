commit 7638e0bfaed1b653d3ca663e560e9ffb44bb1030
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Mar 31 13:22:14 2021 -0400

    SUNRPC: Move fault injection call sites
    
    I've hit some crashes that occur in the xprt_rdma_inject_disconnect
    path. It appears that, for some provides, rdma_disconnect() can
    take so long that the transport can disconnect and release its
    hardware resources while rdma_disconnect() is still running,
    resulting in a UAF in the provider.
    
    The transport's fault injection method may depend on the stability
    of transport data structures. That means it needs to be invoked
    only from contexts that hold the transport write lock.
    
    Fixes: 4a0682583988 ("SUNRPC: Transport fault injection")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>

diff --git a/net/sunrpc/xprtrdma/transport.c b/net/sunrpc/xprtrdma/transport.c
index 78d29d1bcc20..09953597d055 100644
--- a/net/sunrpc/xprtrdma/transport.c
+++ b/net/sunrpc/xprtrdma/transport.c
@@ -262,8 +262,10 @@ xprt_rdma_connect_worker(struct work_struct *work)
  * xprt_rdma_inject_disconnect - inject a connection fault
  * @xprt: transport context
  *
- * If @xprt is connected, disconnect it to simulate spurious connection
- * loss.
+ * If @xprt is connected, disconnect it to simulate spurious
+ * connection loss. Caller must hold @xprt's send lock to
+ * ensure that data structures and hardware resources are
+ * stable during the rdma_disconnect() call.
  */
 static void
 xprt_rdma_inject_disconnect(struct rpc_xprt *xprt)