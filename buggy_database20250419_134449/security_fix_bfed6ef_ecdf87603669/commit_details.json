{
  "hash": "bfed6efb8e136c0e0a4cc854f2aaa2ed6ac1b9e0",
  "hash_short": "bfed6efb",
  "subject": "Merge tag 'x86_sgx_for_v5.17_rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip",
  "body": "Pull x86 SGX updates from Borislav Petkov:\n\n - Add support for handling hw errors in SGX pages: poisoning,\n   recovering from poison memory and error injection into SGX pages\n\n - A bunch of changes to the SGX selftests to simplify and allow of SGX\n   features testing without the need of a whole SGX software stack\n\n - Add a sysfs attribute which is supposed to show the amount of SGX\n   memory in a NUMA node, similar to what /proc/meminfo is to normal\n   memory\n\n - The usual bunch of fixes and cleanups too\n\n* tag 'x86_sgx_for_v5.17_rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (24 commits)\n  x86/sgx: Fix NULL pointer dereference on non-SGX systems\n  selftests/sgx: Fix corrupted cpuid macro invocation\n  x86/sgx: Add an attribute for the amount of SGX memory in a NUMA node\n  x86/sgx: Fix minor documentation issues\n  selftests/sgx: Add test for multiple TCS entry\n  selftests/sgx: Enable multiple thread support\n  selftests/sgx: Add page permission and exception test\n  selftests/sgx: Rename test properties in preparation for more enclave tests\n  selftests/sgx: Provide per-op parameter structs for the test enclave\n  selftests/sgx: Add a new kselftest: Unclobbered_vdso_oversubscribed\n  selftests/sgx: Move setup_test_encl() to each TEST_F()\n  selftests/sgx: Encpsulate the test enclave creation\n  selftests/sgx: Dump segments and /proc/self/maps only on failure\n  selftests/sgx: Create a heap for the test enclave\n  selftests/sgx: Make data measurement for an enclave segment optional\n  selftests/sgx: Assign source for each segment\n  selftests/sgx: Fix a benign linker warning\n  x86/sgx: Add check for SGX pages to ghes_do_memory_failure()\n  x86/sgx: Add hook to error injection address validation\n  x86/sgx: Hook arch_memory_failure() into mainline code\n  ...",
  "full_message": "Merge tag 'x86_sgx_for_v5.17_rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 SGX updates from Borislav Petkov:\n\n - Add support for handling hw errors in SGX pages: poisoning,\n   recovering from poison memory and error injection into SGX pages\n\n - A bunch of changes to the SGX selftests to simplify and allow of SGX\n   features testing without the need of a whole SGX software stack\n\n - Add a sysfs attribute which is supposed to show the amount of SGX\n   memory in a NUMA node, similar to what /proc/meminfo is to normal\n   memory\n\n - The usual bunch of fixes and cleanups too\n\n* tag 'x86_sgx_for_v5.17_rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (24 commits)\n  x86/sgx: Fix NULL pointer dereference on non-SGX systems\n  selftests/sgx: Fix corrupted cpuid macro invocation\n  x86/sgx: Add an attribute for the amount of SGX memory in a NUMA node\n  x86/sgx: Fix minor documentation issues\n  selftests/sgx: Add test for multiple TCS entry\n  selftests/sgx: Enable multiple thread support\n  selftests/sgx: Add page permission and exception test\n  selftests/sgx: Rename test properties in preparation for more enclave tests\n  selftests/sgx: Provide per-op parameter structs for the test enclave\n  selftests/sgx: Add a new kselftest: Unclobbered_vdso_oversubscribed\n  selftests/sgx: Move setup_test_encl() to each TEST_F()\n  selftests/sgx: Encpsulate the test enclave creation\n  selftests/sgx: Dump segments and /proc/self/maps only on failure\n  selftests/sgx: Create a heap for the test enclave\n  selftests/sgx: Make data measurement for an enclave segment optional\n  selftests/sgx: Assign source for each segment\n  selftests/sgx: Fix a benign linker warning\n  x86/sgx: Add check for SGX pages to ghes_do_memory_failure()\n  x86/sgx: Add hook to error injection address validation\n  x86/sgx: Hook arch_memory_failure() into mainline code\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Mon Jan 10 09:44:09 2022 -0800",
  "author_date_iso": "2022-01-10T09:44:09-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Jan 10 09:44:09 2022 -0800",
  "committer_date_iso": "2022-01-10T09:44:09-08:00",
  "files_changed": [
    "arch/Kconfig",
    "arch/x86/Kconfig",
    "mm/memory-failure.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "Documentation/ABI/stable/sysfs-devices-node",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "Documentation/firmware-guide/acpi/apei/einj.rst",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "Documentation/x86/sgx.rst",
      "insertions": 7,
      "deletions": 7
    },
    {
      "file": "arch/Kconfig",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/x86/Kconfig",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/processor.h",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/set_memory.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/sgx/main.c",
      "insertions": 161,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/cpu/sgx/sgx.h",
      "insertions": 7,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/apei/einj.c",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/apei/ghes.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/base/node.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "include/linux/mm.h",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "include/linux/numa.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "mm/memory-failure.c",
      "insertions": 13,
      "deletions": 6
    },
    {
      "file": "tools/testing/selftests/sgx/Makefile",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/sgx/defines.h",
      "insertions": 29,
      "deletions": 4
    },
    {
      "file": "tools/testing/selftests/sgx/load.c",
      "insertions": 30,
      "deletions": 10
    },
    {
      "file": "tools/testing/selftests/sgx/main.c",
      "insertions": 310,
      "deletions": 46
    },
    {
      "file": "tools/testing/selftests/sgx/main.h",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/sgx/sigstruct.c",
      "insertions": 7,
      "deletions": 5
    },
    {
      "file": "tools/testing/selftests/sgx/test_encl.c",
      "insertions": 48,
      "deletions": 12
    },
    {
      "file": "tools/testing/selftests/sgx/test_encl_bootstrap.S",
      "insertions": 14,
      "deletions": 7
    }
  ],
  "total_insertions": 698,
  "total_deletions": 103,
  "total_changes": 801,
  "parents": [
    "d3c20bfb74935e31e47fe979a9d3d74c6d9c9040",
    "2056e2989bf47ad7274ecc5e9dda2add53c112f9"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/memory-failure.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}