{
  "hash": "54c968bec344b101ba3596f2544f0f3b4c1eef2f",
  "hash_short": "54c968be",
  "subject": "arm64: Apply dynamic shadow call stack patching in two passes",
  "body": "Code patching for the dynamically enabled shadow call stack comes down\nto finding PACIASP and AUTIASP instructions -which behave as NOPs on\ncores that do not implement pointer authentication- and converting them\ninto shadow call stack pushes and pops, respectively.\n\nDue to past bad experiences with the highly complex and overengineered\nDWARF standard that describes the unwind metadata that we are using to\nlocate these instructions, let's make this patching logic a little bit\nmore robust so that any issues with the unwind metadata detected at boot\ntime can de dealt with gracefully.\n\nThe DWARF annotations that are used for this are emitted at function\ngranularity, and due to the fact that the instructions we are patching\nwill simply behave as NOPs if left unpatched, we can abort on errors as\nlong as we don't leave any functions in a half-patched state.\n\nSo do a dry run of each FDE frame (covering a single function) before\nperforming the actual patching, and give up if the DWARF metadata cannot\nbe understood.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nAcked-by: Will Deacon <will@kernel.org>\nReviewed-by: Sami Tolvanen <samitolvanen@google.com>\nLink: https://lore.kernel.org/r/20221213142849.1629026-1-ardb@kernel.org\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "full_message": "arm64: Apply dynamic shadow call stack patching in two passes\n\nCode patching for the dynamically enabled shadow call stack comes down\nto finding PACIASP and AUTIASP instructions -which behave as NOPs on\ncores that do not implement pointer authentication- and converting them\ninto shadow call stack pushes and pops, respectively.\n\nDue to past bad experiences with the highly complex and overengineered\nDWARF standard that describes the unwind metadata that we are using to\nlocate these instructions, let's make this patching logic a little bit\nmore robust so that any issues with the unwind metadata detected at boot\ntime can de dealt with gracefully.\n\nThe DWARF annotations that are used for this are emitted at function\ngranularity, and due to the fact that the instructions we are patching\nwill simply behave as NOPs if left unpatched, we can abort on errors as\nlong as we don't leave any functions in a half-patched state.\n\nSo do a dry run of each FDE frame (covering a single function) before\nperforming the actual patching, and give up if the DWARF metadata cannot\nbe understood.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nAcked-by: Will Deacon <will@kernel.org>\nReviewed-by: Sami Tolvanen <samitolvanen@google.com>\nLink: https://lore.kernel.org/r/20221213142849.1629026-1-ardb@kernel.org\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "author_name": "Ard Biesheuvel",
  "author_email": "ardb@kernel.org",
  "author_date": "Tue Dec 13 15:28:49 2022 +0100",
  "author_date_iso": "2022-12-13T15:28:49+01:00",
  "committer_name": "Catalin Marinas",
  "committer_email": "catalin.marinas@arm.com",
  "committer_date": "Thu Jan 26 17:54:15 2023 +0000",
  "committer_date_iso": "2023-01-26T17:54:15+00:00",
  "files_changed": [
    "arch/arm64/kernel/patch-scs.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/arm64/kernel/patch-scs.c",
      "insertions": 8,
      "deletions": 3
    }
  ],
  "total_insertions": 8,
  "total_deletions": 3,
  "total_changes": 11,
  "parents": [
    "bb457bddee41077768759f6706fa641227877fa0"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/kernel/patch-scs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}