diff --cc drivers/mfd/cros_ec_spi.c
index 8c1c7cc373f8,ac52e3653e90..588c700af39c
--- a/drivers/mfd/cros_ec_spi.c
+++ b/drivers/mfd/cros_ec_spi.c
@@@ -263,21 -266,18 +263,17 @@@ static int cros_ec_cmd_xfer_spi(struct 
  		dev_err(ec_dev->dev, "spi transfer failed: %d\n", ret);
  	}
  
- 	/* turn off CS */
+ 	/*
+ 	 * Turn off CS, possibly adding a delay to ensure the rising edge
+ 	 * doesn't come too soon after the end of the data.
+ 	 */
  	spi_message_init(&msg);
- 
- 	if (ec_spi->end_of_msg_delay) {
- 		/*
- 		 * Add delay for last transaction, to ensure the rising edge
- 		 * doesn't come too soon after the end of the data.
- 		 */
- 		memset(&trans, 0, sizeof(trans));
- 		trans.delay_usecs = ec_spi->end_of_msg_delay;
- 		spi_message_add_tail(&trans, &msg);
- 	}
+ 	memset(&trans, 0, sizeof(trans));
+ 	trans.delay_usecs = ec_spi->end_of_msg_delay;
+ 	spi_message_add_tail(&trans, &msg);
  
  	final_ret = spi_sync(ec_spi->spi, &msg);
 -	ktime_get_ts(&ts);
 -	ec_spi->last_transfer_ns = timespec_to_ns(&ts);
 +	ec_spi->last_transfer_ns = ktime_get_ns();
  	if (!ret)
  		ret = final_ret;
  	if (ret < 0) {
diff --cc include/linux/mfd/arizona/core.h
index a614b33d0a39,fdd8b7b82db5..f34723f7663c
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@@ -109,13 -132,9 +132,15 @@@ struct arizona 
  	struct mutex clk_lock;
  	int clk32k_ref;
  
+ 	bool ctrlif_error;
+ 
  	struct snd_soc_dapm_context *dapm;
 +
 +	int tdm_width[ARIZONA_MAX_AIF];
 +	int tdm_slots[ARIZONA_MAX_AIF];
 +
 +	uint16_t dac_comp_coeff;
 +	uint8_t dac_comp_enabled;
  };
  
  int arizona_clk32k_enable(struct arizona *arizona);