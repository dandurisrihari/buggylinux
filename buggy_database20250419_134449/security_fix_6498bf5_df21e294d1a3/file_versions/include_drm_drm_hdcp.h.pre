commit 0de655cae416b20ed7876adb480e5c65810274ea
Author: Ramalingam C <ramalingam.c@intel.com>
Date:   Tue May 7 21:57:37 2019 +0530

    drm: generic fn converting be24 to cpu and vice versa
    
    Existing functions for converting a 3bytes(be24) of big endian value
    into u32 of little endian and vice versa are renamed as
    
    s/drm_hdcp2_seq_num_to_u32/drm_hdcp_be24_to_cpu
    s/drm_hdcp2_u32_to_seq_num/drm_hdcp_cpu_to_be24
    
    Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
    Suggested-by: Daniel Vetter <daniel@ffwll.ch>
    cc: Tomas Winkler <tomas.winkler@intel.com>
    Acked-by: Dave Airlie <airlied@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190507162745.25600-4-ramalingam.c@intel.com

diff --git a/include/drm/drm_hdcp.h b/include/drm/drm_hdcp.h
index f243408ecf26..1cc66df05a43 100644
--- a/include/drm/drm_hdcp.h
+++ b/include/drm/drm_hdcp.h
@@ -252,13 +252,13 @@ struct hdcp2_rep_stream_ready {
  * host format and back
  */
 static inline
-u32 drm_hdcp2_seq_num_to_u32(u8 seq_num[HDCP_2_2_SEQ_NUM_LEN])
+u32 drm_hdcp_be24_to_cpu(const u8 seq_num[HDCP_2_2_SEQ_NUM_LEN])
 {
 	return (u32)(seq_num[2] | seq_num[1] << 8 | seq_num[0] << 16);
 }
 
 static inline
-void drm_hdcp2_u32_to_seq_num(u8 seq_num[HDCP_2_2_SEQ_NUM_LEN], u32 val)
+void drm_hdcp_cpu_to_be24(u8 seq_num[HDCP_2_2_SEQ_NUM_LEN], u32 val)
 {
 	seq_num[0] = val >> 16;
 	seq_num[1] = val >> 8;