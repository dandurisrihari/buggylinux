{
  "hash": "c01e71b49c37e3b9c9652d28c42a88197a9d7f02",
  "hash_short": "c01e71b4",
  "subject": "tty/vt: UTF-8 parsing update according to RFC 3629, modern Unicode",
  "body": "vc_translate_unicode() and vc_sanitize_unicode() parse input to the\nUTF-8-enabled console, marking invalid byte sequences and producing Unicode\ncodepoints. The current algorithm follows ancient Unicode and may accept\ninvalid byte sequences, pass on non-existent codepoints and reject valid\nsequences.\n\nThe patch restores the functions' compliance with modern Unicode (v15.1 [1]\n+ many previous versions) as well as RFC 3629 [2].\n1. Codepoint space is limited to 0x10FFFF.\n2. \"Noncharacters\", such as U+FFFE, U+FFFF, are no longer invalid in\n   Unicode and will be accepted. Another option was to complete the set of\n   noncharacters (used to be just those two, now there's more) and preserve\n   the rejection step. This is indeed what Unicode suggests ([1] chap.\n   23.7) (not requires), but most codepoints are !iswprint(), so selecting\n   just the noncharacters seemed arbitrary and futile (and unnecessary).\n\nThis is not a security patch. I'm not aware of any present security\nimplications of the old code.\n\n[1] https://www.unicode.org/versions/Unicode15.1.0\n[2] https://datatracker.ietf.org/doc/html/rfc3629\n\nSigned-off-by: Roman \u017dilka <roman.zilka@gmail.com>\nLink: https://lore.kernel.org/r/598ab459-6ba9-4a17-b4a1-08f26a356fc0@gmail.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
  "full_message": "tty/vt: UTF-8 parsing update according to RFC 3629, modern Unicode\n\nvc_translate_unicode() and vc_sanitize_unicode() parse input to the\nUTF-8-enabled console, marking invalid byte sequences and producing Unicode\ncodepoints. The current algorithm follows ancient Unicode and may accept\ninvalid byte sequences, pass on non-existent codepoints and reject valid\nsequences.\n\nThe patch restores the functions' compliance with modern Unicode (v15.1 [1]\n+ many previous versions) as well as RFC 3629 [2].\n1. Codepoint space is limited to 0x10FFFF.\n2. \"Noncharacters\", such as U+FFFE, U+FFFF, are no longer invalid in\n   Unicode and will be accepted. Another option was to complete the set of\n   noncharacters (used to be just those two, now there's more) and preserve\n   the rejection step. This is indeed what Unicode suggests ([1] chap.\n   23.7) (not requires), but most codepoints are !iswprint(), so selecting\n   just the noncharacters seemed arbitrary and futile (and unnecessary).\n\nThis is not a security patch. I'm not aware of any present security\nimplications of the old code.\n\n[1] https://www.unicode.org/versions/Unicode15.1.0\n[2] https://datatracker.ietf.org/doc/html/rfc3629\n\nSigned-off-by: Roman \u017dilka <roman.zilka@gmail.com>\nLink: https://lore.kernel.org/r/598ab459-6ba9-4a17-b4a1-08f26a356fc0@gmail.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
  "author_name": "Roman \u017dilka",
  "author_email": "roman.zilka@gmail.com",
  "author_date": "Tue Jan 9 11:43:46 2024 +0100",
  "author_date_iso": "2024-01-09T11:43:46+01:00",
  "committer_name": "Greg Kroah-Hartman",
  "committer_email": "gregkh@linuxfoundation.org",
  "committer_date": "Sat Jan 27 19:01:27 2024 -0800",
  "committer_date_iso": "2024-01-27T19:01:27-08:00",
  "files_changed": [
    "drivers/tty/vt/vt.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/tty/vt/vt.c",
      "insertions": 2,
      "deletions": 12
    }
  ],
  "total_insertions": 2,
  "total_deletions": 12,
  "total_changes": 14,
  "parents": [
    "e9e873eadced9389b819685a762c9892500f12d0"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security patch"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/tty/vt/vt.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}