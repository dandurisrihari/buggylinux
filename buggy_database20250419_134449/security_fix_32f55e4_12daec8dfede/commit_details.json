{
  "hash": "32f55e475ce2c4b8b124d335fcfaf1152ba977a1",
  "hash_short": "32f55e47",
  "subject": "KVM: nVMX: Request immediate exit iff pending nested event needs injection",
  "body": "When requesting an immediate exit from L2 in order to inject a pending\nevent, do so only if the pending event actually requires manual injection,\ni.e. if and only if KVM actually needs to regain control in order to\ndeliver the event.\n\nAvoiding the \"immediate exit\" isn't simply an optimization, it's necessary\nto make forward progress, as the \"already expired\" VMX preemption timer\ntrick that KVM uses to force a VM-Exit has higher priority than events\nthat aren't directly injected.\n\nAt present time, this is a glorified nop as all events processed by\nvmx_has_nested_events() require injection, but that will not hold true in\nthe future, e.g. if there's a pending virtual interrupt in vmcs02.RVI.\nI.e. if KVM is trying to deliver a virtual interrupt to L2, the expired\nVMX preemption timer will trigger VM-Exit before the virtual interrupt is\ndelivered, and KVM will effectively hang the vCPU in an endless loop of\nforced immediate VM-Exits (because the pending virtual interrupt never\ngoes away).\n\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/r/20240607172609.3205077-3-seanjc@google.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>",
  "full_message": "KVM: nVMX: Request immediate exit iff pending nested event needs injection\n\nWhen requesting an immediate exit from L2 in order to inject a pending\nevent, do so only if the pending event actually requires manual injection,\ni.e. if and only if KVM actually needs to regain control in order to\ndeliver the event.\n\nAvoiding the \"immediate exit\" isn't simply an optimization, it's necessary\nto make forward progress, as the \"already expired\" VMX preemption timer\ntrick that KVM uses to force a VM-Exit has higher priority than events\nthat aren't directly injected.\n\nAt present time, this is a glorified nop as all events processed by\nvmx_has_nested_events() require injection, but that will not hold true in\nthe future, e.g. if there's a pending virtual interrupt in vmcs02.RVI.\nI.e. if KVM is trying to deliver a virtual interrupt to L2, the expired\nVMX preemption timer will trigger VM-Exit before the virtual interrupt is\ndelivered, and KVM will effectively hang the vCPU in an endless loop of\nforced immediate VM-Exits (because the pending virtual interrupt never\ngoes away).\n\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/r/20240607172609.3205077-3-seanjc@google.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Fri Jun 7 10:26:05 2024 -0700",
  "author_date_iso": "2024-06-07T10:26:05-07:00",
  "committer_name": "Sean Christopherson",
  "committer_email": "seanjc@google.com",
  "committer_date": "Fri Jun 28 08:59:04 2024 -0700",
  "committer_date_iso": "2024-06-28T08:59:04-07:00",
  "files_changed": [
    "arch/x86/include/asm/kvm_host.h",
    "arch/x86/kvm/vmx/nested.c",
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 4,
  "total_deletions": 4,
  "total_changes": 8,
  "parents": [
    "d83c36d822be44db4bad0c43bea99c8908f54117"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}