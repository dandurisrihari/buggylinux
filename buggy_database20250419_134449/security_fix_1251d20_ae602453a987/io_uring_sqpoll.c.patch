commit 1251d2025c3e1bcf1f17ec0f3c0dfae5e5bbb146
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Mar 18 20:22:42 2024 -0600

    io_uring/sqpoll: early exit thread if task_context wasn't allocated
    
    Ideally we'd want to simply kill the task rather than wake it, but for
    now let's just add a startup check that causes the thread to exit.
    This can only happen if io_uring_alloc_task_context() fails, which
    generally requires fault injection.
    
    Reported-by: Ubisectech Sirius <bugreport@ubisectech.com>
    Fixes: af5d68f8892f ("io_uring/sqpoll: manage task_work privately")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

diff --git a/io_uring/sqpoll.c b/io_uring/sqpoll.c
index 363052b4ea76..3983708cef5b 100644
--- a/io_uring/sqpoll.c
+++ b/io_uring/sqpoll.c
@@ -274,6 +274,10 @@ static int io_sq_thread(void *data)
 	char buf[TASK_COMM_LEN];
 	DEFINE_WAIT(wait);
 
+	/* offload context creation failed, just exit */
+	if (!current->io_uring)
+		goto err_out;
+
 	snprintf(buf, sizeof(buf), "iou-sqp-%d", sqd->task_pid);
 	set_task_comm(current, buf);
 
@@ -371,7 +375,7 @@ static int io_sq_thread(void *data)
 		atomic_or(IORING_SQ_NEED_WAKEUP, &ctx->rings->sq_flags);
 	io_run_task_work();
 	mutex_unlock(&sqd->lock);
-
+err_out:
 	complete(&sqd->exited);
 	do_exit(0);
 }