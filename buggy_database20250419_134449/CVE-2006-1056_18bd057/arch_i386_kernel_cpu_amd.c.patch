commit 18bd057b1408cd110ed23281533430cfc2d52091
Author: Andi Kleen <ak@linux.intel.com>
Date:   Thu Apr 20 02:36:45 2006 +0200

    [PATCH] i386/x86-64: Fix x87 information leak between processes
    
    AMD K7/K8 CPUs only save/restore the FOP/FIP/FDP x87 registers in FXSAVE
    when an exception is pending.  This means the value leak through
    context switches and allow processes to observe some x87 instruction
    state of other processes.
    
    This was actually documented by AMD, but nobody recognized it as
    being different from Intel before.
    
    The fix first adds an optimization: instead of unconditionally
    calling FNCLEX after each FXSAVE test if ES is pending and skip
    it when not needed. Then do a x87 load from a kernel variable to
    clear FOP/FIP/FDP.
    
    This means other processes always will only see a constant value
    defined by the kernel in their FP state.
    
    I took some pain to make sure to chose a variable that's already
    in L1 during context switch to make the overhead of this low.
    
    Also alternative() is used to patch away the new code on CPUs
    who don't need it.
    
    Patch for both i386/x86-64.
    
    The problem was discovered originally by Jan Beulich. Richard
    Brunner provided the basic code for the workarounds, with contribution
    from Jan.
    
    This is CVE-2006-1056
    
    Cc: richard.brunner@amd.com
    Cc: jbeulich@novell.com
    
    Signed-off-by: Andi Kleen <ak@suse.de>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/arch/i386/kernel/cpu/amd.c b/arch/i386/kernel/cpu/amd.c
index ff2b2154ac1b..786d1a57048b 100644
--- a/arch/i386/kernel/cpu/amd.c
+++ b/arch/i386/kernel/cpu/amd.c
@@ -207,6 +207,8 @@ static void __init init_amd(struct cpuinfo_x86 *c)
 		set_bit(X86_FEATURE_K7, c->x86_capability); 
 		break;
 	}
+	if (c->x86 >= 6)
+		set_bit(X86_FEATURE_FXSAVE_LEAK, c->x86_capability);
 
 	display_cacheinfo(c);