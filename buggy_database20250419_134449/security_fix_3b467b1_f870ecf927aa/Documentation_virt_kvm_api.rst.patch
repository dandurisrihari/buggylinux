commit 3b467b16582c077f57fab244cf0801ecea7914b6
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Apr 23 16:05:38 2024 +0100

    KVM: arm64: Force injection of a data abort on NISV MMIO exit
    
    If a vcpu exits for a data abort with an invalid syndrome, the
    expectations are that userspace has a chance to save the day if
    it has requested to see such exits.
    
    However, this is completely futile in the case of a protected VM,
    as none of the state is available. In this particular case, inject
    a data abort directly into the vcpu, consistent with what userspace
    could do.
    
    This also helps with pKVM, which discards all syndrome information when
    forwarding data aborts that are not known to be MMIO.
    
    Finally, document this tweak to the API.
    
    Signed-off-by: Fuad Tabba <tabba@google.com>
    Acked-by: Oliver Upton <oliver.upton@linux.dev>
    Link: https://lore.kernel.org/r/20240423150538.2103045-31-tabba@google.com
    Signed-off-by: Marc Zyngier <maz@kernel.org>

diff --git a/Documentation/virt/kvm/api.rst b/Documentation/virt/kvm/api.rst
index 0b5a33ee71ee..b11b70ae137e 100644
--- a/Documentation/virt/kvm/api.rst
+++ b/Documentation/virt/kvm/api.rst
@@ -6894,6 +6894,13 @@ Note that KVM does not skip the faulting instruction as it does for
 KVM_EXIT_MMIO, but userspace has to emulate any change to the processing state
 if it decides to decode and emulate the instruction.
 
+This feature isn't available to protected VMs, as userspace does not
+have access to the state that is required to perform the emulation.
+Instead, a data abort exception is directly injected in the guest.
+Note that although KVM_CAP_ARM_NISV_TO_USER will be reported if
+queried outside of a protected VM context, the feature will not be
+exposed if queried on a protected VM file descriptor.
+
 ::
 
 		/* KVM_EXIT_X86_RDMSR / KVM_EXIT_X86_WRMSR */