Commit Hash: f88083005ab319abba5d0b2e4e997558245493c8
Subject: sysctl: clean up char buffer arguments


Security Keywords:
- vulnerability
- exploit

Full commit message:
sysctl: clean up char buffer arguments

When writing to a sysctl string, each write, regardless of VFS position,
began writing the string from the start.  This meant the contents of the
last write to the sysctl controlled the string contents instead of the
first.

This misbehavior was featured in an exploit against Chrome OS.  While
it's not in itself a vulnerability, it's a weirdness that isn't on the
mind of most auditors: "This filter looks correct, the first line
written would not be meaningful to sysctl" doesn't apply here, since the
size of the write and the contents of the final write are what matter
when writing to sysctls.

This adds the sysctl kernel.sysctl_writes_strict to control the write
behavior.  The default (0) reports when VFS position is non-0 on a
write, but retains legacy behavior, -1 disables the warning, and 1
enables the position-respecting behavior.

The long-term plan here is to wait for userspace to be fixed in response
to the new warning and to then switch the default kernel behavior to the
new position-respecting behavior.

This patch (of 4):

The char buffer arguments are needlessly cast in weird places.  Clean it
up so things are easier to read.

Signed-off-by: Kees Cook <keescook@chromium.org>
Cc: Randy Dunlap <rdunlap@infradead.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Metadata:
Author: Kees Cook <keescook@chromium.org>
Author Date: Fri Jun 6 14:37:17 2014 -0700
Committer: Linus Torvalds <torvalds@linux-foundation.org>
Commit Date: Fri Jun 6 16:08:13 2014 -0700

Files Changed: 1
Lines Added: 7
Lines Removed: 7
Total Changes: 14
