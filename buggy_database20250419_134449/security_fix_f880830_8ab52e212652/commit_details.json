{
  "hash": "f88083005ab319abba5d0b2e4e997558245493c8",
  "hash_short": "f8808300",
  "subject": "sysctl: clean up char buffer arguments",
  "body": "When writing to a sysctl string, each write, regardless of VFS position,\nbegan writing the string from the start.  This meant the contents of the\nlast write to the sysctl controlled the string contents instead of the\nfirst.\n\nThis misbehavior was featured in an exploit against Chrome OS.  While\nit's not in itself a vulnerability, it's a weirdness that isn't on the\nmind of most auditors: \"This filter looks correct, the first line\nwritten would not be meaningful to sysctl\" doesn't apply here, since the\nsize of the write and the contents of the final write are what matter\nwhen writing to sysctls.\n\nThis adds the sysctl kernel.sysctl_writes_strict to control the write\nbehavior.  The default (0) reports when VFS position is non-0 on a\nwrite, but retains legacy behavior, -1 disables the warning, and 1\nenables the position-respecting behavior.\n\nThe long-term plan here is to wait for userspace to be fixed in response\nto the new warning and to then switch the default kernel behavior to the\nnew position-respecting behavior.\n\nThis patch (of 4):\n\nThe char buffer arguments are needlessly cast in weird places.  Clean it\nup so things are easier to read.\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Randy Dunlap <rdunlap@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "sysctl: clean up char buffer arguments\n\nWhen writing to a sysctl string, each write, regardless of VFS position,\nbegan writing the string from the start.  This meant the contents of the\nlast write to the sysctl controlled the string contents instead of the\nfirst.\n\nThis misbehavior was featured in an exploit against Chrome OS.  While\nit's not in itself a vulnerability, it's a weirdness that isn't on the\nmind of most auditors: \"This filter looks correct, the first line\nwritten would not be meaningful to sysctl\" doesn't apply here, since the\nsize of the write and the contents of the final write are what matter\nwhen writing to sysctls.\n\nThis adds the sysctl kernel.sysctl_writes_strict to control the write\nbehavior.  The default (0) reports when VFS position is non-0 on a\nwrite, but retains legacy behavior, -1 disables the warning, and 1\nenables the position-respecting behavior.\n\nThe long-term plan here is to wait for userspace to be fixed in response\nto the new warning and to then switch the default kernel behavior to the\nnew position-respecting behavior.\n\nThis patch (of 4):\n\nThe char buffer arguments are needlessly cast in weird places.  Clean it\nup so things are easier to read.\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Randy Dunlap <rdunlap@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Fri Jun 6 14:37:17 2014 -0700",
  "author_date_iso": "2014-06-06T14:37:17-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Jun 6 16:08:13 2014 -0700",
  "committer_date_iso": "2014-06-06T16:08:13-07:00",
  "files_changed": [
    "kernel/sysctl.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/sysctl.c",
      "insertions": 7,
      "deletions": 7
    }
  ],
  "total_insertions": 7,
  "total_deletions": 7,
  "total_changes": 14,
  "parents": [
    "1c92ab1e742b0636e5c4c63792e20020cdf16caf"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.16",
    "v3.16-rc1",
    "v3.16-rc2",
    "v3.16-rc3",
    "v3.16-rc4",
    "v3.16-rc5",
    "v3.16-rc6",
    "v3.16-rc7",
    "v3.17",
    "v3.17-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability",
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/sysctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}