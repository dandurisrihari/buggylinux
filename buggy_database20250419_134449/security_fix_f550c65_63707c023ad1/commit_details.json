{
  "hash": "f550c65b543b4d3fa55201084b1a16432b748365",
  "hash_short": "f550c65b",
  "subject": "scsi: ufs: implement scsi host timeout handler",
  "body": "A race condition exists between request requeueing and scsi layer\nerror handling:\nWhen UFS driver queuecommand returns a busy status for a request,\nit will be requeued and its tag will be freed and set to -1.\nAt the same time it is possible that the request will timeout and\nscsi layer will start error handling for it. The scsi layer reuses\nthe request and its tag to send error related commands to the device,\nhowever its tag is no longer valid.\nAs this request was never really sent to the device, there is no\npoint to start error handling with the device.\nImplement the scsi error handling timeout callback and bypass SCSI\nerror handling for request that were not actually sent to the device.\nFor such requests simply reset the block layer timer. Otherwise, let\nSCSI layer perform the usual error handling.\n\nReviewed-by: Hannes Reinecke <hare@suse.de>\nSigned-off-by: Gilad Broner <gbroner@codeaurora.org>\nSigned-off-by: Yaniv Gardi <ygardi@codeaurora.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: ufs: implement scsi host timeout handler\n\nA race condition exists between request requeueing and scsi layer\nerror handling:\nWhen UFS driver queuecommand returns a busy status for a request,\nit will be requeued and its tag will be freed and set to -1.\nAt the same time it is possible that the request will timeout and\nscsi layer will start error handling for it. The scsi layer reuses\nthe request and its tag to send error related commands to the device,\nhowever its tag is no longer valid.\nAs this request was never really sent to the device, there is no\npoint to start error handling with the device.\nImplement the scsi error handling timeout callback and bypass SCSI\nerror handling for request that were not actually sent to the device.\nFor such requests simply reset the block layer timer. Otherwise, let\nSCSI layer perform the usual error handling.\n\nReviewed-by: Hannes Reinecke <hare@suse.de>\nSigned-off-by: Gilad Broner <gbroner@codeaurora.org>\nSigned-off-by: Yaniv Gardi <ygardi@codeaurora.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Yaniv Gardi",
  "author_email": "ygardi@codeaurora.org",
  "author_date": "Thu Mar 10 17:37:07 2016 +0200",
  "author_date_iso": "2016-03-10T17:37:07+02:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Mon Mar 14 21:04:45 2016 -0400",
  "committer_date_iso": "2016-03-14T21:04:45-04:00",
  "files_changed": [
    "drivers/scsi/ufs/ufshcd.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/ufs/ufshcd.c",
      "insertions": 36,
      "deletions": 0
    }
  ],
  "total_insertions": 36,
  "total_deletions": 0,
  "total_changes": 36,
  "parents": [
    "199ef13cac7d43f20d92ca077a25c3cbf91427ca"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "bypass"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/ufs/ufshcd.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}