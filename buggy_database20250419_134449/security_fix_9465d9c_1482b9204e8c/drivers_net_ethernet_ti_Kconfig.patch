commit 9465d9cc31fa732089cd8bec9f1bdfcdc174a5ce
Merge: e71c3978d6f9 c029a2bec66e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Dec 12 19:56:15 2016 -0800

    Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull timer updates from Thomas Gleixner:
     "The time/timekeeping/timer folks deliver with this update:
    
       - Fix a reintroduced signed/unsigned issue and cleanup the whole
         signed/unsigned mess in the timekeeping core so this wont happen
         accidentaly again.
    
       - Add a new trace clock based on boot time
    
       - Prevent injection of random sleep times when PM tracing abuses the
         RTC for storage
    
       - Make posix timers configurable for real tiny systems
    
       - Add tracepoints for the alarm timer subsystem so timer based
         suspend wakeups can be instrumented
    
       - The usual pile of fixes and updates to core and drivers"
    
    * 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (23 commits)
      timekeeping: Use mul_u64_u32_shr() instead of open coding it
      timekeeping: Get rid of pointless typecasts
      timekeeping: Make the conversion call chain consistently unsigned
      timekeeping_Force_unsigned_clocksource_to_nanoseconds_conversion
      alarmtimer: Add tracepoints for alarm timers
      trace: Update documentation for mono, mono_raw and boot clock
      trace: Add an option for boot clock as trace clock
      timekeeping: Add a fast and NMI safe boot clock
      timekeeping/clocksource_cyc2ns: Document intended range limitation
      timekeeping: Ignore the bogus sleep time if pm_trace is enabled
      selftests/timers: Fix spelling mistake "Asyncrhonous" -> "Asynchronous"
      clocksource/drivers/bcm2835_timer: Unmap region obtained by of_iomap
      clocksource/drivers/arm_arch_timer: Map frame with of_io_request_and_map()
      arm64: dts: rockchip: Arch counter doesn't tick in system suspend
      clocksource/drivers/arm_arch_timer: Don't assume clock runs in suspend
      posix-timers: Make them configurable
      posix_cpu_timers: Move the add_device_randomness() call to a proper place
      timer: Move sys_alarm from timer.c to itimer.c
      ptp_clock: Allow for it to be optional
      Kconfig: Regenerate *.c_shipped files after previous changes
      ...

diff --cc drivers/net/ethernet/ti/Kconfig
index dc217fd7a734,61b835a7e6ae..296c8efd0038
--- a/drivers/net/ethernet/ti/Kconfig
+++ b/drivers/net/ethernet/ti/Kconfig
@@@ -74,14 -74,13 +74,14 @@@ config TI_CPS
  	  will be called cpsw.
  
  config TI_CPTS
 -	bool "TI Common Platform Time Sync (CPTS) Support"
 -	depends on TI_CPSW
 +	tristate "TI Common Platform Time Sync (CPTS) Support"
 +	depends on TI_CPSW || TI_KEYSTONE_NETCP
- 	select PTP_1588_CLOCK
+ 	imply PTP_1588_CLOCK
  	---help---
  	  This driver supports the Common Platform Time Sync unit of
 -	  the CPSW Ethernet Switch. The unit can time stamp PTP UDP/IPv4
 -	  and Layer 2 packets, and the driver offers a PTP Hardware Clock.
 +	  the CPSW Ethernet Switch and Keystone 2 1g/10g Switch Subsystem.
 +	  The unit can time stamp PTP UDP/IPv4 and Layer 2 packets, and the
 +	  driver offers a PTP Hardware Clock.
  
  config TI_KEYSTONE_NETCP
  	tristate "TI Keystone NETCP Core Support"