{
  "hash": "56bcd0f07fdbf9770284bedb982236ab881ef909",
  "hash_short": "56bcd0f0",
  "subject": "nfs: implement client support for NFS_LOCALIO_PROGRAM",
  "body": "The LOCALIO auxiliary RPC protocol consists of a single \"UUID_IS_LOCAL\"\nRPC method that allows the Linux NFS client to verify the local Linux\nNFS server can see the nonce (single-use UUID) the client generated and\nmade available in nfs_common for subsequent lookup and verification\nby the NFS server.  If matched, the NFS server populates members in the\nnfs_uuid_t struct.  The NFS client then transfers these nfs_uuid_t\nstruct member pointers to the nfs_client struct and cleans up the\nnfs_uuid_t struct.  See: fs/nfs/localio.c:nfs_local_probe()\n\nThis protocol isn't part of an IETF standard, nor does it need to be\nconsidering it is Linux-to-Linux auxiliary RPC protocol that amounts\nto an implementation detail.\n\nLocalio is only supported when UNIX-style authentication (AUTH_UNIX, aka\nAUTH_SYS) is used (enforced by fs/nfs/localio.c:nfs_local_probe()).\n\nThe UUID_IS_LOCAL method encodes the client generated uuid_t in terms of\nthe fixed UUID_SIZE (16 bytes).  The fixed size opaque encode and decode\nXDR methods are used instead of the less efficient variable sized\nmethods.\n\nHaving a nonce (single-use uuid) is better than using the same uuid\nfor the life of the server, and sending it proactively by client\nrather than reactively by the server is also safer.\n\nSigned-off-by: Mike Snitzer <snitzer@kernel.org>\nCo-developed-by: NeilBrown <neilb@suse.de>\nSigned-off-by: NeilBrown <neilb@suse.de>\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Anna Schumaker <anna.schumaker@oracle.com>",
  "full_message": "nfs: implement client support for NFS_LOCALIO_PROGRAM\n\nThe LOCALIO auxiliary RPC protocol consists of a single \"UUID_IS_LOCAL\"\nRPC method that allows the Linux NFS client to verify the local Linux\nNFS server can see the nonce (single-use UUID) the client generated and\nmade available in nfs_common for subsequent lookup and verification\nby the NFS server.  If matched, the NFS server populates members in the\nnfs_uuid_t struct.  The NFS client then transfers these nfs_uuid_t\nstruct member pointers to the nfs_client struct and cleans up the\nnfs_uuid_t struct.  See: fs/nfs/localio.c:nfs_local_probe()\n\nThis protocol isn't part of an IETF standard, nor does it need to be\nconsidering it is Linux-to-Linux auxiliary RPC protocol that amounts\nto an implementation detail.\n\nLocalio is only supported when UNIX-style authentication (AUTH_UNIX, aka\nAUTH_SYS) is used (enforced by fs/nfs/localio.c:nfs_local_probe()).\n\nThe UUID_IS_LOCAL method encodes the client generated uuid_t in terms of\nthe fixed UUID_SIZE (16 bytes).  The fixed size opaque encode and decode\nXDR methods are used instead of the less efficient variable sized\nmethods.\n\nHaving a nonce (single-use uuid) is better than using the same uuid\nfor the life of the server, and sending it proactively by client\nrather than reactively by the server is also safer.\n\nSigned-off-by: Mike Snitzer <snitzer@kernel.org>\nCo-developed-by: NeilBrown <neilb@suse.de>\nSigned-off-by: NeilBrown <neilb@suse.de>\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Anna Schumaker <anna.schumaker@oracle.com>",
  "author_name": "Mike Snitzer",
  "author_email": "snitzer@kernel.org",
  "author_date": "Thu Sep 5 15:09:57 2024 -0400",
  "author_date_iso": "2024-09-05T15:09:57-04:00",
  "committer_name": "Anna Schumaker",
  "committer_email": "anna.schumaker@oracle.com",
  "committer_date": "Mon Sep 23 15:03:30 2024 -0400",
  "committer_date_iso": "2024-09-23T15:03:30-04:00",
  "files_changed": [
    "fs/nfs/client.c",
    "fs/nfs/localio.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "fs/nfs/client.c",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "fs/nfs/localio.c",
      "insertions": 128,
      "deletions": 4
    }
  ],
  "total_insertions": 132,
  "total_deletions": 6,
  "total_changes": 138,
  "parents": [
    "b9f5dd57f4a52990963eeb1f1b58d00f717ece69"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/nfs/client.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfs/localio.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}