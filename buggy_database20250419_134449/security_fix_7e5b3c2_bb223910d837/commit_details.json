{
  "hash": "7e5b3c267d256822407a22fdce6afdf9cd13f9fb",
  "hash_short": "7e5b3c26",
  "subject": "x86/speculation: Add Special Register Buffer Data Sampling (SRBDS) mitigation",
  "body": "SRBDS is an MDS-like speculative side channel that can leak bits from the\nrandom number generator (RNG) across cores and threads. New microcode\nserializes the processor access during the execution of RDRAND and\nRDSEED. This ensures that the shared buffer is overwritten before it is\nreleased for reuse.\n\nWhile it is present on all affected CPU models, the microcode mitigation\nis not needed on models that enumerate ARCH_CAPABILITIES[MDS_NO] in the\ncases where TSX is not supported or has been disabled with TSX_CTRL.\n\nThe mitigation is activated by default on affected processors and it\nincreases latency for RDRAND and RDSEED instructions. Among other\neffects this will reduce throughput from /dev/urandom.\n\n* Enable administrator to configure the mitigation off when desired using\n  either mitigations=off or srbds=off.\n\n* Export vulnerability status via sysfs\n\n* Rename file-scoped macros to apply for non-whitelist table initializations.\n\n [ bp: Massage,\n   - s/VULNBL_INTEL_STEPPING/VULNBL_INTEL_STEPPINGS/g,\n   - do not read arch cap MSR a second time in tsx_fused_off() - just pass it in,\n   - flip check in cpu_set_bug_bits() to save an indentation level,\n   - reflow comments.\n   jpoimboe: s/Mitigated/Mitigation/ in user-visible strings\n   tglx: Dropped the fused off magic for now\n ]\n\nSigned-off-by: Mark Gross <mgross@linux.intel.com>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Tony Luck <tony.luck@intel.com>\nReviewed-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nReviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>\nTested-by: Neelima Krishnan <neelima.krishnan@intel.com>",
  "full_message": "x86/speculation: Add Special Register Buffer Data Sampling (SRBDS) mitigation\n\nSRBDS is an MDS-like speculative side channel that can leak bits from the\nrandom number generator (RNG) across cores and threads. New microcode\nserializes the processor access during the execution of RDRAND and\nRDSEED. This ensures that the shared buffer is overwritten before it is\nreleased for reuse.\n\nWhile it is present on all affected CPU models, the microcode mitigation\nis not needed on models that enumerate ARCH_CAPABILITIES[MDS_NO] in the\ncases where TSX is not supported or has been disabled with TSX_CTRL.\n\nThe mitigation is activated by default on affected processors and it\nincreases latency for RDRAND and RDSEED instructions. Among other\neffects this will reduce throughput from /dev/urandom.\n\n* Enable administrator to configure the mitigation off when desired using\n  either mitigations=off or srbds=off.\n\n* Export vulnerability status via sysfs\n\n* Rename file-scoped macros to apply for non-whitelist table initializations.\n\n [ bp: Massage,\n   - s/VULNBL_INTEL_STEPPING/VULNBL_INTEL_STEPPINGS/g,\n   - do not read arch cap MSR a second time in tsx_fused_off() - just pass it in,\n   - flip check in cpu_set_bug_bits() to save an indentation level,\n   - reflow comments.\n   jpoimboe: s/Mitigated/Mitigation/ in user-visible strings\n   tglx: Dropped the fused off magic for now\n ]\n\nSigned-off-by: Mark Gross <mgross@linux.intel.com>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Tony Luck <tony.luck@intel.com>\nReviewed-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nReviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>\nTested-by: Neelima Krishnan <neelima.krishnan@intel.com>",
  "author_name": "Mark Gross",
  "author_email": "mgross@linux.intel.com",
  "author_date": "Thu Apr 16 17:54:04 2020 +0200",
  "author_date_iso": "2020-04-16T17:54:04+02:00",
  "committer_name": "Thomas Gleixner",
  "committer_email": "tglx@linutronix.de",
  "committer_date": "Mon Apr 20 12:19:22 2020 +0200",
  "committer_date_iso": "2020-04-20T12:19:22+02:00",
  "files_changed": [
    "Documentation/ABI/testing/sysfs-devices-system-cpu",
    "Documentation/admin-guide/kernel-parameters.txt",
    "arch/x86/include/asm/cpufeatures.h",
    "arch/x86/include/asm/msr-index.h",
    "arch/x86/kernel/cpu/bugs.c",
    "arch/x86/kernel/cpu/common.c",
    "arch/x86/kernel/cpu/cpu.h",
    "drivers/base/cpu.c"
  ],
  "files_changed_count": 8,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-devices-system-cpu",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "insertions": 20,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/cpufeatures.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/msr-index.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/bugs.c",
      "insertions": 106,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/common.c",
      "insertions": 31,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/cpu.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/base/cpu.c",
      "insertions": 8,
      "deletions": 0
    }
  ],
  "total_insertions": 173,
  "total_deletions": 0,
  "total_changes": 173,
  "parents": [
    "93920f61c2ad7edb01e63323832585796af75fc9"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/ABI/testing/sysfs-devices-system-cpu",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/bugs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/cpu.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/base/cpu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/cpufeatures.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/msr-index.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/common.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}