commit 7012040576c6ae25a47035659ee48673612c2c27
Author: Bjorn Andersson <andersson@kernel.org>
Date:   Wed Sep 19 18:09:38 2018 -0700

    firmware: Always initialize the fw_priv list object
    
    When freeing the fw_priv the item is taken off the list. This causes an
    oops in the FW_OPT_NOCACHE case as the list object is not initialized.
    
    Make sure to initialize the list object regardless of this flag.
    
    Fixes: 422b3db2a503 ("firmware: Fix security issue with request_firmware_into_buf()")
    Cc: stable@vger.kernel.org
    Cc: Rishabh Bhatnagar <rishabhb@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/base/firmware_loader/main.c b/drivers/base/firmware_loader/main.c
index b3c0498ee433..8e9213b36e31 100644
--- a/drivers/base/firmware_loader/main.c
+++ b/drivers/base/firmware_loader/main.c
@@ -226,8 +226,11 @@ static int alloc_lookup_fw_priv(const char *fw_name,
 	}
 
 	tmp = __allocate_fw_priv(fw_name, fwc, dbuf, size);
-	if (tmp && !(opt_flags & FW_OPT_NOCACHE))
-		list_add(&tmp->list, &fwc->head);
+	if (tmp) {
+		INIT_LIST_HEAD(&tmp->list);
+		if (!(opt_flags & FW_OPT_NOCACHE))
+			list_add(&tmp->list, &fwc->head);
+	}
 	spin_unlock(&fwc->lock);
 
 	*fw_priv = tmp;