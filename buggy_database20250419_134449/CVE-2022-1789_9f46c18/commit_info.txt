Commit Hash: 9f46c187e2e680ecd9de7983e4d081c3391acc76
Subject: KVM: x86/mmu: fix NULL pointer dereference on guest INVPCID

CVE Identifiers:
- CVE-2022-1789

Full commit message:
KVM: x86/mmu: fix NULL pointer dereference on guest INVPCID

With shadow paging enabled, the INVPCID instruction results in a call
to kvm_mmu_invpcid_gva.  If INVPCID is executed with CR0.PG=0, the
invlpg callback is not set and the result is a NULL pointer dereference.
Fix it trivially by checking for mmu->invlpg before every call.

There are other possibilities:

- check for CR0.PG, because KVM (like all Intel processors after P5)
  flushes guest TLB on CR0.PG changes so that INVPCID/INVLPG are a
  nop with paging disabled

- check for EFER.LMA, because KVM syncs and flushes when switching
  MMU contexts outside of 64-bit mode

All of these are tricky, go for the simple solution.  This is CVE-2022-1789.

Reported-by: Yongkang Jia <kangel@zju.edu.cn>
Cc: stable@vger.kernel.org
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

Metadata:
Author: Paolo Bonzini <pbonzini@redhat.com>
Author Date: Fri May 20 13:48:11 2022 -0400
Committer: Paolo Bonzini <pbonzini@redhat.com>
Commit Date: Fri May 20 13:49:52 2022 -0400

Files Changed: 1
Lines Added: 4
Lines Removed: 2
Total Changes: 6
