commit 4cc9b9f2bf4dfe13fe573da978e626e2248df388
Author: NeilBrown <neilb@suse.de>
Date:   Fri Oct 18 08:42:31 2024 +1100

    nfsd: refine and rename NFSD_MAY_LOCK
    
    NFSD_MAY_LOCK means a few different things.
    - it means that GSS is not required.
    - it means that with NFSEXP_NOAUTHNLM, authentication is not required
    - it means that OWNER_OVERRIDE is allowed.
    
    None of these are specific to locking, they are specific to the NLM
    protocol.
    So:
     - rename to NFSD_MAY_NLM
     - set NFSD_MAY_OWNER_OVERRIDE and NFSD_MAY_BYPASS_GSS in nlm_fopen()
       so that NFSD_MAY_NLM doesn't need to imply these.
     - move the test on NFSEXP_NOAUTHNLM out of nfsd_permission() and
       into fh_verify where other special-case tests on the MAY flags
       happen.  nfsd_permission() can be called from other places than
       fh_verify(), but none of these will have NFSD_MAY_NLM.
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
index 1f8540148c4a..eee39bab49a8 100644
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@ -2506,7 +2506,7 @@ nfsd_permission(struct svc_cred *cred, struct svc_export *exp,
 		(acc & NFSD_MAY_EXEC)?	" exec"  : "",
 		(acc & NFSD_MAY_SATTR)?	" sattr" : "",
 		(acc & NFSD_MAY_TRUNC)?	" trunc" : "",
-		(acc & NFSD_MAY_LOCK)?	" lock"  : "",
+		(acc & NFSD_MAY_NLM)?	" nlm"  : "",
 		(acc & NFSD_MAY_OWNER_OVERRIDE)? " owneroverride" : "",
 		inode->i_mode,
 		IS_IMMUTABLE(inode)?	" immut" : "",
@@ -2531,16 +2531,6 @@ nfsd_permission(struct svc_cred *cred, struct svc_export *exp,
 	if ((acc & NFSD_MAY_TRUNC) && IS_APPEND(inode))
 		return nfserr_perm;
 
-	if (acc & NFSD_MAY_LOCK) {
-		/* If we cannot rely on authentication in NLM requests,
-		 * just allow locks, otherwise require read permission, or
-		 * ownership
-		 */
-		if (exp->ex_flags & NFSEXP_NOAUTHNLM)
-			return 0;
-		else
-			acc = NFSD_MAY_READ | NFSD_MAY_OWNER_OVERRIDE;
-	}
 	/*
 	 * The file owner always gets access permission for accesses that
 	 * would normally be checked at open time. This is to make