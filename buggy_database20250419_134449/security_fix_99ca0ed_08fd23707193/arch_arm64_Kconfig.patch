commit 99ca0edb41aabd888ca1548fa0391a4975740a83
Merge: 4a037ad5d115 1ffa9763828c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Feb 21 13:08:42 2021 -0800

    Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux
    
    Pull arm64 updates from Will Deacon:
    
     - vDSO build improvements including support for building with BSD.
    
     - Cleanup to the AMU support code and initialisation rework to support
       cpufreq drivers built as modules.
    
     - Removal of synthetic frame record from exception stack when entering
       the kernel from EL0.
    
     - Add support for the TRNG firmware call introduced by Arm spec
       DEN0098.
    
     - Cleanup and refactoring across the board.
    
     - Avoid calling arch_get_random_seed_long() from
       add_interrupt_randomness()
    
     - Perf and PMU updates including support for Cortex-A78 and the v8.3
       SPE extensions.
    
     - Significant steps along the road to leaving the MMU enabled during
       kexec relocation.
    
     - Faultaround changes to initialise prefaulted PTEs as 'old' when
       hardware access-flag updates are supported, which drastically
       improves vmscan performance.
    
     - CPU errata updates for Cortex-A76 (#1463225) and Cortex-A55
       (#1024718)
    
     - Preparatory work for yielding the vector unit at a finer granularity
       in the crypto code, which in turn will one day allow us to defer
       softirq processing when it is in use.
    
     - Support for overriding CPU ID register fields on the command-line.
    
    * tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (85 commits)
      drivers/perf: Replace spin_lock_irqsave to spin_lock
      mm: filemap: Fix microblaze build failure with 'mmu_defconfig'
      arm64: Make CPU_BIG_ENDIAN depend on ld.bfd or ld.lld 13.0.0+
      arm64: cpufeatures: Allow disabling of Pointer Auth from the command-line
      arm64: Defer enabling pointer authentication on boot core
      arm64: cpufeatures: Allow disabling of BTI from the command-line
      arm64: Move "nokaslr" over to the early cpufeature infrastructure
      KVM: arm64: Document HVC_VHE_RESTART stub hypercall
      arm64: Make kvm-arm.mode={nvhe, protected} an alias of id_aa64mmfr1.vh=0
      arm64: Add an aliasing facility for the idreg override
      arm64: Honor VHE being disabled from the command-line
      arm64: Allow ID_AA64MMFR1_EL1.VH to be overridden from the command line
      arm64: cpufeature: Add an early command-line cpufeature override facility
      arm64: Extract early FDT mapping from kaslr_early_init()
      arm64: cpufeature: Use IDreg override in __read_sysreg_by_encoding()
      arm64: cpufeature: Add global feature override facility
      arm64: Move SCTLR_EL1 initialisation to EL-agnostic code
      arm64: Simplify init_el2_state to be non-VHE only
      arm64: Move VHE-specific SPE setup to mutate_to_vhe()
      arm64: Drop early setting of MDSCR_EL2.TPMS
      ...