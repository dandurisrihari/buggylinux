commit 5b0ed5964928b0aaf0d644c17c886c7f5ea4bb3f
Merge: 553637f73c31 0aa2988e4fd2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Feb 20 14:27:21 2023 -0800

    Merge tag 'for-6.3/block-2023-02-16' of git://git.kernel.dk/linux
    
    Pull block updates from Jens Axboe:
    
     - NVMe updates via Christoph:
          - Small improvements to the logging functionality (Amit Engel)
          - Authentication cleanups (Hannes Reinecke)
          - Cleanup and optimize the DMA mapping cod in the PCIe driver
            (Keith Busch)
          - Work around the command effects for Format NVM (Keith Busch)
          - Misc cleanups (Keith Busch, Christoph Hellwig)
          - Fix and cleanup freeing single sgl (Keith Busch)
    
     - MD updates via Song:
          - Fix a rare crash during the takeover process
          - Don't update recovery_cp when curr_resync is ACTIVE
          - Free writes_pending in md_stop
          - Change active_io to percpu
    
     - Updates to drbd, inching us closer to unifying the out-of-tree driver
       with the in-tree one (Andreas, Christoph, Lars, Robert)
    
     - BFQ update adding support for multi-actuator drives (Paolo, Federico,
       Davide)
    
     - Make brd compliant with REQ_NOWAIT (me)
    
     - Fix for IOPOLL and queue entering, fixing stalled IO waiting on
       timeouts (me)
    
     - Fix for REQ_NOWAIT with multiple bios (me)
    
     - Fix memory leak in blktrace cleanup (Greg)
    
     - Clean up sbitmap and fix a potential hang (Kemeng)
    
     - Clean up some bits in BFQ, and fix a bug in the request injection
       (Kemeng)
    
     - Clean up the request allocation and issue code, and fix some bugs
       related to that (Kemeng)
    
     - ublk updates and fixes:
          - Add support for unprivileged ublk (Ming)
          - Improve device deletion handling (Ming)
          - Misc (Liu, Ziyang)
    
     - s390 dasd fixes (Alexander, Qiheng)
    
     - Improve utility of request caching and fixes (Anuj, Xiao)
    
     - zoned cleanups (Pankaj)
    
     - More constification for kobjs (Thomas)
    
     - blk-iocost cleanups (Yu)
    
     - Remove bio splitting from drivers that don't need it (Christoph)
    
     - Switch blk-cgroups to use struct gendisk. Some of this is now
       incomplete as select late reverts were done. (Christoph)
    
     - Add bvec initialization helpers, and convert callers to use that
       rather than open-coding it (Christoph)
    
     - Misc fixes and cleanups (Jinke, Keith, Arnd, Bart, Li, Martin,
       Matthew, Ulf, Zhong)
    
    * tag 'for-6.3/block-2023-02-16' of git://git.kernel.dk/linux: (169 commits)
      brd: use radix_tree_maybe_preload instead of radix_tree_preload
      block: use proper return value from bio_failfast()
      block: bio-integrity: Copy flags when bio_integrity_payload is cloned
      block: Fix io statistics for cgroup in throttle path
      brd: mark as nowait compatible
      brd: check for REQ_NOWAIT and set correct page allocation mask
      brd: return 0/-error from brd_insert_page()
      block: sync mixed merged request's failfast with 1st bio's
      Revert "blk-cgroup: pin the gendisk in struct blkcg_gq"
      Revert "blk-cgroup: pass a gendisk to blkg_lookup"
      Revert "blk-cgroup: delay blk-cgroup initialization until add_disk"
      Revert "blk-cgroup: delay calling blkcg_exit_disk until disk_release"
      Revert "blk-cgroup: move the cgroup information to struct gendisk"
      nvme-pci: remove iod use_sgls
      nvme-pci: fix freeing single sgl
      block: ublk: check IO buffer based on flag need_get_data
      s390/dasd: Fix potential memleak in dasd_eckd_init()
      s390/dasd: sort out physical vs virtual pointers usage
      block: Remove the ALLOC_CACHE_SLACK constant
      block: make kobj_type structures constant
      ...

diff --cc block/bfq-iosched.c
index 380e9bda2e57,777dcab73c8e..8a8d4441519c
--- a/block/bfq-iosched.c
+++ b/block/bfq-iosched.c
@@@ -5423,16 -5568,14 +5568,16 @@@ static void bfq_check_ioprio_change(str
  
  	bic->ioprio = ioprio;
  
- 	bfqq = bic_to_bfqq(bic, false);
+ 	bfqq = bic_to_bfqq(bic, false, bfq_actuator_index(bfqd, bio));
  	if (bfqq) {
 -		bfq_release_process_ref(bfqd, bfqq);
 +		struct bfq_queue *old_bfqq = bfqq;
 +
  		bfqq = bfq_get_queue(bfqd, bio, false, bic, true);
- 		bic_set_bfqq(bic, bfqq, false);
+ 		bic_set_bfqq(bic, bfqq, false, bfq_actuator_index(bfqd, bio));
 +		bfq_release_process_ref(bfqd, old_bfqq);
  	}
  
- 	bfqq = bic_to_bfqq(bic, true);
+ 	bfqq = bic_to_bfqq(bic, true, bfq_actuator_index(bfqd, bio));
  	if (bfqq)
  		bfq_set_next_ioprio_data(bfqq, bic);
  }