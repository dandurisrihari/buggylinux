{
  "hash": "6af79f7fe748fe6a3c5c3a63d7f35981a82c2769",
  "hash_short": "6af79f7f",
  "subject": "i2c: fix memleak in i2c_new_client_device()",
  "body": "Yang Yingliang reported a memleak:\n===\n\nI got memory leak as follows when doing fault injection test:\n\nunreferenced object 0xffff888014aec078 (size 8):\n  comm \"xrun\", pid 356, jiffies 4294910619 (age 16.332s)\n  hex dump (first 8 bytes):\n    31 2d 30 30 31 63 00 00                          1-001c..\n  backtrace:\n    [<00000000eb56c0a9>] __kmalloc_track_caller+0x1a6/0x300\n    [<000000000b220ea3>] kvasprintf+0xad/0x140\n    [<00000000b83203e5>] kvasprintf_const+0x62/0x190\n    [<000000002a5eab37>] kobject_set_name_vargs+0x56/0x140\n    [<00000000300ac279>] dev_set_name+0xb0/0xe0\n    [<00000000b66ebd6f>] i2c_new_client_device+0x7e4/0x9a0\n\nIf device_register() returns error in i2c_new_client_device(),\nthe name allocated by i2c_dev_set_name() need be freed. As\ncomment of device_register() says, it should use put_device()\nto give up the reference in the error path.\n\n===\nI think this solution is less intrusive and more robust than he\noriginally proposed solutions, though.\n\nReported-by: Yang Yingliang <yangyingliang@huawei.com>\nCloses: http://patchwork.ozlabs.org/project/linux-i2c/patch/20221124085448.3620240-1-yangyingliang@huawei.com/\nSigned-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>\nSigned-off-by: Wolfram Sang <wsa@kernel.org>",
  "full_message": "i2c: fix memleak in i2c_new_client_device()\n\nYang Yingliang reported a memleak:\n===\n\nI got memory leak as follows when doing fault injection test:\n\nunreferenced object 0xffff888014aec078 (size 8):\n  comm \"xrun\", pid 356, jiffies 4294910619 (age 16.332s)\n  hex dump (first 8 bytes):\n    31 2d 30 30 31 63 00 00                          1-001c..\n  backtrace:\n    [<00000000eb56c0a9>] __kmalloc_track_caller+0x1a6/0x300\n    [<000000000b220ea3>] kvasprintf+0xad/0x140\n    [<00000000b83203e5>] kvasprintf_const+0x62/0x190\n    [<000000002a5eab37>] kobject_set_name_vargs+0x56/0x140\n    [<00000000300ac279>] dev_set_name+0xb0/0xe0\n    [<00000000b66ebd6f>] i2c_new_client_device+0x7e4/0x9a0\n\nIf device_register() returns error in i2c_new_client_device(),\nthe name allocated by i2c_dev_set_name() need be freed. As\ncomment of device_register() says, it should use put_device()\nto give up the reference in the error path.\n\n===\nI think this solution is less intrusive and more robust than he\noriginally proposed solutions, though.\n\nReported-by: Yang Yingliang <yangyingliang@huawei.com>\nCloses: http://patchwork.ozlabs.org/project/linux-i2c/patch/20221124085448.3620240-1-yangyingliang@huawei.com/\nSigned-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>\nSigned-off-by: Wolfram Sang <wsa@kernel.org>",
  "author_name": "Wolfram Sang",
  "author_email": "wsa+renesas@sang-engineering.com",
  "author_date": "Fri Sep 29 11:19:52 2023 +0200",
  "author_date_iso": "2023-09-29T11:19:52+02:00",
  "committer_name": "Wolfram Sang",
  "committer_email": "wsa@kernel.org",
  "committer_date": "Mon Oct 23 17:25:43 2023 +0200",
  "committer_date_iso": "2023-10-23T17:25:43+02:00",
  "files_changed": [
    "drivers/i2c/i2c-core-base.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/i2c/i2c-core-base.c",
      "insertions": 9,
      "deletions": 4
    }
  ],
  "total_insertions": 9,
  "total_deletions": 4,
  "total_changes": 13,
  "parents": [
    "8c906cc0aea53aaa7178ca58780e32c14564c139"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/i2c/i2c-core-base.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}