commit 81f07d2b0c4db3b6e53d90419db915c75beb6326
Author: Justin Stitt <justinstitt@google.com>
Date:   Fri Oct 20 19:39:02 2023 +0000

    power: supply: surface_battery: replace deprecated strncpy with strscpy
    
    strncpy() is deprecated for use on NUL-terminated destination strings
    [1] and as such we should prefer more robust and less ambiguous string
    interfaces.
    
    We expect bat->name to be NUL-terminated based on its usage with
    strcmp():
    
    power_supply_core.c:
    445: return strcmp(psy->desc->name, name) == 0;
    
    ... and also by the manual `... - 1` for the length argument of the
    original strncpy() invocation.
    
    Furthermore, no NUL-padding is needed as bat is zero-allocated before
    calling spwr_battery_init():
    826: bat = devm_kzalloc(&sdev->dev, sizeof(*bat), GFP_KERNEL);
    827: if (!bat)
    828:   return -ENOMEM;
    829:
    830: spwr_battery_init(bat, sdev, p->registry, p->name);
    
    ... this means any further NUL-byte assignments (like the ones that
    strncpy() does) are redundant.
    
    Considering the above, a suitable replacement is `strscpy` [2] due to
    the fact that it guarantees NUL-termination on the destination buffer
    without unnecessarily NUL-padding.
    
    Let's also opt to use the more idiomatic strscpy() usage of:
    (dest, src, sizeof(dest)).
    
    Link: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]
    Link: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]
    Link: https://github.com/KSPP/linux/issues/90
    Cc: linux-hardening@vger.kernel.org
    Signed-off-by: Justin Stitt <justinstitt@google.com>
    Link: https://lore.kernel.org/r/20231020-strncpy-drivers-power-supply-surface_battery-c-v2-1-29ed16b2caf1@google.com
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>

diff --git a/drivers/power/supply/surface_battery.c b/drivers/power/supply/surface_battery.c
index 19d2f8834e56..196d290dc596 100644
--- a/drivers/power/supply/surface_battery.c
+++ b/drivers/power/supply/surface_battery.c
@@ -722,7 +722,7 @@ static void spwr_battery_init(struct spwr_battery_device *bat, struct ssam_devic
 			      struct ssam_event_registry registry, const char *name)
 {
 	mutex_init(&bat->lock);
-	strncpy(bat->name, name, ARRAY_SIZE(bat->name) - 1);
+	strscpy(bat->name, name, sizeof(bat->name));
 
 	bat->sdev = sdev;