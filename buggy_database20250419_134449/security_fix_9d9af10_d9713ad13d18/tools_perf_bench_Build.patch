commit 9d9af1007bc08971953ae915d88dc9bb21344b53
Merge: a1e16bc7d5f7 744aec4df2c5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 17 11:47:46 2020 -0700

    Merge tag 'perf-tools-for-v5.10-2020-10-15' of git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux
    
    Pull perf tools updates from Arnaldo Carvalho de Melo:
    
     - cgroup improvements for 'perf stat', allowing for compact
       specification of events and cgroups in the command line.
    
     - Support per thread topdown metrics in 'perf stat'.
    
     - Support sample-read topdown metric group in 'perf record'
    
     - Show start of latency in addition to its start in 'perf sched
       latency'.
    
     - Add min, max to 'perf script' futex-contention output, in addition to
       avg.
    
     - Allow usage of 'perf_event_attr->exclusive' attribute via the new
       ':e' event modifier.
    
     - Add 'snapshot' command to 'perf record --control', using it with
       Intel PT.
    
     - Support FIFO file names as alternative options to 'perf record
       --control'.
    
     - Introduce branch history "streams", to compare 'perf record' runs
       with 'perf diff' based on branch records and report hot streams.
    
     - Support PE executable symbol tables using libbfd, to profile, for
       instance, wine binaries.
    
     - Add filter support for option 'perf ftrace -F/--funcs'.
    
     - Allow configuring the 'disassembler_style' 'perf annotate' knob via
       'perf config'
    
     - Update CascadelakeX and SkylakeX JSON vendor events files.
    
     - Add support for parsing perchip/percore JSON vendor events.
    
     - Add power9 hv_24x7 core level metric events.
    
     - Add L2 prefetch, ITLB instruction fetch hits JSON events for AMD
       zen1.
    
     - Enable Family 19h users by matching Zen2 AMD vendor events.
    
     - Use debuginfod in 'perf probe' when required debug files not found
       locally.
    
     - Display negative tid in non-sample events in 'perf script'.
    
     - Make GTK2 support opt-in
    
     - Add build test with GTK+
    
     - Add missing -lzstd to the fast path feature detection
    
     - Add scripts to auto generate 'mmap', 'mremap' string<->id tables for
       use in 'perf trace'.
    
     - Show python test script in verbose mode.
    
     - Fix uncore metric expressions
    
     - Msan uninitialized use fixes.
    
     - Use condition variables in 'perf bench numa'
    
     - Autodetect python3 binary in systems without python2.
    
     - Support md5 build ids in addition to sha1.
    
     - Add build id 'perf test' regression test.
    
     - Fix printable strings in python3 scripts.
    
     - Fix off by ones in 'perf trace' in arches using libaudit.
    
     - Fix JSON event code for events referencing std arch events.
    
     - Introduce 'perf test' shell script for Arm CoreSight testing.
    
     - Add rdtsc() for Arm64 for used in the PERF_RECORD_TIME_CONV metadata
       event and in 'perf test tsc'.
    
     - 'perf c2c' improvements: Add "RMT Load Hit" metric, "Total Stores",
       fixes and documentation update.
    
     - Fix usage of reloc_sym in 'perf probe' when using both kallsyms and
       debuginfo files.
    
     - Do not print 'Metric Groups:' unnecessarily in 'perf list'
    
     - Refcounting fixes in the event parsing code.
    
     - Add expand cgroup event 'perf test' entry.
    
     - Fix out of bounds CPU map access when handling armv8_pmu events in
       'perf stat'.
    
     - Add build-id injection 'perf bench' benchmark.
    
     - Enter namespace when reading build-id in 'perf inject'.
    
     - Do not load map/dso when injecting build-id speeding up the 'perf
       inject' process.
    
     - Add --buildid-all option to avoid processing all samples, just the
       mmap metadata events.
    
     - Add feature test to check if libbfd has buildid support
    
     - Add 'perf test' entry for PE binary format support.
    
     - Fix typos in power8 PMU vendor events JSON files.
    
     - Hide libtraceevent non API functions.
    
    * tag 'perf-tools-for-v5.10-2020-10-15' of git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux: (113 commits)
      perf c2c: Update documentation for metrics reorganization
      perf c2c: Add metrics "RMT Load Hit"
      perf c2c: Correct LLC load hit metrics
      perf c2c: Change header for LLC local hit
      perf c2c: Use more explicit headers for HITM
      perf c2c: Change header from "LLC Load Hitm" to "Load Hitm"
      perf c2c: Organize metrics based on memory hierarchy
      perf c2c: Display "Total Stores" as a standalone metrics
      perf c2c: Display the total numbers continuously
      perf bench: Use condition variables in numa.
      perf jevents: Fix event code for events referencing std arch events
      perf diff: Support hot streams comparison
      perf streams: Report hot streams
      perf streams: Calculate the sum of total streams hits
      perf streams: Link stream pair
      perf streams: Compare two streams
      perf streams: Get the evsel_streams by evsel_idx
      perf streams: Introduce branch history "streams"
      perf intel-pt: Improve PT documentation slightly
      perf tools: Add support for exclusive groups/events
      ...

diff --cc tools/perf/bench/Build
index 878db6a59a41,8b52591338d6..e43f46931b41
--- a/tools/perf/bench/Build
+++ b/tools/perf/bench/Build
@@@ -12,7 -12,9 +12,8 @@@ perf-y += epoll-ctl.
  perf-y += synthesize.o
  perf-y += kallsyms-parse.o
  perf-y += find-bit-bench.o
+ perf-y += inject-buildid.o
  
 -perf-$(CONFIG_X86_64) += mem-memcpy-x86-64-lib.o
  perf-$(CONFIG_X86_64) += mem-memcpy-x86-64-asm.o
  perf-$(CONFIG_X86_64) += mem-memset-x86-64-asm.o