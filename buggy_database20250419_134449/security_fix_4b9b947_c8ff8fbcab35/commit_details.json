{
  "hash": "4b9b94766534ea23bffc8606b73fb18501b49a67",
  "hash_short": "4b9b9476",
  "subject": "mmc: vub300: replace deprecated strncpy with strscpy",
  "body": "`strncpy` is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect `vub300->vub_name` to be NUL-terminated based on its uses with\nformat strings:\n| \tdev_info(&vub300->udev->dev, \"using %s for SDIO offload processing\\n\",\n| \t\t vub300->vub_name);\n\nNUL-padding is not needed. We can see cleaning out vub_name simply\nconsists of:\n|       vub300->vub_name[0] = 0;\n\nConsidering the above, for all 11 cases a suitable replacement is\n`strscpy` [2] due to the fact that it guarantees NUL-termination on the\ndestination buffer without unnecessarily NUL-padding.\n\nTo be clear, there is no existing bug in the current implementation as\nthe string literals are all small enough as to not cause a buffer\noverread. Nonetheless, this gets us 11 steps closer to removing strncpy\nuses.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20230927-strncpy-drivers-mmc-host-vub300-c-v1-1-77426f62eef4@google.com\nSigned-off-by: Ulf Hansson <ulf.hansson@linaro.org>",
  "full_message": "mmc: vub300: replace deprecated strncpy with strscpy\n\n`strncpy` is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect `vub300->vub_name` to be NUL-terminated based on its uses with\nformat strings:\n| \tdev_info(&vub300->udev->dev, \"using %s for SDIO offload processing\\n\",\n| \t\t vub300->vub_name);\n\nNUL-padding is not needed. We can see cleaning out vub_name simply\nconsists of:\n|       vub300->vub_name[0] = 0;\n\nConsidering the above, for all 11 cases a suitable replacement is\n`strscpy` [2] due to the fact that it guarantees NUL-termination on the\ndestination buffer without unnecessarily NUL-padding.\n\nTo be clear, there is no existing bug in the current implementation as\nthe string literals are all small enough as to not cause a buffer\noverread. Nonetheless, this gets us 11 steps closer to removing strncpy\nuses.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20230927-strncpy-drivers-mmc-host-vub300-c-v1-1-77426f62eef4@google.com\nSigned-off-by: Ulf Hansson <ulf.hansson@linaro.org>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Wed Sep 27 06:41:37 2023 +0000",
  "author_date_iso": "2023-09-27T06:41:37+00:00",
  "committer_name": "Ulf Hansson",
  "committer_email": "ulf.hansson@linaro.org",
  "committer_date": "Wed Sep 27 12:15:17 2023 +0200",
  "committer_date_iso": "2023-09-27T12:15:17+02:00",
  "files_changed": [
    "drivers/mmc/host/vub300.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/mmc/host/vub300.c",
      "insertions": 11,
      "deletions": 11
    }
  ],
  "total_insertions": 11,
  "total_deletions": 11,
  "total_changes": 22,
  "parents": [
    "3e65dba664d88ed7075ff9dc2090767fa4b3bec8"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/mmc/host/vub300.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}