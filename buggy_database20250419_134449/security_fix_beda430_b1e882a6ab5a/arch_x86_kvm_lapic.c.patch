commit beda430177f56656e7980dcce93456ffaa35676b
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Mar 4 18:18:08 2021 -0800

    KVM: x86: Ensure deadline timer has truly expired before posting its IRQ
    
    When posting a deadline timer interrupt, open code the checks guarding
    __kvm_wait_lapic_expire() in order to skip the lapic_timer_int_injected()
    check in kvm_wait_lapic_expire().  The injection check will always fail
    since the interrupt has not yet be injected.  Moving the call after
    injection would also be wrong as that wouldn't actually delay delivery
    of the IRQ if it is indeed sent via posted interrupt.
    
    Fixes: 010fd37fddf6 ("KVM: LAPIC: Reduce world switch latency caused by timer_advance_ns")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210305021808.3769732-1-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index 45d40bfacb7c..cb8ebfaccfb6 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1642,7 +1642,16 @@ static void apic_timer_expired(struct kvm_lapic *apic, bool from_timer_fn)
 	}
 
 	if (kvm_use_posted_timer_interrupt(apic->vcpu)) {
-		kvm_wait_lapic_expire(vcpu);
+		/*
+		 * Ensure the guest's timer has truly expired before posting an
+		 * interrupt.  Open code the relevant checks to avoid querying
+		 * lapic_timer_int_injected(), which will be false since the
+		 * interrupt isn't yet injected.  Waiting until after injecting
+		 * is not an option since that won't help a posted interrupt.
+		 */
+		if (vcpu->arch.apic->lapic_timer.expired_tscdeadline &&
+		    vcpu->arch.apic->lapic_timer.timer_advance_ns)
+			__kvm_wait_lapic_expire(vcpu);
 		kvm_apic_inject_pending_timer_irqs(apic);
 		return;
 	}