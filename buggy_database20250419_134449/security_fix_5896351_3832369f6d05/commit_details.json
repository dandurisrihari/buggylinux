{
  "hash": "5896351ea9360072f8bdd9eee186861a9d13db6d",
  "hash_short": "5896351e",
  "subject": "bpf: fix verifier GPF in kmalloc failure path",
  "body": "syzbot reported the following panic in the verifier triggered\nby kmalloc error injection:\n\nkasan: GPF could be caused by NULL-ptr deref or user memory access\nRIP: 0010:copy_func_state kernel/bpf/verifier.c:403 [inline]\nRIP: 0010:copy_verifier_state+0x364/0x590 kernel/bpf/verifier.c:431\nCall Trace:\n pop_stack+0x8c/0x270 kernel/bpf/verifier.c:449\n push_stack kernel/bpf/verifier.c:491 [inline]\n check_cond_jmp_op kernel/bpf/verifier.c:3598 [inline]\n do_check+0x4b60/0xa050 kernel/bpf/verifier.c:4731\n bpf_check+0x3296/0x58c0 kernel/bpf/verifier.c:5489\n bpf_prog_load+0xa2a/0x1b00 kernel/bpf/syscall.c:1198\n SYSC_bpf kernel/bpf/syscall.c:1807 [inline]\n SyS_bpf+0x1044/0x4420 kernel/bpf/syscall.c:1769\n\nwhen copy_verifier_state() aborts in the middle due to kmalloc failure\nsome of the frames could have been partially copied while\ncurrent free_verifier_state() loop\nfor (i = 0; i <= state->curframe; i++)\nassumed that all frames are non-null.\nSimply fix it by adding 'if (!state)' to free_func_state().\nAlso avoid stressing copy frame logic more if kzalloc fails\nin push_stack() free env->cur_state right away.\n\nFixes: f4d7e40a5b71 (\"bpf: introduce function calls (verification)\")\nReported-by: syzbot+32ac5a3e473f2e01cfc7@syzkaller.appspotmail.com\nReported-by: syzbot+fa99e24f3c29d269a7d5@syzkaller.appspotmail.com\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>",
  "full_message": "bpf: fix verifier GPF in kmalloc failure path\n\nsyzbot reported the following panic in the verifier triggered\nby kmalloc error injection:\n\nkasan: GPF could be caused by NULL-ptr deref or user memory access\nRIP: 0010:copy_func_state kernel/bpf/verifier.c:403 [inline]\nRIP: 0010:copy_verifier_state+0x364/0x590 kernel/bpf/verifier.c:431\nCall Trace:\n pop_stack+0x8c/0x270 kernel/bpf/verifier.c:449\n push_stack kernel/bpf/verifier.c:491 [inline]\n check_cond_jmp_op kernel/bpf/verifier.c:3598 [inline]\n do_check+0x4b60/0xa050 kernel/bpf/verifier.c:4731\n bpf_check+0x3296/0x58c0 kernel/bpf/verifier.c:5489\n bpf_prog_load+0xa2a/0x1b00 kernel/bpf/syscall.c:1198\n SYSC_bpf kernel/bpf/syscall.c:1807 [inline]\n SyS_bpf+0x1044/0x4420 kernel/bpf/syscall.c:1769\n\nwhen copy_verifier_state() aborts in the middle due to kmalloc failure\nsome of the frames could have been partially copied while\ncurrent free_verifier_state() loop\nfor (i = 0; i <= state->curframe; i++)\nassumed that all frames are non-null.\nSimply fix it by adding 'if (!state)' to free_func_state().\nAlso avoid stressing copy frame logic more if kzalloc fails\nin push_stack() free env->cur_state right away.\n\nFixes: f4d7e40a5b71 (\"bpf: introduce function calls (verification)\")\nReported-by: syzbot+32ac5a3e473f2e01cfc7@syzkaller.appspotmail.com\nReported-by: syzbot+fa99e24f3c29d269a7d5@syzkaller.appspotmail.com\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>",
  "author_name": "Alexei Starovoitov",
  "author_email": "ast@fb.com",
  "author_date": "Mon Jan 8 07:51:17 2018 -0800",
  "author_date_iso": "2018-01-08T07:51:17-08:00",
  "committer_name": "Daniel Borkmann",
  "committer_email": "daniel@iogearbox.net",
  "committer_date": "Mon Jan 8 18:19:03 2018 +0100",
  "committer_date_iso": "2018-01-08T18:19:03+01:00",
  "files_changed": [
    "kernel/bpf/verifier.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/bpf/verifier.c",
      "insertions": 4,
      "deletions": 0
    }
  ],
  "total_insertions": 4,
  "total_deletions": 0,
  "total_changes": 4,
  "parents": [
    "f66faae2f80a45feafc04ce63ef744ac4b6e8c05"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc1",
    "v4.16-rc2",
    "v4.16-rc3",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/bpf/verifier.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}