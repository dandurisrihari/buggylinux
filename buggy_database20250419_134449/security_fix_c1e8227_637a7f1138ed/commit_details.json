{
  "hash": "c1e822754cc7f28b98c6897d62e8b47b4001e422",
  "hash_short": "c1e82275",
  "subject": "Merge tag 'bcachefs-2024-10-22' of https://github.com/koverstreet/bcachefs",
  "body": "Pull bcachefs fixes from Kent Overstreet:\n \"Lots of hotfixes:\n\n   - transaction restart injection has been shaking out a few things\n\n   - fix a data corruption in the buffered write path on -ENOSPC, found\n     by xfstests generic/299\n\n   - Some small show_options fixes\n\n   - Repair mismatches in inode hash type, seed: different snapshot\n     versions of an inode must have the same hash/type seed, used for\n     directory entries and xattrs. We were checking the hash seed, but\n     not the type, and a user contributed a filesystem where the hash\n     type on one inode had somehow been flipped; these fixes allow his\n     filesystem to repair.\n\n     Additionally, the hash type flip made some directory entries\n     invisible, which were then recreated by userspace; so the hash\n     check code now checks for duplicate non dangling dirents, and\n     renames one of them if necessary.\n\n   - Don't use wait_event_interruptible() in recovery: this fixes some\n     filesystems failing to mount with -ERESTARTSYS\n\n   - Workaround for kvmalloc not supporting > INT_MAX allocations,\n     causing an -ENOMEM when allocating the sorted array of journal\n     keys: this allows a 75 TB filesystem to mount\n\n   - Make sure bch_inode_unpacked.bi_snapshot is set in the old inode\n     compat path: this alllows Marcin's filesystem (in use since before\n     6.7) to repair and mount\"\n\n* tag 'bcachefs-2024-10-22' of https://github.com/koverstreet/bcachefs: (26 commits)\n  bcachefs: Set bch_inode_unpacked.bi_snapshot in old inode path\n  bcachefs: Mark more errors as AUTOFIX\n  bcachefs: Workaround for kvmalloc() not supporting > INT_MAX allocations\n  bcachefs: Don't use wait_event_interruptible() in recovery\n  bcachefs: Fix __bch2_fsck_err() warning\n  bcachefs: fsck: Improve hash_check_key()\n  bcachefs: bch2_hash_set_or_get_in_snapshot()\n  bcachefs: Repair mismatches in inode hash seed, type\n  bcachefs: Add hash seed, type to inode_to_text()\n  bcachefs: INODE_STR_HASH() for bch_inode_unpacked\n  bcachefs: Run in-kernel offline fsck without ratelimit errors\n  bcachefs: skip mount option handle for empty string.\n  bcachefs: fix incorrect show_options results\n  bcachefs: Fix data corruption on -ENOSPC in buffered write path\n  bcachefs: bch2_folio_reservation_get_partial() is now better behaved\n  bcachefs: fix disk reservation accounting in bch2_folio_reservation_get()\n  bcachefS: ec: fix data type on stripe deletion\n  bcachefs: Don't use commit_do() unnecessarily\n  bcachefs: handle restarts in bch2_bucket_io_time_reset()\n  bcachefs: fix restart handling in __bch2_resume_logged_op_finsert()\n  ...",
  "full_message": "Merge tag 'bcachefs-2024-10-22' of https://github.com/koverstreet/bcachefs\n\nPull bcachefs fixes from Kent Overstreet:\n \"Lots of hotfixes:\n\n   - transaction restart injection has been shaking out a few things\n\n   - fix a data corruption in the buffered write path on -ENOSPC, found\n     by xfstests generic/299\n\n   - Some small show_options fixes\n\n   - Repair mismatches in inode hash type, seed: different snapshot\n     versions of an inode must have the same hash/type seed, used for\n     directory entries and xattrs. We were checking the hash seed, but\n     not the type, and a user contributed a filesystem where the hash\n     type on one inode had somehow been flipped; these fixes allow his\n     filesystem to repair.\n\n     Additionally, the hash type flip made some directory entries\n     invisible, which were then recreated by userspace; so the hash\n     check code now checks for duplicate non dangling dirents, and\n     renames one of them if necessary.\n\n   - Don't use wait_event_interruptible() in recovery: this fixes some\n     filesystems failing to mount with -ERESTARTSYS\n\n   - Workaround for kvmalloc not supporting > INT_MAX allocations,\n     causing an -ENOMEM when allocating the sorted array of journal\n     keys: this allows a 75 TB filesystem to mount\n\n   - Make sure bch_inode_unpacked.bi_snapshot is set in the old inode\n     compat path: this alllows Marcin's filesystem (in use since before\n     6.7) to repair and mount\"\n\n* tag 'bcachefs-2024-10-22' of https://github.com/koverstreet/bcachefs: (26 commits)\n  bcachefs: Set bch_inode_unpacked.bi_snapshot in old inode path\n  bcachefs: Mark more errors as AUTOFIX\n  bcachefs: Workaround for kvmalloc() not supporting > INT_MAX allocations\n  bcachefs: Don't use wait_event_interruptible() in recovery\n  bcachefs: Fix __bch2_fsck_err() warning\n  bcachefs: fsck: Improve hash_check_key()\n  bcachefs: bch2_hash_set_or_get_in_snapshot()\n  bcachefs: Repair mismatches in inode hash seed, type\n  bcachefs: Add hash seed, type to inode_to_text()\n  bcachefs: INODE_STR_HASH() for bch_inode_unpacked\n  bcachefs: Run in-kernel offline fsck without ratelimit errors\n  bcachefs: skip mount option handle for empty string.\n  bcachefs: fix incorrect show_options results\n  bcachefs: Fix data corruption on -ENOSPC in buffered write path\n  bcachefs: bch2_folio_reservation_get_partial() is now better behaved\n  bcachefs: fix disk reservation accounting in bch2_folio_reservation_get()\n  bcachefS: ec: fix data type on stripe deletion\n  bcachefs: Don't use commit_do() unnecessarily\n  bcachefs: handle restarts in bch2_bucket_io_time_reset()\n  bcachefs: fix restart handling in __bch2_resume_logged_op_finsert()\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Thu Oct 24 12:38:59 2024 -0700",
  "author_date_iso": "2024-10-24T12:38:59-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Oct 24 12:38:59 2024 -0700",
  "committer_date_iso": "2024-10-24T12:38:59-07:00",
  "files_changed": [
    "fs/bcachefs/fs.c",
    "fs/bcachefs/inode.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "fs/bcachefs/alloc_background.c",
      "insertions": 21,
      "deletions": 16
    },
    {
      "file": "fs/bcachefs/alloc_foreground.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/btree_gc.c",
      "insertions": 11,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/btree_io.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/btree_iter.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/bcachefs/btree_update.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/bcachefs/btree_update.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/btree_update_interior.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "fs/bcachefs/buckets.c",
      "insertions": 5,
      "deletions": 2
    },
    {
      "file": "fs/bcachefs/buckets.h",
      "insertions": 7,
      "deletions": 5
    },
    {
      "file": "fs/bcachefs/chardev.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/bcachefs/darray.c",
      "insertions": 14,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/dirent.c",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "fs/bcachefs/dirent.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "fs/bcachefs/disk_accounting.c",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "fs/bcachefs/ec.c",
      "insertions": 11,
      "deletions": 11
    },
    {
      "file": "fs/bcachefs/error.c",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/fs-io-buffered.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "fs/bcachefs/fs-io-pagecache.c",
      "insertions": 45,
      "deletions": 25
    },
    {
      "file": "fs/bcachefs/fs-io.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/fs.c",
      "insertions": 7,
      "deletions": 11
    },
    {
      "file": "fs/bcachefs/fsck.c",
      "insertions": 227,
      "deletions": 54
    },
    {
      "file": "fs/bcachefs/inode.c",
      "insertions": 15,
      "deletions": 12
    },
    {
      "file": "fs/bcachefs/inode.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/bcachefs/inode_format.h",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "fs/bcachefs/io_misc.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/io_read.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "fs/bcachefs/io_write.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/bcachefs/journal.c",
      "insertions": 6,
      "deletions": 4
    },
    {
      "file": "fs/bcachefs/journal.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/opts.c",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/opts.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/quota.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/rebalance.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/recovery.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/sb-errors_format.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/bcachefs/str_hash.h",
      "insertions": 42,
      "deletions": 18
    },
    {
      "file": "fs/bcachefs/subvolume.c",
      "insertions": 3,
      "deletions": 4
    },
    {
      "file": "fs/bcachefs/super.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/tests.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/bcachefs/xattr.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 475,
  "total_deletions": 205,
  "total_changes": 680,
  "parents": [
    "f009e946c15540cdff2974771fb979f40b794153",
    "a069f014797fdef8757f3adebc1c16416271a599"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/bcachefs/fs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/bcachefs/inode.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}