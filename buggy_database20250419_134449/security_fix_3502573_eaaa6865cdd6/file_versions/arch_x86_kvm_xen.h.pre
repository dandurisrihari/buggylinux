commit 8733068b9bdbc7a54f02dcc59eb0e4789cd60942
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Mar 3 15:41:17 2022 +0000

    KVM: x86/xen: Make kvm_xen_set_evtchn() reusable from other places
    
    Clean it up to return -errno on error consistently, while still being
    compatible with the return conventions for kvm_arch_set_irq_inatomic()
    and the kvm_set_irq() callback.
    
    We use -ENOTCONN to indicate when the port is masked. No existing users
    care, except that it's negative.
    
    Also allow it to optimise the vCPU lookup. Unless we abuse the lapic
    map, there is no quick lookup from APIC ID to a vCPU; the logic in
    kvm_get_vcpu_by_id() will just iterate over all vCPUs till it finds
    the one it wants. So do that just once and stash the result in the
    struct kvm_xen_evtchn for next time.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <20220303154127.202856-8-dwmw2@infradead.org>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/xen.h b/arch/x86/kvm/xen.h
index 7dd0590f93e1..e28feb32add6 100644
--- a/arch/x86/kvm/xen.h
+++ b/arch/x86/kvm/xen.h
@@ -25,7 +25,7 @@ int kvm_xen_hvm_config(struct kvm *kvm, struct kvm_xen_hvm_config *xhc);
 void kvm_xen_init_vm(struct kvm *kvm);
 void kvm_xen_destroy_vm(struct kvm *kvm);
 void kvm_xen_destroy_vcpu(struct kvm_vcpu *vcpu);
-int kvm_xen_set_evtchn_fast(struct kvm_kernel_irq_routing_entry *e,
+int kvm_xen_set_evtchn_fast(struct kvm_xen_evtchn *xe,
 			    struct kvm *kvm);
 int kvm_xen_setup_evtchn(struct kvm *kvm,
 			 struct kvm_kernel_irq_routing_entry *e,