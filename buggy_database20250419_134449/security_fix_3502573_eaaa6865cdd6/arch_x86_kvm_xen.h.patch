commit 35025735a79eaa894c43837b94fd33c9d6b122df
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Mar 3 15:41:18 2022 +0000

    KVM: x86/xen: Support direct injection of event channel events
    
    This adds a KVM_XEN_HVM_EVTCHN_SEND ioctl which allows direct injection
    of events given an explicit { vcpu, port, priority } in precisely the
    same form that those fields are given in the IRQ routing table.
    
    Userspace is currently able to inject 2-level events purely by setting
    the bits in the shared_info and vcpu_info, but FIFO event channels are
    harder to deal with; we will need the kernel to take sole ownership of
    delivery when we support those.
    
    A patch advertising this feature with a new bit in the KVM_CAP_XEN_HVM
    ioctl will be added in a subsequent patch.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <20220303154127.202856-9-dwmw2@infradead.org>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/xen.h b/arch/x86/kvm/xen.h
index e28feb32add6..852286de574e 100644
--- a/arch/x86/kvm/xen.h
+++ b/arch/x86/kvm/xen.h
@@ -20,6 +20,7 @@ int kvm_xen_vcpu_set_attr(struct kvm_vcpu *vcpu, struct kvm_xen_vcpu_attr *data)
 int kvm_xen_vcpu_get_attr(struct kvm_vcpu *vcpu, struct kvm_xen_vcpu_attr *data);
 int kvm_xen_hvm_set_attr(struct kvm *kvm, struct kvm_xen_hvm_attr *data);
 int kvm_xen_hvm_get_attr(struct kvm *kvm, struct kvm_xen_hvm_attr *data);
+int kvm_xen_hvm_evtchn_send(struct kvm *kvm, struct kvm_irq_routing_xen_evtchn *evt);
 int kvm_xen_write_hypercall_page(struct kvm_vcpu *vcpu, u64 data);
 int kvm_xen_hvm_config(struct kvm *kvm, struct kvm_xen_hvm_config *xhc);
 void kvm_xen_init_vm(struct kvm *kvm);