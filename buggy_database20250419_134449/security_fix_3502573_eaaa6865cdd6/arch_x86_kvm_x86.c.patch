commit 35025735a79eaa894c43837b94fd33c9d6b122df
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Mar 3 15:41:18 2022 +0000

    KVM: x86/xen: Support direct injection of event channel events
    
    This adds a KVM_XEN_HVM_EVTCHN_SEND ioctl which allows direct injection
    of events given an explicit { vcpu, port, priority } in precisely the
    same form that those fields are given in the IRQ routing table.
    
    Userspace is currently able to inject 2-level events purely by setting
    the bits in the shared_info and vcpu_info, but FIFO event channels are
    harder to deal with; we will need the kernel to take sole ownership of
    delivery when we support those.
    
    A patch advertising this feature with a new bit in the KVM_CAP_XEN_HVM
    ioctl will be added in a subsequent patch.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <20220303154127.202856-9-dwmw2@infradead.org>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index feefa1fb32eb..e6bc0b654bbb 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -6505,6 +6505,15 @@ long kvm_arch_vm_ioctl(struct file *filp,
 		r = kvm_xen_hvm_set_attr(kvm, &xha);
 		break;
 	}
+	case KVM_XEN_HVM_EVTCHN_SEND: {
+		struct kvm_irq_routing_xen_evtchn uxe;
+
+		r = -EFAULT;
+		if (copy_from_user(&uxe, argp, sizeof(uxe)))
+			goto out;
+		r = kvm_xen_hvm_evtchn_send(kvm, &uxe);
+		break;
+	}
 #endif
 	case KVM_SET_CLOCK:
 		r = kvm_vm_ioctl_set_clock(kvm, argp);