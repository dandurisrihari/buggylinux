{
  "hash": "cfb634fe3052aefc4e1360fa322018c9a0b49755",
  "hash_short": "cfb634fe",
  "subject": "KVM: nVMX: Clear reserved bits of #DB exit qualification",
  "body": "According to volume 3 of the SDM, bits 63:15 and 12:4 of the exit\nqualification field for debug exceptions are reserved (cleared to\n0). However, the SDM is incorrect about bit 16 (corresponding to\nDR6.RTM). This bit should be set if a debug exception (#DB) or a\nbreakpoint exception (#BP) occurred inside an RTM region while\nadvanced debugging of RTM transactional regions was enabled. Note that\nthis is the opposite of DR6.RTM, which \"indicates (when clear) that a\ndebug exception (#DB) or breakpoint exception (#BP) occurred inside an\nRTM region while advanced debugging of RTM transactional regions was\nenabled.\"\n\nThere is still an issue with stale DR6 bits potentially being\nmisreported for the current debug exception.  DR6 should not have been\nmodified before vectoring the #DB exception, and the \"new DR6 bits\"\nshould be available somewhere, but it was and they aren't.\n\nFixes: b96fb439774e1 (\"KVM: nVMX: fixes to nested virt interrupt injection\")\nSigned-off-by: Jim Mattson <jmattson@google.com>\nReviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: nVMX: Clear reserved bits of #DB exit qualification\n\nAccording to volume 3 of the SDM, bits 63:15 and 12:4 of the exit\nqualification field for debug exceptions are reserved (cleared to\n0). However, the SDM is incorrect about bit 16 (corresponding to\nDR6.RTM). This bit should be set if a debug exception (#DB) or a\nbreakpoint exception (#BP) occurred inside an RTM region while\nadvanced debugging of RTM transactional regions was enabled. Note that\nthis is the opposite of DR6.RTM, which \"indicates (when clear) that a\ndebug exception (#DB) or breakpoint exception (#BP) occurred inside an\nRTM region while advanced debugging of RTM transactional regions was\nenabled.\"\n\nThere is still an issue with stale DR6 bits potentially being\nmisreported for the current debug exception.  DR6 should not have been\nmodified before vectoring the #DB exception, and the \"new DR6 bits\"\nshould be available somewhere, but it was and they aren't.\n\nFixes: b96fb439774e1 (\"KVM: nVMX: fixes to nested virt interrupt injection\")\nSigned-off-by: Jim Mattson <jmattson@google.com>\nReviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Jim Mattson",
  "author_email": "jmattson@google.com",
  "author_date": "Fri Sep 21 10:36:17 2018 -0700",
  "author_date_iso": "2018-09-21T10:36:17-07:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Wed Oct 17 00:29:39 2018 +0200",
  "committer_date_iso": "2018-10-17T00:29:39+02:00",
  "files_changed": [
    "arch/x86/include/asm/kvm_host.h",
    "arch/x86/kvm/vmx.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/vmx.c",
      "insertions": 5,
      "deletions": 2
    }
  ],
  "total_insertions": 6,
  "total_deletions": 2,
  "total_changes": 8,
  "parents": [
    "5b8ee8792f6bda46978e6e86fda4650bcbae07ab"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.20",
    "v4.20-rc1",
    "v4.20-rc2",
    "v4.20-rc3",
    "v4.20-rc4",
    "v4.20-rc5",
    "v4.20-rc6",
    "v4.20-rc7",
    "v5.0",
    "v5.0-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}