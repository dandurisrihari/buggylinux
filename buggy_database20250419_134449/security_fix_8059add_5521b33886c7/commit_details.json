{
  "hash": "8059add0478e29cb641936011a8fcc9ce9fd80be",
  "hash_short": "8059add0",
  "subject": "drm: allow render capable master with DRM_AUTH ioctls",
  "body": "There are cases (in mesa and applications) where one would open the\nprimary node without properly authenticating the client.\n\nSometimes we don't check if the authentication succeeds, but there's\nalso cases we simply forget to do it.\n\nThe former was a case for Mesa where it did not not check the return\nvalue of drmGetMagic() [1]. That was fixed recently although, there's\nthe question of older drivers or other apps that exbibit this behaviour.\n\nWhile omitting the call results in issues as seen in [2] and [3].\n\nIn the libva case, libva itself doesn't authenticate the DRM client and\nthe vaGetDisplayDRM documentation doesn't mention if the app should\neither.\n\nAs of today, the official vainfo utility doesn't authenticate.\n\nTo workaround issues like these, some users resort to running their apps\nunder sudo. Which admittedly isn't always a good idea.\n\nSince any DRIVER_RENDER driver has sufficient isolation between clients,\nwe can use that, for unauthenticated [primary node] ioctls that require\nDRM_AUTH. But only if the respective ioctl is tagged as DRM_RENDER_ALLOW.\n\nv2:\n- Rework/simplify if check (Daniel V)\n- Add examples to commit messages, elaborate. (Daniel V)\n\nv3:\n- Use single unlikely (Daniel V)\n\n[1] https://gitlab.freedesktop.org/mesa/mesa/blob/2bc1f5c2e70fe3b4d41f060af9859bc2a94c5b62/src/egl/drivers/dri2/platform_wayland.c#L1136\n[2] https://lists.freedesktop.org/archives/libva/2016-July/004185.html\n[3] https://gitlab.freedesktop.org/mesa/kmscube/issues/1\nTestcase: igt/core_unauth_vs_render\nCc: intel-gfx@lists.freedesktop.org\nSigned-off-by: Emil Velikov <emil.velikov@collabora.com>\nReviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190114085408.15933-2-emil.l.velikov@gmail.com",
  "full_message": "drm: allow render capable master with DRM_AUTH ioctls\n\nThere are cases (in mesa and applications) where one would open the\nprimary node without properly authenticating the client.\n\nSometimes we don't check if the authentication succeeds, but there's\nalso cases we simply forget to do it.\n\nThe former was a case for Mesa where it did not not check the return\nvalue of drmGetMagic() [1]. That was fixed recently although, there's\nthe question of older drivers or other apps that exbibit this behaviour.\n\nWhile omitting the call results in issues as seen in [2] and [3].\n\nIn the libva case, libva itself doesn't authenticate the DRM client and\nthe vaGetDisplayDRM documentation doesn't mention if the app should\neither.\n\nAs of today, the official vainfo utility doesn't authenticate.\n\nTo workaround issues like these, some users resort to running their apps\nunder sudo. Which admittedly isn't always a good idea.\n\nSince any DRIVER_RENDER driver has sufficient isolation between clients,\nwe can use that, for unauthenticated [primary node] ioctls that require\nDRM_AUTH. But only if the respective ioctl is tagged as DRM_RENDER_ALLOW.\n\nv2:\n- Rework/simplify if check (Daniel V)\n- Add examples to commit messages, elaborate. (Daniel V)\n\nv3:\n- Use single unlikely (Daniel V)\n\n[1] https://gitlab.freedesktop.org/mesa/mesa/blob/2bc1f5c2e70fe3b4d41f060af9859bc2a94c5b62/src/egl/drivers/dri2/platform_wayland.c#L1136\n[2] https://lists.freedesktop.org/archives/libva/2016-July/004185.html\n[3] https://gitlab.freedesktop.org/mesa/kmscube/issues/1\nTestcase: igt/core_unauth_vs_render\nCc: intel-gfx@lists.freedesktop.org\nSigned-off-by: Emil Velikov <emil.velikov@collabora.com>\nReviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190114085408.15933-2-emil.l.velikov@gmail.com",
  "author_name": "Emil Velikov",
  "author_email": "emil.velikov@collabora.com",
  "author_date": "Mon Jan 14 08:54:08 2019 +0000",
  "author_date_iso": "2019-01-14T08:54:08+00:00",
  "committer_name": "Emil Velikov",
  "committer_email": "emil.l.velikov@gmail.com",
  "committer_date": "Wed Feb 13 17:42:36 2019 +0000",
  "committer_date_iso": "2019-02-13T17:42:36+00:00",
  "files_changed": [
    "drivers/gpu/drm/drm_ioctl.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/gpu/drm/drm_ioctl.c",
      "insertions": 16,
      "deletions": 4
    }
  ],
  "total_insertions": 16,
  "total_deletions": 4,
  "total_changes": 20,
  "parents": [
    "f16bb4d280c753ab4bf76d8765a33eb61633d711"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.1",
    "v5.1-rc1",
    "v5.1-rc2",
    "v5.1-rc3",
    "v5.1-rc4",
    "v5.1-rc5",
    "v5.1-rc6",
    "v5.1-rc7",
    "v5.2",
    "v5.2-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/gpu/drm/drm_ioctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}