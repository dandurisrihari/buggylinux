commit b96fb439774e1bfb7d027ad324fa48606167cb52
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Jul 27 12:29:32 2017 +0200

    KVM: nVMX: fixes to nested virt interrupt injection
    
    There are three issues in nested_vmx_check_exception:
    
    1) it is not taking PFEC_MATCH/PFEC_MASK into account, as reported
    by Wanpeng Li;
    
    2) it should rebuild the interruption info and exit qualification fields
    from scratch, as reported by Jim Mattson, because the values from the
    L2->L0 vmexit may be invalid (e.g. if an emulated instruction causes
    a page fault, the EPT misconfig's exit qualification is incorrect).
    
    3) CR2 and DR6 should not be written for exception intercept vmexits
    (CR2 only for AMD).
    
    This patch fixes the first two and adds a comment about the last,
    outlining the fix.
    
    Cc: Jim Mattson <jmattson@google.com>
    Cc: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 4d8141e533c3..1107626938cc 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -2430,6 +2430,16 @@ static int nested_svm_check_exception(struct vcpu_svm *svm, unsigned nr,
 	svm->vmcb->control.exit_code = SVM_EXIT_EXCP_BASE + nr;
 	svm->vmcb->control.exit_code_hi = 0;
 	svm->vmcb->control.exit_info_1 = error_code;
+
+	/*
+	 * FIXME: we should not write CR2 when L1 intercepts an L2 #PF exception.
+	 * The fix is to add the ancillary datum (CR2 or DR6) to structs
+	 * kvm_queued_exception and kvm_vcpu_events, so that CR2 and DR6 can be
+	 * written only when inject_pending_event runs (DR6 would written here
+	 * too).  This should be conditional on a new capability---if the
+	 * capability is disabled, kvm_multiple_exception would write the
+	 * ancillary information to CR2 or DR6, for backwards ABI-compatibility.
+	 */
 	if (svm->vcpu.arch.exception.nested_apf)
 		svm->vmcb->control.exit_info_2 = svm->vcpu.arch.apf.nested_apf_token;
 	else