{
  "hash": "3a7c8fafd1b42adea229fd204132f6a2fb3cd2d9",
  "hash_short": "3a7c8faf",
  "subject": "x86/kvm: Restrict ASYNC_PF to user space",
  "body": "The async page fault injection into kernel space creates more problems than\nit solves. The host has absolutely no knowledge about the state of the\nguest if the fault happens in CPL0. The only restriction for the host is\ninterrupt disabled state. If interrupts are enabled in the guest then the\nexception can hit arbitrary code. The HALT based wait in non-preemotible\ncode is a hacky replacement for a proper hypercall.\n\nFor the ongoing work to restrict instrumentation and make the RCU idle\ninteraction well defined the required extra work for supporting async\npagefault in CPL0 is just not justified and creates complexity for a\ndubious benefit.\n\nThe CPL3 injection is well defined and does not cause any issues as it is\nmore or less the same as a regular page fault from CPL3.\n\nSuggested-by: Andy Lutomirski <luto@kernel.org>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Alexandre Chartre <alexandre.chartre@oracle.com>\nAcked-by: Paolo Bonzini <pbonzini@redhat.com>\nAcked-by: Peter Zijlstra <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20200505134059.369802541@linutronix.de",
  "full_message": "x86/kvm: Restrict ASYNC_PF to user space\n\nThe async page fault injection into kernel space creates more problems than\nit solves. The host has absolutely no knowledge about the state of the\nguest if the fault happens in CPL0. The only restriction for the host is\ninterrupt disabled state. If interrupts are enabled in the guest then the\nexception can hit arbitrary code. The HALT based wait in non-preemotible\ncode is a hacky replacement for a proper hypercall.\n\nFor the ongoing work to restrict instrumentation and make the RCU idle\ninteraction well defined the required extra work for supporting async\npagefault in CPL0 is just not justified and creates complexity for a\ndubious benefit.\n\nThe CPL3 injection is well defined and does not cause any issues as it is\nmore or less the same as a regular page fault from CPL3.\n\nSuggested-by: Andy Lutomirski <luto@kernel.org>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Alexandre Chartre <alexandre.chartre@oracle.com>\nAcked-by: Paolo Bonzini <pbonzini@redhat.com>\nAcked-by: Peter Zijlstra <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20200505134059.369802541@linutronix.de",
  "author_name": "Thomas Gleixner",
  "author_email": "tglx@linutronix.de",
  "author_date": "Fri Apr 24 09:57:56 2020 +0200",
  "author_date_iso": "2020-04-24T09:57:56+02:00",
  "committer_name": "Thomas Gleixner",
  "committer_email": "tglx@linutronix.de",
  "committer_date": "Tue May 19 15:53:58 2020 +0200",
  "committer_date_iso": "2020-05-19T15:53:58+02:00",
  "files_changed": [
    "arch/x86/kernel/kvm.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kernel/kvm.c",
      "insertions": 7,
      "deletions": 93
    }
  ],
  "total_insertions": 7,
  "total_deletions": 93,
  "total_changes": 100,
  "parents": [
    "6bca69ada4bc20fa27eb44a5e09da3363d1752af"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kernel/kvm.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}