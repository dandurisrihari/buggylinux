commit cae03e5bdd9e0c8570506c50f1f234da40201732
Author: Stanislav Fomichev <sdf@fomichev.me>
Date:   Wed Mar 5 08:37:23 2025 -0800

    net: hold netdev instance lock during queue operations
    
    For the drivers that use queue management API, switch to the mode where
    core stack holds the netdev instance lock. This affects the following
    drivers:
    - bnxt
    - gve
    - netdevsim
    
    Originally I locked only start/stop, but switched to holding the
    lock over all iterations to make them look atomic to the device
    (feels like it should be easier to reason about).
    
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Cc: Saeed Mahameed <saeed@kernel.org>
    Signed-off-by: Stanislav Fomichev <sdf@fomichev.me>
    Link: https://patch.msgid.link/20250305163732.2766420-6-sdf@fomichev.me
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>

diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index 69951eeb96d2..abda17b15950 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2755,7 +2755,7 @@ static inline void netdev_assert_locked_or_invisible(struct net_device *dev)
 
 static inline bool netdev_need_ops_lock(struct net_device *dev)
 {
-	bool ret = false;
+	bool ret = !!dev->queue_mgmt_ops;
 
 #if IS_ENABLED(CONFIG_NET_SHAPER)
 	ret |= !!dev->netdev_ops->net_shaper_ops;