{
  "hash": "82cd4bacff88a11e36f143e2cb950174b09c86c3",
  "hash_short": "82cd4bac",
  "subject": "Drivers: hv: vmbus: Fix handling of messages with transaction ID of zero",
  "body": "vmbus_request_addr() returns 0 (zero) if the transaction ID passed\nto as argument is 0.  This is unfortunate for two reasons: first,\nnetvsc_send_completion() does not check for a NULL cmd_rqst (before\ndereferencing the corresponding NVSP message); second, 0 is a *valid*\nvalue of cmd_rqst in netvsc_send_tx_complete(), cf. the call of\nvmbus_sendpacket() in netvsc_send_pkt().\n\nvmbus_request_addr() has included the code in question since its\nintroduction with commit e8b7db38449ac (\"Drivers: hv: vmbus: Add\nvmbus_requestor data structure for VMBus hardening\"); such code was\nmotivated by the early use of vmbus_requestor by hv_storvsc.  Since\nhv_storvsc moved to a tag-based mechanism to generate and retrieve\ntransaction IDs with commit bf5fd8cae3c8f (\"scsi: storvsc: Use\nblk_mq_unique_tag() to generate requestIDs\"), vmbus_request_addr()\ncan be modified to return VMBUS_RQST_ERROR if the ID is 0.  This\nchange solves the issues in hv_netvsc (and makes the handling of\nmessages with transaction ID of 0 consistent with the semantics\n\"the ID is not contained in the requestor/invalid ID\").\n\nvmbus_next_request_id(), vmbus_request_addr() should still reserve\nthe ID of 0 for Hyper-V, because Hyper-V will \"ignore\" (not respond\nto) VMBUS_DATA_PACKET_FLAG_COMPLETION_REQUESTED packets/requests with\ntransaction ID of 0 from the guest.\n\nFixes: bf5fd8cae3c8f (\"scsi: storvsc: Use blk_mq_unique_tag() to generate requestIDs\")\nSigned-off-by: Andrea Parri (Microsoft) <parri.andrea@gmail.com>\nReviewed-by: Michael Kelley <mikelley@microsoft.com>\nLink: https://lore.kernel.org/r/20220419122325.10078-2-parri.andrea@gmail.com\nSigned-off-by: Wei Liu <wei.liu@kernel.org>",
  "full_message": "Drivers: hv: vmbus: Fix handling of messages with transaction ID of zero\n\nvmbus_request_addr() returns 0 (zero) if the transaction ID passed\nto as argument is 0.  This is unfortunate for two reasons: first,\nnetvsc_send_completion() does not check for a NULL cmd_rqst (before\ndereferencing the corresponding NVSP message); second, 0 is a *valid*\nvalue of cmd_rqst in netvsc_send_tx_complete(), cf. the call of\nvmbus_sendpacket() in netvsc_send_pkt().\n\nvmbus_request_addr() has included the code in question since its\nintroduction with commit e8b7db38449ac (\"Drivers: hv: vmbus: Add\nvmbus_requestor data structure for VMBus hardening\"); such code was\nmotivated by the early use of vmbus_requestor by hv_storvsc.  Since\nhv_storvsc moved to a tag-based mechanism to generate and retrieve\ntransaction IDs with commit bf5fd8cae3c8f (\"scsi: storvsc: Use\nblk_mq_unique_tag() to generate requestIDs\"), vmbus_request_addr()\ncan be modified to return VMBUS_RQST_ERROR if the ID is 0.  This\nchange solves the issues in hv_netvsc (and makes the handling of\nmessages with transaction ID of 0 consistent with the semantics\n\"the ID is not contained in the requestor/invalid ID\").\n\nvmbus_next_request_id(), vmbus_request_addr() should still reserve\nthe ID of 0 for Hyper-V, because Hyper-V will \"ignore\" (not respond\nto) VMBUS_DATA_PACKET_FLAG_COMPLETION_REQUESTED packets/requests with\ntransaction ID of 0 from the guest.\n\nFixes: bf5fd8cae3c8f (\"scsi: storvsc: Use blk_mq_unique_tag() to generate requestIDs\")\nSigned-off-by: Andrea Parri (Microsoft) <parri.andrea@gmail.com>\nReviewed-by: Michael Kelley <mikelley@microsoft.com>\nLink: https://lore.kernel.org/r/20220419122325.10078-2-parri.andrea@gmail.com\nSigned-off-by: Wei Liu <wei.liu@kernel.org>",
  "author_name": "Andrea Parri (Microsoft)",
  "author_email": "parri.andrea@gmail.com",
  "author_date": "Tue Apr 19 14:23:20 2022 +0200",
  "author_date_iso": "2022-04-19T14:23:20+02:00",
  "committer_name": "Wei Liu",
  "committer_email": "wei.liu@kernel.org",
  "committer_date": "Mon Apr 25 15:51:12 2022 +0000",
  "committer_date_iso": "2022-04-25T15:51:12+00:00",
  "files_changed": [
    "drivers/hv/channel.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/hv/channel.c",
      "insertions": 4,
      "deletions": 2
    }
  ],
  "total_insertions": 4,
  "total_deletions": 2,
  "total_changes": 6,
  "parents": [
    "08e61e861a0e47e5e1a3fb78406afd6b0cea6b6d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/hv/channel.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}