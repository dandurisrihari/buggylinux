commit 4bf97069239bcfca9840936313c7ac35a6e04488
Author: Charlie Jenkins <charlie@rivosinc.com>
Date:   Wed Nov 13 18:21:20 2024 -0800

    riscv: Add ghostwrite vulnerability
    
    Follow the patterns of the other architectures that use
    GENERIC_CPU_VULNERABILITIES for riscv to introduce the ghostwrite
    vulnerability and mitigation. The mitigation is to disable all vector
    which is accomplished by clearing the bit from the cpufeature field.
    
    Ghostwrite only affects thead c9xx CPUs that impelment xtheadvector, so
    the vulerability will only be mitigated on these CPUs.
    
    Signed-off-by: Charlie Jenkins <charlie@rivosinc.com>
    Tested-by: Yangyu Chen <cyy@cyyself.name>
    Link: https://lore.kernel.org/r/20241113-xtheadvector-v11-14-236c22791ef9@rivosinc.com
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>

diff --git a/arch/riscv/include/asm/bugs.h b/arch/riscv/include/asm/bugs.h
new file mode 100644
index 000000000000..17ca0a947730
--- /dev/null
+++ b/arch/riscv/include/asm/bugs.h
@@ -0,0 +1,22 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+/*
+ * Interface for managing mitigations for riscv vulnerabilities.
+ *
+ * Copyright (C) 2024 Rivos Inc.
+ */
+
+#ifndef __ASM_BUGS_H
+#define __ASM_BUGS_H
+
+/* Watch out, ordering is important here. */
+enum mitigation_state {
+	UNAFFECTED,
+	MITIGATED,
+	VULNERABLE,
+};
+
+void ghostwrite_set_vulnerable(void);
+bool ghostwrite_enable_mitigation(void);
+enum mitigation_state ghostwrite_get_state(void);
+
+#endif /* __ASM_BUGS_H */