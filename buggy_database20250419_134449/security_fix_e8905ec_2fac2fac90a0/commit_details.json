{
  "hash": "e8905ec27e2f4ea1b9f7e03df68a060b3ae6fca8",
  "hash_short": "e8905ec2",
  "subject": "proc: environ_read() make sure offset points to environment address range",
  "body": "Currently the following offset and environment address range check in\nenviron_read() of /proc/<pid>/environ is buggy:\n\n  int this_len = mm->env_end - (mm->env_start + src);\n  if (this_len <= 0)\n    break;\n\nLarge or negative offsets on /proc/<pid>/environ converted to 'unsigned\nlong' may pass this check since '(mm->env_start + src)' can overflow and\n'this_len' will be positive.\n\nThis can turn /proc/<pid>/environ to act like /proc/<pid>/mem since\n(mm->env_start + src) will point and read from another VMA.\n\nThere are two fixes here plus some code cleaning:\n\n1) Fix the overflow by checking if the offset that was converted to\n   unsigned long will always point to the [mm->env_start, mm->env_end]\n   address range.\n\n2) Remove the truncation that was made to the result of the check,\n   storing the result in 'int this_len' will alter its value and we can\n   not depend on it.\n\nFor kernels that have commit b409e578d (\"proc: clean up\n/proc/<pid>/environ handling\") which adds the appropriate ptrace check and\nsaves the 'mm' at ->open() time, this is not a security issue.\n\nThis patch is taken from the grsecurity patch since it was just made\navailable.\n\nSigned-off-by: Djalal Harouni <tixxdz@opendz.org>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Brad Spengler <spender@grsecurity.net>\nAcked-by: Kees Cook <keescook@chromium.org>\nCc: David Rientjes <rientjes@google.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "proc: environ_read() make sure offset points to environment address range\n\nCurrently the following offset and environment address range check in\nenviron_read() of /proc/<pid>/environ is buggy:\n\n  int this_len = mm->env_end - (mm->env_start + src);\n  if (this_len <= 0)\n    break;\n\nLarge or negative offsets on /proc/<pid>/environ converted to 'unsigned\nlong' may pass this check since '(mm->env_start + src)' can overflow and\n'this_len' will be positive.\n\nThis can turn /proc/<pid>/environ to act like /proc/<pid>/mem since\n(mm->env_start + src) will point and read from another VMA.\n\nThere are two fixes here plus some code cleaning:\n\n1) Fix the overflow by checking if the offset that was converted to\n   unsigned long will always point to the [mm->env_start, mm->env_end]\n   address range.\n\n2) Remove the truncation that was made to the result of the check,\n   storing the result in 'int this_len' will alter its value and we can\n   not depend on it.\n\nFor kernels that have commit b409e578d (\"proc: clean up\n/proc/<pid>/environ handling\") which adds the appropriate ptrace check and\nsaves the 'mm' at ->open() time, this is not a security issue.\n\nThis patch is taken from the grsecurity patch since it was just made\navailable.\n\nSigned-off-by: Djalal Harouni <tixxdz@opendz.org>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Brad Spengler <spender@grsecurity.net>\nAcked-by: Kees Cook <keescook@chromium.org>\nCc: David Rientjes <rientjes@google.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Djalal Harouni",
  "author_email": "tixxdz@opendz.org",
  "author_date": "Mon Jul 30 14:42:26 2012 -0700",
  "author_date_iso": "2012-07-30T14:42:26-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Jul 30 17:25:20 2012 -0700",
  "committer_date_iso": "2012-07-30T17:25:20-07:00",
  "files_changed": [
    "fs/proc/base.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/proc/base.c",
      "insertions": 7,
      "deletions": 6
    }
  ],
  "total_insertions": 7,
  "total_deletions": 6,
  "total_changes": 13,
  "parents": [
    "108ceeb020bb3558fe175a3fc8b60fd6c1a2a279"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.10",
    "v3.10-rc1",
    "v3.10-rc2",
    "v3.10-rc3",
    "v3.10-rc4",
    "v3.10-rc5",
    "v3.10-rc6",
    "v3.10-rc7",
    "v3.11",
    "v3.11-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/proc/base.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}