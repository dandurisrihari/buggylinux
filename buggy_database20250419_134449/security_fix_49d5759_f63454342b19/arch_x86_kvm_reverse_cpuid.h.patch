commit 49d575926890e6ada930bf6f06d62b2fde8fce95
Merge: 01687e7c935e 45dd9bc75d9a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Feb 25 11:30:21 2023 -0800

    Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm
    
    Pull kvm updates from Paolo Bonzini:
     "ARM:
    
       - Provide a virtual cache topology to the guest to avoid
         inconsistencies with migration on heterogenous systems. Non secure
         software has no practical need to traverse the caches by set/way in
         the first place
    
       - Add support for taking stage-2 access faults in parallel. This was
         an accidental omission in the original parallel faults
         implementation, but should provide a marginal improvement to
         machines w/o FEAT_HAFDBS (such as hardware from the fruit company)
    
       - A preamble to adding support for nested virtualization to KVM,
         including vEL2 register state, rudimentary nested exception
         handling and masking unsupported features for nested guests
    
       - Fixes to the PSCI relay that avoid an unexpected host SVE trap when
         resuming a CPU when running pKVM
    
       - VGIC maintenance interrupt support for the AIC
    
       - Improvements to the arch timer emulation, primarily aimed at
         reducing the trap overhead of running nested
    
       - Add CONFIG_USERFAULTFD to the KVM selftests config fragment in the
         interest of CI systems
    
       - Avoid VM-wide stop-the-world operations when a vCPU accesses its
         own redistributor
    
       - Serialize when toggling CPACR_EL1.SMEN to avoid unexpected
         exceptions in the host
    
       - Aesthetic and comment/kerneldoc fixes
    
       - Drop the vestiges of the old Columbia mailing list and add [Oliver]
         as co-maintainer
    
      RISC-V:
    
       - Fix wrong usage of PGDIR_SIZE instead of PUD_SIZE
    
       - Correctly place the guest in S-mode after redirecting a trap to the
         guest
    
       - Redirect illegal instruction traps to guest
    
       - SBI PMU support for guest
    
      s390:
    
       - Sort out confusion between virtual and physical addresses, which
         currently are the same on s390
    
       - A new ioctl that performs cmpxchg on guest memory
    
       - A few fixes
    
      x86:
    
       - Change tdp_mmu to a read-only parameter
    
       - Separate TDP and shadow MMU page fault paths
    
       - Enable Hyper-V invariant TSC control
    
       - Fix a variety of APICv and AVIC bugs, some of them real-world, some
         of them affecting architecurally legal but unlikely to happen in
         practice
    
       - Mark APIC timer as expired if its in one-shot mode and the count
         underflows while the vCPU task was being migrated
    
       - Advertise support for Intel's new fast REP string features
    
       - Fix a double-shootdown issue in the emergency reboot code
    
       - Ensure GIF=1 and disable SVM during an emergency reboot, i.e. give
         SVM similar treatment to VMX
    
       - Update Xen's TSC info CPUID sub-leaves as appropriate
    
       - Add support for Hyper-V's extended hypercalls, where "support" at
         this point is just forwarding the hypercalls to userspace
    
       - Clean up the kvm->lock vs. kvm->srcu sequences when updating the
         PMU and MSR filters
    
       - One-off fixes and cleanups
    
       - Fix and cleanup the range-based TLB flushing code, used when KVM is
         running on Hyper-V
    
       - Add support for filtering PMU events using a mask. If userspace
         wants to restrict heavily what events the guest can use, it can now
         do so without needing an absurd number of filter entries
    
       - Clean up KVM's handling of "PMU MSRs to save", especially when vPMU
         support is disabled
    
       - Add PEBS support for Intel Sapphire Rapids
    
       - Fix a mostly benign overflow bug in SEV's
         send|receive_update_data()
    
       - Move several SVM-specific flags into vcpu_svm
    
      x86 Intel:
    
       - Handle NMI VM-Exits before leaving the noinstr region
    
       - A few trivial cleanups in the VM-Enter flows
    
       - Stop enabling VMFUNC for L1 purely to document that KVM doesn't
         support EPTP switching (or any other VM function) for L1
    
       - Fix a crash when using eVMCS's enlighted MSR bitmaps
    
      Generic:
    
       - Clean up the hardware enable and initialization flow, which was
         scattered around multiple arch-specific hooks. Instead, just let
         the arch code call into generic code. Both x86 and ARM should
         benefit from not having to fight common KVM code's notion of how to
         do initialization
    
       - Account allocations in generic kvm_arch_alloc_vm()
    
       - Fix a memory leak if coalesced MMIO unregistration fails
    
      selftests:
    
       - On x86, cache the CPU vendor (AMD vs. Intel) and use the info to
         emit the correct hypercall instruction instead of relying on KVM to
         patch in VMMCALL
    
       - Use TAP interface for kvm_binary_stats_test and tsc_msrs_test"
    
    * tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (325 commits)
      KVM: SVM: hyper-v: placate modpost section mismatch error
      KVM: x86/mmu: Make tdp_mmu_allowed static
      KVM: arm64: nv: Use reg_to_encoding() to get sysreg ID
      KVM: arm64: nv: Only toggle cache for virtual EL2 when SCTLR_EL2 changes
      KVM: arm64: nv: Filter out unsupported features from ID regs
      KVM: arm64: nv: Emulate EL12 register accesses from the virtual EL2
      KVM: arm64: nv: Allow a sysreg to be hidden from userspace only
      KVM: arm64: nv: Emulate PSTATE.M for a guest hypervisor
      KVM: arm64: nv: Add accessors for SPSR_EL1, ELR_EL1 and VBAR_EL1 from virtual EL2
      KVM: arm64: nv: Handle SMCs taken from virtual EL2
      KVM: arm64: nv: Handle trapped ERET from virtual EL2
      KVM: arm64: nv: Inject HVC exceptions to the virtual EL2
      KVM: arm64: nv: Support virtual EL2 exceptions
      KVM: arm64: nv: Handle HCR_EL2.NV system register traps
      KVM: arm64: nv: Add nested virt VCPU primitives for vEL2 VCPU state
      KVM: arm64: nv: Add EL2 system registers to vcpu context
      KVM: arm64: nv: Allow userspace to set PSR_MODE_EL2x
      KVM: arm64: nv: Reset VCPU to EL2 registers if VCPU nested virt is set
      KVM: arm64: nv: Introduce nested virtualization VCPU feature
      KVM: arm64: Use the S2 MMU context to iterate over S2 table
      ...

diff --cc arch/x86/kvm/reverse_cpuid.h
index 81f4e9ce0c77,4945456fd646..a5717282bb9c
--- a/arch/x86/kvm/reverse_cpuid.h
+++ b/arch/x86/kvm/reverse_cpuid.h
@@@ -68,7 -72,7 +72,8 @@@ static const struct cpuid_reg reverse_c
  	[CPUID_12_EAX]        = {0x00000012, 0, CPUID_EAX},
  	[CPUID_8000_001F_EAX] = {0x8000001f, 0, CPUID_EAX},
  	[CPUID_7_1_EDX]       = {         7, 1, CPUID_EDX},
+ 	[CPUID_8000_0007_EDX] = {0x80000007, 0, CPUID_EDX},
 +	[CPUID_8000_0021_EAX] = {0x80000021, 0, CPUID_EAX},
  };
  
  /*