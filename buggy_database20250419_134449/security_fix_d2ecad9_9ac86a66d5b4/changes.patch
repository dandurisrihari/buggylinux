diff --cc fs/cifs/cifsfs.c
index 50208c15309a,cb77915a445b..34371637f210
--- a/fs/cifs/cifsfs.c
+++ b/fs/cifs/cifsfs.c
@@@ -35,6 -35,8 +35,7 @@@
  #include <linux/delay.h>
  #include <linux/kthread.h>
  #include <linux/freezer.h>
 -#include <linux/smp_lock.h>
+ #include <net/ipv6.h>
  #include "cifsfs.h"
  #include "cifspdu.h"
  #define DECLARE_GLOBALS_HERE
@@@ -562,9 -606,10 +603,10 @@@ static loff_t cifs_llseek(struct file *
  
  static int cifs_setlease(struct file *file, long arg, struct file_lock **lease)
  {
 -	/* note that this is called by vfs setlease with the BKL held
 -	   although I doubt that BKL is needed here in cifs */
 +	/* note that this is called by vfs setlease with lock_flocks held
 +	   to protect *lease from going away */
  	struct inode *inode = file->f_path.dentry->d_inode;
+ 	struct cifsFileInfo *cfile = file->private_data;
  
  	if (!(S_ISREG(inode->i_mode)))
  		return -EINVAL;