commit d2ecad9faca2221ae6f664f146f0dcae661bf39d
Merge: c70b5296e775 cdff08e76612
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Oct 22 17:52:29 2010 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/sfrench/cifs-2.6
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/sfrench/cifs-2.6: (56 commits)
      [CIFS] move close processing  from cifs_close to cifsFileInfo_put
      cifs: convert cifs_tcp_ses_lock from a rwlock to a spinlock
      cifs: cancel_delayed_work() + flush_scheduled_work() -> cancel_delayed_work_sync()
      Clean up two declarations of blob_len
      cifs: move cifsFileInfo_put to file.c
      cifs: convert GlobalSMBSeslock from a rwlock to regular spinlock
      [CIFS] Fix minor checkpatch warning and update cifs version
      cifs: move cifs_new_fileinfo to file.c
      cifs: eliminate pfile pointer from cifsFileInfo
      cifs: cifs_write argument change and cleanup
      cifs: clean up cifs_reopen_file
      cifs: eliminate the inode argument from cifs_new_fileinfo
      cifs: eliminate oflags option from cifs_new_fileinfo
      cifs: fix flags handling in cifs_posix_open
      cifs: eliminate cifs_posix_open_inode_helper
      cifs: handle FindFirst failure gracefully
      NTLM authentication and signing - Calculate auth response per smb session
      cifs: don't use vfsmount to pin superblock for oplock breaks
      cifs: keep dentry reference in cifsFileInfo instead of inode reference
      cifs: on multiuser mount, set ownership to current_fsuid/current_fsgid (try #7)
      ...
    
    Fix up trivial conflict in fs/cifs/cifsfs.c due to added/removed header files

diff --cc fs/cifs/cifsfs.c
index 50208c15309a,cb77915a445b..34371637f210
--- a/fs/cifs/cifsfs.c
+++ b/fs/cifs/cifsfs.c
@@@ -35,6 -35,8 +35,7 @@@
  #include <linux/delay.h>
  #include <linux/kthread.h>
  #include <linux/freezer.h>
 -#include <linux/smp_lock.h>
+ #include <net/ipv6.h>
  #include "cifsfs.h"
  #include "cifspdu.h"
  #define DECLARE_GLOBALS_HERE
@@@ -562,9 -606,10 +603,10 @@@ static loff_t cifs_llseek(struct file *
  
  static int cifs_setlease(struct file *file, long arg, struct file_lock **lease)
  {
 -	/* note that this is called by vfs setlease with the BKL held
 -	   although I doubt that BKL is needed here in cifs */
 +	/* note that this is called by vfs setlease with lock_flocks held
 +	   to protect *lease from going away */
  	struct inode *inode = file->f_path.dentry->d_inode;
+ 	struct cifsFileInfo *cfile = file->private_data;
  
  	if (!(S_ISREG(inode->i_mode)))
  		return -EINVAL;