{
  "hash": "7e8b15dbc392cf3097f2d2e6dfbbf2e97318c553",
  "hash_short": "7e8b15db",
  "subject": "ARM: tegra114: Reprogram GIC CPU interface to bypass IRQ on CPU PM entry",
  "body": "There is a difference between GICv1 and v2 when CPU in power management\nmode (aka CPU power down on Tegra). For GICv1, IRQ/FIQ interrupt lines\ngoing to CPU are same lines which are also used for wake-interrupt.\nTherefore, we cannot disable the GIC CPU interface if we need to use same\ninterrupts for CPU wake purpose. This creates a race condition for CPU\npower off entry. Also, in GICv1, disabling GICv1 CPU interface puts GICv1\ninto bypass mode such that incoming legacy IRQ/FIQ are sent to CPU, which\nmeans disabling GIC CPU interface doesn't really disable IRQ/FIQ to CPU.\n\nGICv2 provides a wake IRQ/FIQ (for wake-event purpose), which are not\ndisabled by GIC CPU interface. This is done by adding a bypass override\ncapability when the interrupts are disabled at the CPU interface. To\nsupport this, there are four bits about IRQ/FIQ BypassDisable in CPU\ninterface Control Register. When the IRQ/FIQ not being driver by the\nCPU interface, each interrupt output signal can be deasserted rather\nthan being driven by the legacy interrupt input.\n\nSo the wake-event can be used as wakeup signals to SoC (system power\ncontroller).\n\nTo prevent race conditions and ensure proper interrupt routing on\nCortex-A15 CPUs when they are power-gated, add a CPU PM notifier\ncall-back to reprogram the GIC CPU interface on PM entry. The\nGIC CPU interface will be reset back to its normal state by\nthe common GIC CPU PM exit callback when the CPU wakes up.\n\nBased on the work by: Scott Williams <scwilliams@nvidia.com>\n\nSigned-off-by: Joseph Lo <josephl@nvidia.com>\nSigned-off-by: Stephen Warren <swarren@nvidia.com>",
  "full_message": "ARM: tegra114: Reprogram GIC CPU interface to bypass IRQ on CPU PM entry\n\nThere is a difference between GICv1 and v2 when CPU in power management\nmode (aka CPU power down on Tegra). For GICv1, IRQ/FIQ interrupt lines\ngoing to CPU are same lines which are also used for wake-interrupt.\nTherefore, we cannot disable the GIC CPU interface if we need to use same\ninterrupts for CPU wake purpose. This creates a race condition for CPU\npower off entry. Also, in GICv1, disabling GICv1 CPU interface puts GICv1\ninto bypass mode such that incoming legacy IRQ/FIQ are sent to CPU, which\nmeans disabling GIC CPU interface doesn't really disable IRQ/FIQ to CPU.\n\nGICv2 provides a wake IRQ/FIQ (for wake-event purpose), which are not\ndisabled by GIC CPU interface. This is done by adding a bypass override\ncapability when the interrupts are disabled at the CPU interface. To\nsupport this, there are four bits about IRQ/FIQ BypassDisable in CPU\ninterface Control Register. When the IRQ/FIQ not being driver by the\nCPU interface, each interrupt output signal can be deasserted rather\nthan being driven by the legacy interrupt input.\n\nSo the wake-event can be used as wakeup signals to SoC (system power\ncontroller).\n\nTo prevent race conditions and ensure proper interrupt routing on\nCortex-A15 CPUs when they are power-gated, add a CPU PM notifier\ncall-back to reprogram the GIC CPU interface on PM entry. The\nGIC CPU interface will be reset back to its normal state by\nthe common GIC CPU PM exit callback when the CPU wakes up.\n\nBased on the work by: Scott Williams <scwilliams@nvidia.com>\n\nSigned-off-by: Joseph Lo <josephl@nvidia.com>\nSigned-off-by: Stephen Warren <swarren@nvidia.com>",
  "author_name": "Joseph Lo",
  "author_email": "josephl@nvidia.com",
  "author_date": "Fri Jul 19 17:25:24 2013 +0800",
  "author_date_iso": "2013-07-19T17:25:24+08:00",
  "committer_name": "Stephen Warren",
  "committer_email": "swarren@nvidia.com",
  "committer_date": "Fri Jul 19 10:07:14 2013 -0600",
  "committer_date_iso": "2013-07-19T10:07:14-06:00",
  "files_changed": [
    "arch/arm/mach-tegra/irq.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/arm/mach-tegra/irq.c",
      "insertions": 40,
      "deletions": 0
    }
  ],
  "total_insertions": 40,
  "total_deletions": 0,
  "total_changes": 40,
  "parents": [
    "a99d34b506f746e607c96767d616553a5cc14758"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.12",
    "v3.12-rc1",
    "v3.12-rc2",
    "v3.12-rc3",
    "v3.12-rc4",
    "v3.12-rc5",
    "v3.12-rc6",
    "v3.12-rc7",
    "v3.13",
    "v3.13-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "bypass"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm/mach-tegra/irq.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}