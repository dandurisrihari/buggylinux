{
  "hash": "0803278b0b4d8eeb2b461fb698785df65a725d9e",
  "hash_short": "0803278b",
  "subject": "bpf: do not restore dst_reg when cur_state is freed",
  "body": "Syzkaller hit 'KASAN: use-after-free Write in sanitize_ptr_alu' bug.\n\nCall trace:\n\n  dump_stack+0xbf/0x12e\n  print_address_description+0x6a/0x280\n  kasan_report+0x237/0x360\n  sanitize_ptr_alu+0x85a/0x8d0\n  adjust_ptr_min_max_vals+0x8f2/0x1ca0\n  adjust_reg_min_max_vals+0x8ed/0x22e0\n  do_check+0x1ca6/0x5d00\n  bpf_check+0x9ca/0x2570\n  bpf_prog_load+0xc91/0x1030\n  __se_sys_bpf+0x61e/0x1f00\n  do_syscall_64+0xc8/0x550\n  entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFault injection trace:\n\n \u00a0kfree+0xea/0x290\n \u00a0free_func_state+0x4a/0x60\n \u00a0free_verifier_state+0x61/0xe0\n \u00a0push_stack+0x216/0x2f0\t          <- inject failslab\n \u00a0sanitize_ptr_alu+0x2b1/0x8d0\n \u00a0adjust_ptr_min_max_vals+0x8f2/0x1ca0\n \u00a0adjust_reg_min_max_vals+0x8ed/0x22e0\n \u00a0do_check+0x1ca6/0x5d00\n \u00a0bpf_check+0x9ca/0x2570\n \u00a0bpf_prog_load+0xc91/0x1030\n \u00a0__se_sys_bpf+0x61e/0x1f00\n \u00a0do_syscall_64+0xc8/0x550\n \u00a0entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nWhen kzalloc() fails in push_stack(), free_verifier_state() will free\ncurrent verifier state. As push_stack() returns, dst_reg was restored\nif ptr_is_dst_reg is false. However, as member of the cur_state,\ndst_reg is also freed, and error occurs when dereferencing dst_reg.\nSimply fix it by testing ret of push_stack() before restoring dst_reg.\n\nFixes: 979d63d50c0c (\"bpf: prevent out of bounds speculation on pointer arithmetic\")\nSigned-off-by: Xu Yu <xuyu@linux.alibaba.com>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>",
  "full_message": "bpf: do not restore dst_reg when cur_state is freed\n\nSyzkaller hit 'KASAN: use-after-free Write in sanitize_ptr_alu' bug.\n\nCall trace:\n\n  dump_stack+0xbf/0x12e\n  print_address_description+0x6a/0x280\n  kasan_report+0x237/0x360\n  sanitize_ptr_alu+0x85a/0x8d0\n  adjust_ptr_min_max_vals+0x8f2/0x1ca0\n  adjust_reg_min_max_vals+0x8ed/0x22e0\n  do_check+0x1ca6/0x5d00\n  bpf_check+0x9ca/0x2570\n  bpf_prog_load+0xc91/0x1030\n  __se_sys_bpf+0x61e/0x1f00\n  do_syscall_64+0xc8/0x550\n  entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFault injection trace:\n\n \u00a0kfree+0xea/0x290\n \u00a0free_func_state+0x4a/0x60\n \u00a0free_verifier_state+0x61/0xe0\n \u00a0push_stack+0x216/0x2f0\t          <- inject failslab\n \u00a0sanitize_ptr_alu+0x2b1/0x8d0\n \u00a0adjust_ptr_min_max_vals+0x8f2/0x1ca0\n \u00a0adjust_reg_min_max_vals+0x8ed/0x22e0\n \u00a0do_check+0x1ca6/0x5d00\n \u00a0bpf_check+0x9ca/0x2570\n \u00a0bpf_prog_load+0xc91/0x1030\n \u00a0__se_sys_bpf+0x61e/0x1f00\n \u00a0do_syscall_64+0xc8/0x550\n \u00a0entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nWhen kzalloc() fails in push_stack(), free_verifier_state() will free\ncurrent verifier state. As push_stack() returns, dst_reg was restored\nif ptr_is_dst_reg is false. However, as member of the cur_state,\ndst_reg is also freed, and error occurs when dereferencing dst_reg.\nSimply fix it by testing ret of push_stack() before restoring dst_reg.\n\nFixes: 979d63d50c0c (\"bpf: prevent out of bounds speculation on pointer arithmetic\")\nSigned-off-by: Xu Yu <xuyu@linux.alibaba.com>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>",
  "author_name": "Xu Yu",
  "author_email": "xuyu@linux.alibaba.com",
  "author_date": "Thu Mar 21 18:00:35 2019 +0800",
  "author_date_iso": "2019-03-21T18:00:35+08:00",
  "committer_name": "Daniel Borkmann",
  "committer_email": "daniel@iogearbox.net",
  "committer_date": "Thu Mar 21 12:18:18 2019 +0100",
  "committer_date_iso": "2019-03-21T12:18:18+01:00",
  "files_changed": [
    "kernel/bpf/verifier.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "kernel/bpf/verifier.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "cba368c1f01c27ed62fca7a853531845d263bb01"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.1",
    "v5.1-rc3",
    "v5.1-rc4",
    "v5.1-rc5",
    "v5.1-rc6",
    "v5.1-rc7",
    "v5.2",
    "v5.2-rc1",
    "v5.2-rc2",
    "v5.2-rc3"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/bpf/verifier.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}