{
  "hash": "4c50ceae8f3b56e7c13b327f01e973b4127142a2",
  "hash_short": "4c50ceae",
  "subject": "Merge branch 'libnvdimm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm",
  "body": "Pull libnvdimm fixes from Dan Williams:\n \"A regression fix, new unit test infrastructure and a build fix:\n\n   - Regression fix addressing support for the new NVDIMM label storage\n     area access commands (_LSI, _LSR, and _LSW).\n\n     The Intel specific version of these commands communicated the\n     \"Device Locked\" status on the label-storage-information command.\n\n     However, these new commands (standardized in ACPI 6.2) communicate\n     the \"Device Locked\" status on the label-storage-read command, and\n     the driver was missing the indication.\n\n     Reading from locked persistent memory is similar to reading\n     unmapped PCI memory space, returns all 1's.\n\n   - Unit test infrastructure is added to regression test the \"Device\n     Locked\" detection failure.\n\n   - A build fix is included to allow the \"of_pmem\" driver to be built\n     as a module and translate an Open Firmware described device to its\n     local numa node\"\n\n* 'libnvdimm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm:\n  MAINTAINERS: Add backup maintainers for libnvdimm and DAX\n  device-dax: allow MAP_SYNC to succeed\n  Revert \"libnvdimm, of_pmem: workaround OF_NUMA=n build error\"\n  libnvdimm, of_pmem: use dev_to_node() instead of of_node_to_nid()\n  tools/testing/nvdimm: enable labels for nfit_test.1 dimms\n  tools/testing/nvdimm: fix missing newline in nfit_test_dimm 'handle' attribute\n  tools/testing/nvdimm: support nfit_test_dimm attributes under nfit_test.1\n  tools/testing/nvdimm: allow custom error code injection\n  libnvdimm, dimm: handle EACCES failures from label reads",
  "full_message": "Merge branch 'libnvdimm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n\nPull libnvdimm fixes from Dan Williams:\n \"A regression fix, new unit test infrastructure and a build fix:\n\n   - Regression fix addressing support for the new NVDIMM label storage\n     area access commands (_LSI, _LSR, and _LSW).\n\n     The Intel specific version of these commands communicated the\n     \"Device Locked\" status on the label-storage-information command.\n\n     However, these new commands (standardized in ACPI 6.2) communicate\n     the \"Device Locked\" status on the label-storage-read command, and\n     the driver was missing the indication.\n\n     Reading from locked persistent memory is similar to reading\n     unmapped PCI memory space, returns all 1's.\n\n   - Unit test infrastructure is added to regression test the \"Device\n     Locked\" detection failure.\n\n   - A build fix is included to allow the \"of_pmem\" driver to be built\n     as a module and translate an Open Firmware described device to its\n     local numa node\"\n\n* 'libnvdimm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm:\n  MAINTAINERS: Add backup maintainers for libnvdimm and DAX\n  device-dax: allow MAP_SYNC to succeed\n  Revert \"libnvdimm, of_pmem: workaround OF_NUMA=n build error\"\n  libnvdimm, of_pmem: use dev_to_node() instead of of_node_to_nid()\n  tools/testing/nvdimm: enable labels for nfit_test.1 dimms\n  tools/testing/nvdimm: fix missing newline in nfit_test_dimm 'handle' attribute\n  tools/testing/nvdimm: support nfit_test_dimm attributes under nfit_test.1\n  tools/testing/nvdimm: allow custom error code injection\n  libnvdimm, dimm: handle EACCES failures from label reads",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Sat Apr 21 21:11:05 2018 -0700",
  "author_date_iso": "2018-04-21T21:11:05-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Sat Apr 21 21:11:05 2018 -0700",
  "committer_date_iso": "2018-04-21T21:11:05-07:00",
  "files_changed": [
    "MAINTAINERS"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "MAINTAINERS",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "drivers/dax/device.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "drivers/nvdimm/Kconfig",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "drivers/nvdimm/dimm_devs.c",
      "insertions": 12,
      "deletions": 10
    },
    {
      "file": "drivers/nvdimm/of_pmem.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "tools/testing/nvdimm/test/nfit.c",
      "insertions": 65,
      "deletions": 19
    }
  ],
  "total_insertions": 96,
  "total_deletions": 32,
  "total_changes": 128,
  "parents": [
    "5e7c7806111ade52f4e198fa0f576c538fbfb0df",
    "c5794510d7b5f210f05531ff9e82432cf7244367"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.17",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7",
    "v4.18",
    "v4.18-rc1",
    "v4.18-rc2"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "MAINTAINERS",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}