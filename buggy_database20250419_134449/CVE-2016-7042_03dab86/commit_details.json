{
  "hash": "03dab869b7b239c4e013ec82aea22e181e441cfc",
  "hash_short": "03dab869",
  "subject": "KEYS: Fix short sprintf buffer in /proc/keys show function",
  "body": "This fixes CVE-2016-7042.\n\nFix a short sprintf buffer in proc_keys_show().  If the gcc stack protector\nis turned on, this can cause a panic due to stack corruption.\n\nThe problem is that xbuf[] is not big enough to hold a 64-bit timeout\nrendered as weeks:\n\n\t(gdb) p 0xffffffffffffffffULL/(60*60*24*7)\n\t$2 = 30500568904943\n\nThat's 14 chars plus NUL, not 11 chars plus NUL.\n\nExpand the buffer to 16 chars.\n\nI think the unpatched code apparently works if the stack-protector is not\nenabled because on a 32-bit machine the buffer won't be overflowed and on a\n64-bit machine there's a 64-bit aligned pointer at one side and an int that\nisn't checked again on the other side.\n\nThe panic incurred looks something like:\n\nKernel panic - not syncing: stack-protector: Kernel stack is corrupted in: ffffffff81352ebe\nCPU: 0 PID: 1692 Comm: reproducer Not tainted 4.7.2-201.fc24.x86_64 #1\nHardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\n 0000000000000086 00000000fbbd2679 ffff8800a044bc00 ffffffff813d941f\n ffffffff81a28d58 ffff8800a044bc98 ffff8800a044bc88 ffffffff811b2cb6\n ffff880000000010 ffff8800a044bc98 ffff8800a044bc30 00000000fbbd2679\nCall Trace:\n [<ffffffff813d941f>] dump_stack+0x63/0x84\n [<ffffffff811b2cb6>] panic+0xde/0x22a\n [<ffffffff81352ebe>] ? proc_keys_show+0x3ce/0x3d0\n [<ffffffff8109f7f9>] __stack_chk_fail+0x19/0x30\n [<ffffffff81352ebe>] proc_keys_show+0x3ce/0x3d0\n [<ffffffff81350410>] ? key_validate+0x50/0x50\n [<ffffffff8134db30>] ? key_default_cmp+0x20/0x20\n [<ffffffff8126b31c>] seq_read+0x2cc/0x390\n [<ffffffff812b6b12>] proc_reg_read+0x42/0x70\n [<ffffffff81244fc7>] __vfs_read+0x37/0x150\n [<ffffffff81357020>] ? security_file_permission+0xa0/0xc0\n [<ffffffff81246156>] vfs_read+0x96/0x130\n [<ffffffff81247635>] SyS_read+0x55/0xc0\n [<ffffffff817eb872>] entry_SYSCALL_64_fastpath+0x1a/0xa4\n\nReported-by: Ondrej Kozina <okozina@redhat.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nTested-by: Ondrej Kozina <okozina@redhat.com>\ncc: stable@vger.kernel.org\nSigned-off-by: James Morris <james.l.morris@oracle.com>",
  "full_message": "KEYS: Fix short sprintf buffer in /proc/keys show function\n\nThis fixes CVE-2016-7042.\n\nFix a short sprintf buffer in proc_keys_show().  If the gcc stack protector\nis turned on, this can cause a panic due to stack corruption.\n\nThe problem is that xbuf[] is not big enough to hold a 64-bit timeout\nrendered as weeks:\n\n\t(gdb) p 0xffffffffffffffffULL/(60*60*24*7)\n\t$2 = 30500568904943\n\nThat's 14 chars plus NUL, not 11 chars plus NUL.\n\nExpand the buffer to 16 chars.\n\nI think the unpatched code apparently works if the stack-protector is not\nenabled because on a 32-bit machine the buffer won't be overflowed and on a\n64-bit machine there's a 64-bit aligned pointer at one side and an int that\nisn't checked again on the other side.\n\nThe panic incurred looks something like:\n\nKernel panic - not syncing: stack-protector: Kernel stack is corrupted in: ffffffff81352ebe\nCPU: 0 PID: 1692 Comm: reproducer Not tainted 4.7.2-201.fc24.x86_64 #1\nHardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\n 0000000000000086 00000000fbbd2679 ffff8800a044bc00 ffffffff813d941f\n ffffffff81a28d58 ffff8800a044bc98 ffff8800a044bc88 ffffffff811b2cb6\n ffff880000000010 ffff8800a044bc98 ffff8800a044bc30 00000000fbbd2679\nCall Trace:\n [<ffffffff813d941f>] dump_stack+0x63/0x84\n [<ffffffff811b2cb6>] panic+0xde/0x22a\n [<ffffffff81352ebe>] ? proc_keys_show+0x3ce/0x3d0\n [<ffffffff8109f7f9>] __stack_chk_fail+0x19/0x30\n [<ffffffff81352ebe>] proc_keys_show+0x3ce/0x3d0\n [<ffffffff81350410>] ? key_validate+0x50/0x50\n [<ffffffff8134db30>] ? key_default_cmp+0x20/0x20\n [<ffffffff8126b31c>] seq_read+0x2cc/0x390\n [<ffffffff812b6b12>] proc_reg_read+0x42/0x70\n [<ffffffff81244fc7>] __vfs_read+0x37/0x150\n [<ffffffff81357020>] ? security_file_permission+0xa0/0xc0\n [<ffffffff81246156>] vfs_read+0x96/0x130\n [<ffffffff81247635>] SyS_read+0x55/0xc0\n [<ffffffff817eb872>] entry_SYSCALL_64_fastpath+0x1a/0xa4\n\nReported-by: Ondrej Kozina <okozina@redhat.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nTested-by: Ondrej Kozina <okozina@redhat.com>\ncc: stable@vger.kernel.org\nSigned-off-by: James Morris <james.l.morris@oracle.com>",
  "author_name": "David Howells",
  "author_email": "dhowells@redhat.com",
  "author_date": "Wed Oct 26 15:01:54 2016 +0100",
  "author_date_iso": "2016-10-26T15:01:54+01:00",
  "committer_name": "James Morris",
  "committer_email": "james.l.morris@oracle.com",
  "committer_date": "Thu Oct 27 16:03:24 2016 +1100",
  "committer_date_iso": "2016-10-27T16:03:24+11:00",
  "files_changed": [
    "security/keys/proc.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "security/keys/proc.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "9fe68cad6e74967b88d0c6aeca7d9cd6b6e91942"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2016-7042"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "security/keys/proc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}