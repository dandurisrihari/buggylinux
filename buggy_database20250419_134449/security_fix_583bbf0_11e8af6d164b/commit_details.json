{
  "hash": "583bbf0624dfd8fc45f1049be1d4980be59451ff",
  "hash_short": "583bbf06",
  "subject": "io_uring: allow tcp ancillary data for __sys_recvmsg_sock()",
  "body": "For TCP tx zero-copy, the kernel notifies the process of completions by\nqueuing completion notifications on the socket error queue. This patch\nallows reading these notifications via recvmsg to support TCP tx\nzero-copy.\n\nAncillary data was originally disallowed due to privilege escalation\nvia io_uring's offloading of sendmsg() onto a kernel thread with kernel\ncredentials (https://crbug.com/project-zero/1975). So, we must ensure\nthat the socket type is one where the ancillary data types that are\ndelivered on recvmsg are plain data (no file descriptors or values that\nare translated based on the identity of the calling process).\n\nThis was tested by using io_uring to call recvmsg on the MSG_ERRQUEUE\nwith tx zero-copy enabled. Before this patch, we received -EINVALID from\nthis specific code path. After this patch, we could read tcp tx\nzero-copy completion notifications from the MSG_ERRQUEUE.\n\nSigned-off-by: Soheil Hassas Yeganeh <soheil@google.com>\nSigned-off-by: Arjun Roy <arjunroy@google.com>\nAcked-by: Eric Dumazet <edumazet@google.com>\nReviewed-by: Jann Horn <jannh@google.com>\nReviewed-by: Jens Axboe <axboe@kernel.dk>\nSigned-off-by: Luke Hsiao <lukehsiao@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "io_uring: allow tcp ancillary data for __sys_recvmsg_sock()\n\nFor TCP tx zero-copy, the kernel notifies the process of completions by\nqueuing completion notifications on the socket error queue. This patch\nallows reading these notifications via recvmsg to support TCP tx\nzero-copy.\n\nAncillary data was originally disallowed due to privilege escalation\nvia io_uring's offloading of sendmsg() onto a kernel thread with kernel\ncredentials (https://crbug.com/project-zero/1975). So, we must ensure\nthat the socket type is one where the ancillary data types that are\ndelivered on recvmsg are plain data (no file descriptors or values that\nare translated based on the identity of the calling process).\n\nThis was tested by using io_uring to call recvmsg on the MSG_ERRQUEUE\nwith tx zero-copy enabled. Before this patch, we received -EINVALID from\nthis specific code path. After this patch, we could read tcp tx\nzero-copy completion notifications from the MSG_ERRQUEUE.\n\nSigned-off-by: Soheil Hassas Yeganeh <soheil@google.com>\nSigned-off-by: Arjun Roy <arjunroy@google.com>\nAcked-by: Eric Dumazet <edumazet@google.com>\nReviewed-by: Jann Horn <jannh@google.com>\nReviewed-by: Jens Axboe <axboe@kernel.dk>\nSigned-off-by: Luke Hsiao <lukehsiao@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Luke Hsiao",
  "author_email": "lukehsiao@google.com",
  "author_date": "Fri Aug 21 21:41:04 2020 -0700",
  "author_date_iso": "2020-08-21T21:41:04-07:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Mon Aug 24 16:16:06 2020 -0700",
  "committer_date_iso": "2020-08-24T16:16:06-07:00",
  "files_changed": [
    "include/linux/net.h",
    "net/ipv4/af_inet.c",
    "net/ipv6/af_inet6.c",
    "net/socket.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "include/linux/net.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "net/ipv4/af_inet.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/ipv6/af_inet6.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/socket.c",
      "insertions": 5,
      "deletions": 3
    }
  ],
  "total_insertions": 10,
  "total_deletions": 3,
  "total_changes": 13,
  "parents": [
    "37a319b5f9900a1716e140b3719296e6bb19d04c"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "privilege escalation"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/net.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/ipv4/af_inet.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/ipv6/af_inet6.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/socket.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}