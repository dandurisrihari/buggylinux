diff --cc fs/f2fs/data.c
index 5dfa0207ad8f,b94cf6eea2f9..94f7b084f601
--- a/fs/f2fs/data.c
+++ b/fs/f2fs/data.c
@@@ -3617,16 -3634,17 +3635,16 @@@ repeat
  
  	/* TODO: cluster can be compressed due to race with .writepage */
  
 -	*pagep = page;
 -	folio = page_folio(page);
 +	*foliop = folio;
  
  	if (f2fs_is_atomic_file(inode))
- 		err = prepare_atomic_write_begin(sbi, &folio->page, pos, len,
+ 		err = prepare_atomic_write_begin(sbi, folio, pos, len,
  					&blkaddr, &need_balance, &use_cow);
  	else
- 		err = prepare_write_begin(sbi, &folio->page, pos, len,
+ 		err = prepare_write_begin(sbi, folio, pos, len,
  					&blkaddr, &need_balance);
  	if (err)
 -		goto fail;
 +		goto put_folio;
  
  	if (need_balance && !IS_NOQUOTA(inode) &&
  			has_not_enough_free_secs(sbi, 0, 0)) {
@@@ -3659,13 -3676,13 +3677,13 @@@
  		if (!f2fs_is_valid_blkaddr(sbi, blkaddr,
  				DATA_GENERIC_ENHANCE_READ)) {
  			err = -EFSCORRUPTED;
 -			goto fail;
 +			goto put_folio;
  		}
  		err = f2fs_submit_page_read(use_cow ?
- 				F2FS_I(inode)->cow_inode : inode, &folio->page,
- 				blkaddr, 0, true);
+ 				F2FS_I(inode)->cow_inode : inode,
+ 				folio, blkaddr, 0, true);
  		if (err)
 -			goto fail;
 +			goto put_folio;
  
  		folio_lock(folio);
  		if (unlikely(folio->mapping != mapping)) {