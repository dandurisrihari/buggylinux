{
  "hash": "79952bdcbcea53e57c2ca97e7448f8a6bdb6106a",
  "hash_short": "79952bdc",
  "subject": "Merge tag 'f2fs-for-6.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs",
  "body": "Pull f2fs updates from Jaegeuk Kim:\n \"The main changes include converting major IO paths to use folio, and\n  adding various knobs to control GC more flexibly for Zoned devices.\n\n  In addition, there are several patches to address corner cases of\n  atomic file operations and better support for file pinning on zoned\n  device.\n\n  Enhancement:\n   - add knobs to tune foreground/background GCs for Zoned devices\n   - convert IO paths to use folio\n   - reduce expensive checkpoint trigger frequency\n   - allow F2FS_IPU_NOCACHE for pinned file\n   - forcibly migrate to secure space for zoned device file pinning\n   - get rid of buffer_head use\n   - add write priority option based on zone UFS\n   - get rid of online repair on corrupted directory\n\n  Bug fixes:\n   - fix to don't panic system for no free segment fault injection\n   - fix to don't set SB_RDONLY in f2fs_handle_critical_error()\n   - avoid unused block when dio write in LFS mode\n   - compress: don't redirty sparse cluster during {,de}compress\n   - check discard support for conventional zones\n   - atomic: prevent atomic file from being dirtied before commit\n   - atomic: fix to check atomic_file in f2fs ioctl interfaces\n   - atomic: fix to forbid dio in atomic_file\n   - atomic: fix to truncate pagecache before on-disk metadata truncation\n   - atomic: create COW inode from parent dentry\n   - atomic: fix to avoid racing w/ GC\n   - atomic: require FMODE_WRITE for atomic write ioctls\n   - fix to wait page writeback before setting gcing flag\n   - fix to avoid racing in between read and OPU dio write, dio completion\n   - fix several potential integer overflows in file offsets and dir_block_index\n   - fix to avoid use-after-free in f2fs_stop_gc_thread()\n\n  As usual, there are several code clean-ups and refactorings\"\n\n* tag 'f2fs-for-6.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (60 commits)\n  f2fs: allow F2FS_IPU_NOCACHE for pinned file\n  f2fs: forcibly migrate to secure space for zoned device file pinning\n  f2fs: remove unused parameters\n  f2fs: fix to don't panic system for no free segment fault injection\n  f2fs: fix to don't set SB_RDONLY in f2fs_handle_critical_error()\n  f2fs: add valid block ratio not to do excessive GC for one time GC\n  f2fs: create gc_no_zoned_gc_percent and gc_boost_zoned_gc_percent\n  f2fs: do FG_GC when GC boosting is required for zoned devices\n  f2fs: increase BG GC migration window granularity when boosted for zoned devices\n  f2fs: add reserved_segments sysfs node\n  f2fs: introduce migration_window_granularity\n  f2fs: make BG GC more aggressive for zoned devices\n  f2fs: avoid unused block when dio write in LFS mode\n  f2fs: fix to check atomic_file in f2fs ioctl interfaces\n  f2fs: get rid of online repaire on corrupted directory\n  f2fs: prevent atomic file from being dirtied before commit\n  f2fs: get rid of page->index\n  f2fs: convert read_node_page() to use folio\n  f2fs: convert __write_node_page() to use folio\n  f2fs: convert f2fs_write_data_page() to use folio\n  ...",
  "full_message": "Merge tag 'f2fs-for-6.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"The main changes include converting major IO paths to use folio, and\n  adding various knobs to control GC more flexibly for Zoned devices.\n\n  In addition, there are several patches to address corner cases of\n  atomic file operations and better support for file pinning on zoned\n  device.\n\n  Enhancement:\n   - add knobs to tune foreground/background GCs for Zoned devices\n   - convert IO paths to use folio\n   - reduce expensive checkpoint trigger frequency\n   - allow F2FS_IPU_NOCACHE for pinned file\n   - forcibly migrate to secure space for zoned device file pinning\n   - get rid of buffer_head use\n   - add write priority option based on zone UFS\n   - get rid of online repair on corrupted directory\n\n  Bug fixes:\n   - fix to don't panic system for no free segment fault injection\n   - fix to don't set SB_RDONLY in f2fs_handle_critical_error()\n   - avoid unused block when dio write in LFS mode\n   - compress: don't redirty sparse cluster during {,de}compress\n   - check discard support for conventional zones\n   - atomic: prevent atomic file from being dirtied before commit\n   - atomic: fix to check atomic_file in f2fs ioctl interfaces\n   - atomic: fix to forbid dio in atomic_file\n   - atomic: fix to truncate pagecache before on-disk metadata truncation\n   - atomic: create COW inode from parent dentry\n   - atomic: fix to avoid racing w/ GC\n   - atomic: require FMODE_WRITE for atomic write ioctls\n   - fix to wait page writeback before setting gcing flag\n   - fix to avoid racing in between read and OPU dio write, dio completion\n   - fix several potential integer overflows in file offsets and dir_block_index\n   - fix to avoid use-after-free in f2fs_stop_gc_thread()\n\n  As usual, there are several code clean-ups and refactorings\"\n\n* tag 'f2fs-for-6.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (60 commits)\n  f2fs: allow F2FS_IPU_NOCACHE for pinned file\n  f2fs: forcibly migrate to secure space for zoned device file pinning\n  f2fs: remove unused parameters\n  f2fs: fix to don't panic system for no free segment fault injection\n  f2fs: fix to don't set SB_RDONLY in f2fs_handle_critical_error()\n  f2fs: add valid block ratio not to do excessive GC for one time GC\n  f2fs: create gc_no_zoned_gc_percent and gc_boost_zoned_gc_percent\n  f2fs: do FG_GC when GC boosting is required for zoned devices\n  f2fs: increase BG GC migration window granularity when boosted for zoned devices\n  f2fs: add reserved_segments sysfs node\n  f2fs: introduce migration_window_granularity\n  f2fs: make BG GC more aggressive for zoned devices\n  f2fs: avoid unused block when dio write in LFS mode\n  f2fs: fix to check atomic_file in f2fs ioctl interfaces\n  f2fs: get rid of online repaire on corrupted directory\n  f2fs: prevent atomic file from being dirtied before commit\n  f2fs: get rid of page->index\n  f2fs: convert read_node_page() to use folio\n  f2fs: convert __write_node_page() to use folio\n  f2fs: convert f2fs_write_data_page() to use folio\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Tue Sep 24 15:12:38 2024 -0700",
  "author_date_iso": "2024-09-24T15:12:38-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Tue Sep 24 15:12:38 2024 -0700",
  "committer_date_iso": "2024-09-24T15:12:38-07:00",
  "files_changed": [
    "fs/f2fs/data.c",
    "fs/f2fs/file.c",
    "fs/f2fs/super.c",
    "fs/f2fs/verity.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-fs-f2fs",
      "insertions": 56,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/checkpoint.c",
      "insertions": 9,
      "deletions": 8
    },
    {
      "file": "fs/f2fs/compress.c",
      "insertions": 43,
      "deletions": 20
    },
    {
      "file": "fs/f2fs/data.c",
      "insertions": 92,
      "deletions": 72
    },
    {
      "file": "fs/f2fs/debug.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/f2fs/dir.c",
      "insertions": 5,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/extent_cache.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "insertions": 91,
      "deletions": 57
    },
    {
      "file": "fs/f2fs/file.c",
      "insertions": 129,
      "deletions": 70
    },
    {
      "file": "fs/f2fs/gc.c",
      "insertions": 86,
      "deletions": 27
    },
    {
      "file": "fs/f2fs/gc.h",
      "insertions": 29,
      "deletions": 0
    },
    {
      "file": "fs/f2fs/inline.c",
      "insertions": 15,
      "deletions": 16
    },
    {
      "file": "fs/f2fs/inode.c",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/namei.c",
      "insertions": 0,
      "deletions": 68
    },
    {
      "file": "fs/f2fs/node.c",
      "insertions": 24,
      "deletions": 22
    },
    {
      "file": "fs/f2fs/segment.c",
      "insertions": 56,
      "deletions": 16
    },
    {
      "file": "fs/f2fs/segment.h",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/super.c",
      "insertions": 74,
      "deletions": 45
    },
    {
      "file": "fs/f2fs/sysfs.c",
      "insertions": 57,
      "deletions": 25
    },
    {
      "file": "fs/f2fs/verity.c",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/xattr.c",
      "insertions": 12,
      "deletions": 2
    },
    {
      "file": "include/linux/f2fs_fs.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "include/trace/events/f2fs.h",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 798,
  "total_deletions": 463,
  "total_changes": 1261,
  "parents": [
    "fa8380a06bd0523e51f826520aac1beb8c585521",
    "ae87b9c2dc9800e6ab52febd09341140599ff8e3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/f2fs/data.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/verity.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}