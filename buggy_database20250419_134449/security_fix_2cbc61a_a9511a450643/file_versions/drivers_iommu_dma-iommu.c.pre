commit e81e99bacc9f9347bda7808a949c1ce9fcc2bbf4
Author: David Stevens <stevensd@chromium.org>
Date:   Wed Sep 29 11:32:59 2021 +0900

    swiotlb: Support aligned swiotlb buffers
    
    Add an argument to swiotlb_tbl_map_single that specifies the desired
    alignment of the allocated buffer. This is used by dma-iommu to ensure
    the buffer is aligned to the iova granule size when using swiotlb with
    untrusted sub-granule mappings. This addresses an issue where adjacent
    slots could be exposed to the untrusted device if IO_TLB_SIZE < iova
    granule < PAGE_SIZE.
    
    Signed-off-by: David Stevens <stevensd@chromium.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20210929023300.335969-7-stevensd@google.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>

diff --git a/drivers/iommu/dma-iommu.c b/drivers/iommu/dma-iommu.c
index 85a005b268f6..289c49ead01a 100644
--- a/drivers/iommu/dma-iommu.c
+++ b/drivers/iommu/dma-iommu.c
@@ -818,8 +818,8 @@ static dma_addr_t iommu_dma_map_page(struct device *dev, struct page *page,
 		size_t padding_size;
 
 		aligned_size = iova_align(iovad, size);
-		phys = swiotlb_tbl_map_single(dev, phys, size,
-					      aligned_size, dir, attrs);
+		phys = swiotlb_tbl_map_single(dev, phys, size, aligned_size,
+					      iova_mask(iovad), dir, attrs);
 
 		if (phys == DMA_MAPPING_ERROR)
 			return DMA_MAPPING_ERROR;