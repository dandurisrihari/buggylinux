{
  "hash": "2cbc61a1b1665c84282dbf2b1747ffa0b6248639",
  "hash_short": "2cbc61a1",
  "subject": "iommu/dma: Account for min_align_mask w/swiotlb",
  "body": "Pass the non-aligned size to __iommu_dma_map when using swiotlb bounce\nbuffers in iommu_dma_map_page, to account for min_align_mask.\n\nTo deal with granule alignment, __iommu_dma_map maps iova_align(size +\niova_off) bytes starting at phys - iova_off. If iommu_dma_map_page\npasses aligned size when using swiotlb, then this becomes\niova_align(iova_align(orig_size) + iova_off). Normally iova_off will be\nzero when using swiotlb. However, this is not the case for devices that\nset min_align_mask. When iova_off is non-zero, __iommu_dma_map ends up\nmapping an extra page at the end of the buffer. Beyond just being a\nsecurity issue, the extra page is not cleaned up by __iommu_dma_unmap.\nThis causes problems when the IOVA is reused, due to collisions in the\niommu driver.  Just passing the original size is sufficient, since\n__iommu_dma_map will take care of granule alignment.\n\nFixes: 1f221a0d0dbf (\"swiotlb: respect min_align_mask\")\nSigned-off-by: David Stevens <stevensd@chromium.org>\nLink: https://lore.kernel.org/r/20210929023300.335969-8-stevensd@google.com\nSigned-off-by: Joerg Roedel <jroedel@suse.de>",
  "full_message": "iommu/dma: Account for min_align_mask w/swiotlb\n\nPass the non-aligned size to __iommu_dma_map when using swiotlb bounce\nbuffers in iommu_dma_map_page, to account for min_align_mask.\n\nTo deal with granule alignment, __iommu_dma_map maps iova_align(size +\niova_off) bytes starting at phys - iova_off. If iommu_dma_map_page\npasses aligned size when using swiotlb, then this becomes\niova_align(iova_align(orig_size) + iova_off). Normally iova_off will be\nzero when using swiotlb. However, this is not the case for devices that\nset min_align_mask. When iova_off is non-zero, __iommu_dma_map ends up\nmapping an extra page at the end of the buffer. Beyond just being a\nsecurity issue, the extra page is not cleaned up by __iommu_dma_unmap.\nThis causes problems when the IOVA is reused, due to collisions in the\niommu driver.  Just passing the original size is sufficient, since\n__iommu_dma_map will take care of granule alignment.\n\nFixes: 1f221a0d0dbf (\"swiotlb: respect min_align_mask\")\nSigned-off-by: David Stevens <stevensd@chromium.org>\nLink: https://lore.kernel.org/r/20210929023300.335969-8-stevensd@google.com\nSigned-off-by: Joerg Roedel <jroedel@suse.de>",
  "author_name": "David Stevens",
  "author_email": "stevensd@chromium.org",
  "author_date": "Wed Sep 29 11:33:00 2021 +0900",
  "author_date_iso": "2021-09-29T11:33:00+09:00",
  "committer_name": "Joerg Roedel",
  "committer_email": "jroedel@suse.de",
  "committer_date": "Wed Sep 29 12:50:42 2021 +0200",
  "committer_date_iso": "2021-09-29T12:50:42+02:00",
  "files_changed": [
    "drivers/iommu/dma-iommu.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/iommu/dma-iommu.c",
      "insertions": 2,
      "deletions": 3
    }
  ],
  "total_insertions": 2,
  "total_deletions": 3,
  "total_changes": 5,
  "parents": [
    "e81e99bacc9f9347bda7808a949c1ce9fcc2bbf4"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/iommu/dma-iommu.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}