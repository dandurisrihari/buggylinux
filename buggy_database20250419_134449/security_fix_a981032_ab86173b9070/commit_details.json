{
  "hash": "a9810327726b01404ecde082c075a7468c433ddf",
  "hash_short": "a9810327",
  "subject": "KVM: s390: optimize wakeup for exitless interrupts",
  "body": "For interrupt injection of floating interrupts we queue the interrupt\neither in the GISA or in the floating  interrupt list. The first CPU\nthat looks at these data structures - either in KVM code or hardware\nwill then deliver that interrupt. To minimize latency we also:\n-a: choose a VCPU to deliver that interrupt. We prefer idle CPUs\n-b: we wake up the host thread that runs the VCPU\n-c: set an I/O intervention bit for that CPU so that it exits guest\n    context as soon as the PSW I/O mask is enabled\nThis will make sure that this CPU will execute the interrupt delivery\ncode of KVM very soon.\n\nWe can now optimize the injection case if we have exitless interrupts.\nThe wakeup is still necessary in case the target CPU sleeps. We can\navoid the I/O intervention request bit though. Whenever this\nintervention request would be handled, the hardware could also directly\ninject the interrupt on that CPU, no need to go through the interrupt\ninjection loop of KVM.\n\nCc: Michael Mueller <mimu@linux.vnet.ibm.com>\nReviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nReviewed-by: Cornelia Huck <cohuck@redhat.com>\nSigned-off-by: Christian Borntraeger <borntraeger@de.ibm.com>",
  "full_message": "KVM: s390: optimize wakeup for exitless interrupts\n\nFor interrupt injection of floating interrupts we queue the interrupt\neither in the GISA or in the floating  interrupt list. The first CPU\nthat looks at these data structures - either in KVM code or hardware\nwill then deliver that interrupt. To minimize latency we also:\n-a: choose a VCPU to deliver that interrupt. We prefer idle CPUs\n-b: we wake up the host thread that runs the VCPU\n-c: set an I/O intervention bit for that CPU so that it exits guest\n    context as soon as the PSW I/O mask is enabled\nThis will make sure that this CPU will execute the interrupt delivery\ncode of KVM very soon.\n\nWe can now optimize the injection case if we have exitless interrupts.\nThe wakeup is still necessary in case the target CPU sleeps. We can\navoid the I/O intervention request bit though. Whenever this\nintervention request would be handled, the hardware could also directly\ninject the interrupt on that CPU, no need to go through the interrupt\ninjection loop of KVM.\n\nCc: Michael Mueller <mimu@linux.vnet.ibm.com>\nReviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nReviewed-by: Cornelia Huck <cohuck@redhat.com>\nSigned-off-by: Christian Borntraeger <borntraeger@de.ibm.com>",
  "author_name": "Christian Borntraeger",
  "author_email": "borntraeger@de.ibm.com",
  "author_date": "Mon Jan 29 12:22:45 2018 +0100",
  "author_date_iso": "2018-01-29T12:22:45+01:00",
  "committer_name": "Christian Borntraeger",
  "committer_email": "borntraeger@de.ibm.com",
  "committer_date": "Wed Feb 14 08:16:42 2018 +0000",
  "committer_date_iso": "2018-02-14T08:16:42+00:00",
  "files_changed": [
    "arch/s390/kvm/interrupt.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/s390/kvm/interrupt.c",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 2,
  "total_deletions": 1,
  "total_changes": 3,
  "parents": [
    "7928b2cbe55b2a410a0f5c1f154610059c57b1b2"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/s390/kvm/interrupt.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}