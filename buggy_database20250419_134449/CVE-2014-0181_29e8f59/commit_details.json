{
  "hash": "29e8f59cf1ff91f2854563faddc5f61098cf4958",
  "hash_short": "29e8f59c",
  "subject": "Merge branch 'netlink-caps'",
  "body": "Eric W. Biederman says:\n\n====================\nnetlink: Preventing abuse when passing file descriptors.\n\nAndy Lutomirski when looking at the networking stack noticed that it is\npossible to trick privilged processes into calling write on a netlink\nsocket and send netlink messages they did not intend.\n\nIn particular from time to time there are suid applications that will\nwrite to stdout or stderr without checking exactly what kind of file\ndescriptors those are and can be tricked into acting as a limited form\nof suid cat.  In other conversations the magic string CVE-2014-0181 has\nbeen used to talk about this issue.\n\nThis patchset cleans things up a bit, adds some clean abstractions that\nwhen used prevent this kind of problem and then finally changes all of\nthe handlers of netlink messages that I could find that call capable to\nuse netlink_ns_capable or an appropriate wrapper.\n\nThe abstraction netlink_ns_capable verifies that the original creator of\nthe netlink socket a message is sent from had the necessary capabilities\nas well as verifying that the current sender of a netlink packet has the\nnecessary capabilities.\n\nThe idea is to prevent file descriptor passing of any form from\nresulting in a file descriptor that can do more than it can for the\ncreator of the file descriptor.\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "Merge branch 'netlink-caps'\n\nEric W. Biederman says:\n\n====================\nnetlink: Preventing abuse when passing file descriptors.\n\nAndy Lutomirski when looking at the networking stack noticed that it is\npossible to trick privilged processes into calling write on a netlink\nsocket and send netlink messages they did not intend.\n\nIn particular from time to time there are suid applications that will\nwrite to stdout or stderr without checking exactly what kind of file\ndescriptors those are and can be tricked into acting as a limited form\nof suid cat.  In other conversations the magic string CVE-2014-0181 has\nbeen used to talk about this issue.\n\nThis patchset cleans things up a bit, adds some clean abstractions that\nwhen used prevent this kind of problem and then finally changes all of\nthe handlers of netlink messages that I could find that call capable to\nuse netlink_ns_capable or an appropriate wrapper.\n\nThe abstraction netlink_ns_capable verifies that the original creator of\nthe netlink socket a message is sent from had the necessary capabilities\nas well as verifying that the current sender of a netlink packet has the\nnecessary capabilities.\n\nThe idea is to prevent file descriptor passing of any form from\nresulting in a file descriptor that can do more than it can for the\ncreator of the file descriptor.\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "David S. Miller",
  "author_email": "davem@davemloft.net",
  "author_date": "Thu Apr 24 13:45:04 2014 -0400",
  "author_date_iso": "2014-04-24T13:45:04-04:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Thu Apr 24 13:45:04 2014 -0400",
  "committer_date_iso": "2014-04-24T13:45:04-04:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "crypto/crypto_user.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/connector/cn_proc.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/scsi/scsi_netlink.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "include/linux/netlink.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "include/linux/sock_diag.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "include/net/sock.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "kernel/audit.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "net/can/gw.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "net/core/rtnetlink.c",
      "insertions": 11,
      "deletions": 9
    },
    {
      "file": "net/core/sock.c",
      "insertions": 49,
      "deletions": 0
    },
    {
      "file": "net/core/sock_diag.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "net/dcb/dcbnl.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/decnet/dn_dev.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "net/decnet/dn_fib.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "net/decnet/netfilter/dn_rtmsg.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/netfilter/nfnetlink.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/netlink/af_netlink.c",
      "insertions": 70,
      "deletions": 5
    },
    {
      "file": "net/netlink/genetlink.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/packet/diag.c",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "net/phonet/pn_netlink.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "net/sched/act_api.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/sched/cls_api.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/sched/sch_api.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "net/tipc/netlink.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/xfrm/xfrm_user.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 177,
  "total_deletions": 44,
  "total_changes": 221,
  "parents": [
    "98a46d46d1bc983125b6ff9a0e831050a7011713",
    "90f62cf30a78721641e08737bda787552428061e"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.15",
    "v3.15-rc5",
    "v3.15-rc6",
    "v3.15-rc7",
    "v3.15-rc8",
    "v3.16",
    "v3.16-rc1",
    "v3.16-rc2",
    "v3.16-rc3",
    "v3.16-rc4"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [
      "CVE-2014-0181"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": []
}