commit 919beb4eedc587b70f8c1390fedac10cda783c36
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Thu Mar 31 10:05:42 2016 +0100

    MIPS: KASLR: Print relocation Information on boot
    
    When debugging a relocated kernel, the addresses of the relocated
    symbols and the offset applied is essential information. If the kernel
    is compiled with debugging information, then print this information
    during bootup using the same function as the panic notifier.
    
    [ralf@linux-mips.org: Fixed spelling mistake pointed out by
    Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>.]
    
    Signed-off-by: Matt Redfearn <matt.redfearn@imgtec.com>
    Cc: Aaro Koskinen <aaro.koskinen@nokia.com>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Alexander Sverdlin <alexander.sverdlin@gmail.com>
    Cc: Jaedon Shin <jaedon.shin@gmail.com>
    Cc: Jonas Gorski <jogo@openwrt.org>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/12989/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c
index 3378fdaf4dd3..9b20a0f89812 100644
--- a/arch/mips/kernel/setup.c
+++ b/arch/mips/kernel/setup.c
@@ -477,9 +477,18 @@ static void __init bootmem_init(void)
 	 */
 	if (__pa_symbol(_text) > __pa_symbol(VMLINUX_LOAD_ADDRESS)) {
 		unsigned long offset;
+		extern void show_kernel_relocation(const char *level);
 
 		offset = __pa_symbol(_text) - __pa_symbol(VMLINUX_LOAD_ADDRESS);
 		free_bootmem(__pa_symbol(VMLINUX_LOAD_ADDRESS), offset);
+
+#if defined(CONFIG_DEBUG_KERNEL) && defined(CONFIG_DEBUG_INFO)
+		/*
+		 * This information is necessary when debugging the kernel
+		 * But is a security vulnerability otherwise!
+		 */
+		show_kernel_relocation(KERN_INFO);
+#endif
 	}
 #endif