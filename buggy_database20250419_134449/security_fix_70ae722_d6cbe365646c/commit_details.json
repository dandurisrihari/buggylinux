{
  "hash": "70ae7222c61d4f19c844c8fe75f053f8976b9552",
  "hash_short": "70ae7222",
  "subject": "Merge branch 'inet-frags-bring-rhashtables-to-IP-defrag'",
  "body": "Eric Dumazet says:\n\n====================\ninet: frags: bring rhashtables to IP defrag\n\nIP defrag processing is one of the remaining problematic layer in linux.\n\nIt uses static hash tables of 1024 buckets, and up to 128 items per bucket.\n\nA work queue is supposed to garbage collect items when host is under memory\npressure, and doing a hash rebuild, changing seed used in hash computations.\n\nThis work queue blocks softirqs for up to 25 ms when doing a hash rebuild,\noccurring every 5 seconds if host is under fire.\n\nThen there is the problem of sharing this hash table for all netns.\n\nIt is time to switch to rhashtables, and allocate one of them per netns\nto speedup netns dismantle, since this is a critical metric these days.\n\nLookup is now using RCU, and 64bit hosts can now provision whatever amount\nof memory needed to handle the expected workloads.\n\nv2: Addressed Herbert and Kirill feedbacks\n  (Use rhashtable_free_and_destroy(), and split the big patch into small units)\n\nv3: Removed the extra add_frag_mem_limit(...) from inet_frag_create()\n    Removed the refcount_inc_not_zero() call from inet_frags_free_cb(),\n    as we can exploit del_timer() return value.\n\nv4: kbuild robot feedback about one missing static (squashed)\n    Additional patches :\n      inet: frags: do not clone skb in ip_expire()\n      ipv6: frags: rewrite ip6_expire_frag_queue()\n      rhashtable: reorganize struct rhashtable layout\n      inet: frags: reorganize struct netns_frags\n      inet: frags: get rid of ipfrag_skb_cb/FRAG_CB\n      ipv6: frags: get rid of ip6frag_skb_cb/FRAG6_CB\n      inet: frags: get rid of nf_ct_frag6_skb_cb/NFCT_FRAG6_CB\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "Merge branch 'inet-frags-bring-rhashtables-to-IP-defrag'\n\nEric Dumazet says:\n\n====================\ninet: frags: bring rhashtables to IP defrag\n\nIP defrag processing is one of the remaining problematic layer in linux.\n\nIt uses static hash tables of 1024 buckets, and up to 128 items per bucket.\n\nA work queue is supposed to garbage collect items when host is under memory\npressure, and doing a hash rebuild, changing seed used in hash computations.\n\nThis work queue blocks softirqs for up to 25 ms when doing a hash rebuild,\noccurring every 5 seconds if host is under fire.\n\nThen there is the problem of sharing this hash table for all netns.\n\nIt is time to switch to rhashtables, and allocate one of them per netns\nto speedup netns dismantle, since this is a critical metric these days.\n\nLookup is now using RCU, and 64bit hosts can now provision whatever amount\nof memory needed to handle the expected workloads.\n\nv2: Addressed Herbert and Kirill feedbacks\n  (Use rhashtable_free_and_destroy(), and split the big patch into small units)\n\nv3: Removed the extra add_frag_mem_limit(...) from inet_frag_create()\n    Removed the refcount_inc_not_zero() call from inet_frags_free_cb(),\n    as we can exploit del_timer() return value.\n\nv4: kbuild robot feedback about one missing static (squashed)\n    Additional patches :\n      inet: frags: do not clone skb in ip_expire()\n      ipv6: frags: rewrite ip6_expire_frag_queue()\n      rhashtable: reorganize struct rhashtable layout\n      inet: frags: reorganize struct netns_frags\n      inet: frags: get rid of ipfrag_skb_cb/FRAG_CB\n      ipv6: frags: get rid of ip6frag_skb_cb/FRAG6_CB\n      inet: frags: get rid of nf_ct_frag6_skb_cb/NFCT_FRAG6_CB\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "David S. Miller",
  "author_email": "davem@davemloft.net",
  "author_date": "Sat Mar 31 23:25:40 2018 -0400",
  "author_date_iso": "2018-03-31T23:25:40-04:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Sat Mar 31 23:25:40 2018 -0400",
  "committer_date_iso": "2018-03-31T23:25:40-04:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "Documentation/networking/ip-sysctl.txt",
      "insertions": 5,
      "deletions": 8
    },
    {
      "file": "include/linux/rhashtable.h",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "include/linux/skbuff.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/net/inet_frag.h",
      "insertions": 55,
      "deletions": 71
    },
    {
      "file": "include/net/ip.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "include/net/ipv6.h",
      "insertions": 2,
      "deletions": 25
    },
    {
      "file": "lib/rhashtable.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "net/ieee802154/6lowpan/6lowpan_i.h",
      "insertions": 4,
      "deletions": 22
    },
    {
      "file": "net/ieee802154/6lowpan/reassembly.c",
      "insertions": 74,
      "deletions": 74
    },
    {
      "file": "net/ipv4/inet_fragment.c",
      "insertions": 69,
      "deletions": 289
    },
    {
      "file": "net/ipv4/ip_fragment.c",
      "insertions": 114,
      "deletions": 139
    },
    {
      "file": "net/ipv4/proc.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "net/ipv6/netfilter/nf_conntrack_reasm.c",
      "insertions": 49,
      "deletions": 74
    },
    {
      "file": "net/ipv6/proc.c",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "net/ipv6/reassembly.c",
      "insertions": 114,
      "deletions": 115
    }
  ],
  "total_insertions": 499,
  "total_deletions": 827,
  "total_changes": 1326,
  "parents": [
    "5749d6af4925a9da362b37df920c2a1dc54689a1",
    "f2d1c724fca176ddbd32a9397df49221afbcb227"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7",
    "v4.18",
    "v4.18-rc1"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": []
}