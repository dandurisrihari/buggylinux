{
  "hash": "cd9e6da8048c5b40315ee2d929b6230ce1252c3c",
  "hash_short": "cd9e6da8",
  "subject": "KVM: SVM: Unwind \"speculative\" RIP advancement if INTn injection \"fails\"",
  "body": "Unwind the RIP advancement done by svm_queue_exception() when injecting\nan INT3 ultimately \"fails\" due to the CPU encountering a VM-Exit while\nvectoring the injected event, even if the exception reported by the CPU\nisn't the same event that was injected.  If vectoring INT3 encounters an\nexception, e.g. #NP, and vectoring the #NP encounters an intercepted\nexception, e.g. #PF when KVM is using shadow paging, then the #NP will\nbe reported as the event that was in-progress.\n\nNote, this is still imperfect, as it will get a false positive if the\nINT3 is cleanly injected, no VM-Exit occurs before the IRET from the INT3\nhandler in the guest, the instruction following the INT3 generates an\nexception (directly or indirectly), _and_ vectoring that exception\nencounters an exception that is intercepted by KVM.  The false positives\ncould theoretically be solved by further analyzing the vectoring event,\ne.g. by comparing the error code against the expected error code were an\nexception to occur when vectoring the original injected exception, but\nSVM without NRIPS is a complete disaster, trying to make it 100% correct\nis a waste of time.\n\nReviewed-by: Maxim Levitsky <mlevitsk@redhat.com>\nFixes: 66b7138f9136 (\"KVM: SVM: Emulate nRIP feature when reinjecting INT3\")\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nSigned-off-by: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>\nMessage-Id: <450133cf0a026cb9825a2ff55d02cb136a1cb111.1651440202.git.maciej.szmigiero@oracle.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: SVM: Unwind \"speculative\" RIP advancement if INTn injection \"fails\"\n\nUnwind the RIP advancement done by svm_queue_exception() when injecting\nan INT3 ultimately \"fails\" due to the CPU encountering a VM-Exit while\nvectoring the injected event, even if the exception reported by the CPU\nisn't the same event that was injected.  If vectoring INT3 encounters an\nexception, e.g. #NP, and vectoring the #NP encounters an intercepted\nexception, e.g. #PF when KVM is using shadow paging, then the #NP will\nbe reported as the event that was in-progress.\n\nNote, this is still imperfect, as it will get a false positive if the\nINT3 is cleanly injected, no VM-Exit occurs before the IRET from the INT3\nhandler in the guest, the instruction following the INT3 generates an\nexception (directly or indirectly), _and_ vectoring that exception\nencounters an exception that is intercepted by KVM.  The false positives\ncould theoretically be solved by further analyzing the vectoring event,\ne.g. by comparing the error code against the expected error code were an\nexception to occur when vectoring the original injected exception, but\nSVM without NRIPS is a complete disaster, trying to make it 100% correct\nis a waste of time.\n\nReviewed-by: Maxim Levitsky <mlevitsk@redhat.com>\nFixes: 66b7138f9136 (\"KVM: SVM: Emulate nRIP feature when reinjecting INT3\")\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nSigned-off-by: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>\nMessage-Id: <450133cf0a026cb9825a2ff55d02cb136a1cb111.1651440202.git.maciej.szmigiero@oracle.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Mon May 2 00:07:27 2022 +0200",
  "author_date_iso": "2022-05-02T00:07:27+02:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Wed Jun 8 04:46:46 2022 -0400",
  "committer_date_iso": "2022-06-08T04:46:46-04:00",
  "files_changed": [
    "arch/x86/kvm/svm/svm.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "insertions": 15,
      "deletions": 8
    }
  ],
  "total_insertions": 15,
  "total_deletions": 8,
  "total_changes": 23,
  "parents": [
    "f17c31c48e5cde9895a491d91c424eeeada3e134"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}