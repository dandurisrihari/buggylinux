commit d99676af540c2dc829999928fb81c58c80a1dce4
Merge: 10e2ec8edece f730f39eb981
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Feb 21 14:44:44 2021 -0800

    Merge tag 'drm-next-2021-02-19' of git://anongit.freedesktop.org/drm/drm
    
    Pull drm updates from Dave Airlie:
     "A pretty normal tree, lots of refactoring across the board, ttm, i915,
      nouveau, and bunch of features in various drivers.
    
      docs:
       - lots of updated docs
    
      core:
       - require crtc to have unique primary plane
       - fourcc macro fix
       - PCI bar quirk for bar resizing
       - don't sent hotplug on error
       - move vm code to legacy
       - nuke hose only used on old oboslete alpha
    
      dma-buf:
       - kernel doc updates
       - improved lock tracking
    
      dp/hdmi:
       - DP-HDMI2.1 protocol converter support
    
      ttm:
       - bo size handling cleanup
       - release a pinned bo warning
       - cleanup lru handler
       - avoid using pages with drm_prime_sg_to_page_addr_arrays
    
      cma-helper:
       - prime/mmap fixes
    
      bridge:
       - add DP support
    
      gma500:
       - remove gma3600 support
    
      i915:
       - try eDP fast/narrow link again with fallback
       - Intel eDP backlight control
       - replace display register read/write macros
       - refactor intel_display.c
       - display power improvements
       - HPD code cleanup
       - Rocketlake display fixes
       - Power/backlight/RPM fixes
       - DG1 display fix
       - IVB/BYT clear residuals security fix again
       - make i915 mitigations options via parameter
       - HSW GT1 GPU hangs fixes
       - DG1 workaround hang fixes
       - TGL DMAR hang avoidance
       - Lots of GT fixes
       - follow on fixes for residuals clear
       - gen7 per-engine-reset support
       - HDCP2.2 + HDCP1.4 GEN12 DP MST support
       - TGL clear color support
       - backlight refactoring
       - VRR/Adaptive sync enabling on DP/EDP for TGL+
       - async flips for all ilk+
    
      amdgpu:
       - rework IH ring handling (Vega/Navi)
       - rework HDP handling (Vega/Navi)
       - swSMU updates for renoir/vangogh
       - Sienna Cichild overdrive support
       - FP16 on DCE8-11 support
       - GPU reset on navy flounder/vangogh
       - SMU profile fixes for APU
       - SR-IOV fixes
       - Vangogh SMU fixes
       - fan speed control fixes
    
      amdkfd:
       - config handling fix
       - buffer free fix
       - recursive lock warnings fix
    
      nouveau:
       - Turing MMU fault recovery fixes
       - mDP connectors reporting fix
       - audio locking fixes
       - rework engines/instances code to support new scheme
    
      tegra:
       - VIC newer firmware support
       - display/gr2d fixes for older tegra
       - pm reference leak fix
    
      mediatek:
       - SOC MT8183 support
       - decouple sub driver + share mtk mutex driver
    
      radeon:
       - PCI resource fix for some platforms
    
      ingenic:
       - pm support
       - 8-bit delta RGB panels
    
      vmwgfx:
       - managed driver helpers
    
      vc4:
       - BCM2711 DSI1 support
       - converted to atomic helpers
       - enable 10/12 bpc outputs
       - gem prime mmap helpers
       - CEC fix
    
      omap:
       - use degamma table
       - CTM support
       - rework DSI support
    
      imx:
       - stack usage fixes
       - drm managed support
       - imx-tve clock provider leak fix
    -
    
      rcar-du:
       - default mode fixes
       - conversion to managed API
    
      hisilicon:
       - use simple encoder
    
      vkms:
       - writeback connector support
    
      d3:
       - BT2020 support"
    
    * tag 'drm-next-2021-02-19' of git://anongit.freedesktop.org/drm/drm: (1459 commits)
      drm/amdgpu: Set reference clock to 100Mhz on Renoir (v2)
      drm/radeon: OLAND boards don't have VCE
      drm/amdkfd: Fix recursive lock warnings
      drm/amd/display: Add FPU wrappers to dcn21_validate_bandwidth()
      drm/amd/display: Fix potential integer overflow
      drm/amdgpu/display: remove hdcp_srm sysfs on device removal
      drm/amdgpu: fix CGTS_TCC_DISABLE register offset on gfx10.3
      drm/i915/gt: Correct surface base address for renderclear
      drm/i915: Disallow plane x+w>stride on ilk+ with X-tiling
      drm/nouveau/top/ga100: initial support
      drm/nouveau/top: add ioctrl/nvjpg
      drm/nouveau/privring: rename from ibus
      drm/nouveau/nvkm: remove nvkm_subdev.index
      drm/nouveau/nvkm: determine subdev id/order from layout
      drm/nouveau/vic: switch to instanced constructor
      drm/nouveau/sw: switch to instanced constructor
      drm/nouveau/sec2: switch to instanced constructor
      drm/nouveau/sec: switch to instanced constructor
      drm/nouveau/pm: switch to instanced constructor
      drm/nouveau/nvenc: switch to instanced constructor
      ...

diff --cc drivers/gpu/drm/i915/display/intel_ddi.c
index dc13d1814d95,fbd857f2bdb2..1bb40ec5fe5d
--- a/drivers/gpu/drm/i915/display/intel_ddi.c
+++ b/drivers/gpu/drm/i915/display/intel_ddi.c
@@@ -2754,16 -2827,12 +2827,15 @@@ static void icl_mg_phy_ddi_vswing_seque
  	int n_entries, ln;
  	u32 val;
  
 +	if (enc_to_dig_port(encoder)->tc_mode == TC_PORT_TBT_ALT)
 +		return;
 +
  	ddi_translations = icl_get_mg_buf_trans(encoder, crtc_state, &n_entries);
- 	if (level >= n_entries) {
- 		drm_dbg_kms(&dev_priv->drm,
- 			    "DDI translation not found for level %d. Using %d instead.",
- 			    level, n_entries - 1);
+ 
+ 	if (drm_WARN_ON_ONCE(&dev_priv->drm, !ddi_translations))
+ 		return;
+ 	if (drm_WARN_ON_ONCE(&dev_priv->drm, level >= n_entries))
  		level = n_entries - 1;
- 	}
  
  	/* Set MG_TX_LINK_PARAMS cri_use_fs32 to 0. */
  	for (ln = 0; ln < 2; ln++) {
@@@ -2893,12 -2962,11 +2965,14 @@@ tgl_dkl_phy_ddi_vswing_sequence(struct 
  	u32 val, dpcnt_mask, dpcnt_val;
  	int n_entries, ln;
  
 +	if (enc_to_dig_port(encoder)->tc_mode == TC_PORT_TBT_ALT)
 +		return;
 +
  	ddi_translations = tgl_get_dkl_buf_trans(encoder, crtc_state, &n_entries);
  
- 	if (level >= n_entries)
+ 	if (drm_WARN_ON_ONCE(&dev_priv->drm, !ddi_translations))
+ 		return;
+ 	if (drm_WARN_ON_ONCE(&dev_priv->drm, level >= n_entries))
  		level = n_entries - 1;
  
  	dpcnt_mask = (DKL_TX_PRESHOOT_COEFF_MASK |