commit 7c5a6a5970af76b3a303757487d50b18d6830f66
Author: Liran Alon <liran.alon@oracle.com>
Date:   Fri Mar 23 03:01:30 2018 +0300

    KVM: VMX: No need to clear pending NMI/interrupt on inject realmode interrupt
    
    kvm_inject_realmode_interrupt() is called from one of the injection
    functions which writes event-injection to VMCS: vmx_queue_exception(),
    vmx_inject_irq() and vmx_inject_nmi().
    
    All these functions are called just to cause an event-injection to
    guest. They are not responsible of manipulating the event-pending
    flag. The only purpose of kvm_inject_realmode_interrupt() should be
    to emulate real-mode interrupt-injection.
    
    This was also incorrect when called from vmx_queue_exception().
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 260261d01a41..dfa135bb0e5a 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -5681,11 +5681,6 @@ int kvm_inject_realmode_interrupt(struct kvm_vcpu *vcpu, int irq, int inc_eip)
 	kvm_rip_write(vcpu, ctxt->eip);
 	kvm_set_rflags(vcpu, ctxt->eflags);
 
-	if (irq == NMI_VECTOR)
-		vcpu->arch.nmi_pending = 0;
-	else
-		vcpu->arch.interrupt.pending = false;
-
 	return EMULATE_DONE;
 }
 EXPORT_SYMBOL_GPL(kvm_inject_realmode_interrupt);