commit acdc3e47881d86dc1cb89d4603e3fed90ab150db
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Sep 2 16:12:38 2022 +0200

    wifi: mac80211: mlme: assign link address correctly
    
    Right now, we assign the link address only after we add
    the link to the driver, which is quite obviously wrong.
    It happens to work in many cases because it gets updated
    immediately, and then link_conf updates may update it,
    but it's clearly not really right.
    
    Set the link address during ieee80211_mgd_setup_link()
    so it's set before telling the driver about the link.
    
    Fixes: 81151ce462e5 ("wifi: mac80211: support MLO authentication/association with one link")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index 640a77f5e413..20d123a1385e 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -6323,6 +6323,8 @@ void ieee80211_mgd_setup_link(struct ieee80211_link_data *link)
 	if (sdata->u.mgd.assoc_data)
 		ether_addr_copy(link->conf->addr,
 				sdata->u.mgd.assoc_data->link[link_id].addr);
+	else if (!is_valid_ether_addr(link->conf->addr))
+		eth_random_addr(link->conf->addr);
 }
 
 /* scan finished notification */
@@ -6410,9 +6412,6 @@ static int ieee80211_prep_connection(struct ieee80211_sub_if_data *sdata,
 		goto out_err;
 	}
 
-	if (mlo && !is_valid_ether_addr(link->conf->addr))
-		eth_random_addr(link->conf->addr);
-
 	if (WARN_ON(!ifmgd->auth_data && !ifmgd->assoc_data)) {
 		err = -EINVAL;
 		goto out_err;