{
  "hash": "189af4657186da08a2e79fb8e906cfd82b2ccddc",
  "hash_short": "189af465",
  "subject": "ARM: smp: add support for per-task stack canaries",
  "body": "On ARM, we currently only change the value of the stack canary when\nswitching tasks if the kernel was built for UP. On SMP kernels, this\nis impossible since the stack canary value is obtained via a global\nsymbol reference, which means\na) all running tasks on all CPUs must use the same value\nb) we can only modify the value when no kernel stack frames are live\n   on any CPU, which is effectively never.\n\nSo instead, use a GCC plugin to add a RTL pass that replaces each\nreference to the address of the __stack_chk_guard symbol with an\nexpression that produces the address of the 'stack_canary' field\nthat is added to struct thread_info. This way, each task will use\nits own randomized value.\n\nCc: Russell King <linux@armlinux.org.uk>\nCc: Kees Cook <keescook@chromium.org>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Laura Abbott <labbott@redhat.com>\nCc: kernel-hardening@lists.openwall.com\nAcked-by: Nicolas Pitre <nico@linaro.org>\nSigned-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "ARM: smp: add support for per-task stack canaries\n\nOn ARM, we currently only change the value of the stack canary when\nswitching tasks if the kernel was built for UP. On SMP kernels, this\nis impossible since the stack canary value is obtained via a global\nsymbol reference, which means\na) all running tasks on all CPUs must use the same value\nb) we can only modify the value when no kernel stack frames are live\n   on any CPU, which is effectively never.\n\nSo instead, use a GCC plugin to add a RTL pass that replaces each\nreference to the address of the __stack_chk_guard symbol with an\nexpression that produces the address of the 'stack_canary' field\nthat is added to struct thread_info. This way, each task will use\nits own randomized value.\n\nCc: Russell King <linux@armlinux.org.uk>\nCc: Kees Cook <keescook@chromium.org>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Laura Abbott <labbott@redhat.com>\nCc: kernel-hardening@lists.openwall.com\nAcked-by: Nicolas Pitre <nico@linaro.org>\nSigned-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "Ard Biesheuvel",
  "author_email": "ard.biesheuvel@linaro.org",
  "author_date": "Thu Dec 6 09:32:57 2018 +0100",
  "author_date_iso": "2018-12-06T09:32:57+01:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Wed Dec 12 13:20:07 2018 -0800",
  "committer_date_iso": "2018-12-12T13:20:07-08:00",
  "files_changed": [
    "arch/arm/Kconfig",
    "arch/arm/Makefile",
    "arch/arm/boot/compressed/Makefile",
    "arch/arm/include/asm/stackprotector.h",
    "arch/arm/include/asm/thread_info.h",
    "arch/arm/kernel/asm-offsets.c",
    "arch/arm/kernel/process.c",
    "scripts/Makefile.gcc-plugins",
    "scripts/gcc-plugins/Kconfig",
    "scripts/gcc-plugins/arm_ssp_per_task_plugin.c"
  ],
  "files_changed_count": 10,
  "stats": [
    {
      "file": "arch/arm/Kconfig",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "arch/arm/Makefile",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "arch/arm/boot/compressed/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm/include/asm/stackprotector.h",
      "insertions": 10,
      "deletions": 2
    },
    {
      "file": "arch/arm/include/asm/thread_info.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm/kernel/asm-offsets.c",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/arm/kernel/process.c",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "scripts/Makefile.gcc-plugins",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "scripts/gcc-plugins/Kconfig",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "scripts/gcc-plugins/arm_ssp_per_task_plugin.c",
      "insertions": 103,
      "deletions": 0
    }
  ],
  "total_insertions": 163,
  "total_deletions": 3,
  "total_changes": 166,
  "parents": [
    "ccda4af0f4b92f7b4c308d3acc262f4a7e3affad"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.0",
    "v5.0-rc1",
    "v5.0-rc2",
    "v5.0-rc3",
    "v5.0-rc4",
    "v5.0-rc5",
    "v5.0-rc6",
    "v5.0-rc7",
    "v5.0-rc8",
    "v5.1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/kernel/process.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/kernel/asm-offsets.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/boot/compressed/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/include/asm/thread_info.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/include/asm/stackprotector.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "scripts/Makefile.gcc-plugins",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "scripts/gcc-plugins/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "scripts/gcc-plugins/arm_ssp_per_task_plugin.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}