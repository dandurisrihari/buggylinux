{
  "hash": "8b5ee2c66d5c4c1312fd193d4138e6963160ba43",
  "hash_short": "8b5ee2c6",
  "subject": "LoongArch: Add support for function error injection",
  "body": "Inspired by the commit 42d038c4fb00f (\"arm64: Add support for function\nerror injection\") and the commit ee55ff803b383 (\"riscv: Add support for\nfunction error injection\"), this patch supports function error injection\nfor LoongArch.\n\nMainly implement two functions:\n(1) regs_set_return_value() which is used to overwrite the return value,\n(2) override_function_with_return() which is used to override the probed\nfunction returning and jump to its caller.\n\nHere is a simple test under CONFIG_FUNCTION_ERROR_INJECTION and\nCONFIG_FAIL_FUNCTION:\n\n  # echo sys_clone > /sys/kernel/debug/fail_function/inject\n  # echo 100 > /sys/kernel/debug/fail_function/probability\n  # dmesg\n  bash: fork: Invalid argument\n  # dmesg\n  ...\n  FAULT_INJECTION: forcing a failure.\n  name fail_function, interval 1, probability 100, space 0, times 1\n  ...\n  Call Trace:\n  [<90000000002238f4>] show_stack+0x5c/0x180\n  [<90000000012e384c>] dump_stack_lvl+0x60/0x88\n  [<9000000000b1879c>] should_fail_ex+0x1b0/0x1f4\n  [<900000000032ead4>] fei_kprobe_handler+0x28/0x6c\n  [<9000000000230970>] kprobe_breakpoint_handler+0xf0/0x118\n  [<90000000012e3e60>] do_bp+0x2c4/0x358\n  [<9000000002241924>] exception_handlers+0x1924/0x10000\n  [<900000000023b7d0>] sys_clone+0x0/0x4\n  [<90000000012e4744>] do_syscall+0x7c/0x94\n  [<9000000000221e44>] handle_syscall+0xc4/0x160\n\nTested-by: Hengqi Chen <hengqi.chen@gmail.com>\nAcked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>\nSigned-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>\nSigned-off-by: Huacai Chen <chenhuacai@loongson.cn>",
  "full_message": "LoongArch: Add support for function error injection\n\nInspired by the commit 42d038c4fb00f (\"arm64: Add support for function\nerror injection\") and the commit ee55ff803b383 (\"riscv: Add support for\nfunction error injection\"), this patch supports function error injection\nfor LoongArch.\n\nMainly implement two functions:\n(1) regs_set_return_value() which is used to overwrite the return value,\n(2) override_function_with_return() which is used to override the probed\nfunction returning and jump to its caller.\n\nHere is a simple test under CONFIG_FUNCTION_ERROR_INJECTION and\nCONFIG_FAIL_FUNCTION:\n\n  # echo sys_clone > /sys/kernel/debug/fail_function/inject\n  # echo 100 > /sys/kernel/debug/fail_function/probability\n  # dmesg\n  bash: fork: Invalid argument\n  # dmesg\n  ...\n  FAULT_INJECTION: forcing a failure.\n  name fail_function, interval 1, probability 100, space 0, times 1\n  ...\n  Call Trace:\n  [<90000000002238f4>] show_stack+0x5c/0x180\n  [<90000000012e384c>] dump_stack_lvl+0x60/0x88\n  [<9000000000b1879c>] should_fail_ex+0x1b0/0x1f4\n  [<900000000032ead4>] fei_kprobe_handler+0x28/0x6c\n  [<9000000000230970>] kprobe_breakpoint_handler+0xf0/0x118\n  [<90000000012e3e60>] do_bp+0x2c4/0x358\n  [<9000000002241924>] exception_handlers+0x1924/0x10000\n  [<900000000023b7d0>] sys_clone+0x0/0x4\n  [<90000000012e4744>] do_syscall+0x7c/0x94\n  [<9000000000221e44>] handle_syscall+0xc4/0x160\n\nTested-by: Hengqi Chen <hengqi.chen@gmail.com>\nAcked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>\nSigned-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>\nSigned-off-by: Huacai Chen <chenhuacai@loongson.cn>",
  "author_name": "Tiezhu Yang",
  "author_email": "yangtiezhu@loongson.cn",
  "author_date": "Mon May 1 17:19:52 2023 +0800",
  "author_date_iso": "2023-05-01T17:19:52+08:00",
  "committer_name": "Huacai Chen",
  "committer_email": "chenhuacai@loongson.cn",
  "committer_date": "Mon May 1 17:19:52 2023 +0800",
  "committer_date_iso": "2023-05-01T17:19:52+08:00",
  "files_changed": [
    "arch/loongarch/Kconfig",
    "arch/loongarch/include/asm/ptrace.h",
    "arch/loongarch/lib/Makefile",
    "arch/loongarch/lib/error-inject.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/loongarch/Kconfig",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/ptrace.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/lib/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/lib/error-inject.c",
      "insertions": 10,
      "deletions": 0
    }
  ],
  "total_insertions": 18,
  "total_deletions": 0,
  "total_changes": 18,
  "parents": [
    "d4c937c2a57bbba24790be6fe7a791456f5fbb60"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/loongarch/Kconfig",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/loongarch/include/asm/ptrace.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/loongarch/lib/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/loongarch/lib/error-inject.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}