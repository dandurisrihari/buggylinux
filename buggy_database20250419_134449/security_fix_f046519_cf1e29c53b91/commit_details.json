{
  "hash": "f046519fc85a8fdf6a058b4ac9d897cdee6f3e52",
  "hash_short": "f046519f",
  "subject": "libata: kill hotplug related race condition",
  "body": "Originally, whole reset processing was done while the port is frozen\nand SError was cleared during @postreset().  This had two race\nconditions.  1: hotplug could occur after reset but before SError is\ncleared and libata won't know about it.  2: hotplug could occur after\nall the reset is complete but before the port is thawed.  As all\nevents are cleared on thaw, the hotplug event would be lost.\n\nCommit ac371987a81c61c2efbd6931245cdcaf43baad89 kills the first race\nby clearing SError during link resume but before link onlineness test.\nHowever, this doesn't fix race #2 and in some cases clearing SError\nafter SRST is a good idea.\n\nThis patch solves this problem by cross checking link onlineness with\nclassification result after SError is cleared and port is thawed.\nReset is retried if link is online but all devices attached to the\nlink are unknown.  As all devices will be revalidated, this one-way\ncheck is enough to ensure that all devices are detected and\nrevalidated reliably.\n\nThis, luckily, also fixes the cases where host controller returns\nbogus status while harddrive is spinning up after hotplug making\nclassification run before the device sends the first FIS and thus\ncauses misdetection.\n\nLow level drivers can bypass the logic by setting class explicitly to\nATA_DEV_NONE if ever necessary (currently none requires this).\n\nSigned-off-by: Tejun Heo <htejun@gmail.com>\nSigned-off-by: Jeff Garzik <jgarzik@redhat.com>",
  "full_message": "libata: kill hotplug related race condition\n\nOriginally, whole reset processing was done while the port is frozen\nand SError was cleared during @postreset().  This had two race\nconditions.  1: hotplug could occur after reset but before SError is\ncleared and libata won't know about it.  2: hotplug could occur after\nall the reset is complete but before the port is thawed.  As all\nevents are cleared on thaw, the hotplug event would be lost.\n\nCommit ac371987a81c61c2efbd6931245cdcaf43baad89 kills the first race\nby clearing SError during link resume but before link onlineness test.\nHowever, this doesn't fix race #2 and in some cases clearing SError\nafter SRST is a good idea.\n\nThis patch solves this problem by cross checking link onlineness with\nclassification result after SError is cleared and port is thawed.\nReset is retried if link is online but all devices attached to the\nlink are unknown.  As all devices will be revalidated, this one-way\ncheck is enough to ensure that all devices are detected and\nrevalidated reliably.\n\nThis, luckily, also fixes the cases where host controller returns\nbogus status while harddrive is spinning up after hotplug making\nclassification run before the device sends the first FIS and thus\ncauses misdetection.\n\nLow level drivers can bypass the logic by setting class explicitly to\nATA_DEV_NONE if ever necessary (currently none requires this).\n\nSigned-off-by: Tejun Heo <htejun@gmail.com>\nSigned-off-by: Jeff Garzik <jgarzik@redhat.com>",
  "author_name": "Tejun Heo",
  "author_email": "htejun@gmail.com",
  "author_date": "Mon May 19 01:15:08 2008 +0900",
  "author_date_iso": "2008-05-19T01:15:08+09:00",
  "committer_name": "Jeff Garzik",
  "committer_email": "jgarzik@redhat.com",
  "committer_date": "Mon May 19 17:51:47 2008 -0400",
  "committer_date_iso": "2008-05-19T17:51:47-04:00",
  "files_changed": [
    "drivers/ata/libata-core.c",
    "drivers/ata/libata-eh.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/ata/libata-core.c",
      "insertions": 8,
      "deletions": 13
    },
    {
      "file": "drivers/ata/libata-eh.c",
      "insertions": 42,
      "deletions": 10
    }
  ],
  "total_insertions": 50,
  "total_deletions": 23,
  "total_changes": 73,
  "parents": [
    "dc98c32cbe80750ae2d9d9fbdae305d38f005de7"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.26",
    "v2.6.26-rc4",
    "v2.6.26-rc5",
    "v2.6.26-rc6",
    "v2.6.26-rc7",
    "v2.6.26-rc8",
    "v2.6.26-rc9",
    "v2.6.27",
    "v2.6.27-rc1",
    "v2.6.27-rc2"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "bypass"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/ata/libata-core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/ata/libata-eh.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}