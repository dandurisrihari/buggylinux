commit f29a824b0b6710328a78b018de3c2cfa9db65876
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Oct 4 16:04:49 2023 -0700

    cxl/pci: Clarify devm host for memdev relative setup
    
    It is all too easy to get confused about @dev usage in the CXL driver
    stack. Before adding a new cxl_pci_probe() setup operation that has a
    devm lifetime dependent on @cxlds->dev binding, but also references
    @cxlmd->dev, and prints messages, rework the devm_cxl_add_memdev() and
    cxl_memdev_setup_fw_upload() function signatures to make this
    distinction explicit. I.e. pass in the devm context as an @host argument
    rather than infer it from other objects.
    
    This is in preparation for adding a devm_cxl_sanitize_setup_notifier().
    
    Note the whitespace fixup near the change of the devm_cxl_add_memdev()
    signature. That uncaught typo originated in the patch that added
    cxl_memdev_security_init().
    
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

diff --git a/drivers/cxl/cxlmem.h b/drivers/cxl/cxlmem.h
index 55f00ad17a77..fdb2c8dd98d0 100644
--- a/drivers/cxl/cxlmem.h
+++ b/drivers/cxl/cxlmem.h
@@ -84,9 +84,10 @@ static inline bool is_cxl_endpoint(struct cxl_port *port)
 	return is_cxl_memdev(port->uport_dev);
 }
 
-struct cxl_memdev *devm_cxl_add_memdev(struct cxl_dev_state *cxlds);
+struct cxl_memdev *devm_cxl_add_memdev(struct device *host,
+				       struct cxl_dev_state *cxlds);
 struct cxl_memdev_state;
-int cxl_memdev_setup_fw_upload(struct cxl_memdev_state *mds);
+int devm_cxl_setup_fw_upload(struct device *host, struct cxl_memdev_state *mds);
 int devm_cxl_dpa_reserve(struct cxl_endpoint_decoder *cxled,
 			 resource_size_t base, resource_size_t len,
 			 resource_size_t skipped);