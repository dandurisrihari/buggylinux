{
  "hash": "f700b71927017ca5697e8a24fd2ad5d3e06489d6",
  "hash_short": "f700b719",
  "subject": "fs: ecryptfs: replace deprecated strncpy with strscpy",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces. A good alternative is strscpy() as it guarantees\nNUL-termination on the destination buffer.\n\nIn crypto.c:\nWe expect cipher_name to be NUL-terminated based on its use with\nthe C-string format specifier %s and with other string apis like\nstrlen():\n|\tprintk(KERN_ERR \"Error attempting to initialize key TFM \"\n|\t\t\"cipher with name = [%s]; rc = [%d]\\n\",\n|\t\ttmp_tfm->cipher_name, rc);\nand\n|\tint cipher_name_len = strlen(cipher_name);\n\nIn main.c:\nWe can remove the manual NUL-byte assignments as well as the pointers to\ndestinations (which I assume only existed to trim down on line length?)\nin favor of directly using the destination buffer which allows the\ncompiler to get size information -- enabling the usage of the new\n2-argument strscpy().\n\nNote that this patch relies on the _new_ 2-argument versions of\nstrscpy() and strscpy_pad() introduced in Commit e6584c3964f2f (\"string:\nAllow 2-argument strscpy()\").\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc:  <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20240321-strncpy-fs-ecryptfs-crypto-c-v1-1-d78b74c214ac@google.com\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "fs: ecryptfs: replace deprecated strncpy with strscpy\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces. A good alternative is strscpy() as it guarantees\nNUL-termination on the destination buffer.\n\nIn crypto.c:\nWe expect cipher_name to be NUL-terminated based on its use with\nthe C-string format specifier %s and with other string apis like\nstrlen():\n|\tprintk(KERN_ERR \"Error attempting to initialize key TFM \"\n|\t\t\"cipher with name = [%s]; rc = [%d]\\n\",\n|\t\ttmp_tfm->cipher_name, rc);\nand\n|\tint cipher_name_len = strlen(cipher_name);\n\nIn main.c:\nWe can remove the manual NUL-byte assignments as well as the pointers to\ndestinations (which I assume only existed to trim down on line length?)\nin favor of directly using the destination buffer which allows the\ncompiler to get size information -- enabling the usage of the new\n2-argument strscpy().\n\nNote that this patch relies on the _new_ 2-argument versions of\nstrscpy() and strscpy_pad() introduced in Commit e6584c3964f2f (\"string:\nAllow 2-argument strscpy()\").\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc:  <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20240321-strncpy-fs-ecryptfs-crypto-c-v1-1-d78b74c214ac@google.com\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Thu Mar 21 00:38:54 2024 +0000",
  "author_date_iso": "2024-03-21T00:38:54+00:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Wed Apr 24 16:57:38 2024 -0700",
  "committer_date_iso": "2024-04-24T16:57:38-07:00",
  "files_changed": [
    "fs/ecryptfs/crypto.c",
    "fs/ecryptfs/main.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "fs/ecryptfs/crypto.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "fs/ecryptfs/main.c",
      "insertions": 6,
      "deletions": 20
    }
  ],
  "total_insertions": 7,
  "total_deletions": 23,
  "total_changes": 30,
  "parents": [
    "7dcbf17e3f917f691d2ae9ed4a34283bd0e74a95"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/ecryptfs/crypto.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ecryptfs/main.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}