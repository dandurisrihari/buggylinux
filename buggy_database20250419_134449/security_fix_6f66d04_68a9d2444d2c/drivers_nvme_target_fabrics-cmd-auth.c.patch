commit 6f66d046eade7a5b979e349ac52026ddfe2776b3
Author: Mark O'Donovan <shiftee@posteo.net>
Date:   Wed Oct 25 10:51:25 2023 +0000

    nvme-auth: always set valid seq_num in dhchap reply
    
    Currently a seqnum of zero is sent during uni-directional
    authentication. The zero value is reserved for the secure channel
    feature which is not yet implemented.
    
    Relevant extract from the spec:
    The value 0h is used to indicate that bidirectional authentication
    is not performed, but a challenge value C2 is carried in order to
    generate a pre-shared key (PSK) for subsequent establishment of a
    secure channel
    
    Signed-off-by: Mark O'Donovan <shiftee@posteo.net>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/nvme/target/fabrics-cmd-auth.c b/drivers/nvme/target/fabrics-cmd-auth.c
index 1d9854484e2e..eb7785be0ca7 100644
--- a/drivers/nvme/target/fabrics-cmd-auth.c
+++ b/drivers/nvme/target/fabrics-cmd-auth.c
@@ -163,11 +163,11 @@ static u16 nvmet_auth_reply(struct nvmet_req *req, void *d)
 		pr_debug("%s: ctrl %d qid %d challenge %*ph\n",
 			 __func__, ctrl->cntlid, req->sq->qid, data->hl,
 			 req->sq->dhchap_c2);
-		req->sq->dhchap_s2 = le32_to_cpu(data->seqnum);
 	} else {
 		req->sq->authenticated = true;
 		req->sq->dhchap_c2 = NULL;
 	}
+	req->sq->dhchap_s2 = le32_to_cpu(data->seqnum);
 
 	return 0;
 }