{
  "hash": "301519674699aa9b80a15b2b2165e08532b176e6",
  "hash_short": "30151967",
  "subject": "xfs: Introduce error injection to allocate only minlen size extents for files",
  "body": "This commit adds XFS_ERRTAG_BMAP_ALLOC_MINLEN_EXTENT error tag which\nhelps userspace test programs to get xfs_bmap_btalloc() to always\nallocate minlen sized extents.\n\nThis is required for test programs which need a guarantee that minlen\nextents allocated for a file do not get merged with their existing\nneighbours in the inode's BMBT. \"Inode fork extent overflow check\" for\nDirectories, Xattrs and extension of realtime inodes need this since the\nfile offset at which the extents are being allocated cannot be\nexplicitly controlled from userspace.\n\nOne way to use this error tag is to,\n1. Consume all of the free space by sequentially writing to a file.\n2. Punch alternate blocks of the file. This causes CNTBT to contain\n   sufficient number of one block sized extent records.\n3. Inject XFS_ERRTAG_BMAP_ALLOC_MINLEN_EXTENT error tag.\nAfter step 3, xfs_bmap_btalloc() will issue space allocation\nrequests for minlen sized extents only.\n\nENOSPC error code is returned to userspace when there aren't any \"one\nblock sized\" extents left in any of the AGs.\n\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\nSigned-off-by: Chandan Babu R <chandanrlinux@gmail.com>\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>",
  "full_message": "xfs: Introduce error injection to allocate only minlen size extents for files\n\nThis commit adds XFS_ERRTAG_BMAP_ALLOC_MINLEN_EXTENT error tag which\nhelps userspace test programs to get xfs_bmap_btalloc() to always\nallocate minlen sized extents.\n\nThis is required for test programs which need a guarantee that minlen\nextents allocated for a file do not get merged with their existing\nneighbours in the inode's BMBT. \"Inode fork extent overflow check\" for\nDirectories, Xattrs and extension of realtime inodes need this since the\nfile offset at which the extents are being allocated cannot be\nexplicitly controlled from userspace.\n\nOne way to use this error tag is to,\n1. Consume all of the free space by sequentially writing to a file.\n2. Punch alternate blocks of the file. This causes CNTBT to contain\n   sufficient number of one block sized extent records.\n3. Inject XFS_ERRTAG_BMAP_ALLOC_MINLEN_EXTENT error tag.\nAfter step 3, xfs_bmap_btalloc() will issue space allocation\nrequests for minlen sized extents only.\n\nENOSPC error code is returned to userspace when there aren't any \"one\nblock sized\" extents left in any of the AGs.\n\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\nSigned-off-by: Chandan Babu R <chandanrlinux@gmail.com>\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>",
  "author_name": "Chandan Babu R",
  "author_email": "chandanrlinux@gmail.com",
  "author_date": "Fri Jan 22 16:48:17 2021 -0800",
  "author_date_iso": "2021-01-22T16:48:17-08:00",
  "committer_name": "Darrick J. Wong",
  "committer_email": "djwong@kernel.org",
  "committer_date": "Fri Jan 22 16:54:49 2021 -0800",
  "committer_date_iso": "2021-01-22T16:54:49-08:00",
  "files_changed": [
    "fs/xfs/libxfs/xfs_alloc.c",
    "fs/xfs/libxfs/xfs_alloc.h",
    "fs/xfs/libxfs/xfs_bmap.c",
    "fs/xfs/libxfs/xfs_errortag.h",
    "fs/xfs/xfs_error.c"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "fs/xfs/libxfs/xfs_alloc.c",
      "insertions": 50,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_alloc.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap.c",
      "insertions": 100,
      "deletions": 24
    },
    {
      "file": "fs/xfs/libxfs/xfs_errortag.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_error.c",
      "insertions": 3,
      "deletions": 0
    }
  ],
  "total_insertions": 159,
  "total_deletions": 25,
  "total_changes": 184,
  "parents": [
    "07c72e556299a7fea448912b1330b9ebfd418662"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/xfs/libxfs/xfs_alloc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/libxfs/xfs_alloc.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/libxfs/xfs_errortag.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/xfs/xfs_error.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}