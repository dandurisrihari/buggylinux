{
  "hash": "3b9333493b5fa69f2dce8eb96bbef32df1b65c4a",
  "hash_short": "3b933349",
  "subject": "can: peak_pci: replace deprecated strncpy with strscpy",
  "body": "`strncpy` is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nNUL-padding is not required since card is already zero-initialized:\n|       card = kzalloc(sizeof(*card), GFP_KERNEL);\n\nA suitable replacement is `strscpy` [2] due to the fact that it\nguarantees NUL-termination on the destination buffer without\nunnecessarily NUL-padding.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/all/20231005-strncpy-drivers-net-can-sja1000-peak_pci-c-v1-1-c36e1702cd56@google.com\nSigned-off-by: Marc Kleine-Budde <mkl@pengutronix.de>",
  "full_message": "can: peak_pci: replace deprecated strncpy with strscpy\n\n`strncpy` is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nNUL-padding is not required since card is already zero-initialized:\n|       card = kzalloc(sizeof(*card), GFP_KERNEL);\n\nA suitable replacement is `strscpy` [2] due to the fact that it\nguarantees NUL-termination on the destination buffer without\nunnecessarily NUL-padding.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/all/20231005-strncpy-drivers-net-can-sja1000-peak_pci-c-v1-1-c36e1702cd56@google.com\nSigned-off-by: Marc Kleine-Budde <mkl@pengutronix.de>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Thu Oct 5 00:05:35 2023 +0000",
  "author_date_iso": "2023-10-05T00:05:35+00:00",
  "committer_name": "Marc Kleine-Budde",
  "committer_email": "mkl@pengutronix.de",
  "committer_date": "Thu Oct 5 09:51:18 2023 +0200",
  "committer_date_iso": "2023-10-05T09:51:18+02:00",
  "files_changed": [
    "drivers/net/can/sja1000/peak_pci.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/can/sja1000/peak_pci.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "dd8bb80308c474ea0e7ddb244962cb2d7001bae2"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/can/sja1000/peak_pci.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}