{
  "hash": "31464ab01fff910cb88376384e2b6824f7bf713f",
  "hash_short": "31464ab0",
  "subject": "jbd2: skip reading super block if it has been verified",
  "body": "We got a NULL pointer dereference issue below while running generic/475\nI/O failure pressure test.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000000\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD 0 P4D 0\n Oops: 0002 [#1] PREEMPT SMP PTI\n CPU: 1 PID: 15600 Comm: fsstress Not tainted 6.4.0-rc5-xfstests-00055-gd3ab1bca26b4 #190\n RIP: 0010:jbd2_journal_set_features+0x13d/0x430\n ...\n Call Trace:\n  <TASK>\n  ? __die+0x23/0x60\n  ? page_fault_oops+0xa4/0x170\n  ? exc_page_fault+0x67/0x170\n  ? asm_exc_page_fault+0x26/0x30\n  ? jbd2_journal_set_features+0x13d/0x430\n  jbd2_journal_revoke+0x47/0x1e0\n  __ext4_forget+0xc3/0x1b0\n  ext4_free_blocks+0x214/0x2f0\n  ext4_free_branches+0xeb/0x270\n  ext4_ind_truncate+0x2bf/0x320\n  ext4_truncate+0x1e4/0x490\n  ext4_handle_inode_extension+0x1bd/0x2a0\n  ? iomap_dio_complete+0xaf/0x1d0\n\nThe root cause is the journal super block had been failed to write out\ndue to I/O fault injection, it's uptodate bit was cleared by\nend_buffer_write_sync() and didn't reset yet in jbd2_write_superblock().\nAnd it raced by journal_get_superblock()->bh_read(), unfortunately, the\nread IO is also failed, so the error handling in\njournal_fail_superblock() unexpectedly clear the journal->j_sb_buffer,\nfinally lead to above NULL pointer dereference issue.\n\nIf the journal super block had been read and verified, there is no need\nto call bh_read() read it again even if it has been failed to written\nout. So the fix could be simply move buffer_verified(bh) in front of\nbh_read(). Also remove a stale comment left in\njbd2_journal_check_used_features().\n\nFixes: 51bacdba23d8 (\"jbd2: factor out journal initialization from journal_get_superblock()\")\nReported-by: Theodore Ts'o <tytso@mit.edu>\nSigned-off-by: Zhang Yi <yi.zhang@huawei.com>\nReviewed-by: Jan Kara <jack@suse.cz>\nLink: https://lore.kernel.org/r/20230616015547.3155195-1-yi.zhang@huaweicloud.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
  "full_message": "jbd2: skip reading super block if it has been verified\n\nWe got a NULL pointer dereference issue below while running generic/475\nI/O failure pressure test.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000000\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD 0 P4D 0\n Oops: 0002 [#1] PREEMPT SMP PTI\n CPU: 1 PID: 15600 Comm: fsstress Not tainted 6.4.0-rc5-xfstests-00055-gd3ab1bca26b4 #190\n RIP: 0010:jbd2_journal_set_features+0x13d/0x430\n ...\n Call Trace:\n  <TASK>\n  ? __die+0x23/0x60\n  ? page_fault_oops+0xa4/0x170\n  ? exc_page_fault+0x67/0x170\n  ? asm_exc_page_fault+0x26/0x30\n  ? jbd2_journal_set_features+0x13d/0x430\n  jbd2_journal_revoke+0x47/0x1e0\n  __ext4_forget+0xc3/0x1b0\n  ext4_free_blocks+0x214/0x2f0\n  ext4_free_branches+0xeb/0x270\n  ext4_ind_truncate+0x2bf/0x320\n  ext4_truncate+0x1e4/0x490\n  ext4_handle_inode_extension+0x1bd/0x2a0\n  ? iomap_dio_complete+0xaf/0x1d0\n\nThe root cause is the journal super block had been failed to write out\ndue to I/O fault injection, it's uptodate bit was cleared by\nend_buffer_write_sync() and didn't reset yet in jbd2_write_superblock().\nAnd it raced by journal_get_superblock()->bh_read(), unfortunately, the\nread IO is also failed, so the error handling in\njournal_fail_superblock() unexpectedly clear the journal->j_sb_buffer,\nfinally lead to above NULL pointer dereference issue.\n\nIf the journal super block had been read and verified, there is no need\nto call bh_read() read it again even if it has been failed to written\nout. So the fix could be simply move buffer_verified(bh) in front of\nbh_read(). Also remove a stale comment left in\njbd2_journal_check_used_features().\n\nFixes: 51bacdba23d8 (\"jbd2: factor out journal initialization from journal_get_superblock()\")\nReported-by: Theodore Ts'o <tytso@mit.edu>\nSigned-off-by: Zhang Yi <yi.zhang@huawei.com>\nReviewed-by: Jan Kara <jack@suse.cz>\nLink: https://lore.kernel.org/r/20230616015547.3155195-1-yi.zhang@huaweicloud.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
  "author_name": "Zhang Yi",
  "author_email": "yi.zhang@huawei.com",
  "author_date": "Fri Jun 16 09:55:47 2023 +0800",
  "author_date_iso": "2023-06-16T09:55:47+08:00",
  "committer_name": "Theodore Ts'o",
  "committer_email": "tytso@mit.edu",
  "committer_date": "Mon Jun 26 19:36:45 2023 -0400",
  "committer_date_iso": "2023-06-26T19:36:45-04:00",
  "files_changed": [
    "fs/jbd2/journal.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/jbd2/journal.c",
      "insertions": 3,
      "deletions": 4
    }
  ],
  "total_insertions": 3,
  "total_deletions": 4,
  "total_changes": 7,
  "parents": [
    "c4d13222afd8a64bf11bc7ec68645496ee8b54b9"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/jbd2/journal.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}