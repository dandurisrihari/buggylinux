{
  "hash": "9b6164342e981d751e69f5a165dd596ffcdfd6fe",
  "hash_short": "9b616434",
  "subject": "doc: gcc-plugins: update gcc-plugins.rst",
  "body": "This document was written a long time ago. Update it.\n\n[1] Drop the version information\n\nThe range of the supported GCC versions are always changing. The\ncurrent minimal GCC version is 4.9, and commit 1e860048c53e\n(\"gcc-plugins: simplify GCC plugin-dev capability test\") removed the\nold code accordingly.\n\nWe do not need to mention specific version ranges like \"all gcc versions\nfrom 4.5 to 6.0\" since we forget to update the documentation when we\nraise the minimal compiler version.\n\n[2] Drop the C compiler statements\n\nSince commit 77342a02ff6e (\"gcc-plugins: drop support for GCC <= 4.7\")\nthe GCC plugin infrastructure only supports g++.\n\n[3] Drop supported architectures\n\nAs of v5.11-rc4, the infrastructure supports more architectures;\narm, arm64, mips, powerpc, riscv, s390, um, and x86. (just grep\n\"select HAVE_GCC_PLUGINS\") Again, we miss to update this document when a\nnew architecture is supported. Let's just say \"only some architectures\".\n\n[4] Update the apt-get example\n\nWe are now discussing to bump the minimal version to GCC 5. The GCC 4.9\nsupport will be removed sooner or later. Change the package example to\ngcc-10-plugin-dev while we are here.\n\n[5] Update the build target\n\nSince commit ce2fd53a10c7 (\"kbuild: descend into scripts/gcc-plugins/\nvia scripts/Makefile\"), \"make gcc-plugins\" is not supported.\n\"make scripts\" builds all the enabled plugins, including some other\ntools.\n\n[6] Update the steps for adding a new plugin\n\nAt first, all CONFIG options for GCC plugins were located in arch/Kconfig.\nAfter commit 45332b1bdfdc (\"gcc-plugins: split out Kconfig entries to\nscripts/gcc-plugins/Kconfig\"), scripts/gcc-plugins/Kconfig became the\ncentral place to collect plugin CONFIG options. In my understanding,\nthis requirement no longer exists because commit 9f671e58159a (\"security:\nCreate \"kernel hardening\" config area\") moved some of plugin CONFIG\noptions to another file. Find an appropriate place to add the new CONFIG.\n\nThe sub-directory support was never used by anyone, and removed by\ncommit c17d6179ad5a (\"gcc-plugins: remove unused GCC_PLUGIN_SUBDIR\").\n\nRemove the useless $(src)/ prefix.\n\nSigned-off-by: Masahiro Yamada <masahiroy@kernel.org>",
  "full_message": "doc: gcc-plugins: update gcc-plugins.rst\n\nThis document was written a long time ago. Update it.\n\n[1] Drop the version information\n\nThe range of the supported GCC versions are always changing. The\ncurrent minimal GCC version is 4.9, and commit 1e860048c53e\n(\"gcc-plugins: simplify GCC plugin-dev capability test\") removed the\nold code accordingly.\n\nWe do not need to mention specific version ranges like \"all gcc versions\nfrom 4.5 to 6.0\" since we forget to update the documentation when we\nraise the minimal compiler version.\n\n[2] Drop the C compiler statements\n\nSince commit 77342a02ff6e (\"gcc-plugins: drop support for GCC <= 4.7\")\nthe GCC plugin infrastructure only supports g++.\n\n[3] Drop supported architectures\n\nAs of v5.11-rc4, the infrastructure supports more architectures;\narm, arm64, mips, powerpc, riscv, s390, um, and x86. (just grep\n\"select HAVE_GCC_PLUGINS\") Again, we miss to update this document when a\nnew architecture is supported. Let's just say \"only some architectures\".\n\n[4] Update the apt-get example\n\nWe are now discussing to bump the minimal version to GCC 5. The GCC 4.9\nsupport will be removed sooner or later. Change the package example to\ngcc-10-plugin-dev while we are here.\n\n[5] Update the build target\n\nSince commit ce2fd53a10c7 (\"kbuild: descend into scripts/gcc-plugins/\nvia scripts/Makefile\"), \"make gcc-plugins\" is not supported.\n\"make scripts\" builds all the enabled plugins, including some other\ntools.\n\n[6] Update the steps for adding a new plugin\n\nAt first, all CONFIG options for GCC plugins were located in arch/Kconfig.\nAfter commit 45332b1bdfdc (\"gcc-plugins: split out Kconfig entries to\nscripts/gcc-plugins/Kconfig\"), scripts/gcc-plugins/Kconfig became the\ncentral place to collect plugin CONFIG options. In my understanding,\nthis requirement no longer exists because commit 9f671e58159a (\"security:\nCreate \"kernel hardening\" config area\") moved some of plugin CONFIG\noptions to another file. Find an appropriate place to add the new CONFIG.\n\nThe sub-directory support was never used by anyone, and removed by\ncommit c17d6179ad5a (\"gcc-plugins: remove unused GCC_PLUGIN_SUBDIR\").\n\nRemove the useless $(src)/ prefix.\n\nSigned-off-by: Masahiro Yamada <masahiroy@kernel.org>",
  "author_name": "Masahiro Yamada",
  "author_email": "masahiroy@kernel.org",
  "author_date": "Sat Jan 23 22:33:33 2021 +0900",
  "author_date_iso": "2021-01-23T22:33:33+09:00",
  "committer_name": "Masahiro Yamada",
  "committer_email": "masahiroy@kernel.org",
  "committer_date": "Tue Jan 26 06:23:20 2021 +0900",
  "committer_date_iso": "2021-01-26T06:23:20+09:00",
  "files_changed": [
    "Documentation/kbuild/gcc-plugins.rst"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "Documentation/kbuild/gcc-plugins.rst",
      "insertions": 21,
      "deletions": 20
    }
  ],
  "total_insertions": 21,
  "total_deletions": 20,
  "total_changes": 41,
  "parents": [
    "f4c3b83b75b91c5059726cb91e3165cc01764ce7"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/kbuild/gcc-plugins.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}