Commit Hash: 90e2f782719fc5ad2af63096815a69c5320704cb
Subject: crypto: qce - permit asynchronous skcipher as fallback


Security Keywords:
- security issue

Full commit message:
crypto: qce - permit asynchronous skcipher as fallback

Even though the qce driver implements asynchronous versions of ecb(aes),
cbc(aes)and xts(aes), the fallbacks it allocates are required to be
synchronous. Given that SIMD based software implementations are usually
asynchronous as well, even though they rarely complete asynchronously
(this typically only happens in cases where the request was made from
softirq context, while SIMD was already in use in the task context that
it interrupted), these implementations are disregarded, and either the
generic C version or another table based version implemented in assembler
is selected instead.

Since falling back to synchronous AES is not only a performance issue, but
potentially a security issue as well (due to the fact that table based AES
is not time invariant), let's fix this, by allocating an ordinary skcipher
as the fallback, and invoke it with the completion routine that was given
to the outer request.

While at it, remove the pointless memset() from qce_skcipher_init(), and
remove the call to it qce_skcipher_init_fallback().

Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

Metadata:
Author: Ard Biesheuvel <ardb@kernel.org>
Author Date: Tue Jul 7 09:32:01 2020 +0300
Committer: Herbert Xu <herbert@gondor.apana.org.au>
Commit Date: Thu Jul 16 21:49:03 2020 +1000

Files Changed: 2
Lines Added: 24
Lines Removed: 21
Total Changes: 45
