{
  "hash": "2def2ef2ae5f3990aabdbe8a755911902707d268",
  "hash_short": "2def2ef2",
  "subject": "x86, x32: Correct invalid use of user timespec in the kernel",
  "body": "The x32 case for the recvmsg() timout handling is broken:\n\n  asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg,\n                                      unsigned int vlen, unsigned int flags,\n                                      struct compat_timespec __user *timeout)\n  {\n          int datagrams;\n          struct timespec ktspec;\n\n          if (flags & MSG_CMSG_COMPAT)\n                  return -EINVAL;\n\n          if (COMPAT_USE_64BIT_TIME)\n                  return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,\n                                        flags | MSG_CMSG_COMPAT,\n                                        (struct timespec *) timeout);\n          ...\n\nThe timeout pointer parameter is provided by userland (hence the __user\nannotation) but for x32 syscalls it's simply cast to a kernel pointer\nand is passed to __sys_recvmmsg which will eventually directly\ndereference it for both reading and writing.  Other callers to\n__sys_recvmmsg properly copy from userland to the kernel first.\n\nThe bug was introduced by commit ee4fa23c4bfc (\"compat: Use\nCOMPAT_USE_64BIT_TIME in net/compat.c\") and should affect all kernels\nsince 3.4 (and perhaps vendor kernels if they backported x32 support\nalong with this code).\n\nNote that CONFIG_X86_X32_ABI gets enabled at build time and only if\nCONFIG_X86_X32 is enabled and ld can build x32 executables.\n\nOther uses of COMPAT_USE_64BIT_TIME seem fine.\n\nThis addresses CVE-2014-0038.\n\nSigned-off-by: PaX Team <pageexec@freemail.hu>\nSigned-off-by: H. Peter Anvin <hpa@linux.intel.com>\nCc: <stable@vger.kernel.org> # v3.4+\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "x86, x32: Correct invalid use of user timespec in the kernel\n\nThe x32 case for the recvmsg() timout handling is broken:\n\n  asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg,\n                                      unsigned int vlen, unsigned int flags,\n                                      struct compat_timespec __user *timeout)\n  {\n          int datagrams;\n          struct timespec ktspec;\n\n          if (flags & MSG_CMSG_COMPAT)\n                  return -EINVAL;\n\n          if (COMPAT_USE_64BIT_TIME)\n                  return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,\n                                        flags | MSG_CMSG_COMPAT,\n                                        (struct timespec *) timeout);\n          ...\n\nThe timeout pointer parameter is provided by userland (hence the __user\nannotation) but for x32 syscalls it's simply cast to a kernel pointer\nand is passed to __sys_recvmmsg which will eventually directly\ndereference it for both reading and writing.  Other callers to\n__sys_recvmmsg properly copy from userland to the kernel first.\n\nThe bug was introduced by commit ee4fa23c4bfc (\"compat: Use\nCOMPAT_USE_64BIT_TIME in net/compat.c\") and should affect all kernels\nsince 3.4 (and perhaps vendor kernels if they backported x32 support\nalong with this code).\n\nNote that CONFIG_X86_X32_ABI gets enabled at build time and only if\nCONFIG_X86_X32 is enabled and ld can build x32 executables.\n\nOther uses of COMPAT_USE_64BIT_TIME seem fine.\n\nThis addresses CVE-2014-0038.\n\nSigned-off-by: PaX Team <pageexec@freemail.hu>\nSigned-off-by: H. Peter Anvin <hpa@linux.intel.com>\nCc: <stable@vger.kernel.org> # v3.4+\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "PaX Team",
  "author_email": "pageexec@freemail.hu",
  "author_date": "Thu Jan 30 16:59:25 2014 -0800",
  "author_date_iso": "2014-01-30T16:59:25-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Jan 30 18:44:13 2014 -0800",
  "committer_date_iso": "2014-01-30T18:44:13-08:00",
  "files_changed": [
    "net/compat.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/compat.c",
      "insertions": 2,
      "deletions": 7
    }
  ],
  "total_insertions": 2,
  "total_deletions": 7,
  "total_changes": 9,
  "parents": [
    "12f2bbd609006f983c1c99d240cf61e6e829a14c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.14",
    "v3.14-rc1",
    "v3.14-rc2",
    "v3.14-rc3",
    "v3.14-rc4",
    "v3.14-rc5",
    "v3.14-rc6",
    "v3.14-rc7",
    "v3.14-rc8",
    "v3.15"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2014-0038"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "net/compat.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}