{
  "hash": "6cdbb0907a3c562723455e351c940037bdec9b7a",
  "hash_short": "6cdbb090",
  "subject": "Merge tag 'for-6.5/dm-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm",
  "body": "Pull device mapper updates from Mike Snitzer:\n\n - Update DM crypt to allocate compound pages if possible\n\n - Fix DM crypt target's crypt_ctr_cipher_new return value on invalid\n   AEAD cipher\n\n - Fix DM flakey testing target's write bio corruption feature to\n   corrupt the data of a cloned bio instead of the original\n\n - Add random_read_corrupt and random_write_corrupt features to DM\n   flakey target\n\n - Fix ABBA deadlock in DM thin metadata by resetting associated bufio\n   client rather than destroying and recreating it\n\n - A couple other small DM thinp cleanups\n\n - Update DM core to support disabling block core IO stats accounting\n   and optimize away code that isn't needed if stats are disabled\n\n - Other small DM core cleanups\n\n - Improve DM integrity target to not require so much memory on 32 bit\n   systems. Also only allocate the recalculate buffer as needed (and\n   increasingly reduce its size on allocation failure)\n\n - Update DM integrity to use %*ph for printing hexdump of a small\n   buffer. Also update DM integrity documentation\n\n - Various DM core ioctl interface hardening. Now more careful about\n   alignment of structures and processing of input passed to the kernel\n   from userspace.\n\n   Also disallow the creation of DM devices named \"control\", \".\" or \"..\"\n\n - Eliminate GFP_NOIO workarounds for __vmalloc and kvmalloc in DM\n   core's ioctl and bufio code\n\n* tag 'for-6.5/dm-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm: (28 commits)\n  dm: get rid of GFP_NOIO workarounds for __vmalloc and kvmalloc\n  dm integrity: scale down the recalculate buffer if memory allocation fails\n  dm integrity: only allocate recalculate buffer when needed\n  dm integrity: reduce vmalloc space footprint on 32-bit architectures\n  dm ioctl: Refuse to create device named \".\" or \"..\"\n  dm ioctl: Refuse to create device named \"control\"\n  dm ioctl: Avoid double-fetch of version\n  dm ioctl: structs and parameter strings must not overlap\n  dm ioctl: Avoid pointer arithmetic overflow\n  dm ioctl: Check dm_target_spec is sufficiently aligned\n  Documentation: dm-integrity: Document an example of how the tunables relate.\n  Documentation: dm-integrity: Document default values.\n  Documentation: dm-integrity: Document the meaning of \"buffer\".\n  Documentation: dm-integrity: Fix minor grammatical error.\n  dm integrity: Use %*ph for printing hexdump of a small buffer\n  dm thin: disable discards for thin-pool if no_discard_passdown\n  dm: remove stale/redundant dm_internal_{suspend,resume} prototypes in dm.h\n  dm: skip dm-stats work in alloc_io() unless needed\n  dm: avoid needless dm_io access if all IO accounting is disabled\n  dm: support turning off block-core's io stats accounting\n  ...",
  "full_message": "Merge tag 'for-6.5/dm-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper updates from Mike Snitzer:\n\n - Update DM crypt to allocate compound pages if possible\n\n - Fix DM crypt target's crypt_ctr_cipher_new return value on invalid\n   AEAD cipher\n\n - Fix DM flakey testing target's write bio corruption feature to\n   corrupt the data of a cloned bio instead of the original\n\n - Add random_read_corrupt and random_write_corrupt features to DM\n   flakey target\n\n - Fix ABBA deadlock in DM thin metadata by resetting associated bufio\n   client rather than destroying and recreating it\n\n - A couple other small DM thinp cleanups\n\n - Update DM core to support disabling block core IO stats accounting\n   and optimize away code that isn't needed if stats are disabled\n\n - Other small DM core cleanups\n\n - Improve DM integrity target to not require so much memory on 32 bit\n   systems. Also only allocate the recalculate buffer as needed (and\n   increasingly reduce its size on allocation failure)\n\n - Update DM integrity to use %*ph for printing hexdump of a small\n   buffer. Also update DM integrity documentation\n\n - Various DM core ioctl interface hardening. Now more careful about\n   alignment of structures and processing of input passed to the kernel\n   from userspace.\n\n   Also disallow the creation of DM devices named \"control\", \".\" or \"..\"\n\n - Eliminate GFP_NOIO workarounds for __vmalloc and kvmalloc in DM\n   core's ioctl and bufio code\n\n* tag 'for-6.5/dm-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm: (28 commits)\n  dm: get rid of GFP_NOIO workarounds for __vmalloc and kvmalloc\n  dm integrity: scale down the recalculate buffer if memory allocation fails\n  dm integrity: only allocate recalculate buffer when needed\n  dm integrity: reduce vmalloc space footprint on 32-bit architectures\n  dm ioctl: Refuse to create device named \".\" or \"..\"\n  dm ioctl: Refuse to create device named \"control\"\n  dm ioctl: Avoid double-fetch of version\n  dm ioctl: structs and parameter strings must not overlap\n  dm ioctl: Avoid pointer arithmetic overflow\n  dm ioctl: Check dm_target_spec is sufficiently aligned\n  Documentation: dm-integrity: Document an example of how the tunables relate.\n  Documentation: dm-integrity: Document default values.\n  Documentation: dm-integrity: Document the meaning of \"buffer\".\n  Documentation: dm-integrity: Fix minor grammatical error.\n  dm integrity: Use %*ph for printing hexdump of a small buffer\n  dm thin: disable discards for thin-pool if no_discard_passdown\n  dm: remove stale/redundant dm_internal_{suspend,resume} prototypes in dm.h\n  dm: skip dm-stats work in alloc_io() unless needed\n  dm: avoid needless dm_io access if all IO accounting is disabled\n  dm: support turning off block-core's io stats accounting\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Fri Jun 30 12:16:00 2023 -0700",
  "author_date_iso": "2023-06-30T12:16:00-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Jun 30 12:16:00 2023 -0700",
  "committer_date_iso": "2023-06-30T12:16:00-07:00",
  "files_changed": [
    "drivers/md/dm-crypt.c",
    "drivers/md/dm-integrity.c",
    "drivers/md/dm-ioctl.c",
    "drivers/md/dm-thin-metadata.c",
    "drivers/md/dm-thin.c",
    "drivers/md/dm.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "Documentation/admin-guide/device-mapper/dm-flakey.rst",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "Documentation/admin-guide/device-mapper/dm-integrity.rst",
      "insertions": 27,
      "deletions": 16
    },
    {
      "file": "drivers/md/dm-bufio.c",
      "insertions": 7,
      "deletions": 17
    },
    {
      "file": "drivers/md/dm-core.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "drivers/md/dm-crypt.c",
      "insertions": 36,
      "deletions": 15
    },
    {
      "file": "drivers/md/dm-flakey.c",
      "insertions": 188,
      "deletions": 22
    },
    {
      "file": "drivers/md/dm-integrity.c",
      "insertions": 38,
      "deletions": 47
    },
    {
      "file": "drivers/md/dm-ioctl.c",
      "insertions": 75,
      "deletions": 23
    },
    {
      "file": "drivers/md/dm-thin-metadata.c",
      "insertions": 25,
      "deletions": 33
    },
    {
      "file": "drivers/md/dm-thin.c",
      "insertions": 17,
      "deletions": 24
    },
    {
      "file": "drivers/md/dm-zone.c",
      "insertions": 7,
      "deletions": 8
    },
    {
      "file": "drivers/md/dm.c",
      "insertions": 32,
      "deletions": 26
    },
    {
      "file": "drivers/md/dm.h",
      "insertions": 0,
      "deletions": 3
    },
    {
      "file": "drivers/md/persistent-data/dm-block-manager.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "drivers/md/persistent-data/dm-block-manager.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/md/persistent-data/dm-space-map.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "drivers/md/persistent-data/dm-transaction-manager.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "include/linux/dm-bufio.h",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 478,
  "total_deletions": 236,
  "total_changes": 714,
  "parents": [
    "ca7ce08d6a063e0ccb91dc57f9bc213120d0d1a7",
    "e2c789cab60a493a72b42cb53eb5fbf96d5f1ae3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/md/dm-integrity.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/md/dm-thin.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/md/dm-ioctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/md/dm-thin-metadata.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/md/dm-crypt.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/md/dm.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}