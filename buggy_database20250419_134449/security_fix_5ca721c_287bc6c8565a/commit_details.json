{
  "hash": "5ca721c54d86d52cb5617c5ae5ccf72ad9da2be1",
  "hash_short": "5ca721c5",
  "subject": "net: dsa: tag_ocelot: set the classified VLAN during xmit",
  "body": "Currently, all packets injected into Ocelot switches are classified to\nVLAN 0, regardless of whether they are VLAN-tagged or not. This is\nbecause the switch only looks at the VLAN TCI from the DSA tag.\n\nVLAN 0 is then stripped on egress due to REW_TAG_CFG_TAG_CFG. There are\n2 cases really, below is the explanation for ocelot_port_set_native_vlan:\n\n- Port is VLAN-aware, we set REW_TAG_CFG_TAG_CFG to 1 (egress-tag all\n  frames except VID 0 and the native VLAN) if a native VLAN exists, or\n  to 3 otherwise (tag all frames, including VID 0).\n\n- Port is VLAN-unaware, we set REW_TAG_CFG_TAG_CFG to 0 (port tagging\n  disabled, classified VLAN never appears in the packet).\n\nOne can already see an inconsistency: when a native VLAN exists, VID 0\nis egress-untagged, but when it doesn't, VID 0 is egress-tagged.\n\nSo when we do this:\nip link add br0 type bridge vlan_filtering 1\nip link set swp0 master br0\nbridge vlan del dev swp0 vid 1\nbridge vlan add dev swp0 vid 1 pvid # but not untagged\n\nand we ping through swp0, packets will look like this:\n\nMAC > 33:33:00:00:00:02, ethertype 802.1Q (0x8100): vlan 0, p 0,\n\tethertype 802.1Q (0x8100), vlan 1, p 0, ethertype IPv6 (0x86dd),\n\tICMP6, router solicitation, length 16\n\nSo VID 1 frames (sent that way by the Linux bridge) are encapsulated in\na VID 0 header - the classified VLAN of the packets as far as the hw is\nconcerned. To avoid that, what we really need to do is stop injecting\npackets using the classified VLAN of 0.\n\nThis patch strips the VLAN header from the skb payload, if that VLAN\nexists and if the port is under a VLAN-aware bridge. Then it copies that\nVLAN header into the DSA injection frame header.\n\nA positive side effect is that VCAP ES0 VLAN rewriting rules now work\nfor packets injected from the CPU into a port that's under a VLAN-aware\nbridge, and we are able to match those packets by the VLAN ID that was\nsent by the network stack, and not by VLAN ID 0.\n\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "net: dsa: tag_ocelot: set the classified VLAN during xmit\n\nCurrently, all packets injected into Ocelot switches are classified to\nVLAN 0, regardless of whether they are VLAN-tagged or not. This is\nbecause the switch only looks at the VLAN TCI from the DSA tag.\n\nVLAN 0 is then stripped on egress due to REW_TAG_CFG_TAG_CFG. There are\n2 cases really, below is the explanation for ocelot_port_set_native_vlan:\n\n- Port is VLAN-aware, we set REW_TAG_CFG_TAG_CFG to 1 (egress-tag all\n  frames except VID 0 and the native VLAN) if a native VLAN exists, or\n  to 3 otherwise (tag all frames, including VID 0).\n\n- Port is VLAN-unaware, we set REW_TAG_CFG_TAG_CFG to 0 (port tagging\n  disabled, classified VLAN never appears in the packet).\n\nOne can already see an inconsistency: when a native VLAN exists, VID 0\nis egress-untagged, but when it doesn't, VID 0 is egress-tagged.\n\nSo when we do this:\nip link add br0 type bridge vlan_filtering 1\nip link set swp0 master br0\nbridge vlan del dev swp0 vid 1\nbridge vlan add dev swp0 vid 1 pvid # but not untagged\n\nand we ping through swp0, packets will look like this:\n\nMAC > 33:33:00:00:00:02, ethertype 802.1Q (0x8100): vlan 0, p 0,\n\tethertype 802.1Q (0x8100), vlan 1, p 0, ethertype IPv6 (0x86dd),\n\tICMP6, router solicitation, length 16\n\nSo VID 1 frames (sent that way by the Linux bridge) are encapsulated in\na VID 0 header - the classified VLAN of the packets as far as the hw is\nconcerned. To avoid that, what we really need to do is stop injecting\npackets using the classified VLAN of 0.\n\nThis patch strips the VLAN header from the skb payload, if that VLAN\nexists and if the port is under a VLAN-aware bridge. Then it copies that\nVLAN header into the DSA injection frame header.\n\nA positive side effect is that VCAP ES0 VLAN rewriting rules now work\nfor packets injected from the CPU into a port that's under a VLAN-aware\nbridge, and we are able to match those packets by the VLAN ID that was\nsent by the network stack, and not by VLAN ID 0.\n\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Vladimir Oltean",
  "author_email": "vladimir.oltean@nxp.com",
  "author_date": "Fri Oct 1 18:15:28 2021 +0300",
  "author_date_iso": "2021-10-01T18:15:28+03:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Sat Oct 2 14:15:57 2021 +0100",
  "committer_date_iso": "2021-10-02T14:15:57+01:00",
  "files_changed": [
    "net/dsa/tag_ocelot.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/dsa/tag_ocelot.c",
      "insertions": 39,
      "deletions": 0
    }
  ],
  "total_insertions": 39,
  "total_deletions": 0,
  "total_changes": 39,
  "parents": [
    "e8c0722927e8fc112d78cc0435d336fcd7e3507c"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/dsa/tag_ocelot.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}