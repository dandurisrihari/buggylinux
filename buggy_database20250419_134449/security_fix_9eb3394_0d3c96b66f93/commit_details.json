{
  "hash": "9eb3394bf2037120881a8846bc67064f49325366",
  "hash_short": "9eb3394b",
  "subject": "[SPARC64]: Eliminate race condition reading Hummingbird STICK register",
  "body": "Ensure a consistent value is read from the STICK register by ensuring\nthat both high and low are read without high changing due to a roll\nover of the low register.\n\nVarious Debian/SPARC users (myself include) have noticed problems with\nHummingbird based systems. The symptoms are that the system time is\nseen to jump forward 3 days, 6 hours, 11 minutes give or take a few\nseconds. In many cases the system then hangs some time afterwards.\n\nI've spotted a race condition in the code to read the STICK register.\nI could not work out why 3d, 6h, 11m is important but guess that it is\ndue to the 2^32 jump of STICK (forwards on one read and then the next\nread will seem to be backwards) during a timer interrupt. I'm guessing\nthat a change of -2^32 will get converted to a large unsigned\nincrement after the arithmetic manipulation between STICK,\nnanoseconds, jiffies etc.\n\nI did a test where I modified __hbird_read_stick to artificially\ninject rollover faults forcefully every few seconds. With this I saw\nthe clock jump over 6 times in 12 hours compared to once every month\nor so.\n\nSigned-off-by: Richard Mortimer <richm@oldelvet.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "[SPARC64]: Eliminate race condition reading Hummingbird STICK register\n\nEnsure a consistent value is read from the STICK register by ensuring\nthat both high and low are read without high changing due to a roll\nover of the low register.\n\nVarious Debian/SPARC users (myself include) have noticed problems with\nHummingbird based systems. The symptoms are that the system time is\nseen to jump forward 3 days, 6 hours, 11 minutes give or take a few\nseconds. In many cases the system then hangs some time afterwards.\n\nI've spotted a race condition in the code to read the STICK register.\nI could not work out why 3d, 6h, 11m is important but guess that it is\ndue to the 2^32 jump of STICK (forwards on one read and then the next\nread will seem to be backwards) during a timer interrupt. I'm guessing\nthat a change of -2^32 will get converted to a large unsigned\nincrement after the arithmetic manipulation between STICK,\nnanoseconds, jiffies etc.\n\nI did a test where I modified __hbird_read_stick to artificially\ninject rollover faults forcefully every few seconds. With this I saw\nthe clock jump over 6 times in 12 hours compared to once every month\nor so.\n\nSigned-off-by: Richard Mortimer <richm@oldelvet.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Richard Mortimer",
  "author_email": "richm@oldelvet.org.uk",
  "author_date": "Tue Jan 17 15:21:01 2006 -0800",
  "author_date_iso": "2006-01-17T15:21:01-08:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Tue Jan 17 15:21:01 2006 -0800",
  "committer_date_iso": "2006-01-17T15:21:01-08:00",
  "files_changed": [
    "arch/sparc64/kernel/time.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/sparc64/kernel/time.c",
      "insertions": 11,
      "deletions": 11
    }
  ],
  "total_insertions": 11,
  "total_deletions": 11,
  "total_changes": 22,
  "parents": [
    "2664b25051f7ab96b22b199aa2f5ef6a949a4296"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.16",
    "v2.6.16-rc2",
    "v2.6.16-rc3",
    "v2.6.16-rc4",
    "v2.6.16-rc5",
    "v2.6.16-rc6",
    "v2.6.17",
    "v2.6.17-rc1",
    "v2.6.17-rc2",
    "v2.6.17-rc3"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/sparc64/kernel/time.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}