{
  "hash": "09ab6f4c2376a0fc31abde1e2991513f900ea825",
  "hash_short": "09ab6f4c",
  "subject": "[Bluetooth] Enforce correct authentication requirements",
  "body": "With the introduction of Security Mode 4 and Simple Pairing from the\nBluetooth 2.1 specification it became mandatory that the initiator\nrequires authentication and encryption before any L2CAP channel can\nbe established. The only exception here is PSM 1 for the service\ndiscovery protocol (SDP). It is meant to be used without any encryption\nsince it contains only public information. This is how Bluetooth 2.0\nand before handle connections on PSM 1.\n\nFor Bluetooth 2.1 devices the pairing procedure differentiates between\nno bonding, general bonding and dedicated bonding. The L2CAP layer\nwrongly uses always general bonding when creating new connections, but it\nshould not do this for SDP connections. In this case the authentication\nrequirement should be no bonding and the just-works model should be used,\nbut in case of non-SDP connection it is required to use general bonding.\n\nIf the new connection requires man-in-the-middle (MITM) protection, it\nalso first wrongly creates an unauthenticated link key and then later on\nrequests an upgrade to an authenticated link key to provide full MITM\nprotection. With Simple Pairing the link key generation is an expensive\noperation (compared to Bluetooth 2.0 and before) and doing this twice\nduring a connection setup causes a noticeable delay when establishing\na new connection. This should be avoided to not regress from the expected\nBluetooth 2.0 connection times. The authentication requirements are known\nup-front and so enforce them.\n\nTo fulfill these requirements the hci_connect() function has been extended\nwith an authentication requirement parameter that will be stored inside\nthe connection information and can be retrieved by userspace at any\ntime. This allows the correct IO capabilities exchange and results in\nthe expected behavior.\n\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>",
  "full_message": "[Bluetooth] Enforce correct authentication requirements\n\nWith the introduction of Security Mode 4 and Simple Pairing from the\nBluetooth 2.1 specification it became mandatory that the initiator\nrequires authentication and encryption before any L2CAP channel can\nbe established. The only exception here is PSM 1 for the service\ndiscovery protocol (SDP). It is meant to be used without any encryption\nsince it contains only public information. This is how Bluetooth 2.0\nand before handle connections on PSM 1.\n\nFor Bluetooth 2.1 devices the pairing procedure differentiates between\nno bonding, general bonding and dedicated bonding. The L2CAP layer\nwrongly uses always general bonding when creating new connections, but it\nshould not do this for SDP connections. In this case the authentication\nrequirement should be no bonding and the just-works model should be used,\nbut in case of non-SDP connection it is required to use general bonding.\n\nIf the new connection requires man-in-the-middle (MITM) protection, it\nalso first wrongly creates an unauthenticated link key and then later on\nrequests an upgrade to an authenticated link key to provide full MITM\nprotection. With Simple Pairing the link key generation is an expensive\noperation (compared to Bluetooth 2.0 and before) and doing this twice\nduring a connection setup causes a noticeable delay when establishing\na new connection. This should be avoided to not regress from the expected\nBluetooth 2.0 connection times. The authentication requirements are known\nup-front and so enforce them.\n\nTo fulfill these requirements the hci_connect() function has been extended\nwith an authentication requirement parameter that will be stored inside\nthe connection information and can be retrieved by userspace at any\ntime. This allows the correct IO capabilities exchange and results in\nthe expected behavior.\n\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>",
  "author_name": "Marcel Holtmann",
  "author_email": "marcel@holtmann.org",
  "author_date": "Tue Sep 9 07:19:20 2008 +0200",
  "author_date_iso": "2008-09-09T07:19:20+02:00",
  "committer_name": "Marcel Holtmann",
  "committer_email": "marcel@holtmann.org",
  "committer_date": "Tue Sep 9 07:19:20 2008 +0200",
  "committer_date_iso": "2008-09-09T07:19:20+02:00",
  "files_changed": [
    "include/net/bluetooth/hci_core.h",
    "net/bluetooth/hci_conn.c",
    "net/bluetooth/l2cap.c",
    "net/bluetooth/sco.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "include/net/bluetooth/hci_core.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/bluetooth/hci_conn.c",
      "insertions": 5,
      "deletions": 3
    },
    {
      "file": "net/bluetooth/l2cap.c",
      "insertions": 17,
      "deletions": 2
    },
    {
      "file": "net/bluetooth/sco.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 24,
  "total_deletions": 7,
  "total_changes": 31,
  "parents": [
    "f1c08ca559387ab30992055596d54061dfa022b1"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.27",
    "v2.6.27-rc6",
    "v2.6.27-rc7",
    "v2.6.27-rc8",
    "v2.6.27-rc9",
    "v2.6.28",
    "v2.6.28-rc1",
    "v2.6.28-rc2",
    "v2.6.28-rc3",
    "v2.6.28-rc4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/net/bluetooth/hci_core.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/bluetooth/hci_conn.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/bluetooth/l2cap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/bluetooth/sco.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}