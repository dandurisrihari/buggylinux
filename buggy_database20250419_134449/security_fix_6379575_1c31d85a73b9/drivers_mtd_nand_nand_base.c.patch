commit 637957551c0ac80de8dfc7650d320c5a98c2c0c0
Author: Matthieu CASTET <matthieu.castet@parrot.com>
Date:   Mon Mar 19 15:35:25 2012 +0100

    mtd: support ONFI multi lun NAND
    
    With onfi a flash is organized into one or more logical units (LUNs).
    A logical unit (LUN) is the minimum unit that can independently execute
    commands and report status.
    
    Mtd does not exploit LUN, so make it see a big single flash where size is
    lun_size * number_of_lun.
    
    Without this patch MT29F8G08ADBDAH4 size is 512MiB instead of 1GiB.
    
    Artem: split long line on 2 shorter ones.
    
    Signed-off-by: Matthieu Castet <matthieu.castet@parrot.com>
    Acked-by: Florian Fainelli <ffainelli@freebox.fr>
    Signed-off-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

diff --git a/drivers/mtd/nand/nand_base.c b/drivers/mtd/nand/nand_base.c
index 8008853756c9..0bcc71539b16 100644
--- a/drivers/mtd/nand/nand_base.c
+++ b/drivers/mtd/nand/nand_base.c
@@ -2893,7 +2893,8 @@ static int nand_flash_detect_onfi(struct mtd_info *mtd, struct nand_chip *chip,
 	mtd->writesize = le32_to_cpu(p->byte_per_page);
 	mtd->erasesize = le32_to_cpu(p->pages_per_block) * mtd->writesize;
 	mtd->oobsize = le16_to_cpu(p->spare_bytes_per_page);
-	chip->chipsize = (uint64_t)le32_to_cpu(p->blocks_per_lun) * mtd->erasesize;
+	chip->chipsize = le32_to_cpu(p->blocks_per_lun);
+	chip->chipsize *= (uint64_t)mtd->erasesize * p->lun_count;
 	*busw = 0;
 	if (le16_to_cpu(p->features) & 1)
 		*busw = NAND_BUSWIDTH_16;