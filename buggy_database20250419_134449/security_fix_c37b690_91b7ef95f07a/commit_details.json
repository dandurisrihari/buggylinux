{
  "hash": "c37b6908f7b2bd24dcaaf14a180e28c9132b9c58",
  "hash_short": "c37b6908",
  "subject": "powerpc/iommu: Fix notifiers being shared by PCI and VIO buses",
  "body": "fail_iommu_setup() registers the fail_iommu_bus_notifier struct to both\nPCI and VIO buses.  struct notifier_block is a linked list node, so this\ncauses any notifiers later registered to either bus type to also be\nregistered to the other since they share the same node.\n\nThis causes issues in (at least) the vgaarb code, which registers a\nnotifier for PCI buses.  pci_notify() ends up being called on a vio\ndevice, converted with to_pci_dev() even though it's not a PCI device,\nand finally makes a bad access in vga_arbiter_add_pci_device() as\ndiscovered with KASAN:\n\n BUG: KASAN: slab-out-of-bounds in vga_arbiter_add_pci_device+0x60/0xe00\n Read of size 4 at addr c000000264c26fdc by task swapper/0/1\n\n Call Trace:\n   dump_stack_lvl+0x1bc/0x2b8 (unreliable)\n   print_report+0x3f4/0xc60\n   kasan_report+0x244/0x698\n   __asan_load4+0xe8/0x250\n   vga_arbiter_add_pci_device+0x60/0xe00\n   pci_notify+0x88/0x444\n   notifier_call_chain+0x104/0x320\n   blocking_notifier_call_chain+0xa0/0x140\n   device_add+0xac8/0x1d30\n   device_register+0x58/0x80\n   vio_register_device_node+0x9ac/0xce0\n   vio_bus_scan_register_devices+0xc4/0x13c\n   __machine_initcall_pseries_vio_device_init+0x94/0xf0\n   do_one_initcall+0x12c/0xaa8\n   kernel_init_freeable+0xa48/0xba8\n   kernel_init+0x64/0x400\n   ret_from_kernel_thread+0x5c/0x64\n\nFix this by creating separate notifier_block structs for each bus type.\n\nFixes: d6b9a81b2a45 (\"powerpc: IOMMU fault injection\")\nReported-by: Nageswara R Sastry <rnsastry@linux.ibm.com>\nSigned-off-by: Russell Currey <ruscur@russell.cc>\nTested-by: Nageswara R Sastry <rnsastry@linux.ibm.com>\nReviewed-by: Andrew Donnellan <ajd@linux.ibm.com>\n[mpe: Add #ifdef to fix CONFIG_IBMVIO=n build]\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://msgid.link/20230322035322.328709-1-ruscur@russell.cc",
  "full_message": "powerpc/iommu: Fix notifiers being shared by PCI and VIO buses\n\nfail_iommu_setup() registers the fail_iommu_bus_notifier struct to both\nPCI and VIO buses.  struct notifier_block is a linked list node, so this\ncauses any notifiers later registered to either bus type to also be\nregistered to the other since they share the same node.\n\nThis causes issues in (at least) the vgaarb code, which registers a\nnotifier for PCI buses.  pci_notify() ends up being called on a vio\ndevice, converted with to_pci_dev() even though it's not a PCI device,\nand finally makes a bad access in vga_arbiter_add_pci_device() as\ndiscovered with KASAN:\n\n BUG: KASAN: slab-out-of-bounds in vga_arbiter_add_pci_device+0x60/0xe00\n Read of size 4 at addr c000000264c26fdc by task swapper/0/1\n\n Call Trace:\n   dump_stack_lvl+0x1bc/0x2b8 (unreliable)\n   print_report+0x3f4/0xc60\n   kasan_report+0x244/0x698\n   __asan_load4+0xe8/0x250\n   vga_arbiter_add_pci_device+0x60/0xe00\n   pci_notify+0x88/0x444\n   notifier_call_chain+0x104/0x320\n   blocking_notifier_call_chain+0xa0/0x140\n   device_add+0xac8/0x1d30\n   device_register+0x58/0x80\n   vio_register_device_node+0x9ac/0xce0\n   vio_bus_scan_register_devices+0xc4/0x13c\n   __machine_initcall_pseries_vio_device_init+0x94/0xf0\n   do_one_initcall+0x12c/0xaa8\n   kernel_init_freeable+0xa48/0xba8\n   kernel_init+0x64/0x400\n   ret_from_kernel_thread+0x5c/0x64\n\nFix this by creating separate notifier_block structs for each bus type.\n\nFixes: d6b9a81b2a45 (\"powerpc: IOMMU fault injection\")\nReported-by: Nageswara R Sastry <rnsastry@linux.ibm.com>\nSigned-off-by: Russell Currey <ruscur@russell.cc>\nTested-by: Nageswara R Sastry <rnsastry@linux.ibm.com>\nReviewed-by: Andrew Donnellan <ajd@linux.ibm.com>\n[mpe: Add #ifdef to fix CONFIG_IBMVIO=n build]\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://msgid.link/20230322035322.328709-1-ruscur@russell.cc",
  "author_name": "Russell Currey",
  "author_email": "ruscur@russell.cc",
  "author_date": "Wed Mar 22 14:53:22 2023 +1100",
  "author_date_iso": "2023-03-22T14:53:22+11:00",
  "committer_name": "Michael Ellerman",
  "committer_email": "mpe@ellerman.id.au",
  "committer_date": "Fri Aug 25 23:44:35 2023 +1000",
  "committer_date_iso": "2023-08-25T23:44:35+10:00",
  "files_changed": [
    "arch/powerpc/kernel/iommu.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/powerpc/kernel/iommu.c",
      "insertions": 14,
      "deletions": 3
    }
  ],
  "total_insertions": 14,
  "total_deletions": 3,
  "total_changes": 17,
  "parents": [
    "b9bbbf4979073d5536b7650decd37fcb901e6556"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/powerpc/kernel/iommu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}