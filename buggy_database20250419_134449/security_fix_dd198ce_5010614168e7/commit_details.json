{
  "hash": "dd198ce7141aa8dd9ffcc9549de422fb055508de",
  "hash_short": "dd198ce7",
  "subject": "Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace",
  "body": "Pull namespace updates from Eric Biederman:\n \"Life has been busy and I have not gotten half as much done this round\n  as I would have liked. I delayed it so that a minor conflict\n  resolution with the mips tree could spend a little time in linux-next\n  before I sent this pull request.\n\n  This includes two long delayed user namespace changes from Kirill\n  Tkhai. It also includes a very useful change from Serge Hallyn that\n  allows the security capability attribute to be used inside of user\n  namespaces. The practical effect of this is people can now untar\n  tarballs and install rpms in user namespaces. It had been suggested to\n  generalize this and encode some of the namespace information\n  information in the xattr name. Upon close inspection that makes the\n  things that should be hard easy and the things that should be easy\n  more expensive.\n\n  Then there is my bugfix/cleanup for signal injection that removes the\n  magic encoding of the siginfo union member from the kernel internal\n  si_code. The mips folks reported the case where I had used FPE_FIXME\n  me is impossible so I have remove FPE_FIXME from mips, while at the\n  same time including a return statement in that case to keep gcc from\n  complaining about unitialized variables.\n\n  I almost finished the work to get make copy_siginfo_to_user a trivial\n  copy to user. The code is available at:\n\n     git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git neuter-copy_siginfo_to_user-v3\n\n  But I did not have time/energy to get the code posted and reviewed\n  before the merge window opened.\n\n  I was able to see that the security excuse for just copying fields\n  that we know are initialized doesn't work in practice there are buggy\n  initializations that don't initialize the proper fields in siginfo. So\n  we still sometimes copy unitialized data to userspace\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace:\n  Introduce v3 namespaced file capabilities\n  mips/signal: In force_fcr31_sig return in the impossible case\n  signal: Remove kernel interal si_code magic\n  fcntl: Don't use ambiguous SIG_POLL si_codes\n  prctl: Allow local CAP_SYS_ADMIN changing exe_file\n  security: Use user_namespace::level to avoid redundant iterations in cap_capable()\n  userns,pidns: Verify the userns for new pid namespaces\n  signal/testing: Don't look for __SI_FAULT in userspace\n  signal/mips: Document a conflict with SI_USER with SIGFPE\n  signal/sparc: Document a conflict with SI_USER with SIGFPE\n  signal/ia64: Document a conflict with SI_USER with SIGFPE\n  signal/alpha: Document a conflict with SI_USER for SIGTRAP",
  "full_message": "Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace\n\nPull namespace updates from Eric Biederman:\n \"Life has been busy and I have not gotten half as much done this round\n  as I would have liked. I delayed it so that a minor conflict\n  resolution with the mips tree could spend a little time in linux-next\n  before I sent this pull request.\n\n  This includes two long delayed user namespace changes from Kirill\n  Tkhai. It also includes a very useful change from Serge Hallyn that\n  allows the security capability attribute to be used inside of user\n  namespaces. The practical effect of this is people can now untar\n  tarballs and install rpms in user namespaces. It had been suggested to\n  generalize this and encode some of the namespace information\n  information in the xattr name. Upon close inspection that makes the\n  things that should be hard easy and the things that should be easy\n  more expensive.\n\n  Then there is my bugfix/cleanup for signal injection that removes the\n  magic encoding of the siginfo union member from the kernel internal\n  si_code. The mips folks reported the case where I had used FPE_FIXME\n  me is impossible so I have remove FPE_FIXME from mips, while at the\n  same time including a return statement in that case to keep gcc from\n  complaining about unitialized variables.\n\n  I almost finished the work to get make copy_siginfo_to_user a trivial\n  copy to user. The code is available at:\n\n     git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git neuter-copy_siginfo_to_user-v3\n\n  But I did not have time/energy to get the code posted and reviewed\n  before the merge window opened.\n\n  I was able to see that the security excuse for just copying fields\n  that we know are initialized doesn't work in practice there are buggy\n  initializations that don't initialize the proper fields in siginfo. So\n  we still sometimes copy unitialized data to userspace\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace:\n  Introduce v3 namespaced file capabilities\n  mips/signal: In force_fcr31_sig return in the impossible case\n  signal: Remove kernel interal si_code magic\n  fcntl: Don't use ambiguous SIG_POLL si_codes\n  prctl: Allow local CAP_SYS_ADMIN changing exe_file\n  security: Use user_namespace::level to avoid redundant iterations in cap_capable()\n  userns,pidns: Verify the userns for new pid namespaces\n  signal/testing: Don't look for __SI_FAULT in userspace\n  signal/mips: Document a conflict with SI_USER with SIGFPE\n  signal/sparc: Document a conflict with SI_USER with SIGFPE\n  signal/ia64: Document a conflict with SI_USER with SIGFPE\n  signal/alpha: Document a conflict with SI_USER for SIGTRAP",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Mon Sep 11 18:34:47 2017 -0700",
  "author_date_iso": "2017-09-11T18:34:47-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Sep 11 18:34:47 2017 -0700",
  "committer_date_iso": "2017-09-11T18:34:47-07:00",
  "files_changed": [
    "arch/alpha/kernel/traps.c",
    "arch/arm64/kernel/signal32.c",
    "arch/sparc/kernel/traps_64.c",
    "include/linux/security.h",
    "include/linux/user_namespace.h",
    "kernel/exit.c",
    "kernel/signal.c",
    "security/commoncap.c"
  ],
  "files_changed_count": 8,
  "stats": [
    {
      "file": "arch/alpha/include/uapi/asm/siginfo.h",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "arch/alpha/kernel/traps.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kernel/signal32.c",
      "insertions": 9,
      "deletions": 14
    },
    {
      "file": "arch/blackfin/include/uapi/asm/siginfo.h",
      "insertions": 19,
      "deletions": 11
    },
    {
      "file": "arch/frv/include/uapi/asm/siginfo.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/ia64/include/uapi/asm/siginfo.h",
      "insertions": 12,
      "deletions": 9
    },
    {
      "file": "arch/ia64/kernel/signal.c",
      "insertions": 8,
      "deletions": 9
    },
    {
      "file": "arch/ia64/kernel/traps.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/mips/include/uapi/asm/siginfo.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/mips/kernel/signal32.c",
      "insertions": 9,
      "deletions": 10
    },
    {
      "file": "arch/mips/kernel/traps.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/parisc/kernel/signal32.c",
      "insertions": 15,
      "deletions": 16
    },
    {
      "file": "arch/powerpc/kernel/signal_32.c",
      "insertions": 9,
      "deletions": 11
    },
    {
      "file": "arch/s390/kernel/compat_signal.c",
      "insertions": 15,
      "deletions": 17
    },
    {
      "file": "arch/sparc/include/uapi/asm/siginfo.h",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "arch/sparc/kernel/signal32.c",
      "insertions": 8,
      "deletions": 8
    },
    {
      "file": "arch/sparc/kernel/traps_32.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/sparc/kernel/traps_64.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/tile/include/uapi/asm/siginfo.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/tile/kernel/compat_signal.c",
      "insertions": 8,
      "deletions": 10
    },
    {
      "file": "arch/tile/kernel/traps.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kernel/signal_compat.c",
      "insertions": 9,
      "deletions": 12
    },
    {
      "file": "fs/fcntl.c",
      "insertions": 12,
      "deletions": 1
    },
    {
      "file": "fs/signalfd.c",
      "insertions": 8,
      "deletions": 14
    },
    {
      "file": "fs/xattr.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "include/linux/capability.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "include/linux/security.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "include/linux/signal.h",
      "insertions": 22,
      "deletions": 0
    },
    {
      "file": "include/linux/user_namespace.h",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "include/uapi/asm-generic/siginfo.h",
      "insertions": 46,
      "deletions": 69
    },
    {
      "file": "include/uapi/linux/capability.h",
      "insertions": 19,
      "deletions": 3
    },
    {
      "file": "kernel/exit.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "kernel/pid_namespace.c",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "kernel/ptrace.c",
      "insertions": 2,
      "deletions": 4
    },
    {
      "file": "kernel/signal.c",
      "insertions": 55,
      "deletions": 17
    },
    {
      "file": "kernel/sys.c",
      "insertions": 2,
      "deletions": 6
    },
    {
      "file": "kernel/user_namespace.c",
      "insertions": 12,
      "deletions": 8
    },
    {
      "file": "security/commoncap.c",
      "insertions": 256,
      "deletions": 21
    },
    {
      "file": "tools/testing/selftests/x86/mpx-mini-test.c",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "tools/testing/selftests/x86/protection_keys.c",
      "insertions": 6,
      "deletions": 7
    }
  ],
  "total_insertions": 622,
  "total_deletions": 297,
  "total_changes": 919,
  "parents": [
    "89fd915c402113528750353ad6de9ea68a787e5c",
    "076a9bcacfc7ccbc2b3fdf3bd490718f6b182419"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.14",
    "v4.14-rc1",
    "v4.14-rc2",
    "v4.14-rc3",
    "v4.14-rc4",
    "v4.14-rc5",
    "v4.14-rc6",
    "v4.14-rc7",
    "v4.14-rc8",
    "v4.15"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/sparc/kernel/traps_64.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/signal32.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/alpha/kernel/traps.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/exit.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/security.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/signal.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/user_namespace.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/commoncap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}