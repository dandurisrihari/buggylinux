commit 66933b78e3204057bfc26343afcd0d463c0e8e55
Author: David Hildenbrand <dahi@linux.vnet.ibm.com>
Date:   Thu Nov 20 13:49:32 2014 +0100

    KVM: s390: simplify in-kernel program irq injection
    
    The main reason to keep program injection in kernel separated until now
    was that we were able to do some checking, if really only the owning
    thread injects program interrupts (via waitqueue_active(li->wq)).
    
    This BUG_ON was never triggered and the chances of really hitting it, if
    another thread injected a program irq to another vcpu, were very small.
    
    Let's drop this check and turn kvm_s390_inject_program_int() and
    kvm_s390_inject_prog_irq() into simple inline functions that makes use of
    kvm_s390_inject_vcpu().
    
    __must_check can be dropped as they are implicitely given by
    kvm_s390_inject_vcpu(), to avoid ugly long function prototypes.
    
    Reviewed-by: Jens Freimann <jfrei@linux.vnet.ibm.com>
    Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>

diff --git a/arch/s390/kvm/interrupt.c b/arch/s390/kvm/interrupt.c
index 10a0e8beb9e1..f603bacf6ac9 100644
--- a/arch/s390/kvm/interrupt.c
+++ b/arch/s390/kvm/interrupt.c
@@ -977,34 +977,6 @@ static int __inject_prog(struct kvm_vcpu *vcpu, struct kvm_s390_irq *irq)
 	return 0;
 }
 
-int kvm_s390_inject_program_int(struct kvm_vcpu *vcpu, u16 code)
-{
-	struct kvm_s390_local_interrupt *li = &vcpu->arch.local_int;
-	struct kvm_s390_irq irq;
-
-	spin_lock(&li->lock);
-	irq.u.pgm.code = code;
-	__inject_prog(vcpu, &irq);
-	BUG_ON(waitqueue_active(li->wq));
-	spin_unlock(&li->lock);
-	return 0;
-}
-
-int kvm_s390_inject_prog_irq(struct kvm_vcpu *vcpu,
-			     struct kvm_s390_pgm_info *pgm_info)
-{
-	struct kvm_s390_local_interrupt *li = &vcpu->arch.local_int;
-	struct kvm_s390_irq irq;
-	int rc;
-
-	spin_lock(&li->lock);
-	irq.u.pgm = *pgm_info;
-	rc = __inject_prog(vcpu, &irq);
-	BUG_ON(waitqueue_active(li->wq));
-	spin_unlock(&li->lock);
-	return rc;
-}
-
 static int __inject_pfault_init(struct kvm_vcpu *vcpu, struct kvm_s390_irq *irq)
 {
 	struct kvm_s390_local_interrupt *li = &vcpu->arch.local_int;