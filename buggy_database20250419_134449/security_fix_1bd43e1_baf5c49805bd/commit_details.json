{
  "hash": "1bd43e19de1b99179b9beb92b14697e113326d00",
  "hash_short": "1bd43e19",
  "subject": "block, bfq: balance I/O injection among underutilized actuators",
  "body": "Upon the invocation of its dispatch function, BFQ returns the next I/O\nrequest of the in-service bfq_queue, unless some exception holds. One\nsuch exception is that there is some underutilized actuator, different\nfrom the actuator for which the in-service queue contains I/O, and\nthat some other bfq_queue happens to contain I/O for such an\nactuator. In this case, the next I/O request of the latter bfq_queue,\nand not of the in-service bfq_queue, is returned (I/O is injected from\nthat bfq_queue). To find such an actuator, a linear scan, in\nincreasing index order, is performed among actuators.\n\nPerforming a linear scan entails a prioritization among actuators: an\nunderutilized actuator may be considered for injection only if all\nactuators with a lower index are currently fully utilized, or if there\nis no pending I/O for any lower-index actuator that happens to be\nunderutilized.\n\nThis commits breaks this prioritization and tends to distribute\ninjection uniformly across actuators. This is obtained by adding the\nfollowing condition to the linear scan: even if an actuator A is\nunderutilized, A is however skipped if its load is higher than that of\nthe next actuator.\n\nReviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>\nSigned-off-by: Paolo Valente <paolo.valente@linaro.org>\nSigned-off-by: Davide Zini <davidezini2@gmail.com>\nLink: https://lore.kernel.org/r/20230103145503.71712-9-paolo.valente@linaro.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "full_message": "block, bfq: balance I/O injection among underutilized actuators\n\nUpon the invocation of its dispatch function, BFQ returns the next I/O\nrequest of the in-service bfq_queue, unless some exception holds. One\nsuch exception is that there is some underutilized actuator, different\nfrom the actuator for which the in-service queue contains I/O, and\nthat some other bfq_queue happens to contain I/O for such an\nactuator. In this case, the next I/O request of the latter bfq_queue,\nand not of the in-service bfq_queue, is returned (I/O is injected from\nthat bfq_queue). To find such an actuator, a linear scan, in\nincreasing index order, is performed among actuators.\n\nPerforming a linear scan entails a prioritization among actuators: an\nunderutilized actuator may be considered for injection only if all\nactuators with a lower index are currently fully utilized, or if there\nis no pending I/O for any lower-index actuator that happens to be\nunderutilized.\n\nThis commits breaks this prioritization and tends to distribute\ninjection uniformly across actuators. This is obtained by adding the\nfollowing condition to the linear scan: even if an actuator A is\nunderutilized, A is however skipped if its load is higher than that of\nthe next actuator.\n\nReviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>\nSigned-off-by: Paolo Valente <paolo.valente@linaro.org>\nSigned-off-by: Davide Zini <davidezini2@gmail.com>\nLink: https://lore.kernel.org/r/20230103145503.71712-9-paolo.valente@linaro.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "author_name": "Davide Zini",
  "author_email": "davidezini2@gmail.com",
  "author_date": "Tue Jan 3 15:55:03 2023 +0100",
  "author_date_iso": "2023-01-03T15:55:03+01:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Sun Jan 29 15:18:33 2023 -0700",
  "committer_date_iso": "2023-01-29T15:18:33-07:00",
  "files_changed": [
    "block/bfq-iosched.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "block/bfq-iosched.c",
      "insertions": 13,
      "deletions": 5
    }
  ],
  "total_insertions": 13,
  "total_deletions": 5,
  "total_changes": 18,
  "parents": [
    "2d31c684a053b46f75b230899d00c0f56708243d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "block/bfq-iosched.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}