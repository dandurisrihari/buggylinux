{
  "hash": "80344266c19b82a27e018083e9dd501048a6a06a",
  "hash_short": "80344266",
  "subject": "dcache: Define usercopy region in dentry_cache slab cache",
  "body": "When a dentry name is short enough, it can be stored directly in the\ndentry itself (instead in a separate kmalloc allocation). These dentry\nshort names, stored in struct dentry.d_iname and therefore contained in\nthe dentry_cache slab cache, need to be coped to userspace.\n\ncache object allocation:\n    fs/dcache.c:\n        __d_alloc(...):\n            ...\n            dentry = kmem_cache_alloc(dentry_cache, ...);\n            ...\n            dentry->d_name.name = dentry->d_iname;\n\nexample usage trace:\n    filldir+0xb0/0x140\n    dcache_readdir+0x82/0x170\n    iterate_dir+0x142/0x1b0\n    SyS_getdents+0xb5/0x160\n\n    fs/readdir.c:\n        (called via ctx.actor by dir_emit)\n        filldir(..., const char *name, ...):\n            ...\n            copy_to_user(..., name, namlen)\n\n    fs/libfs.c:\n        dcache_readdir(...):\n            ...\n            next = next_positive(dentry, p, 1)\n            ...\n            dir_emit(..., next->d_name.name, ...)\n\nIn support of usercopy hardening, this patch defines a region in the\ndentry_cache slab cache in which userspace copy operations are allowed.\n\nThis region is known as the slab cache's usercopy region. Slab caches can\nnow check that each dynamic copy operation involving cache-managed memory\nfalls entirely within the slab's usercopy region.\n\nThis patch is modified from Brad Spengler/PaX Team's PAX_USERCOPY\nwhitelisting code in the last public patch of grsecurity/PaX based on my\nunderstanding of the code. Changes or omissions from the original code are\nmine and don't reflect the original grsecurity/PaX code.\n\nSigned-off-by: David Windsor <dave@nullcore.net>\n[kees: adjust hunks for kmalloc-specific things moved later]\n[kees: adjust commit log, provide usage trace]\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: linux-fsdevel@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "dcache: Define usercopy region in dentry_cache slab cache\n\nWhen a dentry name is short enough, it can be stored directly in the\ndentry itself (instead in a separate kmalloc allocation). These dentry\nshort names, stored in struct dentry.d_iname and therefore contained in\nthe dentry_cache slab cache, need to be coped to userspace.\n\ncache object allocation:\n    fs/dcache.c:\n        __d_alloc(...):\n            ...\n            dentry = kmem_cache_alloc(dentry_cache, ...);\n            ...\n            dentry->d_name.name = dentry->d_iname;\n\nexample usage trace:\n    filldir+0xb0/0x140\n    dcache_readdir+0x82/0x170\n    iterate_dir+0x142/0x1b0\n    SyS_getdents+0xb5/0x160\n\n    fs/readdir.c:\n        (called via ctx.actor by dir_emit)\n        filldir(..., const char *name, ...):\n            ...\n            copy_to_user(..., name, namlen)\n\n    fs/libfs.c:\n        dcache_readdir(...):\n            ...\n            next = next_positive(dentry, p, 1)\n            ...\n            dir_emit(..., next->d_name.name, ...)\n\nIn support of usercopy hardening, this patch defines a region in the\ndentry_cache slab cache in which userspace copy operations are allowed.\n\nThis region is known as the slab cache's usercopy region. Slab caches can\nnow check that each dynamic copy operation involving cache-managed memory\nfalls entirely within the slab's usercopy region.\n\nThis patch is modified from Brad Spengler/PaX Team's PAX_USERCOPY\nwhitelisting code in the last public patch of grsecurity/PaX based on my\nunderstanding of the code. Changes or omissions from the original code are\nmine and don't reflect the original grsecurity/PaX code.\n\nSigned-off-by: David Windsor <dave@nullcore.net>\n[kees: adjust hunks for kmalloc-specific things moved later]\n[kees: adjust commit log, provide usage trace]\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: linux-fsdevel@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "David Windsor",
  "author_email": "dave@nullcore.net",
  "author_date": "Sat Jun 10 22:50:44 2017 -0400",
  "author_date_iso": "2017-06-10T22:50:44-04:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Mon Jan 15 12:07:50 2018 -0800",
  "committer_date_iso": "2018-01-15T12:07:50-08:00",
  "files_changed": [
    "fs/dcache.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/dcache.c",
      "insertions": 3,
      "deletions": 2
    }
  ],
  "total_insertions": 3,
  "total_deletions": 2,
  "total_changes": 5,
  "parents": [
    "6c0c21adc742a255f0203ef76ef0ed6c8c3b0630"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc1",
    "v4.16-rc2",
    "v4.16-rc3",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/dcache.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}