commit eac9ac6d1f5d0e9d33e4ded682187b630e7606cd
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jun 25 09:36:41 2012 +0200

    iwlwifi: fix activating inactive stations
    
    When authentication/association timed out, the driver would
    complain bitterly, printing the message
    ACTIVATE a non DRIVER active station id ... addr ...
    
    The cause turns out to be that when the AP station is added
    but we don't associate, the IWL_STA_UCODE_INPROGRESS is set
    but never cleared. This then causes iwl_restore_stations()
    to attempt to resend it because it uses the flag internally
    and uploads even if it didn't set it itself.
    
    To fix this issue and not upload the station again when it
    has already been removed by mac80211, clear the flag after
    adding it in case we add it only for association.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Meenakshi Venkataraman <meenakshi.venkataraman@intel.com>
    Reviewed-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/drivers/net/wireless/iwlwifi/iwl-mac80211.c b/drivers/net/wireless/iwlwifi/iwl-mac80211.c
index 3ee23134c02b..013680332f07 100644
--- a/drivers/net/wireless/iwlwifi/iwl-mac80211.c
+++ b/drivers/net/wireless/iwlwifi/iwl-mac80211.c
@@ -796,6 +796,18 @@ int iwlagn_mac_sta_state(struct ieee80211_hw *hw,
 	switch (op) {
 	case ADD:
 		ret = iwlagn_mac_sta_add(hw, vif, sta);
+		if (ret)
+			break;
+		/*
+		 * Clear the in-progress flag, the AP station entry was added
+		 * but we'll initialize LQ only when we've associated (which
+		 * would also clear the in-progress flag). This is necessary
+		 * in case we never initialize LQ because association fails.
+		 */
+		spin_lock_bh(&priv->sta_lock);
+		priv->stations[iwl_sta_id(sta)].used &=
+			~IWL_STA_UCODE_INPROGRESS;
+		spin_unlock_bh(&priv->sta_lock);
 		break;
 	case REMOVE:
 		ret = iwlagn_mac_sta_remove(hw, vif, sta);