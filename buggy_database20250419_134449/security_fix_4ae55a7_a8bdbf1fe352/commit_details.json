{
  "hash": "4ae55a7dce04989f289d5c5c8c8e5c37adc36c71",
  "hash_short": "4ae55a7d",
  "subject": "nvme-auth: use chap->s2 to indicate bidirectional authentication",
  "body": "Commit 546dea18c999 (\"nvme-auth: check chap ctrl_key once constructed\")\nreplaced the condition \"if (ctrl->ctrl_key)\" (indicating bidirectional\nauth) by \"if (chap->ctrl_key)\", because ctrl->ctrl_key is a resource shared\nwith sysfs. But chap->ctrl_key is set in\nnvme_auth_process_dhchap_challenge() depending on the DHVLEN in the\nDH-HMAC-CHAP Challenge message received from the controller, and will thus\nbe non-NULL for every DH-HMAC-CHAP exchange, even if unidirectional auth\nwas requested. This will lead to a protocol violation by sending a Success2\nmessage in the unidirectional case (per NVMe base spec 2.0, the\nauthentication transaction ends after the Success1 message for\nunidirectional auth). Use chap->s2 instead, which is non-zero if and only\nif the host requested bi-directional authentication from the controller.\n\nFixes: 546dea18c999 (\"nvme-auth: check chap ctrl_key once constructed\")\nSigned-off-by: Martin Wilck <mwilck@suse.com>\nReviewed-by: Daniel Wagner <dwagner@suse.de>\nReviewed-by: Sagi Grimberg <sagi@grimberg.me>\nReviewed-by: Hannes Reinecke <hare@suse.de>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Keith Busch <kbusch@kernel.org>",
  "full_message": "nvme-auth: use chap->s2 to indicate bidirectional authentication\n\nCommit 546dea18c999 (\"nvme-auth: check chap ctrl_key once constructed\")\nreplaced the condition \"if (ctrl->ctrl_key)\" (indicating bidirectional\nauth) by \"if (chap->ctrl_key)\", because ctrl->ctrl_key is a resource shared\nwith sysfs. But chap->ctrl_key is set in\nnvme_auth_process_dhchap_challenge() depending on the DHVLEN in the\nDH-HMAC-CHAP Challenge message received from the controller, and will thus\nbe non-NULL for every DH-HMAC-CHAP exchange, even if unidirectional auth\nwas requested. This will lead to a protocol violation by sending a Success2\nmessage in the unidirectional case (per NVMe base spec 2.0, the\nauthentication transaction ends after the Success1 message for\nunidirectional auth). Use chap->s2 instead, which is non-zero if and only\nif the host requested bi-directional authentication from the controller.\n\nFixes: 546dea18c999 (\"nvme-auth: check chap ctrl_key once constructed\")\nSigned-off-by: Martin Wilck <mwilck@suse.com>\nReviewed-by: Daniel Wagner <dwagner@suse.de>\nReviewed-by: Sagi Grimberg <sagi@grimberg.me>\nReviewed-by: Hannes Reinecke <hare@suse.de>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Keith Busch <kbusch@kernel.org>",
  "author_name": "Martin Wilck",
  "author_email": "mwilck@suse.com",
  "author_date": "Mon Sep 4 17:26:38 2023 +0200",
  "author_date_iso": "2023-09-04T17:26:38+02:00",
  "committer_name": "Keith Busch",
  "committer_email": "kbusch@kernel.org",
  "committer_date": "Tue Oct 10 08:06:06 2023 -0700",
  "committer_date_iso": "2023-10-10T08:06:06-07:00",
  "files_changed": [
    "drivers/nvme/host/auth.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/nvme/host/auth.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 2,
  "total_deletions": 2,
  "total_changes": 4,
  "parents": [
    "d920abd1e7c4884f9ecd0749d1921b7ab19ddfbd"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "auth"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/nvme/host/auth.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}