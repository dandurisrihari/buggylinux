{
  "hash": "58a039e679fe72bd0efa8b2abe669a7914bb4429",
  "hash_short": "58a039e6",
  "subject": "mm: split critical region in remap_file_pages() and invoke LSMs in between",
  "body": "Commit ea7e2d5e49c0 (\"mm: call the security_mmap_file() LSM hook in\nremap_file_pages()\") fixed a security issue, it added an LSM check when\ntrying to remap file pages, so that LSMs have the opportunity to evaluate\nsuch action like for other memory operations such as mmap() and\nmprotect().\n\nHowever, that commit called security_mmap_file() inside the mmap_lock\nlock, while the other calls do it before taking the lock, after commit\n8b3ec6814c83 (\"take security_mmap_file() outside of ->mmap_sem\").\n\nThis caused lock inversion issue with IMA which was taking the mmap_lock\nand i_mutex lock in the opposite way when the remap_file_pages() system\ncall was called.\n\nSolve the issue by splitting the critical region in remap_file_pages() in\ntwo regions: the first takes a read lock of mmap_lock, retrieves the VMA\nand the file descriptor associated, and calculates the 'prot' and 'flags'\nvariables; the second takes a write lock on mmap_lock, checks that the VMA\nflags and the VMA file descriptor are the same as the ones obtained in the\nfirst critical region (otherwise the system call fails), and calls\ndo_mmap().\n\nIn between, after releasing the read lock and before taking the write\nlock, call security_mmap_file(), and solve the lock inversion issue.\n\nLink: https://lkml.kernel.org/r/20241018161415.3845146-1-roberto.sassu@huaweicloud.com\nFixes: ea7e2d5e49c0 (\"mm: call the security_mmap_file() LSM hook in remap_file_pages()\")\nSigned-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nSigned-off-by: Roberto Sassu <roberto.sassu@huawei.com>\nReported-by: syzbot+1cd571a672400ef3a930@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/linux-security-module/66f7b10e.050a0220.46d20.0036.GAE@google.com/\nTested-by: Roberto Sassu <roberto.sassu@huawei.com>\nReviewed-by: Roberto Sassu <roberto.sassu@huawei.com>\nReviewed-by: Jann Horn <jannh@google.com>\nReviewed-by: Lorenzo Stoakes <lorenzo.stoakes@oracle.com>\nReviewed-by: Liam R. Howlett <Liam.Howlett@Oracle.com>\nReviewed-by: Paul Moore <paul@paul-moore.com>\nTested-by: syzbot+1cd571a672400ef3a930@syzkaller.appspotmail.com\nCc: Jarkko Sakkinen <jarkko@kernel.org>\nCc: Dmitry Kasatkin <dmitry.kasatkin@gmail.com>\nCc: Eric Snowberg <eric.snowberg@oracle.com>\nCc: James Morris <jmorris@namei.org>\nCc: Mimi Zohar <zohar@linux.ibm.com>\nCc: \"Serge E. Hallyn\" <serge@hallyn.com>\nCc: Shu Han <ebpqwerty472123@gmail.com>\nCc: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "full_message": "mm: split critical region in remap_file_pages() and invoke LSMs in between\n\nCommit ea7e2d5e49c0 (\"mm: call the security_mmap_file() LSM hook in\nremap_file_pages()\") fixed a security issue, it added an LSM check when\ntrying to remap file pages, so that LSMs have the opportunity to evaluate\nsuch action like for other memory operations such as mmap() and\nmprotect().\n\nHowever, that commit called security_mmap_file() inside the mmap_lock\nlock, while the other calls do it before taking the lock, after commit\n8b3ec6814c83 (\"take security_mmap_file() outside of ->mmap_sem\").\n\nThis caused lock inversion issue with IMA which was taking the mmap_lock\nand i_mutex lock in the opposite way when the remap_file_pages() system\ncall was called.\n\nSolve the issue by splitting the critical region in remap_file_pages() in\ntwo regions: the first takes a read lock of mmap_lock, retrieves the VMA\nand the file descriptor associated, and calculates the 'prot' and 'flags'\nvariables; the second takes a write lock on mmap_lock, checks that the VMA\nflags and the VMA file descriptor are the same as the ones obtained in the\nfirst critical region (otherwise the system call fails), and calls\ndo_mmap().\n\nIn between, after releasing the read lock and before taking the write\nlock, call security_mmap_file(), and solve the lock inversion issue.\n\nLink: https://lkml.kernel.org/r/20241018161415.3845146-1-roberto.sassu@huaweicloud.com\nFixes: ea7e2d5e49c0 (\"mm: call the security_mmap_file() LSM hook in remap_file_pages()\")\nSigned-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nSigned-off-by: Roberto Sassu <roberto.sassu@huawei.com>\nReported-by: syzbot+1cd571a672400ef3a930@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/linux-security-module/66f7b10e.050a0220.46d20.0036.GAE@google.com/\nTested-by: Roberto Sassu <roberto.sassu@huawei.com>\nReviewed-by: Roberto Sassu <roberto.sassu@huawei.com>\nReviewed-by: Jann Horn <jannh@google.com>\nReviewed-by: Lorenzo Stoakes <lorenzo.stoakes@oracle.com>\nReviewed-by: Liam R. Howlett <Liam.Howlett@Oracle.com>\nReviewed-by: Paul Moore <paul@paul-moore.com>\nTested-by: syzbot+1cd571a672400ef3a930@syzkaller.appspotmail.com\nCc: Jarkko Sakkinen <jarkko@kernel.org>\nCc: Dmitry Kasatkin <dmitry.kasatkin@gmail.com>\nCc: Eric Snowberg <eric.snowberg@oracle.com>\nCc: James Morris <jmorris@namei.org>\nCc: Mimi Zohar <zohar@linux.ibm.com>\nCc: \"Serge E. Hallyn\" <serge@hallyn.com>\nCc: Shu Han <ebpqwerty472123@gmail.com>\nCc: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "author_name": "Kirill A. Shutemov",
  "author_email": "kirill.shutemov@linux.intel.com",
  "author_date": "Fri Oct 18 18:14:15 2024 +0200",
  "author_date_iso": "2024-10-18T18:14:15+02:00",
  "committer_name": "Andrew Morton",
  "committer_email": "akpm@linux-foundation.org",
  "committer_date": "Mon Oct 28 21:40:41 2024 -0700",
  "committer_date_iso": "2024-10-28T21:40:41-07:00",
  "files_changed": [
    "mm/mmap.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "mm/mmap.c",
      "insertions": 52,
      "deletions": 17
    }
  ],
  "total_insertions": 52,
  "total_deletions": 17,
  "total_changes": 69,
  "parents": [
    "f2330b650e97a68c1afce66305f10651a9544037"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "mm/mmap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}