{
  "hash": "8c15c2a0281087d19f62d7c2b5ab1f9e961b8d97",
  "hash_short": "8c15c2a0",
  "subject": "KVM: arm64: Use different pointer authentication keys for pKVM",
  "body": "When the use of pointer authentication is enabled in the kernel it\napplies to both the kernel itself as well as KVM's nVHE hypervisor. The\nsame keys are used for both the kernel and the nVHE hypervisor, which is\nless than desirable for pKVM as the host is not trusted at runtime.\n\nNaturally, the fix is to use a different set of keys for the hypervisor\nwhen running in protected mode. Have the host generate a new set of keys\nfor the hypervisor before deprivileging the kernel. While there might be\nother sources of random directly available at EL2, this keeps the\nimplementation simple, and the host is trusted anyways until it is\ndeprivileged.\n\nSince the host and hypervisor no longer share a set of pointer\nauthentication keys, start context switching them on the host entry/exit\npath exactly as we do for guest entry/exit. There is no need to handle\nCPU migration as the nVHE code is not migratable in the first place.\n\nSigned-off-by: Mostafa Saleh <smostafa@google.com>\nLink: https://lore.kernel.org/r/20230614122600.2098901-1-smostafa@google.com\nSigned-off-by: Oliver Upton <oliver.upton@linux.dev>",
  "full_message": "KVM: arm64: Use different pointer authentication keys for pKVM\n\nWhen the use of pointer authentication is enabled in the kernel it\napplies to both the kernel itself as well as KVM's nVHE hypervisor. The\nsame keys are used for both the kernel and the nVHE hypervisor, which is\nless than desirable for pKVM as the host is not trusted at runtime.\n\nNaturally, the fix is to use a different set of keys for the hypervisor\nwhen running in protected mode. Have the host generate a new set of keys\nfor the hypervisor before deprivileging the kernel. While there might be\nother sources of random directly available at EL2, this keeps the\nimplementation simple, and the host is trusted anyways until it is\ndeprivileged.\n\nSince the host and hypervisor no longer share a set of pointer\nauthentication keys, start context switching them on the host entry/exit\npath exactly as we do for guest entry/exit. There is no need to handle\nCPU migration as the nVHE code is not migratable in the first place.\n\nSigned-off-by: Mostafa Saleh <smostafa@google.com>\nLink: https://lore.kernel.org/r/20230614122600.2098901-1-smostafa@google.com\nSigned-off-by: Oliver Upton <oliver.upton@linux.dev>",
  "author_name": "Mostafa Saleh",
  "author_email": "smostafa@google.com",
  "author_date": "Wed Jun 14 12:25:59 2023 +0000",
  "author_date_iso": "2023-06-14T12:25:59+00:00",
  "committer_name": "Oliver Upton",
  "committer_email": "oliver.upton@linux.dev",
  "committer_date": "Wed Jun 14 15:17:32 2023 +0000",
  "committer_date_iso": "2023-06-14T15:17:32+00:00",
  "files_changed": [
    "arch/arm64/kvm/arm.c",
    "arch/arm64/kvm/hyp/nvhe/host.S"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm64/kvm/arm.c",
      "insertions": 26,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/host.S",
      "insertions": 35,
      "deletions": 1
    }
  ],
  "total_insertions": 61,
  "total_deletions": 1,
  "total_changes": 62,
  "parents": [
    "21e87daece5aed25f47f051af5fccbbd39164c88"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/kvm/arm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/host.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}