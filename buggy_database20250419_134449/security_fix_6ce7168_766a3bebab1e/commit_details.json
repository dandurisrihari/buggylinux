{
  "hash": "6ce71687d4f4105350ddbc92aa12e6bc9839f103",
  "hash_short": "6ce71687",
  "subject": "Merge branch 'locked-bridge-ports'",
  "body": "Hans Schultz says:\n\n====================\nAdd support for locked bridge ports (for 802.1X)\n\nThis series starts by adding support for SA filtering to the bridge,\nwhich is then allowed to be offloaded to switchdev devices. Furthermore\nan offloading implementation is supplied for the mv88e6xxx driver.\n\nPublic Local Area Networks are often deployed such that there is a\nrisk of unauthorized or unattended clients getting access to the LAN.\nTo prevent such access we introduce SA filtering, such that ports\ndesignated as secure ports are set in locked mode, so that only\nauthorized source MAC addresses are given access by adding them to\nthe bridges forwarding database. Incoming packets with source MAC\naddresses that are not in the forwarding database of the bridge are\ndiscarded. It is then the task of user space daemons to populate the\nbridge's forwarding database with static entries of authorized entities.\n\nThe most common approach is to use the IEEE 802.1X protocol to take\ncare of the authorization of allowed users to gain access by opening\nfor the source address of the authorized host.\n\nWith the current use of the bridge parameter in hostapd, there is\na limitation in using this for IEEE 802.1X port authentication. It\ndepends on hostapd attaching the port on which it has a successful\nauthentication to the bridge, but that only allows for a single\nauthentication per port. This patch set allows for the use of\nIEEE 802.1X port authentication in a more general network context with\nmultiple 802.1X aware hosts behind a single port as depicted, which is\na commonly used commercial use-case, as it is only the number of\navailable entries in the forwarding database that limits the number of\nauthenticated clients.\n\n      +--------------------------------+\n      |                                |\n      |      Bridge/Authenticator      |\n      |                                |\n      +-------------+------------------+\n       802.1X port  |\n                    |\n                    |\n             +------+-------+\n             |              |\n             |  Hub/Switch  |\n             |              |\n             +-+----------+-+\n               |          |\n            +--+--+    +--+--+\n            |     |    |     |\n    Hosts   |  a  |    |  b  |   . . .\n            |     |    |     |\n            +-----+    +-----+\n\nThe 802.1X standard involves three different components, a Supplicant\n(Host), an Authenticator (Network Access Point) and an Authentication\nServer which is typically a Radius server. This patch set thus enables\nthe bridge module together with an authenticator application to serve\nas an Authenticator on designated ports.\n\nFor the bridge to become an IEEE 802.1X Authenticator, a solution using\nhostapd with the bridge driver can be found at\nhttps://github.com/westermo/hostapd/tree/bridge_driver .\n\nThe relevant components work transparently in relation to if it is the\nbridge module or the offloaded switchcore case that is in use.\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "Merge branch 'locked-bridge-ports'\n\nHans Schultz says:\n\n====================\nAdd support for locked bridge ports (for 802.1X)\n\nThis series starts by adding support for SA filtering to the bridge,\nwhich is then allowed to be offloaded to switchdev devices. Furthermore\nan offloading implementation is supplied for the mv88e6xxx driver.\n\nPublic Local Area Networks are often deployed such that there is a\nrisk of unauthorized or unattended clients getting access to the LAN.\nTo prevent such access we introduce SA filtering, such that ports\ndesignated as secure ports are set in locked mode, so that only\nauthorized source MAC addresses are given access by adding them to\nthe bridges forwarding database. Incoming packets with source MAC\naddresses that are not in the forwarding database of the bridge are\ndiscarded. It is then the task of user space daemons to populate the\nbridge's forwarding database with static entries of authorized entities.\n\nThe most common approach is to use the IEEE 802.1X protocol to take\ncare of the authorization of allowed users to gain access by opening\nfor the source address of the authorized host.\n\nWith the current use of the bridge parameter in hostapd, there is\na limitation in using this for IEEE 802.1X port authentication. It\ndepends on hostapd attaching the port on which it has a successful\nauthentication to the bridge, but that only allows for a single\nauthentication per port. This patch set allows for the use of\nIEEE 802.1X port authentication in a more general network context with\nmultiple 802.1X aware hosts behind a single port as depicted, which is\na commonly used commercial use-case, as it is only the number of\navailable entries in the forwarding database that limits the number of\nauthenticated clients.\n\n      +--------------------------------+\n      |                                |\n      |      Bridge/Authenticator      |\n      |                                |\n      +-------------+------------------+\n       802.1X port  |\n                    |\n                    |\n             +------+-------+\n             |              |\n             |  Hub/Switch  |\n             |              |\n             +-+----------+-+\n               |          |\n            +--+--+    +--+--+\n            |     |    |     |\n    Hosts   |  a  |    |  b  |   . . .\n            |     |    |     |\n            +-----+    +-----+\n\nThe 802.1X standard involves three different components, a Supplicant\n(Host), an Authenticator (Network Access Point) and an Authentication\nServer which is typically a Radius server. This patch set thus enables\nthe bridge module together with an authenticator application to serve\nas an Authenticator on designated ports.\n\nFor the bridge to become an IEEE 802.1X Authenticator, a solution using\nhostapd with the bridge driver can be found at\nhttps://github.com/westermo/hostapd/tree/bridge_driver .\n\nThe relevant components work transparently in relation to if it is the\nbridge module or the offloaded switchcore case that is in use.\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "David S. Miller",
  "author_email": "davem@davemloft.net",
  "author_date": "Wed Feb 23 12:52:35 2022 +0000",
  "author_date_iso": "2022-02-23T12:52:35+00:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Wed Feb 23 12:52:35 2022 +0000",
  "committer_date_iso": "2022-02-23T12:52:35+00:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "drivers/net/dsa/mv88e6xxx/chip.c",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "drivers/net/dsa/mv88e6xxx/port.c",
      "insertions": 29,
      "deletions": 0
    },
    {
      "file": "drivers/net/dsa/mv88e6xxx/port.h",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "include/linux/if_bridge.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/if_link.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/bridge/br_input.c",
      "insertions": 10,
      "deletions": 1
    },
    {
      "file": "net/bridge/br_netlink.c",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "net/bridge/br_switchdev.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/dsa/port.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "tools/testing/selftests/net/forwarding/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/net/forwarding/bridge_locked_port.sh",
      "insertions": 180,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/net/forwarding/lib.sh",
      "insertions": 8,
      "deletions": 0
    }
  ],
  "total_insertions": 254,
  "total_deletions": 7,
  "total_changes": 261,
  "parents": [
    "b26ef81c46ed15d11ddddba9ba1cd52c749385ad",
    "b2b681a412517bf477238de62b1d227361fa04fe"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": []
}