{
  "hash": "266eab8f32cc43b688c2e9aaab63c2565a3998c2",
  "hash_short": "266eab8f",
  "subject": "cxl: Check periodically the coherent platform function's state",
  "body": "In the PowerVM environment, the PHYP CoherentAccel component manages\nthe state of the Coherent Accelerator Processor Interface adapter and\nvirtualizes CAPI resources, handles CAPP, PSL, PSL Slice errors - and\ninterrupts - and provides a new set of hcalls for the OS APIs to utilize\nAccelerator Function Unit (AFU).\n\nDuring the course of operation, a coherent platform function can\nencounter errors. Some possible reason for errors are:\n\u2022 Hardware recoverable and unrecoverable errors\n\u2022 Transient and over-threshold correctable errors\n\nPHYP implements its own state model for the coherent platform function.\nThe state of the AFU is available through a hcall.\n\nThe current implementation of the cxl driver, for the PowerVM\nenvironment, checks this state of the AFU only when an action is\nrequested - open a device, ioctl command, memory map, attach/detach a\nprocess - from an external driver - cxlflash, libcxl. If an error is\ndetected the cxl driver handles the error according the content of the\nPower Architecture Platform Requirements document.\n\nBut in case of low-level troubles (or error injection), the PHYP\ncomponent may reset the card and change the AFU state. The PHYP\ninterface doesn't provide any way to be notified when that happens thus\nimplies that the cxl driver:\n\u2022 cannot handle immediatly the state change of the AFU.\n\u2022 cannot notify other drivers (cxlflash, ...)\n\nThe purpose of this patch is to wake up the cpu periodically to check\nthe current state of each AFU and to see if we need to enter an error\nrecovery path.\n\nSigned-off-by: Christophe Lombard <clombard@linux.vnet.ibm.com>\nAcked-by: Ian Munsie <imunsie@au1.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "full_message": "cxl: Check periodically the coherent platform function's state\n\nIn the PowerVM environment, the PHYP CoherentAccel component manages\nthe state of the Coherent Accelerator Processor Interface adapter and\nvirtualizes CAPI resources, handles CAPP, PSL, PSL Slice errors - and\ninterrupts - and provides a new set of hcalls for the OS APIs to utilize\nAccelerator Function Unit (AFU).\n\nDuring the course of operation, a coherent platform function can\nencounter errors. Some possible reason for errors are:\n\u2022 Hardware recoverable and unrecoverable errors\n\u2022 Transient and over-threshold correctable errors\n\nPHYP implements its own state model for the coherent platform function.\nThe state of the AFU is available through a hcall.\n\nThe current implementation of the cxl driver, for the PowerVM\nenvironment, checks this state of the AFU only when an action is\nrequested - open a device, ioctl command, memory map, attach/detach a\nprocess - from an external driver - cxlflash, libcxl. If an error is\ndetected the cxl driver handles the error according the content of the\nPower Architecture Platform Requirements document.\n\nBut in case of low-level troubles (or error injection), the PHYP\ncomponent may reset the card and change the AFU state. The PHYP\ninterface doesn't provide any way to be notified when that happens thus\nimplies that the cxl driver:\n\u2022 cannot handle immediatly the state change of the AFU.\n\u2022 cannot notify other drivers (cxlflash, ...)\n\nThe purpose of this patch is to wake up the cpu periodically to check\nthe current state of each AFU and to see if we need to enter an error\nrecovery path.\n\nSigned-off-by: Christophe Lombard <clombard@linux.vnet.ibm.com>\nAcked-by: Ian Munsie <imunsie@au1.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "author_name": "Christophe Lombard",
  "author_email": "clombard@linux.vnet.ibm.com",
  "author_date": "Fri Apr 22 15:39:22 2016 +0200",
  "author_date_iso": "2016-04-22T15:39:22+02:00",
  "committer_name": "Michael Ellerman",
  "committer_email": "mpe@ellerman.id.au",
  "committer_date": "Wed May 11 21:54:11 2016 +1000",
  "committer_date_iso": "2016-05-11T21:54:11+10:00",
  "files_changed": [
    "drivers/misc/cxl/cxl.h",
    "drivers/misc/cxl/guest.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/misc/cxl/cxl.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "drivers/misc/cxl/guest.c",
      "insertions": 30,
      "deletions": 27
    }
  ],
  "total_insertions": 33,
  "total_deletions": 28,
  "total_changes": 61,
  "parents": [
    "7a0d85d313c2066712e530e668bc02bb741a685c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/misc/cxl/cxl.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/misc/cxl/guest.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}