{
  "hash": "bb4f07f2409c26c01e97e6f9b432545f353e3b66",
  "hash_short": "bb4f07f2",
  "subject": "nfsd: Fix NFSD_MAY_BYPASS_GSS and NFSD_MAY_BYPASS_GSS_ON_ROOT",
  "body": "Currently NFSD_MAY_BYPASS_GSS and NFSD_MAY_BYPASS_GSS_ON_ROOT do not bypass\nonly GSS, but bypass any method. This is a problem specially for NFS3\nAUTH_NULL-only exports.\n\nThe purpose of NFSD_MAY_BYPASS_GSS_ON_ROOT is described in RFC 2623,\nsection 2.3.2, to allow mounting NFS2/3 GSS-only export without\nauthentication. So few procedures which do not expose security risk used\nduring mount time can be called also with AUTH_NONE or AUTH_SYS, to allow\nclient mount operation to finish successfully.\n\nThe problem with current implementation is that for AUTH_NULL-only exports,\nthe NFSD_MAY_BYPASS_GSS_ON_ROOT is active also for NFS3 AUTH_UNIX mount\nattempts which confuse NFS3 clients, and make them think that AUTH_UNIX is\nenabled and is working. Linux NFS3 client never switches from AUTH_UNIX to\nAUTH_NONE on active mount, which makes the mount inaccessible.\n\nFix the NFSD_MAY_BYPASS_GSS and NFSD_MAY_BYPASS_GSS_ON_ROOT implementation\nand really allow to bypass only exports which have enabled some real\nauthentication (GSS, TLS, or any other).\n\nThe result would be: For AUTH_NULL-only export if client attempts to do\nmount with AUTH_UNIX flavor then it will receive access errors, which\ninstruct client that AUTH_UNIX flavor is not usable and will either try\nother auth flavor (AUTH_NULL if enabled) or fails mount procedure.\nSimilarly if client attempt to do mount with AUTH_NULL flavor and only\nAUTH_UNIX flavor is enabled then the client will receive access error.\n\nThis should fix problems with AUTH_NULL-only or AUTH_UNIX-only exports if\nclient attempts to mount it with other auth flavor (e.g. with AUTH_NULL for\nAUTH_UNIX-only export, or with AUTH_UNIX for AUTH_NULL-only export).\n\nSigned-off-by: Pali Roh\u00e1r <pali@kernel.org>\nReviewed-by: NeilBrown <neilb@suse.de>\nSigned-off-by: Chuck Lever <chuck.lever@oracle.com>",
  "full_message": "nfsd: Fix NFSD_MAY_BYPASS_GSS and NFSD_MAY_BYPASS_GSS_ON_ROOT\n\nCurrently NFSD_MAY_BYPASS_GSS and NFSD_MAY_BYPASS_GSS_ON_ROOT do not bypass\nonly GSS, but bypass any method. This is a problem specially for NFS3\nAUTH_NULL-only exports.\n\nThe purpose of NFSD_MAY_BYPASS_GSS_ON_ROOT is described in RFC 2623,\nsection 2.3.2, to allow mounting NFS2/3 GSS-only export without\nauthentication. So few procedures which do not expose security risk used\nduring mount time can be called also with AUTH_NONE or AUTH_SYS, to allow\nclient mount operation to finish successfully.\n\nThe problem with current implementation is that for AUTH_NULL-only exports,\nthe NFSD_MAY_BYPASS_GSS_ON_ROOT is active also for NFS3 AUTH_UNIX mount\nattempts which confuse NFS3 clients, and make them think that AUTH_UNIX is\nenabled and is working. Linux NFS3 client never switches from AUTH_UNIX to\nAUTH_NONE on active mount, which makes the mount inaccessible.\n\nFix the NFSD_MAY_BYPASS_GSS and NFSD_MAY_BYPASS_GSS_ON_ROOT implementation\nand really allow to bypass only exports which have enabled some real\nauthentication (GSS, TLS, or any other).\n\nThe result would be: For AUTH_NULL-only export if client attempts to do\nmount with AUTH_UNIX flavor then it will receive access errors, which\ninstruct client that AUTH_UNIX flavor is not usable and will either try\nother auth flavor (AUTH_NULL if enabled) or fails mount procedure.\nSimilarly if client attempt to do mount with AUTH_NULL flavor and only\nAUTH_UNIX flavor is enabled then the client will receive access error.\n\nThis should fix problems with AUTH_NULL-only or AUTH_UNIX-only exports if\nclient attempts to mount it with other auth flavor (e.g. with AUTH_NULL for\nAUTH_UNIX-only export, or with AUTH_UNIX for AUTH_NULL-only export).\n\nSigned-off-by: Pali Roh\u00e1r <pali@kernel.org>\nReviewed-by: NeilBrown <neilb@suse.de>\nSigned-off-by: Chuck Lever <chuck.lever@oracle.com>",
  "author_name": "Pali Roh\u00e1r",
  "author_email": "pali@kernel.org",
  "author_date": "Sat Oct 5 18:40:39 2024 +0200",
  "author_date_iso": "2024-10-05T18:40:39+02:00",
  "committer_name": "Chuck Lever",
  "committer_email": "chuck.lever@oracle.com",
  "committer_date": "Mon Nov 18 20:22:59 2024 -0500",
  "committer_date_iso": "2024-11-18T20:22:59-05:00",
  "files_changed": [
    "fs/nfsd/export.c",
    "fs/nfsd/export.h",
    "fs/nfsd/nfs4proc.c",
    "fs/nfsd/nfs4xdr.c",
    "fs/nfsd/nfsfh.c",
    "fs/nfsd/vfs.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "fs/nfsd/export.c",
      "insertions": 20,
      "deletions": 1
    },
    {
      "file": "fs/nfsd/export.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "fs/nfsd/nfs4proc.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/nfsd/nfs4xdr.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/nfsd/nfsfh.c",
      "insertions": 6,
      "deletions": 3
    },
    {
      "file": "fs/nfsd/vfs.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 31,
  "total_deletions": 8,
  "total_changes": 39,
  "parents": [
    "600020927b004f027e737e6bf57c450d48f2405e"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication",
      "bypass"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/nfsd/export.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfsfh.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/export.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/vfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfs4xdr.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfs4proc.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}