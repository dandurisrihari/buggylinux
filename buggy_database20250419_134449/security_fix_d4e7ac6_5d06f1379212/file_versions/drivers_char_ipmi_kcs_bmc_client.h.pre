commit faae6e391eda73a5b9870c78349064282a625bfa
Author: Andrew Jeffery <andrew@aj.id.au>
Date:   Tue Jun 8 20:17:47 2021 +0930

    ipmi: kcs_bmc: Split headers into device and client
    
    Strengthen the distinction between code that abstracts the
    implementation of the KCS behaviours (device drivers) and code that
    exploits KCS behaviours (clients). Neither needs to know about the APIs
    required by the other, so provide separate headers.
    
    Signed-off-by: Andrew Jeffery <andrew@aj.id.au>
    Message-Id: <20210608104757.582199-7-andrew@aj.id.au>
    Reviewed-by: Zev Weiss <zweiss@equinix.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>

diff --git a/drivers/char/ipmi/kcs_bmc_client.h b/drivers/char/ipmi/kcs_bmc_client.h
new file mode 100644
index 000000000000..dad8774aebce
--- /dev/null
+++ b/drivers/char/ipmi/kcs_bmc_client.h
@@ -0,0 +1,27 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/* Copyright (c) 2021, IBM Corp. */
+
+#ifndef __KCS_BMC_CONSUMER_H__
+#define __KCS_BMC_CONSUMER_H__
+
+#include <linux/irqreturn.h>
+
+struct kcs_bmc;
+struct kcs_bmc_client_ops;
+
+struct kcs_bmc_client {
+	const struct kcs_bmc_client_ops *ops;
+
+	struct kcs_bmc *dev;
+};
+
+struct kcs_bmc_client_ops {
+	irqreturn_t (*event)(struct kcs_bmc_client *client);
+};
+
+u8 kcs_bmc_read_data(struct kcs_bmc *kcs_bmc);
+void kcs_bmc_write_data(struct kcs_bmc *kcs_bmc, u8 data);
+u8 kcs_bmc_read_status(struct kcs_bmc *kcs_bmc);
+void kcs_bmc_write_status(struct kcs_bmc *kcs_bmc, u8 data);
+void kcs_bmc_update_status(struct kcs_bmc *kcs_bmc, u8 mask, u8 val);
+#endif