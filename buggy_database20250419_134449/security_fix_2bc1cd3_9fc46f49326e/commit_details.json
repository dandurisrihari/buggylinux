{
  "hash": "2bc1cd39fa9f659956b25e500422e700a6cd4ec3",
  "hash_short": "2bc1cd39",
  "subject": "x86/boot: Clean up pointer casting",
  "body": "Currently extract_kernel() defines the input and output buffer pointers\nas \"unsigned char *\" since that's effectively what they are. It passes\nthese to the decompressor routine and to the ELF parser, which both\nlogically deal with buffer pointers too. There is some casting (\"unsigned\nlong\") done to validate the numerical value of the pointers, but it is\nrelatively limited.\n\nHowever, choose_random_location() operates almost exclusively on the\nnumerical representation of these pointers, so it ended up carrying\na lot of \"unsigned long\" casts. With the future physical/virtual split\nthese casts were going to multiply, so this attempts to solve the\nproblem by doing all the casting in choose_random_location()'s entry\nand return instead of through-out the code. Adjusts argument names to\nbe more meaningful, and changes one us of \"choice\" to \"output\" to make\nthe future physical/virtual split more clear (i.e. \"choice\" should be\nstrictly a function return value and not used as an intermediate).\n\nSuggested-by: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Baoquan He <bhe@redhat.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Dave Young <dyoung@redhat.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Vivek Goyal <vgoyal@redhat.com>\nCc: Yinghai Lu <yinghai@kernel.org>\nCc: kernel-hardening@lists.openwall.com\nCc: lasse.collin@tukaani.org\nLink: http://lkml.kernel.org/r/1462486436-3707-2-git-send-email-keescook@chromium.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "x86/boot: Clean up pointer casting\n\nCurrently extract_kernel() defines the input and output buffer pointers\nas \"unsigned char *\" since that's effectively what they are. It passes\nthese to the decompressor routine and to the ELF parser, which both\nlogically deal with buffer pointers too. There is some casting (\"unsigned\nlong\") done to validate the numerical value of the pointers, but it is\nrelatively limited.\n\nHowever, choose_random_location() operates almost exclusively on the\nnumerical representation of these pointers, so it ended up carrying\na lot of \"unsigned long\" casts. With the future physical/virtual split\nthese casts were going to multiply, so this attempts to solve the\nproblem by doing all the casting in choose_random_location()'s entry\nand return instead of through-out the code. Adjusts argument names to\nbe more meaningful, and changes one us of \"choice\" to \"output\" to make\nthe future physical/virtual split more clear (i.e. \"choice\" should be\nstrictly a function return value and not used as an intermediate).\n\nSuggested-by: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Baoquan He <bhe@redhat.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Dave Young <dyoung@redhat.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Vivek Goyal <vgoyal@redhat.com>\nCc: Yinghai Lu <yinghai@kernel.org>\nCc: kernel-hardening@lists.openwall.com\nCc: lasse.collin@tukaani.org\nLink: http://lkml.kernel.org/r/1462486436-3707-2-git-send-email-keescook@chromium.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Thu May 5 15:13:46 2016 -0700",
  "author_date_iso": "2016-05-05T15:13:46-07:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Fri May 6 09:00:59 2016 +0200",
  "committer_date_iso": "2016-05-06T09:00:59+02:00",
  "files_changed": [
    "arch/x86/boot/compressed/kaslr.c",
    "arch/x86/boot/compressed/misc.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/boot/compressed/kaslr.c",
      "insertions": 14,
      "deletions": 6
    },
    {
      "file": "arch/x86/boot/compressed/misc.h",
      "insertions": 5,
      "deletions": 5
    }
  ],
  "total_insertions": 19,
  "total_deletions": 11,
  "total_changes": 30,
  "parents": [
    "00ec2c37031eb1b1feda006c84748d126dc2ef27"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/boot/compressed/kaslr.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/boot/compressed/misc.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}