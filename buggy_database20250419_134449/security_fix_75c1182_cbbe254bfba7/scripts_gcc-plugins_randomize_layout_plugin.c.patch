commit 75c1182e18f4a66bbd2c91511b6b629dac6a27dc
Author: Bill Wendling <morbo@google.com>
Date:   Thu Apr 7 10:59:30 2022 -0700

    security: don't treat structure as an array of struct hlist_head
    
    The initialization of "security_hook_heads" is done by casting it to
    another structure pointer type, and treating it as an array of "struct
    hlist_head" objects. This requires an exception be made in "randstruct",
    because otherwise it will emit an error, reducing the effectiveness of
    the hardening technique.
    
    Instead of using a cast, initialize the individual struct hlist_head
    elements in security_hook_heads explicitly. This removes the need for
    the cast and randstruct exception.
    
    Signed-off-by: Bill Wendling <morbo@google.com>
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220407175930.471870-1-morbo@google.com

diff --git a/scripts/gcc-plugins/randomize_layout_plugin.c b/scripts/gcc-plugins/randomize_layout_plugin.c
index 334741a31d0a..c2ec81b68505 100644
--- a/scripts/gcc-plugins/randomize_layout_plugin.c
+++ b/scripts/gcc-plugins/randomize_layout_plugin.c
@@ -52,8 +52,6 @@ static const struct whitelist_entry whitelist[] = {
 	{ "net/unix/af_unix.c", "unix_skb_parms", "char" },
 	/* big_key payload.data struct splashing */
 	{ "security/keys/big_key.c", "path", "void *" },
-	/* walk struct security_hook_heads as an array of struct hlist_head */
-	{ "security/security.c", "hlist_head", "security_hook_heads" },
 	{ }
 };