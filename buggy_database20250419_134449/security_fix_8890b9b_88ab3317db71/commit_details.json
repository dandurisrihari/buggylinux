{
  "hash": "8890b9bca38f16274bd3f612986f78f81a886c8b",
  "hash_short": "8890b9bc",
  "subject": "wifi: ipw2x00: replace deprecated strncpy with strscpy_pad",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\n`extra` is intended to be NUL-terminated which is evident by the manual\nassignment of a NUL-byte as well as its immediate usage with strlen().\n\nMoreover, many of these getters and setters are NUL-padding buffers with\nmemset():\n2439  |\tmemset(&tx_power, 0, sizeof(tx_power));\n9998  | memset(sys_config, 0, sizeof(struct ipw_sys_config));\n10084 | memset(tfd, 0, sizeof(*tfd));\n10261 | memset(&dummystats, 0, sizeof(dummystats));\n... let's maintain this behavior and NUL-pad our destination buffer.\n\nConsidering the above, a suitable replacement is `strscpy_pad` due to\nthe fact that it guarantees both NUL-termination and NUL-padding on the\ndestination buffer.\n\nTo be clear, there is no bug in the current implementation as\nMAX_WX_STRING is much larger than the size of the string literals being\ncopied from. Also, strncpy() does NUL-pad the destination buffer and\nusing strscpy_pad() simply matches that behavior. All in all, there\nshould be no functional change but we are one step closer to eliminating\nusage of strncpy().\n\nDo note that we cannot use the more idiomatic strscpy invocation of\n(dest, src, sizeof(dest)) as the destination buffer cannot have its size\ndetermined at compile time. So, let's stick with (dest, src, LEN).\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Kalle Valo <kvalo@kernel.org>\nLink: https://lore.kernel.org/r/20231017-strncpy-drivers-net-wireless-intel-ipw2x00-ipw2200-c-v2-1-465e10dc817c@google.com",
  "full_message": "wifi: ipw2x00: replace deprecated strncpy with strscpy_pad\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\n`extra` is intended to be NUL-terminated which is evident by the manual\nassignment of a NUL-byte as well as its immediate usage with strlen().\n\nMoreover, many of these getters and setters are NUL-padding buffers with\nmemset():\n2439  |\tmemset(&tx_power, 0, sizeof(tx_power));\n9998  | memset(sys_config, 0, sizeof(struct ipw_sys_config));\n10084 | memset(tfd, 0, sizeof(*tfd));\n10261 | memset(&dummystats, 0, sizeof(dummystats));\n... let's maintain this behavior and NUL-pad our destination buffer.\n\nConsidering the above, a suitable replacement is `strscpy_pad` due to\nthe fact that it guarantees both NUL-termination and NUL-padding on the\ndestination buffer.\n\nTo be clear, there is no bug in the current implementation as\nMAX_WX_STRING is much larger than the size of the string literals being\ncopied from. Also, strncpy() does NUL-pad the destination buffer and\nusing strscpy_pad() simply matches that behavior. All in all, there\nshould be no functional change but we are one step closer to eliminating\nusage of strncpy().\n\nDo note that we cannot use the more idiomatic strscpy invocation of\n(dest, src, sizeof(dest)) as the destination buffer cannot have its size\ndetermined at compile time. So, let's stick with (dest, src, LEN).\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Kalle Valo <kvalo@kernel.org>\nLink: https://lore.kernel.org/r/20231017-strncpy-drivers-net-wireless-intel-ipw2x00-ipw2200-c-v2-1-465e10dc817c@google.com",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Tue Oct 17 21:48:15 2023 +0000",
  "author_date_iso": "2023-10-17T21:48:15+00:00",
  "committer_name": "Kalle Valo",
  "committer_email": "kvalo@kernel.org",
  "committer_date": "Mon Oct 23 20:26:29 2023 +0300",
  "committer_date_iso": "2023-10-23T20:26:29+03:00",
  "files_changed": [
    "drivers/net/wireless/intel/ipw2x00/ipw2200.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/wireless/intel/ipw2x00/ipw2200.c",
      "insertions": 8,
      "deletions": 9
    }
  ],
  "total_insertions": 8,
  "total_deletions": 9,
  "total_changes": 17,
  "parents": [
    "69708fbb2c698f262e03360d064c7066e0679953"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/wireless/intel/ipw2x00/ipw2200.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}