{
  "hash": "deeaac5175a577cbbe1a2319903781d0a7ef7720",
  "hash_short": "deeaac51",
  "subject": "arm64: cpufeature: handle conflicts based on capability",
  "body": "Each system capability can be of either boot, local, or system scope,\ndepending on when the state of the capability is finalized. When we\ndetect a conflict on a late CPU, we either offline the CPU or panic the\nsystem. We currently always panic if the conflict is caused by a boot\nscope capability, and offline the CPU if the conflict is caused by a\nlocal or system scope capability.\n\nWe're going to want to add a new capability (for pointer authentication)\nwhich needs to be boot scope but doesn't need to panic the system when a\nconflict is detected. So add a new flag to specify whether the\ncapability requires the system to panic or not. Current boot scope\ncapabilities are updated to set the flag, so there should be no\nfunctional change as a result of this patch.\n\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nSigned-off-by: Kristina Martsenko <kristina.martsenko@arm.com>\nReviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>\nReviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "full_message": "arm64: cpufeature: handle conflicts based on capability\n\nEach system capability can be of either boot, local, or system scope,\ndepending on when the state of the capability is finalized. When we\ndetect a conflict on a late CPU, we either offline the CPU or panic the\nsystem. We currently always panic if the conflict is caused by a boot\nscope capability, and offline the CPU if the conflict is caused by a\nlocal or system scope capability.\n\nWe're going to want to add a new capability (for pointer authentication)\nwhich needs to be boot scope but doesn't need to panic the system when a\nconflict is detected. So add a new flag to specify whether the\ncapability requires the system to panic or not. Current boot scope\ncapabilities are updated to set the flag, so there should be no\nfunctional change as a result of this patch.\n\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nSigned-off-by: Kristina Martsenko <kristina.martsenko@arm.com>\nReviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>\nReviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "author_name": "Kristina Martsenko",
  "author_email": "kristina.martsenko@arm.com",
  "author_date": "Fri Mar 13 14:34:54 2020 +0530",
  "author_date_iso": "2020-03-13T14:34:54+05:30",
  "committer_name": "Catalin Marinas",
  "committer_email": "catalin.marinas@arm.com",
  "committer_date": "Wed Mar 18 09:50:19 2020 +0000",
  "committer_date_iso": "2020-03-18T09:50:19+00:00",
  "files_changed": [
    "arch/arm64/include/asm/cpufeature.h",
    "arch/arm64/kernel/cpufeature.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "insertions": 10,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "insertions": 15,
      "deletions": 14
    }
  ],
  "total_insertions": 25,
  "total_deletions": 16,
  "total_changes": 41,
  "parents": [
    "8c176e1625a66d35362d4eac7ceab55c1229b481"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.7-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}