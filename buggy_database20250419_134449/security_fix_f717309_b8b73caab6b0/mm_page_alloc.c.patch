commit f7173090033c70886d925995e9dfdfb76dbb2441
Author: Mel Gorman <mgorman@techsingularity.net>
Date:   Wed Jun 30 18:53:25 2021 -0700

    mm/page_alloc: make should_fail_alloc_page() static
    
    make W=1 generates the following warning for mm/page_alloc.c
    
      mm/page_alloc.c:3651:15: warning: no previous prototype for `should_fail_alloc_page' [-Wmissing-prototypes]
       noinline bool should_fail_alloc_page(gfp_t gfp_mask, unsigned int order)
                     ^~~~~~~~~~~~~~~~~~~~~~
    
    This function is deliberately split out for BPF to allow errors to be
    injected.  The function is not used anywhere else so it is local to the
    file.  Make it static which should still allow error injection to be used
    similar to how block/blk-core.c:should_fail_bio() works.
    
    Link: https://lkml.kernel.org/r/20210520084809.8576-4-mgorman@techsingularity.net
    Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
    Reviewed-by: Yang Shi <shy828301@gmail.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Dan Streetman <ddstreet@ieee.org>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 6700cfcfab46..2f71d92c45b4 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -3819,7 +3819,7 @@ static inline bool __should_fail_alloc_page(gfp_t gfp_mask, unsigned int order)
 
 #endif /* CONFIG_FAIL_PAGE_ALLOC */
 
-noinline bool should_fail_alloc_page(gfp_t gfp_mask, unsigned int order)
+static noinline bool should_fail_alloc_page(gfp_t gfp_mask, unsigned int order)
 {
 	return __should_fail_alloc_page(gfp_mask, order);
 }