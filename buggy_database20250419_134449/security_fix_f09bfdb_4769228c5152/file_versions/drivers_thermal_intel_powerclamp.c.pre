commit 4d2b6e4a9ebc2907e4a64fa240d8b67c7051e997
Author: Mathias Krause <minipli@googlemail.com>
Date:   Wed Mar 25 22:16:24 2015 +0100

    thermal/intel_powerclamp: add __init / __exit annotations
    
    Mark the module init / exit functions with __init / __exit accodingly.
    This allows making the intel_powerclamp_ids[] array __initconst, too, as
    it only gets referenced from powerclamp_probe(). This is safe as
    file2alias doesn't care about the section, but the symbol name for the
    MODULE_DEVICE_TABLE alias.
    
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Acked-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Acked-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>

diff --git a/drivers/thermal/intel_powerclamp.c b/drivers/thermal/intel_powerclamp.c
index 12623bc02f46..b0f7ced5c3ef 100644
--- a/drivers/thermal/intel_powerclamp.c
+++ b/drivers/thermal/intel_powerclamp.c
@@ -667,7 +667,7 @@ static struct thermal_cooling_device_ops powerclamp_cooling_ops = {
 };
 
 /* runs on Nehalem and later */
-static const struct x86_cpu_id intel_powerclamp_ids[] = {
+static const struct x86_cpu_id intel_powerclamp_ids[] __initconst = {
 	{ X86_VENDOR_INTEL, 6, 0x1a},
 	{ X86_VENDOR_INTEL, 6, 0x1c},
 	{ X86_VENDOR_INTEL, 6, 0x1e},
@@ -694,7 +694,7 @@ static const struct x86_cpu_id intel_powerclamp_ids[] = {
 };
 MODULE_DEVICE_TABLE(x86cpu, intel_powerclamp_ids);
 
-static int powerclamp_probe(void)
+static int __init powerclamp_probe(void)
 {
 	if (!x86_match_cpu(intel_powerclamp_ids)) {
 		pr_err("Intel powerclamp does not run on family %d model %d\n",
@@ -760,7 +760,7 @@ static inline void powerclamp_create_debug_files(void)
 	debugfs_remove_recursive(debug_dir);
 }
 
-static int powerclamp_init(void)
+static int __init powerclamp_init(void)
 {
 	int retval;
 	int bitmap_size;
@@ -809,7 +809,7 @@ static int powerclamp_init(void)
 }
 module_init(powerclamp_init);
 
-static void powerclamp_exit(void)
+static void __exit powerclamp_exit(void)
 {
 	unregister_hotcpu_notifier(&powerclamp_cpu_notifier);
 	end_power_clamp();