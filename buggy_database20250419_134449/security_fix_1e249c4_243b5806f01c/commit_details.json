{
  "hash": "1e249c41ea43157fc69e1496e3b4feea999f107a",
  "hash_short": "1e249c41",
  "subject": "arm64: unify asm-arch manipulation",
  "body": "Assemblers will reject instructions not supported by a target\narchitecture version, and so we must explicitly tell the assembler the\nlatest architecture version for which we want to assemble instructions\nfrom.\n\nWe've added a few AS_HAS_ARMV8_<N> definitions for this, in addition to\nan inconsistently named AS_HAS_PAC definition, from which arm64's\ntop-level Makefile determines the architecture version that we intend to\ntarget, and generates the `asm-arch` variable.\n\nTo make this a bit clearer and easier to maintain, this patch reworks\nthe Makefile to determine asm-arch in a single if-else-endif chain.\nAS_HAS_PAC, which is defined when the assembler supports\n`-march=armv8.3-a`, is renamed to AS_HAS_ARMV8_3.\n\nAs the logic for armv8.3-a is lifted out of the block handling pointer\nauthentication, `asm-arch` may now be set to armv8.3-a regardless of\nwhether support for pointer authentication is selected. This means that\nit will be possible to assemble armv8.3-a instructions even if we didn't\nintend to, but this is consistent with our handling of other\narchitecture versions, and the compiler won't generate armv8.3-a\ninstructions regardless.\n\nFor the moment there's no need for an CONFIG_AS_HAS_ARMV8_1, as the code\nfor LSE atomics and LDAPR use individual `.arch_extension` entries and\ndo not require the baseline asm arch to be bumped to armv8.1-a. The\nother armv8.1-a features (e.g. PAN) do not require assembler support.\n\nThere should be no functional change as a result of this patch.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Mark Brown <broonie@kernel.org>\nCc: Will Deacon <will@kernel.org>\nLink: https://lore.kernel.org/r/20230131105809.991288-2-mark.rutland@arm.com\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "full_message": "arm64: unify asm-arch manipulation\n\nAssemblers will reject instructions not supported by a target\narchitecture version, and so we must explicitly tell the assembler the\nlatest architecture version for which we want to assemble instructions\nfrom.\n\nWe've added a few AS_HAS_ARMV8_<N> definitions for this, in addition to\nan inconsistently named AS_HAS_PAC definition, from which arm64's\ntop-level Makefile determines the architecture version that we intend to\ntarget, and generates the `asm-arch` variable.\n\nTo make this a bit clearer and easier to maintain, this patch reworks\nthe Makefile to determine asm-arch in a single if-else-endif chain.\nAS_HAS_PAC, which is defined when the assembler supports\n`-march=armv8.3-a`, is renamed to AS_HAS_ARMV8_3.\n\nAs the logic for armv8.3-a is lifted out of the block handling pointer\nauthentication, `asm-arch` may now be set to armv8.3-a regardless of\nwhether support for pointer authentication is selected. This means that\nit will be possible to assemble armv8.3-a instructions even if we didn't\nintend to, but this is consistent with our handling of other\narchitecture versions, and the compiler won't generate armv8.3-a\ninstructions regardless.\n\nFor the moment there's no need for an CONFIG_AS_HAS_ARMV8_1, as the code\nfor LSE atomics and LDAPR use individual `.arch_extension` entries and\ndo not require the baseline asm arch to be bumped to armv8.1-a. The\nother armv8.1-a features (e.g. PAN) do not require assembler support.\n\nThere should be no functional change as a result of this patch.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Mark Brown <broonie@kernel.org>\nCc: Will Deacon <will@kernel.org>\nLink: https://lore.kernel.org/r/20230131105809.991288-2-mark.rutland@arm.com\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "author_name": "Mark Rutland",
  "author_email": "mark.rutland@arm.com",
  "author_date": "Tue Jan 31 10:58:08 2023 +0000",
  "author_date_iso": "2023-01-31T10:58:08+00:00",
  "committer_name": "Catalin Marinas",
  "committer_email": "catalin.marinas@arm.com",
  "committer_date": "Tue Jan 31 16:03:37 2023 +0000",
  "committer_date_iso": "2023-01-31T16:03:37+00:00",
  "files_changed": [
    "arch/arm64/Kconfig",
    "arch/arm64/Makefile"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm64/Kconfig",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/Makefile",
      "insertions": 18,
      "deletions": 19
    }
  ],
  "total_insertions": 20,
  "total_deletions": 21,
  "total_changes": 41,
  "parents": [
    "b7bfaa761d760e72a969d116517eaa12e404c262"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}