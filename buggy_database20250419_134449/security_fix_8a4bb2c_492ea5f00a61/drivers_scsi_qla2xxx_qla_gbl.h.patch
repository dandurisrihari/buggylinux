commit 8a4bb2c1dd623b5a71609de5b04ef3b5086b0a3e
Author: Quinn Tran <qutran@marvell.com>
Date:   Wed Jun 23 22:26:01 2021 -0700

    scsi: qla2xxx: edif: Add authentication pass + fail bsgs
    
    Some FC adapters from Marvell offer the ability to encrypt data in flight
    (EDIF). This feature requires an application to act as an authenticator.
    
    On completion of the authentication process, the authentication application
    will notify driver on whether it is successful or not.
    
    In case of success, application will use the QL_VND_SC_AUTH_OK BSG call to
    tell driver to proceed to the PRLI phase.
    
    In case of failure, application will use the QL_VND_SC_AUTH_FAIL bsg call
    to tell driver to tear down the connection and retry. In the case where an
    existing session is active, the re-key process can fail. The session tear
    down ensures data is not further compromised.
    
    Link: https://lore.kernel.org/r/20210624052606.21613-7-njavali@marvell.com
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Co-developed-by: Larry Wisneski <Larry.Wisneski@marvell.com>
    Signed-off-by: Larry Wisneski <Larry.Wisneski@marvell.com>
    Co-developed-by: Duane Grigsby <duane.grigsby@marvell.com>
    Signed-off-by: Duane Grigsby <duane.grigsby@marvell.com>
    Co-developed-by: Rick Hicksted Jr <rhicksted@marvell.com>
    Signed-off-by: Rick Hicksted Jr <rhicksted@marvell.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

diff --git a/drivers/scsi/qla2xxx/qla_gbl.h b/drivers/scsi/qla2xxx/qla_gbl.h
index e7c5143c66ef..d9d554101788 100644
--- a/drivers/scsi/qla2xxx/qla_gbl.h
+++ b/drivers/scsi/qla2xxx/qla_gbl.h
@@ -12,6 +12,7 @@
  * Global Function Prototypes in qla_init.c source file.
  */
 extern int qla2x00_initialize_adapter(scsi_qla_host_t *);
+extern int qla24xx_post_prli_work(struct scsi_qla_host *vha, fc_port_t *fcport);
 
 extern int qla2100_pci_config(struct scsi_qla_host *);
 extern int qla2300_pci_config(struct scsi_qla_host *);