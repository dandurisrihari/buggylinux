commit 45239ba39a5279e9efc671774e2eef29df4d2484
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Fri Oct 25 12:14:58 2024 -0500

    x86/cpu: Add CPU type to struct cpuinfo_topology
    
    Sometimes it is required to take actions based on if a CPU is a performance or
    efficiency core. As an example, intel_pstate driver uses the Intel core-type
    to determine CPU scaling. Also, some CPU vulnerabilities only affect
    a specific CPU type, like RFDS only affects Intel Atom. Hybrid systems that
    have variants P+E, P-only(Core) and E-only(Atom), it is not straightforward to
    identify which variant is affected by a type specific vulnerability.
    
    Such processors do have CPUID field that can uniquely identify them. Like,
    P+E, P-only and E-only enumerates CPUID.1A.CORE_TYPE identification, while P+E
    additionally enumerates CPUID.7.HYBRID. Based on this information, it is
    possible for boot CPU to identify if a system has mixed CPU types.
    
    Add a new field hw_cpu_type to struct cpuinfo_topology that stores the
    hardware specific CPU type. This saves the overhead of IPIs to get the CPU
    type of a different CPU. CPU type is populated early in the boot process,
    before vulnerabilities are enumerated.
    
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Co-developed-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lore.kernel.org/r/20241025171459.1093-5-mario.limonciello@amd.com

diff --git a/arch/x86/include/asm/intel-family.h b/arch/x86/include/asm/intel-family.h
index 1a42f829667a..736764472048 100644
--- a/arch/x86/include/asm/intel-family.h
+++ b/arch/x86/include/asm/intel-family.h
@@ -183,4 +183,10 @@
 /* Family 19 */
 #define INTEL_PANTHERCOVE_X		IFM(19, 0x01) /* Diamond Rapids */
 
+/* CPU core types */
+enum intel_cpu_type {
+	INTEL_CPU_TYPE_ATOM = 0x20,
+	INTEL_CPU_TYPE_CORE = 0x40,
+};
+
 #endif /* _ASM_X86_INTEL_FAMILY_H */