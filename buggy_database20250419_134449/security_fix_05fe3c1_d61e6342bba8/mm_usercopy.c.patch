commit 05fe3c103f7e6b8b4fca8a7001dfc9ed4628085b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 22 14:47:52 2022 -0700

    mm/usercopy: return 1 from hardened_usercopy __setup() handler
    
    __setup() handlers should return 1 if the command line option is handled
    and 0 if not (or maybe never return 0; it just pollutes init's
    environment).  This prevents:
    
      Unknown kernel command line parameters \
      "BOOT_IMAGE=/boot/bzImage-517rc5 hardened_usercopy=off", will be \
      passed to user space.
    
      Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         hardened_usercopy=off
    or
         hardened_usercopy=on
    but when "hardened_usercopy=foo" is used, there is no Unknown kernel
    command line parameter.
    
    Return 1 to indicate that the boot option has been handled.
    Print a warning if strtobool() returns an error on the option string,
    but do not mark this as in unknown command line option and do not cause
    init's environment to be polluted with this string.
    
    Link: https://lkml.kernel.org/r/20220222034249.14795-1-rdunlap@infradead.org
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: b5cb15d9372ab ("usercopy: Allow boot cmdline disabling of hardening")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Acked-by: Chris von Recklinghausen <crecklin@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/usercopy.c b/mm/usercopy.c
index e7b0cb49daa1..bf4d57fefee1 100644
--- a/mm/usercopy.c
+++ b/mm/usercopy.c
@@ -284,7 +284,10 @@ static bool enable_checks __initdata = true;
 
 static int __init parse_hardened_usercopy(char *str)
 {
-	return strtobool(str, &enable_checks);
+	if (strtobool(str, &enable_checks))
+		pr_warn("Invalid option string for hardened_usercopy: '%s'\n",
+			str);
+	return 1;
 }
 
 __setup("hardened_usercopy=", parse_hardened_usercopy);