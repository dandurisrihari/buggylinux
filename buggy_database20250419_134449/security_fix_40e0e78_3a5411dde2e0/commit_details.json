{
  "hash": "40e0e7843e23d164625b9031514f5672f8758bf4",
  "hash_short": "40e0e784",
  "subject": "x86/sgx: Add infrastructure to identify SGX EPC pages",
  "body": "X86 machine check architecture reports a physical address when there\nis a memory error. Handling that error requires a method to determine\nwhether the physical address reported is in any of the areas reserved\nfor EPC pages by BIOS.\n\nSGX EPC pages do not have Linux \"struct page\" associated with them.\n\nKeep track of the mapping from ranges of EPC pages to the sections\nthat contain them using an xarray. N.B. adds CONFIG_XARRAY_MULTI to\nthe SGX dependecies. So \"select\" that in arch/x86/Kconfig for X86/SGX.\n\nCreate a function arch_is_platform_page() that simply reports whether an\naddress is an EPC page for use elsewhere in the kernel. The ACPI error\ninjection code needs this function and is typically built as a module,\nso export it.\n\nNote that arch_is_platform_page() will be slower than other similar\n\"what type is this page\" functions that can simply check bits in the\n\"struct page\".  If there is some future performance critical user of\nthis function it may need to be implemented in a more efficient way.\n\nNote also that the current implementation of xarray allocates a few\nhundred kilobytes for this usage on a system with 4GB of SGX EPC memory\nconfigured. This isn't ideal, but worth it for the code simplicity.\n\nSigned-off-by: Tony Luck <tony.luck@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Reinette Chatre <reinette.chatre@intel.com>\nLink: https://lkml.kernel.org/r/20211026220050.697075-3-tony.luck@intel.com",
  "full_message": "x86/sgx: Add infrastructure to identify SGX EPC pages\n\nX86 machine check architecture reports a physical address when there\nis a memory error. Handling that error requires a method to determine\nwhether the physical address reported is in any of the areas reserved\nfor EPC pages by BIOS.\n\nSGX EPC pages do not have Linux \"struct page\" associated with them.\n\nKeep track of the mapping from ranges of EPC pages to the sections\nthat contain them using an xarray. N.B. adds CONFIG_XARRAY_MULTI to\nthe SGX dependecies. So \"select\" that in arch/x86/Kconfig for X86/SGX.\n\nCreate a function arch_is_platform_page() that simply reports whether an\naddress is an EPC page for use elsewhere in the kernel. The ACPI error\ninjection code needs this function and is typically built as a module,\nso export it.\n\nNote that arch_is_platform_page() will be slower than other similar\n\"what type is this page\" functions that can simply check bits in the\n\"struct page\".  If there is some future performance critical user of\nthis function it may need to be implemented in a more efficient way.\n\nNote also that the current implementation of xarray allocates a few\nhundred kilobytes for this usage on a system with 4GB of SGX EPC memory\nconfigured. This isn't ideal, but worth it for the code simplicity.\n\nSigned-off-by: Tony Luck <tony.luck@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Reinette Chatre <reinette.chatre@intel.com>\nLink: https://lkml.kernel.org/r/20211026220050.697075-3-tony.luck@intel.com",
  "author_name": "Tony Luck",
  "author_email": "tony.luck@intel.com",
  "author_date": "Tue Oct 26 15:00:45 2021 -0700",
  "author_date_iso": "2021-10-26T15:00:45-07:00",
  "committer_name": "Dave Hansen",
  "committer_email": "dave.hansen@linux.intel.com",
  "committer_date": "Mon Nov 15 11:13:16 2021 -0800",
  "committer_date_iso": "2021-11-15T11:13:16-08:00",
  "files_changed": [
    "arch/x86/Kconfig",
    "arch/x86/kernel/cpu/sgx/main.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/Kconfig",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/sgx/main.c",
      "insertions": 9,
      "deletions": 0
    }
  ],
  "total_insertions": 10,
  "total_deletions": 0,
  "total_changes": 10,
  "parents": [
    "d6d261bded8a57aed4faa12d08a5b193418d3aa4"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/sgx/main.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}