{
  "hash": "744a56389f7398f286231e062c2e63f0de01bcc6",
  "hash_short": "744a5638",
  "subject": "ext4: replace deprecated strncpy with alternatives",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nin file.c:\ns_last_mounted is marked as __nonstring meaning it does not need to be\nNUL-terminated. Let's instead use strtomem_pad() to copy bytes from the\nstring source to the byte array destination -- while also ensuring to\npad with zeroes.\n\nin ioctl.c:\nWe can drop the memset and size argument in favor of using the new\n2-argument version of strscpy_pad() -- which was introduced with Commit\ne6584c3964f2f (\"string: Allow 2-argument strscpy()\"). This guarantees\nNUL-termination and NUL-padding on the destination buffer -- which seems\nto be a requirement judging from this comment:\n\n|\tstatic int ext4_ioctl_getlabel(struct ext4_sb_info *sbi, char __user *user_label)\n|\t{\n|\t\tchar label[EXT4_LABEL_MAX + 1];\n|\n|\t\t/*\n|\t\t * EXT4_LABEL_MAX must always be smaller than FSLABEL_MAX because\n|\t\t * FSLABEL_MAX must include terminating null byte, while s_volume_name\n|\t\t * does not have to.\n|\t\t */\n\nin super.c:\ns_first_error_func is marked as __nonstring meaning we can take the same\napproach as in file.c; just use strtomem_pad()\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20240321-strncpy-fs-ext4-file-c-v1-1-36a6a09fef0c@google.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
  "full_message": "ext4: replace deprecated strncpy with alternatives\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nin file.c:\ns_last_mounted is marked as __nonstring meaning it does not need to be\nNUL-terminated. Let's instead use strtomem_pad() to copy bytes from the\nstring source to the byte array destination -- while also ensuring to\npad with zeroes.\n\nin ioctl.c:\nWe can drop the memset and size argument in favor of using the new\n2-argument version of strscpy_pad() -- which was introduced with Commit\ne6584c3964f2f (\"string: Allow 2-argument strscpy()\"). This guarantees\nNUL-termination and NUL-padding on the destination buffer -- which seems\nto be a requirement judging from this comment:\n\n|\tstatic int ext4_ioctl_getlabel(struct ext4_sb_info *sbi, char __user *user_label)\n|\t{\n|\t\tchar label[EXT4_LABEL_MAX + 1];\n|\n|\t\t/*\n|\t\t * EXT4_LABEL_MAX must always be smaller than FSLABEL_MAX because\n|\t\t * FSLABEL_MAX must include terminating null byte, while s_volume_name\n|\t\t * does not have to.\n|\t\t */\n\nin super.c:\ns_first_error_func is marked as __nonstring meaning we can take the same\napproach as in file.c; just use strtomem_pad()\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20240321-strncpy-fs-ext4-file-c-v1-1-36a6a09fef0c@google.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Thu Mar 21 01:03:10 2024 +0000",
  "author_date_iso": "2024-03-21T01:03:10+00:00",
  "committer_name": "Theodore Ts'o",
  "committer_email": "tytso@mit.edu",
  "committer_date": "Thu May 2 23:55:10 2024 -0400",
  "committer_date_iso": "2024-05-02T23:55:10-04:00",
  "files_changed": [
    "fs/ext4/file.c",
    "fs/ext4/ioctl.c",
    "fs/ext4/super.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "fs/ext4/file.c",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "fs/ext4/ioctl.c",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "fs/ext4/super.c",
      "insertions": 3,
      "deletions": 4
    }
  ],
  "total_insertions": 5,
  "total_deletions": 8,
  "total_changes": 13,
  "parents": [
    "e19089dff547c9e1f09712acc3536d7b0aa9ce3d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/ext4/file.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext4/ioctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ext4/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}