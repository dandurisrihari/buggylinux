commit 9f0ffa418483938d25a15f6ad3891389f333bc59
Author: Rohan Dutta <drohan@codeaurora.org>
Date:   Tue Oct 27 12:09:10 2020 +0200

    cfg80211: Add support to configure SAE PWE value to drivers
    
    Add support to configure SAE PWE preference from userspace to drivers in
    both AP and STA modes. This is needed for cases where the driver takes
    care of Authentication frame processing (SME in the driver) so that
    correct enforcement of the acceptable PWE derivation mechanism can be
    performed.
    
    The userspace applications can pass the sae_pwe value using the
    NL80211_ATTR_SAE_PWE attribute in the NL80211_CMD_CONNECT and
    NL80211_CMD_START_AP commands to the driver. This allows selection
    between the hunting-and-pecking loop and hash-to-element options for PWE
    derivation. For backwards compatibility, this new attribute is optional
    and if not included, the driver is notified of the value being
    unspecified.
    
    Signed-off-by: Rohan Dutta <drohan@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Link: https://lore.kernel.org/r/20201027100910.22283-1-jouni@codeaurora.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index 661edfc8722e..0ba8d1fa6eb9 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -1008,6 +1008,14 @@ struct survey_info {
  * @sae_pwd: password for SAE authentication (for devices supporting SAE
  *	offload)
  * @sae_pwd_len: length of SAE password (for devices supporting SAE offload)
+ * @sae_pwe: The mechanisms allowed for SAE PWE derivation
+ *	NL80211_SAE_PWE_UNSPECIFIED: Not-specified, used to indicate userspace
+ *		did not specify any preference. The driver should follow its
+ *		internal policy in such a scenario.
+ *	NL80211_SAE_PWE_HUNT_AND_PECK: Allow hunting-and-pecking loop only
+ *	NL80211_SAE_PWE_HASH_TO_ELEMENT: Allow hash-to-element only
+ *	NL80211_SAE_PWE_BOTH: Allow either hunting-and-pecking loop
+ *		or hash-to-element
  */
 struct cfg80211_crypto_settings {
 	u32 wpa_versions;
@@ -1026,6 +1034,7 @@ struct cfg80211_crypto_settings {
 	const u8 *psk;
 	const u8 *sae_pwd;
 	u8 sae_pwd_len;
+	enum nl80211_sae_pwe_mechanism sae_pwe;
 };
 
 /**