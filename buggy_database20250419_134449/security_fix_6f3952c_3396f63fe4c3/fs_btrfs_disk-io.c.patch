commit 6f3952cbe00b74739f540981d1afe84cd4dac879
Merge: f9d58de23152 9d294a685fbc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Feb 21 10:00:39 2021 -0800

    Merge tag 'for-5.12-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux
    
    Pull btrfs updates from David Sterba:
     "This brings updates of space handling, performance improvements or bug
      fixes. The subpage block size and zoned mode features have reached
      state where they're usable but with limitations.
    
      Performance or related:
    
       - do not block on deleted block group mutex in the cleaner, avoids
         some long stalls
    
       - improved flushing: make it work better with ticket space
         reservations and avoid excessive transaction commits in some
         scenarios, slightly improves throughput for random write load
    
       - preemptive background flushing: separate the logic from ticket
         reservations, improve the accounting and decisions when to flush in
         low space conditions
    
       - less lock contention related to running delayed refs, let just one
         thread do the flushing when there are many inside transaction
         commit
    
       - dbench workload improvements: avoid unnecessary work when logging
         inodes, fewer fallbacks to transaction commit and thus less waiting
         for it (+7% throughput, -20% latency)
    
      Core:
    
       - subpage block size
          - currently read-only support
          - refactor and generalize code where sectorsize is assumed to be
            page size, add the subpage handling everywhere
          - the read-write support is on the way, page sizes are still
            limited to 4K or 64K
    
       - zoned mode, first working version but with limitations
          - SMR/ZBC/ZNS friendly allocation mode, utilizing the "no fixed
            location for structures" and chunked allocation
          - superblock as the only fixed data structure needs special
            handling, uses 2 consecutive zones as a ring buffer
          - tree-log support with a dedicated block group to avoid unordered
            writes
          - emulated zones on non-zoned devices
          - not yet working
          - all non-single block group profiles, requires more zone write
            pointer synchronization between the multiple block groups
          - fitrim due to dependency on space cache, can be implemented
    
      Fixes:
    
       - ref-verify: proper tree owner and node level tracking
    
       - fix pinned byte accounting, causing some early ENOSPC now more
         likely due to other changes in delayed refs
    
      Other:
    
       - error handling fixes and improvements
    
       - more error injection points
    
       - more function documentation
    
       - more and updated tracepoints
    
       - subset of W=1 checked by default
    
       - update comments to allow more automatic kdoc parameter checks"
    
    * tag 'for-5.12-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux: (144 commits)
      btrfs: zoned: enable to mount ZONED incompat flag
      btrfs: zoned: deal with holes writing out tree-log pages
      btrfs: zoned: reorder log node allocation on zoned filesystem
      btrfs: zoned: serialize log transaction on zoned filesystems
      btrfs: zoned: extend zoned allocator to use dedicated tree-log block group
      btrfs: split alloc_log_tree()
      btrfs: zoned: relocate block group to repair IO failure in zoned filesystems
      btrfs: zoned: enable relocation on a zoned filesystem
      btrfs: zoned: support dev-replace in zoned filesystems
      btrfs: zoned: implement copying for zoned device-replace
      btrfs: zoned: implement cloning for zoned device-replace
      btrfs: zoned: mark block groups to copy for device-replace
      btrfs: zoned: do not use async metadata checksum on zoned filesystems
      btrfs: zoned: wait for existing extents before truncating
      btrfs: zoned: serialize metadata IO
      btrfs: zoned: introduce dedicated data write path for zoned filesystems
      btrfs: zoned: enable zone append writing for direct IO
      btrfs: zoned: use ZONE_APPEND write for zoned mode
      btrfs: save irq flags when looking up an ordered extent
      btrfs: zoned: cache if block group is on a sequential zone
      ...