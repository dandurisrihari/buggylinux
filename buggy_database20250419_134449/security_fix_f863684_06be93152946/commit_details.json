{
  "hash": "f86368493ec038218e8663cc1b6e5393cd8e008a",
  "hash_short": "f8636849",
  "subject": "KVM: Fix race between nmi injection and enabling nmi window",
  "body": "The interrupt injection logic looks something like\n\n  if an nmi is pending, and nmi injection allowed\n    inject nmi\n  if an nmi is pending\n    request exit on nmi window\n\nthe problem is that \"nmi is pending\" can be set asynchronously by\nthe PIT; if it happens to fire between the two if statements, we\nwill request an nmi window even though nmi injection is allowed.  On\nSVM, this has disasterous results, since it causes eflags.TF to be\nset in random guest code.\n\nThe fix is simple; make nmi_pending synchronous using the standard\nvcpu->requests mechanism; this ensures the code above is completely\nsynchronous wrt nmi_pending.\n\nSigned-off-by: Avi Kivity <avi@redhat.com>",
  "full_message": "KVM: Fix race between nmi injection and enabling nmi window\n\nThe interrupt injection logic looks something like\n\n  if an nmi is pending, and nmi injection allowed\n    inject nmi\n  if an nmi is pending\n    request exit on nmi window\n\nthe problem is that \"nmi is pending\" can be set asynchronously by\nthe PIT; if it happens to fire between the two if statements, we\nwill request an nmi window even though nmi injection is allowed.  On\nSVM, this has disasterous results, since it causes eflags.TF to be\nset in random guest code.\n\nThe fix is simple; make nmi_pending synchronous using the standard\nvcpu->requests mechanism; this ensures the code above is completely\nsynchronous wrt nmi_pending.\n\nSigned-off-by: Avi Kivity <avi@redhat.com>",
  "author_name": "Avi Kivity",
  "author_email": "avi@redhat.com",
  "author_date": "Thu Feb 3 15:07:07 2011 +0200",
  "author_date_iso": "2011-02-03T15:07:07+02:00",
  "committer_name": "Marcelo Tosatti",
  "committer_email": "mtosatti@redhat.com",
  "committer_date": "Thu Mar 17 13:08:30 2011 -0300",
  "committer_date_iso": "2011-03-17T13:08:30-03:00",
  "files_changed": [
    "arch/x86/kvm/x86.c",
    "include/linux/kvm_host.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "include/linux/kvm_host.h",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 4,
  "total_deletions": 1,
  "total_changes": 5,
  "parents": [
    "217ece6129f2d3b4fdd18d9e79be9e43d8d14a42"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.39",
    "v2.6.39-rc1",
    "v2.6.39-rc2",
    "v2.6.39-rc3",
    "v2.6.39-rc4",
    "v2.6.39-rc5",
    "v2.6.39-rc6",
    "v2.6.39-rc7",
    "v3.0",
    "v3.0-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/kvm_host.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}