{
  "hash": "edc22a7c86888d1f2442e359c3b33a861045e9cd",
  "hash_short": "edc22a7c",
  "subject": "scsi: fcoe: Use sysfs_match_string() over fcoe_parse_mode()",
  "body": "Instead of copying @buf into a new buffer and carefully managing its\nnewline/null-terminating status, we can just use sysfs_match_string() as it\nuses sysfs_streq() internally which handles newline/null-term:\n\n|  /**\n|   * sysfs_streq - return true if strings are equal, modulo trailing newline\n|   * @s1: one string\n|   * @s2: another string\n|   *\n|   * This routine returns true iff two strings are equal, treating both\n|   * NUL and newline-then-NUL as equivalent string terminations.  It's\n|   * geared for use with sysfs input strings, which generally terminate\n|   * with newlines but are compared against values without newlines.\n|   */\n|  bool sysfs_streq(const char *s1, const char *s2)\n|  ...\n\nThen entirely drop the now unused fcoe_parse_mode(), being careful to\nchange if condition from checking for FIP_CONN_TYPE_UNKNOWN to < 0 as\nsysfs_match_string() can return -EINVAL. Also check explicitly if\nctlr->mode is equal to FIP_CONN_TYPE_UNKNOWN -- this is probably preferred\nto \"<=\" as the behavior is more obvious while maintaining functionality.\n\nTo get the compiler not to complain, make fip_conn_type_names const char *\nconst. Perhaps, this should also be done for fcf_state_names.\n\nThis also removes an instance of strncpy() which helps [1].\n\nLink: https://github.com/KSPP/linux/issues/90 [1]\nCc: <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231212-strncpy-drivers-scsi-fcoe-fcoe_sysfs-c-v2-1-1f2d6b2fc409@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Hannes Reinecke <hare@suse.de>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: fcoe: Use sysfs_match_string() over fcoe_parse_mode()\n\nInstead of copying @buf into a new buffer and carefully managing its\nnewline/null-terminating status, we can just use sysfs_match_string() as it\nuses sysfs_streq() internally which handles newline/null-term:\n\n|  /**\n|   * sysfs_streq - return true if strings are equal, modulo trailing newline\n|   * @s1: one string\n|   * @s2: another string\n|   *\n|   * This routine returns true iff two strings are equal, treating both\n|   * NUL and newline-then-NUL as equivalent string terminations.  It's\n|   * geared for use with sysfs input strings, which generally terminate\n|   * with newlines but are compared against values without newlines.\n|   */\n|  bool sysfs_streq(const char *s1, const char *s2)\n|  ...\n\nThen entirely drop the now unused fcoe_parse_mode(), being careful to\nchange if condition from checking for FIP_CONN_TYPE_UNKNOWN to < 0 as\nsysfs_match_string() can return -EINVAL. Also check explicitly if\nctlr->mode is equal to FIP_CONN_TYPE_UNKNOWN -- this is probably preferred\nto \"<=\" as the behavior is more obvious while maintaining functionality.\n\nTo get the compiler not to complain, make fip_conn_type_names const char *\nconst. Perhaps, this should also be done for fcf_state_names.\n\nThis also removes an instance of strncpy() which helps [1].\n\nLink: https://github.com/KSPP/linux/issues/90 [1]\nCc: <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231212-strncpy-drivers-scsi-fcoe-fcoe_sysfs-c-v2-1-1f2d6b2fc409@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Hannes Reinecke <hare@suse.de>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Tue Dec 12 23:19:06 2023 +0000",
  "author_date_iso": "2023-12-12T23:19:06+00:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Wed Dec 13 22:25:00 2023 -0500",
  "committer_date_iso": "2023-12-13T22:25:00-05:00",
  "files_changed": [
    "drivers/scsi/fcoe/fcoe_sysfs.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/fcoe/fcoe_sysfs.c",
      "insertions": 4,
      "deletions": 22
    }
  ],
  "total_insertions": 4,
  "total_deletions": 22,
  "total_changes": 26,
  "parents": [
    "33c3e71066b8cab41d51c503f032bb540ed5e1ca"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/fcoe/fcoe_sysfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}