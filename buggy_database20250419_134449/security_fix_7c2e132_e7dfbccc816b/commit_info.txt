Commit Hash: 7c2e132c54c79af4e524154074b9a02c3c0d6072
Subject: Add parameter to add_partial to avoid having two functions


Security Keywords:
- exploit

Full commit message:
Add parameter to add_partial to avoid having two functions

Add a parameter to add_partial instead of having separate functions.  The
parameter allows a more detailed control of where the slab pages is placed in
the partial queues.

If we put slabs back to the front then they are likely immediately used for
allocations.  If they are put at the end then we can maximize the time that
the partial slabs spent without being subject to allocations.

When deactivating slab we can put the slabs that had remote objects freed (we
can see that because objects were put on the freelist that requires locks) to
them at the end of the list so that the cachelines of remote processors can
cool down.  Slabs that had objects from the local cpu freed to them (objects
exist in the lockless freelist) are put in the front of the list to be reused
ASAP in order to exploit the cache hot state of the local cpu.

Patch seems to slightly improve tbench speed (1-2%).

Signed-off-by: Christoph Lameter <clameter@sgi.com>
Reviewed-by: Pekka Enberg <penberg@cs.helsinki.fi>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

Metadata:
Author: Christoph Lameter <clameter@sgi.com>
Author Date: Mon Jan 7 23:20:27 2008 -0800
Committer: Christoph Lameter <clameter@sgi.com>
Commit Date: Mon Feb 4 10:56:02 2008 -0800

Files Changed: 1
Lines Added: 15
Lines Removed: 16
Total Changes: 31
