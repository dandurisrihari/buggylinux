{
  "hash": "7c2e132c54c79af4e524154074b9a02c3c0d6072",
  "hash_short": "7c2e132c",
  "subject": "Add parameter to add_partial to avoid having two functions",
  "body": "Add a parameter to add_partial instead of having separate functions.  The\nparameter allows a more detailed control of where the slab pages is placed in\nthe partial queues.\n\nIf we put slabs back to the front then they are likely immediately used for\nallocations.  If they are put at the end then we can maximize the time that\nthe partial slabs spent without being subject to allocations.\n\nWhen deactivating slab we can put the slabs that had remote objects freed (we\ncan see that because objects were put on the freelist that requires locks) to\nthem at the end of the list so that the cachelines of remote processors can\ncool down.  Slabs that had objects from the local cpu freed to them (objects\nexist in the lockless freelist) are put in the front of the list to be reused\nASAP in order to exploit the cache hot state of the local cpu.\n\nPatch seems to slightly improve tbench speed (1-2%).\n\nSigned-off-by: Christoph Lameter <clameter@sgi.com>\nReviewed-by: Pekka Enberg <penberg@cs.helsinki.fi>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "full_message": "Add parameter to add_partial to avoid having two functions\n\nAdd a parameter to add_partial instead of having separate functions.  The\nparameter allows a more detailed control of where the slab pages is placed in\nthe partial queues.\n\nIf we put slabs back to the front then they are likely immediately used for\nallocations.  If they are put at the end then we can maximize the time that\nthe partial slabs spent without being subject to allocations.\n\nWhen deactivating slab we can put the slabs that had remote objects freed (we\ncan see that because objects were put on the freelist that requires locks) to\nthem at the end of the list so that the cachelines of remote processors can\ncool down.  Slabs that had objects from the local cpu freed to them (objects\nexist in the lockless freelist) are put in the front of the list to be reused\nASAP in order to exploit the cache hot state of the local cpu.\n\nPatch seems to slightly improve tbench speed (1-2%).\n\nSigned-off-by: Christoph Lameter <clameter@sgi.com>\nReviewed-by: Pekka Enberg <penberg@cs.helsinki.fi>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
  "author_name": "Christoph Lameter",
  "author_email": "clameter@sgi.com",
  "author_date": "Mon Jan 7 23:20:27 2008 -0800",
  "author_date_iso": "2008-01-07T23:20:27-08:00",
  "committer_name": "Christoph Lameter",
  "committer_email": "clameter@sgi.com",
  "committer_date": "Mon Feb 4 10:56:02 2008 -0800",
  "committer_date_iso": "2008-02-04T10:56:02-08:00",
  "files_changed": [
    "mm/slub.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "mm/slub.c",
      "insertions": 15,
      "deletions": 16
    }
  ],
  "total_insertions": 15,
  "total_deletions": 16,
  "total_changes": 31,
  "parents": [
    "9824601ead957a29e35d539e43266c003f7b085b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.25",
    "v2.6.25-rc1",
    "v2.6.25-rc2",
    "v2.6.25-rc3",
    "v2.6.25-rc4",
    "v2.6.25-rc5",
    "v2.6.25-rc6",
    "v2.6.25-rc7",
    "v2.6.25-rc8",
    "v2.6.25-rc9"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "mm/slub.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}