{
  "hash": "1befd944e05050d76950014f3dc04ed47faba2c3",
  "hash_short": "1befd944",
  "subject": "nvmet-auth: don't try to cancel a non-initialized work_struct",
  "body": "Currently blktests nvme/002 trips up debugobjects if CONFIG_NVME_AUTH is\nenabled, but authentication is not on a queue.  This is because\nnvmet_auth_sq_free cancels sq->auth_expired_work unconditionaly, while\nauth_expired_work is only ever initialized if authentication is enabled\nfor a given controller.\n\nFix this by calling most of what is nvmet_init_auth unconditionally\nwhen initializing the SQ, and just do the setting of the result\nfield in the connect command handler.\n\nFixes: db1312dd9548 (\"nvmet: implement basic In-Band Authentication\")\nSigned-off-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Sagi Grimberg <sagi@grimberg.me>\nReviewed-by: Hannes Reinecke <hare@suse.de>",
  "full_message": "nvmet-auth: don't try to cancel a non-initialized work_struct\n\nCurrently blktests nvme/002 trips up debugobjects if CONFIG_NVME_AUTH is\nenabled, but authentication is not on a queue.  This is because\nnvmet_auth_sq_free cancels sq->auth_expired_work unconditionaly, while\nauth_expired_work is only ever initialized if authentication is enabled\nfor a given controller.\n\nFix this by calling most of what is nvmet_init_auth unconditionally\nwhen initializing the SQ, and just do the setting of the result\nfield in the connect command handler.\n\nFixes: db1312dd9548 (\"nvmet: implement basic In-Band Authentication\")\nSigned-off-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Sagi Grimberg <sagi@grimberg.me>\nReviewed-by: Hannes Reinecke <hare@suse.de>",
  "author_name": "Christoph Hellwig",
  "author_email": "hch@lst.de",
  "author_date": "Tue Sep 20 15:37:18 2022 +0200",
  "author_date_iso": "2022-09-20T15:37:18+02:00",
  "committer_name": "Christoph Hellwig",
  "committer_email": "hch@lst.de",
  "committer_date": "Tue Sep 27 09:22:09 2022 +0200",
  "committer_date_iso": "2022-09-27T09:22:09+02:00",
  "files_changed": [
    "drivers/nvme/target/core.c",
    "drivers/nvme/target/fabrics-cmd-auth.c",
    "drivers/nvme/target/fabrics-cmd.c",
    "drivers/nvme/target/nvmet.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "drivers/nvme/target/core.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/nvme/target/fabrics-cmd-auth.c",
      "insertions": 4,
      "deletions": 9
    },
    {
      "file": "drivers/nvme/target/fabrics-cmd.c",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "drivers/nvme/target/nvmet.h",
      "insertions": 4,
      "deletions": 3
    }
  ],
  "total_insertions": 13,
  "total_deletions": 14,
  "total_changes": 27,
  "parents": [
    "0700542a823ba3d3aa9c699a255aecc23dbbcaff"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "auth"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/nvme/target/core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/nvme/target/fabrics-cmd-auth.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/nvme/target/fabrics-cmd.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/nvme/target/nvmet.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}