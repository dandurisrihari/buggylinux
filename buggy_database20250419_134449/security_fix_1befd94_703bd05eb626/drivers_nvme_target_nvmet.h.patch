commit 1befd944e05050d76950014f3dc04ed47faba2c3
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Sep 20 15:37:18 2022 +0200

    nvmet-auth: don't try to cancel a non-initialized work_struct
    
    Currently blktests nvme/002 trips up debugobjects if CONFIG_NVME_AUTH is
    enabled, but authentication is not on a queue.  This is because
    nvmet_auth_sq_free cancels sq->auth_expired_work unconditionaly, while
    auth_expired_work is only ever initialized if authentication is enabled
    for a given controller.
    
    Fix this by calling most of what is nvmet_init_auth unconditionally
    when initializing the SQ, and just do the setting of the result
    field in the connect command handler.
    
    Fixes: db1312dd9548 ("nvmet: implement basic In-Band Authentication")
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/nvme/target/nvmet.h b/drivers/nvme/target/nvmet.h
index 6ffeeb0a1c49..dfe3894205aa 100644
--- a/drivers/nvme/target/nvmet.h
+++ b/drivers/nvme/target/nvmet.h
@@ -704,7 +704,7 @@ int nvmet_auth_set_key(struct nvmet_host *host, const char *secret,
 		       bool set_ctrl);
 int nvmet_auth_set_host_hash(struct nvmet_host *host, const char *hash);
 int nvmet_setup_auth(struct nvmet_ctrl *ctrl);
-void nvmet_init_auth(struct nvmet_ctrl *ctrl, struct nvmet_req *req);
+void nvmet_auth_sq_init(struct nvmet_sq *sq);
 void nvmet_destroy_auth(struct nvmet_ctrl *ctrl);
 void nvmet_auth_sq_free(struct nvmet_sq *sq);
 int nvmet_setup_dhgroup(struct nvmet_ctrl *ctrl, u8 dhgroup_id);
@@ -726,8 +726,9 @@ static inline int nvmet_setup_auth(struct nvmet_ctrl *ctrl)
 {
 	return 0;
 }
-static inline void nvmet_init_auth(struct nvmet_ctrl *ctrl,
-				   struct nvmet_req *req) {};
+static inline void nvmet_auth_sq_init(struct nvmet_sq *sq)
+{
+}
 static inline void nvmet_destroy_auth(struct nvmet_ctrl *ctrl) {};
 static inline void nvmet_auth_sq_free(struct nvmet_sq *sq) {};
 static inline bool nvmet_check_auth_status(struct nvmet_req *req)