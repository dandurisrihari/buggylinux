commit 1befd944e05050d76950014f3dc04ed47faba2c3
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Sep 20 15:37:18 2022 +0200

    nvmet-auth: don't try to cancel a non-initialized work_struct
    
    Currently blktests nvme/002 trips up debugobjects if CONFIG_NVME_AUTH is
    enabled, but authentication is not on a queue.  This is because
    nvmet_auth_sq_free cancels sq->auth_expired_work unconditionaly, while
    auth_expired_work is only ever initialized if authentication is enabled
    for a given controller.
    
    Fix this by calling most of what is nvmet_init_auth unconditionally
    when initializing the SQ, and just do the setting of the result
    field in the connect command handler.
    
    Fixes: db1312dd9548 ("nvmet: implement basic In-Band Authentication")
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/nvme/target/fabrics-cmd-auth.c b/drivers/nvme/target/fabrics-cmd-auth.c
index 84601e38a335..7970a7640e58 100644
--- a/drivers/nvme/target/fabrics-cmd-auth.c
+++ b/drivers/nvme/target/fabrics-cmd-auth.c
@@ -23,17 +23,12 @@ static void nvmet_auth_expired_work(struct work_struct *work)
 	sq->dhchap_tid = -1;
 }
 
-void nvmet_init_auth(struct nvmet_ctrl *ctrl, struct nvmet_req *req)
+void nvmet_auth_sq_init(struct nvmet_sq *sq)
 {
-	u32 result = le32_to_cpu(req->cqe->result.u32);
-
 	/* Initialize in-band authentication */
-	INIT_DELAYED_WORK(&req->sq->auth_expired_work,
-			  nvmet_auth_expired_work);
-	req->sq->authenticated = false;
-	req->sq->dhchap_step = NVME_AUTH_DHCHAP_MESSAGE_NEGOTIATE;
-	result |= (u32)NVME_CONNECT_AUTHREQ_ATR << 16;
-	req->cqe->result.u32 = cpu_to_le32(result);
+	INIT_DELAYED_WORK(&sq->auth_expired_work, nvmet_auth_expired_work);
+	sq->authenticated = false;
+	sq->dhchap_step = NVME_AUTH_DHCHAP_MESSAGE_NEGOTIATE;
 }
 
 static u16 nvmet_auth_negotiate(struct nvmet_req *req, void *d)