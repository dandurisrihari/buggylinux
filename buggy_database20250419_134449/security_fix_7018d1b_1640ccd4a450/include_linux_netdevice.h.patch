commit 7018d1b3f20fb4308ed9bc577160cb8ffb79b62a
Merge: e7e70fa6784b e8a9d9683c8a
Author: David S. Miller <davem@davemloft.net>
Date:   Tue Jan 16 22:42:14 2018 -0500

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next
    
    Daniel Borkmann says:
    
    ====================
    pull-request: bpf-next 2018-01-17
    
    The following pull-request contains BPF updates for your *net-next* tree.
    
    The main changes are:
    
    1) Add initial BPF map offloading for nfp driver. Currently only
       programs were supported so far w/o being able to access maps.
       Offloaded programs are right now only allowed to perform map
       lookups, and control path is responsible for populating the
       maps. BPF core infrastructure along with nfp implementation is
       provided, from Jakub.
    
    2) Various follow-ups to Josef's BPF error injections. More
       specifically that includes: properly check whether the error
       injectable event is on function entry or not, remove the percpu
       bpf_kprobe_override and rather compare instruction pointer
       with original one, separate error-injection from kprobes since
       it's not limited to it, add injectable error types in order to
       specify what is the expected type of failure, and last but not
       least also support the kernel's fault injection framework, all
       from Masami.
    
    3) Various misc improvements and cleanups to the libbpf Makefile.
       That is, fix permissions when installing BPF header files, remove
       unused variables and functions, and also install the libbpf.h
       header, from Jesper.
    
    4) When offloading to nfp JIT and the BPF insn is unsupported in the
       JIT, then reject right at verification time. Also fix libbpf with
       regards to ELF section name matching by properly treating the
       program type as prefix. Both from Quentin.
    
    5) Add -DPACKAGE to bpftool when including bfd.h for the disassembler.
       This is needed, for example, when building libfd from source as
       bpftool doesn't supply a config.h for bfd.h. Fix from Jiong.
    
    6) xdp_convert_ctx_access() is simplified since it doesn't need to
       set target size during verification, from Jesper.
    
    7) Let bpftool properly recognize BPF_PROG_TYPE_CGROUP_DEVICE
       program types, from Roman.
    
    8) Various functions in BPF cpumap were not declared static, from Wei.
    
    9) Fix a double semicolon in BPF samples, from Luis.
    ====================
    
    Signed-off-by: David S. Miller <davem@davemloft.net>