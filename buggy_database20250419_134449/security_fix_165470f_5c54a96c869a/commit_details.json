{
  "hash": "165470fb260020861bea61a18f3e3a543a20c804",
  "hash_short": "165470fb",
  "subject": "scsi: ibmvscsi_tgt: Replace deprecated strncpy() with strscpy()",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe don't need the NUL-padding behavior that strncpy() provides as vscsi is\nNUL-allocated in ibmvscsis_probe() which proceeds to call\nibmvscsis_adapter_info():\n\n|       vscsi = kzalloc(sizeof(*vscsi), GFP_KERNEL);\n\nibmvscsis_probe() -> ibmvscsis_handle_crq() -> ibmvscsis_parse_command()\n-> ibmvscsis_mad() -> ibmvscsis_process_mad() -> ibmvscsis_adapter_info()\n\nFollowing the same idea, `partition_name` is defiend as:\n\n|       static char partition_name[PARTITION_NAMELEN] = \"UNKNOWN\";\n... which is NUL-padded already, meaning strscpy() is the best option.\n\nConsidering the above, a suitable replacement is strscpy() [2] due to the\nfact that it guarantees NUL-termination on the destination buffer without\nunnecessarily NUL-padding.\n\nHowever, for cap->name and info let's use strscpy_pad() as they are\nallocated via dma_alloc_coherent():\n\n|       cap = dma_alloc_coherent(&vscsi->dma_dev->dev, olen, &token,\n|                                GFP_ATOMIC);\n&\n|       info = dma_alloc_coherent(&vscsi->dma_dev->dev, sizeof(*info), &token,\n|                                 GFP_ATOMIC);\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231212-strncpy-drivers-scsi-ibmvscsi_tgt-ibmvscsi_tgt-c-v2-1-bdb9a7cd96c8@google.com\nAcked-by: Tyrel Datwyler <tyreld@linux.ibm.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: ibmvscsi_tgt: Replace deprecated strncpy() with strscpy()\n\nstrncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe don't need the NUL-padding behavior that strncpy() provides as vscsi is\nNUL-allocated in ibmvscsis_probe() which proceeds to call\nibmvscsis_adapter_info():\n\n|       vscsi = kzalloc(sizeof(*vscsi), GFP_KERNEL);\n\nibmvscsis_probe() -> ibmvscsis_handle_crq() -> ibmvscsis_parse_command()\n-> ibmvscsis_mad() -> ibmvscsis_process_mad() -> ibmvscsis_adapter_info()\n\nFollowing the same idea, `partition_name` is defiend as:\n\n|       static char partition_name[PARTITION_NAMELEN] = \"UNKNOWN\";\n... which is NUL-padded already, meaning strscpy() is the best option.\n\nConsidering the above, a suitable replacement is strscpy() [2] due to the\nfact that it guarantees NUL-termination on the destination buffer without\nunnecessarily NUL-padding.\n\nHowever, for cap->name and info let's use strscpy_pad() as they are\nallocated via dma_alloc_coherent():\n\n|       cap = dma_alloc_coherent(&vscsi->dma_dev->dev, olen, &token,\n|                                GFP_ATOMIC);\n&\n|       info = dma_alloc_coherent(&vscsi->dma_dev->dev, sizeof(*info), &token,\n|                                 GFP_ATOMIC);\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231212-strncpy-drivers-scsi-ibmvscsi_tgt-ibmvscsi_tgt-c-v2-1-bdb9a7cd96c8@google.com\nAcked-by: Tyrel Datwyler <tyreld@linux.ibm.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Tue Dec 12 01:20:20 2023 +0000",
  "author_date_iso": "2023-12-12T01:20:20+00:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Tue Jan 23 21:41:28 2024 -0500",
  "committer_date_iso": "2024-01-23T21:41:28-05:00",
  "files_changed": [
    "drivers/scsi/ibmvscsi_tgt/ibmvscsi_tgt.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/ibmvscsi_tgt/ibmvscsi_tgt.c",
      "insertions": 9,
      "deletions": 9
    }
  ],
  "total_insertions": 9,
  "total_deletions": 9,
  "total_changes": 18,
  "parents": [
    "be7fc734b658497aa8fe937c8109e0121c1881af"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/ibmvscsi_tgt/ibmvscsi_tgt.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}