{
  "hash": "808eb24e0e0939b487bf90e3888a9636f1c83acb",
  "hash_short": "808eb24e",
  "subject": "Merge tag 'xfs-4.15-merge-1' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux",
  "body": "Pull xfs updates from Darrick Wong:\n \"xfs: great scads of new stuff for 4.15.\n\n  This merge cycle, we're making some substantive changes to XFS. The\n  in-core extent mappings have been refactored to use proper iterators\n  and a btree to handle heavily fragmented files without needing\n  high-order memory allocations; some important log recovery bug fixes;\n  and the first part of the online fsck functionality.\n\n  (The online fsck feature is disabled by default and more pieces of it\n  will be coming in future release cycles.)\n\n  This giant pile of patches has been run through a full xfstests run\n  over the weekend and through a quick xfstests run against this\n  morning's master, with no major failures reported.\n\n  New in this version:\n\n   - Refactor the incore extent map manipulations to use a cursor\n     instead of directly modifying extent data.\n\n   - Refactor the incore extent map cursor to use an in-memory btree\n     instead of a single high-order allocation. This eliminates a major\n     source of complaints about insufficient memory when opening a\n     heavily fragmented file into a system whose memory is also heavily\n     fragmented.\n\n   - Fix a longstanding bug where deleting a file with a complex\n     extended attribute btree incorrectly handled memory pointers, which\n     could lead to memory corruption.\n\n   - Improve metadata validation to eliminate crashing problems found\n     while fuzzing xfs.\n\n   - Move the error injection tag definitions into libxfs to be shared\n     with userspace components.\n\n   - Fix some log recovery bugs where we'd underflow log block position\n     vector and incorrectly fail log recovery.\n\n   - Drain the buffer lru after log recovery to force recovered buffers\n     back through the verifiers after mount. On a v4 filesystem the log\n     never attaches verifiers during log replay (v5 does), so we could\n     end up with buffers marked verified but without having ever been\n     verified.\n\n   - Fix various other bugs.\n\n   - Introduce the first part of a new online fsck tool. The new fsck\n     tool will be able to iterate every piece of metadata in the\n     filesystem to look for obvious errors and corruptions. In the next\n     release cycle the checking will be extended to cross-reference with\n     the other fs metadata, so this feature should only be used by the\n     developers in the mean time\"\n\n* tag 'xfs-4.15-merge-1' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux: (131 commits)\n  xfs: on failed mount, force-reclaim inodes after unmounting quota controls\n  xfs: check the uniqueness of the AGFL entries\n  xfs: remove u_int* type usage\n  xfs: handle zero entries case in xfs_iext_rebalance_leaf\n  xfs: add comments documenting the rebalance algorithm\n  xfs: trivial indentation fixup for xfs_iext_remove_node\n  xfs: remove a superflous assignment in xfs_iext_remove_node\n  xfs: add some comments to xfs_iext_insert/xfs_iext_insert_node\n  xfs: fix number of records handling in xfs_iext_split_leaf\n  fs/xfs: Remove NULL check before kmem_cache_destroy\n  xfs: only check da node header padding on v5 filesystems\n  xfs: fix btree scrub deref check\n  xfs: fix uninitialized return values in scrub code\n  xfs: pass inode number to xfs_scrub_ino_set_{preen,warning}\n  xfs: refactor the directory data block bestfree checks\n  xfs: mark xlog_verify_dest_ptr STATIC\n  xfs: mark xlog_recover_check_summary STATIC\n  xfs: mark xfs_btree_check_lblock and xfs_btree_check_ptr static\n  xfs: remove unreachable error injection code in xfs_qm_dqget\n  xfs: remove unused debug counts for xfs_lock_inodes\n  ...",
  "full_message": "Merge tag 'xfs-4.15-merge-1' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs updates from Darrick Wong:\n \"xfs: great scads of new stuff for 4.15.\n\n  This merge cycle, we're making some substantive changes to XFS. The\n  in-core extent mappings have been refactored to use proper iterators\n  and a btree to handle heavily fragmented files without needing\n  high-order memory allocations; some important log recovery bug fixes;\n  and the first part of the online fsck functionality.\n\n  (The online fsck feature is disabled by default and more pieces of it\n  will be coming in future release cycles.)\n\n  This giant pile of patches has been run through a full xfstests run\n  over the weekend and through a quick xfstests run against this\n  morning's master, with no major failures reported.\n\n  New in this version:\n\n   - Refactor the incore extent map manipulations to use a cursor\n     instead of directly modifying extent data.\n\n   - Refactor the incore extent map cursor to use an in-memory btree\n     instead of a single high-order allocation. This eliminates a major\n     source of complaints about insufficient memory when opening a\n     heavily fragmented file into a system whose memory is also heavily\n     fragmented.\n\n   - Fix a longstanding bug where deleting a file with a complex\n     extended attribute btree incorrectly handled memory pointers, which\n     could lead to memory corruption.\n\n   - Improve metadata validation to eliminate crashing problems found\n     while fuzzing xfs.\n\n   - Move the error injection tag definitions into libxfs to be shared\n     with userspace components.\n\n   - Fix some log recovery bugs where we'd underflow log block position\n     vector and incorrectly fail log recovery.\n\n   - Drain the buffer lru after log recovery to force recovered buffers\n     back through the verifiers after mount. On a v4 filesystem the log\n     never attaches verifiers during log replay (v5 does), so we could\n     end up with buffers marked verified but without having ever been\n     verified.\n\n   - Fix various other bugs.\n\n   - Introduce the first part of a new online fsck tool. The new fsck\n     tool will be able to iterate every piece of metadata in the\n     filesystem to look for obvious errors and corruptions. In the next\n     release cycle the checking will be extended to cross-reference with\n     the other fs metadata, so this feature should only be used by the\n     developers in the mean time\"\n\n* tag 'xfs-4.15-merge-1' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux: (131 commits)\n  xfs: on failed mount, force-reclaim inodes after unmounting quota controls\n  xfs: check the uniqueness of the AGFL entries\n  xfs: remove u_int* type usage\n  xfs: handle zero entries case in xfs_iext_rebalance_leaf\n  xfs: add comments documenting the rebalance algorithm\n  xfs: trivial indentation fixup for xfs_iext_remove_node\n  xfs: remove a superflous assignment in xfs_iext_remove_node\n  xfs: add some comments to xfs_iext_insert/xfs_iext_insert_node\n  xfs: fix number of records handling in xfs_iext_split_leaf\n  fs/xfs: Remove NULL check before kmem_cache_destroy\n  xfs: only check da node header padding on v5 filesystems\n  xfs: fix btree scrub deref check\n  xfs: fix uninitialized return values in scrub code\n  xfs: pass inode number to xfs_scrub_ino_set_{preen,warning}\n  xfs: refactor the directory data block bestfree checks\n  xfs: mark xlog_verify_dest_ptr STATIC\n  xfs: mark xlog_recover_check_summary STATIC\n  xfs: mark xfs_btree_check_lblock and xfs_btree_check_ptr static\n  xfs: remove unreachable error injection code in xfs_qm_dqget\n  xfs: remove unused debug counts for xfs_lock_inodes\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Tue Nov 14 13:15:12 2017 -0800",
  "author_date_iso": "2017-11-14T13:15:12-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Tue Nov 14 13:15:12 2017 -0800",
  "committer_date_iso": "2017-11-14T13:15:12-08:00",
  "files_changed": [
    "fs/xfs/xfs_iomap.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/xfs/Kconfig",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "fs/xfs/Makefile",
      "insertions": 29,
      "deletions": 0
    },
    {
      "file": "fs/xfs/kmem.h",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "fs/xfs/libxfs/xfs_ag_resv.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_alloc.c",
      "insertions": 50,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_alloc.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_attr_leaf.c",
      "insertions": 1,
      "deletions": 5
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap.c",
      "insertions": 815,
      "deletions": 1246
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap.h",
      "insertions": 31,
      "deletions": 35
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap_btree.c",
      "insertions": 29,
      "deletions": 221
    },
    {
      "file": "fs/xfs/libxfs/xfs_bmap_btree.h",
      "insertions": 4,
      "deletions": 18
    },
    {
      "file": "fs/xfs/libxfs/xfs_btree.c",
      "insertions": 149,
      "deletions": 110
    },
    {
      "file": "fs/xfs/libxfs/xfs_btree.h",
      "insertions": 30,
      "deletions": 2
    },
    {
      "file": "fs/xfs/libxfs/xfs_da_btree.c",
      "insertions": 21,
      "deletions": 1
    },
    {
      "file": "fs/xfs/libxfs/xfs_dir2.c",
      "insertions": 7,
      "deletions": 17
    },
    {
      "file": "fs/xfs/libxfs/xfs_dir2.h",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_errortag.h",
      "insertions": 106,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_format.h",
      "insertions": 10,
      "deletions": 27
    },
    {
      "file": "fs/xfs/libxfs/xfs_fs.h",
      "insertions": 77,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_ialloc.c",
      "insertions": 91,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_ialloc.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_iext_tree.c",
      "insertions": 1043,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_inode_buf.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_inode_fork.c",
      "insertions": 66,
      "deletions": 1267
    },
    {
      "file": "fs/xfs/libxfs/xfs_inode_fork.h",
      "insertions": 65,
      "deletions": 73
    },
    {
      "file": "fs/xfs/libxfs/xfs_log_format.h",
      "insertions": 12,
      "deletions": 12
    },
    {
      "file": "fs/xfs/libxfs/xfs_refcount.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_rmap.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/libxfs/xfs_rtbitmap.c",
      "insertions": 12,
      "deletions": 1
    },
    {
      "file": "fs/xfs/libxfs/xfs_types.h",
      "insertions": 22,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/agheader.c",
      "insertions": 658,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/alloc.c",
      "insertions": 102,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/attr.c",
      "insertions": 471,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/bmap.c",
      "insertions": 363,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/btree.c",
      "insertions": 516,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/btree.h",
      "insertions": 57,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/common.c",
      "insertions": 574,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/common.h",
      "insertions": 144,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/dabtree.c",
      "insertions": 591,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/dabtree.h",
      "insertions": 59,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/dir.c",
      "insertions": 816,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/ialloc.c",
      "insertions": 337,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/inode.c",
      "insertions": 611,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/parent.c",
      "insertions": 317,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/quota.c",
      "insertions": 304,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/refcount.c",
      "insertions": 99,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/rmap.c",
      "insertions": 138,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/rtbitmap.c",
      "insertions": 108,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/scrub.c",
      "insertions": 392,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/scrub.h",
      "insertions": 115,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/symlink.c",
      "insertions": 92,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/trace.c",
      "insertions": 59,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/trace.h",
      "insertions": 499,
      "deletions": 0
    },
    {
      "file": "fs/xfs/scrub/xfs_scrub.h",
      "insertions": 29,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_attr.h",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_attr_inactive.c",
      "insertions": 33,
      "deletions": 36
    },
    {
      "file": "fs/xfs/xfs_attr_list.c",
      "insertions": 106,
      "deletions": 55
    },
    {
      "file": "fs/xfs/xfs_bmap_util.c",
      "insertions": 304,
      "deletions": 442
    },
    {
      "file": "fs/xfs/xfs_bmap_util.h",
      "insertions": 7,
      "deletions": 3
    },
    {
      "file": "fs/xfs/xfs_buf.c",
      "insertions": 16,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_buf.h",
      "insertions": 1,
      "deletions": 4
    },
    {
      "file": "fs/xfs/xfs_dir2_readdir.c",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "fs/xfs/xfs_dquot.c",
      "insertions": 2,
      "deletions": 19
    },
    {
      "file": "fs/xfs/xfs_error.c",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_error.h",
      "insertions": 0,
      "deletions": 81
    },
    {
      "file": "fs/xfs/xfs_file.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_icache.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_inode.c",
      "insertions": 6,
      "deletions": 27
    },
    {
      "file": "fs/xfs/xfs_inode.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/xfs/xfs_inode_item.c",
      "insertions": 7,
      "deletions": 22
    },
    {
      "file": "fs/xfs/xfs_inode_item.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/xfs/xfs_ioctl.c",
      "insertions": 93,
      "deletions": 65
    },
    {
      "file": "fs/xfs/xfs_ioctl.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/xfs/xfs_ioctl32.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_iomap.c",
      "insertions": 9,
      "deletions": 6
    },
    {
      "file": "fs/xfs/xfs_iops.c",
      "insertions": 21,
      "deletions": 31
    },
    {
      "file": "fs/xfs/xfs_itable.c",
      "insertions": 1,
      "deletions": 12
    },
    {
      "file": "fs/xfs/xfs_itable.h",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "fs/xfs/xfs_linux.h",
      "insertions": 9,
      "deletions": 12
    },
    {
      "file": "fs/xfs/xfs_log.c",
      "insertions": 31,
      "deletions": 2
    },
    {
      "file": "fs/xfs/xfs_log_recover.c",
      "insertions": 32,
      "deletions": 30
    },
    {
      "file": "fs/xfs/xfs_mount.c",
      "insertions": 13,
      "deletions": 2
    },
    {
      "file": "fs/xfs/xfs_reflink.c",
      "insertions": 52,
      "deletions": 56
    },
    {
      "file": "fs/xfs/xfs_rtalloc.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/xfs/xfs_trace.h",
      "insertions": 15,
      "deletions": 49
    },
    {
      "file": "fs/xfs/xfs_trans_ail.c",
      "insertions": 19,
      "deletions": 3
    }
  ],
  "total_insertions": 10972,
  "total_deletions": 4011,
  "total_changes": 14983,
  "parents": [
    "ae9a8c4bdc91202b4236372eed53c54d2297c71b",
    "2d1d1da3d9cc387262193e83f0a96d753b040720"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.15",
    "v4.15-rc1",
    "v4.15-rc2",
    "v4.15-rc3",
    "v4.15-rc4",
    "v4.15-rc5",
    "v4.15-rc6",
    "v4.15-rc7",
    "v4.15-rc8",
    "v4.15-rc9"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/xfs/xfs_iomap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}