Commit Hash: b3a633c8527ef155b1a4e22e8f5abc58f7af54c9
Subject: personality handling: fix PER_CLEAR_ON_SETID for security reasons


Security Keywords:
- bypass

Full commit message:
personality handling: fix PER_CLEAR_ON_SETID for security reasons

We have found that the current PER_CLEAR_ON_SETID mask on Linux
doesn't include neither ADDR_COMPAT_LAYOUT, nor MMAP_PAGE_ZERO.

The current mask is READ_IMPLIES_EXEC|ADDR_NO_RANDOMIZE.

We believe it is important to add MMAP_PAGE_ZERO, because by using
this personality it is possible to have the first page mapped inside a
process running as setuid root. This could be used in those scenarios:

- Exploiting a NULL pointer dereference issue in a setuid root binary
- Bypassing the mmap_min_addr restrictions of the Linux kernel: by
running a setuid binary that would drop privileges before giving us
control back (for instance by loading a user-supplied library), we
could get the first page mapped in a process we control. By further
using mremap and mprotect on this mapping, we can then completely
bypass the mmap_min_addr restrictions.

Less importantly, we believe ADDR_COMPAT_LAYOUT should also be added
since on x86 32bits it will in practice disable most of the address
space layout randomization (only the stack will remain randomized).

Signed-off-by: Julien Tinnes <jt@cr0.org>
Signed-off-by: Tavis Ormandy <taviso@sdf.lonestar.org>
Acked-by: Christoph Hellwig <hch@infradead.org>
Acked-by: Kees Cook <kees.cook@canonical.com>
Signed-off-by: James Morris <jmorris@namei.org>

Metadata:
Author: Julien Tinnes <jt@cr0.org>
Author Date: Fri Jul 10 10:46:30 2009 -0700
Committer: James Morris <jmorris@namei.org>
Commit Date: Mon Jul 13 08:01:47 2009 +1000

Files Changed: 1
Lines Added: 5
Lines Removed: 1
Total Changes: 6
