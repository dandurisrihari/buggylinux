commit 60f923b940246422c7da6fec5b0636822115e5ce
Author: Robert Elliott <elliott@hp.com>
Date:   Fri Jan 23 16:42:06 2015 -0600

    hpsa: propagate return value from board ID lookup
    
    If the board ID lookup function fails, return the return
    code rather than return -ENODEV.
    
    The only board ID failure reason right now is -ENODEV,
    so this just provides more informative prints in kdump
    and adapts to future changes.
    
    Tested with error injection while booting with
            reset_devices
    on the kernel command line:
    [   62.804324]  injecting error in inj_hpsa_lookup_board_id: 1 11
    [   62.804423] hpsa 0000:04:00.0: Board ID not found
    
    (the pci probe layer does not print an additional
    message if -ENODEV is the reason)
    
    Reviewed-by: Scott Teel <scott.teel@pmcs.com>
    Signed-off-by: Robert Elliott <elliott@hp.com>
    Signed-off-by: Don Brace <don.brace@pmcs.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index 92ac76a61a3f..85b3d73ccae5 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -5812,8 +5812,12 @@ static int hpsa_kdump_hard_reset_controller(struct pci_dev *pdev)
 	 */
 
 	rc = hpsa_lookup_board_id(pdev, &board_id);
-	if (rc < 0 || !ctlr_is_resettable(board_id)) {
-		dev_warn(&pdev->dev, "Not resetting device.\n");
+	if (rc < 0) {
+		dev_warn(&pdev->dev, "Board ID not found\n");
+		return rc;
+	}
+	if (!ctlr_is_resettable(board_id)) {
+		dev_warn(&pdev->dev, "Controller not resettable\n");
 		return -ENODEV;
 	}
 
@@ -6295,7 +6299,7 @@ static int hpsa_pci_init(struct ctlr_info *h)
 
 	prod_index = hpsa_lookup_board_id(h->pdev, &h->board_id);
 	if (prod_index < 0)
-		return -ENODEV;
+		return prod_index;
 	h->product_name = products[prod_index].product_name;
 	h->access = *(products[prod_index].access);