{
  "hash": "cba58fcbc4ab75d8814ec43db32d4830670526f8",
  "hash_short": "cba58fcb",
  "subject": "isdn: kcapi: replace deprecated strncpy with strscpy_pad",
  "body": "`strncpy` is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\n`buf` is used in this context as a data buffer with 64 bytes of memory\nto be occupied by capi_manufakturer.\n\nWe see the caller capi20_get_manufacturer() passes data.manufacturer as\nits `buf` argument which is then later passed over to user space. Due to\nthis, let's keep the NUL-padding that strncpy provided by using\nstrscpy_pad so as to not leak any stack data.\n| \tcdev->errcode = capi20_get_manufacturer(data.contr, data.manufacturer);\n| \tif (cdev->errcode)\n| \t\treturn -EIO;\n|\n| \tif (copy_to_user(argp, data.manufacturer,\n| \t\t\t sizeof(data.manufacturer)))\n| \t\treturn -EFAULT;\n\nPerhaps this would also be a good instance to use `strtomem_pad` for but\nin my testing the compiler was not able to determine the size of `buf`\n-- even with all the hints.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20230922-strncpy-drivers-isdn-capi-kcapi-c-v1-1-55fcf8b075fb@google.com\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "isdn: kcapi: replace deprecated strncpy with strscpy_pad\n\n`strncpy` is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\n`buf` is used in this context as a data buffer with 64 bytes of memory\nto be occupied by capi_manufakturer.\n\nWe see the caller capi20_get_manufacturer() passes data.manufacturer as\nits `buf` argument which is then later passed over to user space. Due to\nthis, let's keep the NUL-padding that strncpy provided by using\nstrscpy_pad so as to not leak any stack data.\n| \tcdev->errcode = capi20_get_manufacturer(data.contr, data.manufacturer);\n| \tif (cdev->errcode)\n| \t\treturn -EIO;\n|\n| \tif (copy_to_user(argp, data.manufacturer,\n| \t\t\t sizeof(data.manufacturer)))\n| \t\treturn -EFAULT;\n\nPerhaps this would also be a good instance to use `strtomem_pad` for but\nin my testing the compiler was not able to determine the size of `buf`\n-- even with all the hints.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20230922-strncpy-drivers-isdn-capi-kcapi-c-v1-1-55fcf8b075fb@google.com\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Fri Sep 22 11:49:14 2023 +0000",
  "author_date_iso": "2023-09-22T11:49:14+00:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Mon Oct 2 11:07:02 2023 -0700",
  "committer_date_iso": "2023-10-02T11:07:02-07:00",
  "files_changed": [
    "drivers/isdn/capi/kcapi.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/isdn/capi/kcapi.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 2,
  "total_deletions": 2,
  "total_changes": 4,
  "parents": [
    "5c80c4fced22ae719d37db754144e75688eb52c8"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/isdn/capi/kcapi.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}