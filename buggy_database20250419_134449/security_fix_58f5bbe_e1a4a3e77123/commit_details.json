{
  "hash": "58f5bbe331c566f49c9559568f982202a278aa78",
  "hash_short": "58f5bbe3",
  "subject": "ethtool: fix a privilege escalation bug",
  "body": "In dev_ethtool(), the eth command 'ethcmd' is firstly copied from the\nuse-space buffer 'useraddr' and checked to see whether it is\nETHTOOL_PERQUEUE. If yes, the sub-command 'sub_cmd' is further copied from\nthe user space. Otherwise, 'sub_cmd' is the same as 'ethcmd'. Next,\naccording to 'sub_cmd', a permission check is enforced through the function\nns_capable(). For example, the permission check is required if 'sub_cmd' is\nETHTOOL_SCOALESCE, but it is not necessary if 'sub_cmd' is\nETHTOOL_GCOALESCE, as suggested in the comment \"Allow some commands to be\ndone by anyone\". The following execution invokes different handlers\naccording to 'ethcmd'. Specifically, if 'ethcmd' is ETHTOOL_PERQUEUE,\nethtool_set_per_queue() is called. In ethtool_set_per_queue(), the kernel\nobject 'per_queue_opt' is copied again from the user-space buffer\n'useraddr' and 'per_queue_opt.sub_command' is used to determine which\noperation should be performed. Given that the buffer 'useraddr' is in the\nuser space, a malicious user can race to change the sub-command between the\ntwo copies. In particular, the attacker can supply ETHTOOL_PERQUEUE and\nETHTOOL_GCOALESCE to bypass the permission check in dev_ethtool(). Then\nbefore ethtool_set_per_queue() is called, the attacker changes\nETHTOOL_GCOALESCE to ETHTOOL_SCOALESCE. In this way, the attacker can\nbypass the permission check and execute ETHTOOL_SCOALESCE.\n\nThis patch enforces a check in ethtool_set_per_queue() after the second\ncopy from 'useraddr'. If the sub-command is different from the one obtained\nin the first copy in dev_ethtool(), an error code EINVAL will be returned.\n\nFixes: f38d138a7da6 (\"net/ethtool: support set coalesce per queue\")\nSigned-off-by: Wenwen Wang <wang6495@umn.edu>\nReviewed-by: Michal Kubecek <mkubecek@suse.cz>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "ethtool: fix a privilege escalation bug\n\nIn dev_ethtool(), the eth command 'ethcmd' is firstly copied from the\nuse-space buffer 'useraddr' and checked to see whether it is\nETHTOOL_PERQUEUE. If yes, the sub-command 'sub_cmd' is further copied from\nthe user space. Otherwise, 'sub_cmd' is the same as 'ethcmd'. Next,\naccording to 'sub_cmd', a permission check is enforced through the function\nns_capable(). For example, the permission check is required if 'sub_cmd' is\nETHTOOL_SCOALESCE, but it is not necessary if 'sub_cmd' is\nETHTOOL_GCOALESCE, as suggested in the comment \"Allow some commands to be\ndone by anyone\". The following execution invokes different handlers\naccording to 'ethcmd'. Specifically, if 'ethcmd' is ETHTOOL_PERQUEUE,\nethtool_set_per_queue() is called. In ethtool_set_per_queue(), the kernel\nobject 'per_queue_opt' is copied again from the user-space buffer\n'useraddr' and 'per_queue_opt.sub_command' is used to determine which\noperation should be performed. Given that the buffer 'useraddr' is in the\nuser space, a malicious user can race to change the sub-command between the\ntwo copies. In particular, the attacker can supply ETHTOOL_PERQUEUE and\nETHTOOL_GCOALESCE to bypass the permission check in dev_ethtool(). Then\nbefore ethtool_set_per_queue() is called, the attacker changes\nETHTOOL_GCOALESCE to ETHTOOL_SCOALESCE. In this way, the attacker can\nbypass the permission check and execute ETHTOOL_SCOALESCE.\n\nThis patch enforces a check in ethtool_set_per_queue() after the second\ncopy from 'useraddr'. If the sub-command is different from the one obtained\nin the first copy in dev_ethtool(), an error code EINVAL will be returned.\n\nFixes: f38d138a7da6 (\"net/ethtool: support set coalesce per queue\")\nSigned-off-by: Wenwen Wang <wang6495@umn.edu>\nReviewed-by: Michal Kubecek <mkubecek@suse.cz>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Wenwen Wang",
  "author_email": "wang6495@umn.edu",
  "author_date": "Mon Oct 8 10:49:35 2018 -0500",
  "author_date_iso": "2018-10-08T10:49:35-05:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Mon Oct 15 21:37:58 2018 -0700",
  "committer_date_iso": "2018-10-15T21:37:58-07:00",
  "files_changed": [
    "net/core/ethtool.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/core/ethtool.c",
      "insertions": 6,
      "deletions": 2
    }
  ],
  "total_insertions": 6,
  "total_deletions": 2,
  "total_changes": 8,
  "parents": [
    "2bb3207dbbd4d30e96dd0e1c8e013104193bd59c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.19",
    "v4.20",
    "v4.20-rc1",
    "v4.20-rc2",
    "v4.20-rc3",
    "v4.20-rc4",
    "v4.20-rc5",
    "v4.20-rc6",
    "v4.20-rc7",
    "v5.0"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "privilege escalation",
      "bypass"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/core/ethtool.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}