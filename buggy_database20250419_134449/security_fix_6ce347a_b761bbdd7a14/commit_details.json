{
  "hash": "6ce347af1499deff5890a52aedacd451330af706",
  "hash_short": "6ce347af",
  "subject": "KVM: nVMX: Preserve exception priority irrespective of exiting behavior",
  "body": "Short circuit vmx_check_nested_events() if an exception is pending and\nneeds to be injected into L2, priority between coincident events is not\ndependent on exiting behavior.  This fixes a bug where a single-step #DB\nthat is not intercepted by L1 is incorrectly dropped due to servicing a\nVMX Preemption Timer VM-Exit.\n\nInjected exceptions also need to be blocked if nested VM-Enter is\npending or an exception was already injected, otherwise injecting the\nexception could overwrite an existing event injection from L1.\nTechnically, this scenario should be impossible, i.e. KVM shouldn't\ninject its own exception during nested VM-Enter.  This will be addressed\nin a future patch.\n\nNote, event priority between SMI, NMI and INTR is incorrect for L2, e.g.\nSMI should take priority over VM-Exit on NMI/INTR, and NMI that is\ninjected into L2 should take priority over VM-Exit INTR.  This will also\nbe addressed in a future patch.\n\nFixes: b6b8a1451fc4 (\"KVM: nVMX: Rework interception of IRQs and NMIs\")\nReported-by: Jim Mattson <jmattson@google.com>\nCc: Oliver Upton <oupton@google.com>\nCc: Peter Shier <pshier@google.com>\nSigned-off-by: Sean Christopherson <sean.j.christopherson@intel.com>\nMessage-Id: <20200423022550.15113-2-sean.j.christopherson@intel.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: nVMX: Preserve exception priority irrespective of exiting behavior\n\nShort circuit vmx_check_nested_events() if an exception is pending and\nneeds to be injected into L2, priority between coincident events is not\ndependent on exiting behavior.  This fixes a bug where a single-step #DB\nthat is not intercepted by L1 is incorrectly dropped due to servicing a\nVMX Preemption Timer VM-Exit.\n\nInjected exceptions also need to be blocked if nested VM-Enter is\npending or an exception was already injected, otherwise injecting the\nexception could overwrite an existing event injection from L1.\nTechnically, this scenario should be impossible, i.e. KVM shouldn't\ninject its own exception during nested VM-Enter.  This will be addressed\nin a future patch.\n\nNote, event priority between SMI, NMI and INTR is incorrect for L2, e.g.\nSMI should take priority over VM-Exit on NMI/INTR, and NMI that is\ninjected into L2 should take priority over VM-Exit INTR.  This will also\nbe addressed in a future patch.\n\nFixes: b6b8a1451fc4 (\"KVM: nVMX: Rework interception of IRQs and NMIs\")\nReported-by: Jim Mattson <jmattson@google.com>\nCc: Oliver Upton <oupton@google.com>\nCc: Peter Shier <pshier@google.com>\nSigned-off-by: Sean Christopherson <sean.j.christopherson@intel.com>\nMessage-Id: <20200423022550.15113-2-sean.j.christopherson@intel.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Sean Christopherson",
  "author_email": "sean.j.christopherson@intel.com",
  "author_date": "Wed Apr 22 19:25:38 2020 -0700",
  "author_date_iso": "2020-04-22T19:25:38-07:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Wed May 13 12:14:25 2020 -0400",
  "committer_date_iso": "2020-05-13T12:14:25-04:00",
  "files_changed": [
    "arch/x86/kvm/vmx/nested.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "insertions": 7,
      "deletions": 5
    }
  ],
  "total_insertions": 7,
  "total_deletions": 5,
  "total_changes": 12,
  "parents": [
    "9c3d370a8efaac49b0520617c9ab4e552aefbf1e"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}