commit 086437d94aa3591b459e64bffed657b88dcc46a7
Author: Justin Stitt <justinstitt@google.com>
Date:   Fri Apr 12 18:53:47 2024 +0000

    kallsyms: replace deprecated strncpy with strscpy
    
    strncpy() is deprecated for use on NUL-terminated destination strings
    [1] and as such we should prefer more robust and less ambiguous string
    interfaces. The goal is to remove its use completely [2].
    
    namebuf is eventually cleaned of any trailing llvm suffixes using
    strstr(). This hints that namebuf should be NUL-terminated.
    
    static void cleanup_symbol_name(char *s)
    {
            char *res;
            ...
            res = strstr(s, ".llvm.");
            ...
    }
    
    Due to this, use strscpy() over strncpy() as it guarantees
    NUL-termination on the destination buffer. Drop the -1 from the length
    calculation as it is no longer needed to ensure NUL-termination.
    
    Link: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]
    Link: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html
    Link: https://github.com/KSPP/linux/issues/90 [2]
    Cc: linux-hardening@vger.kernel.org
    Signed-off-by: Justin Stitt <justinstitt@google.com>
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>

diff --git a/kernel/module/kallsyms.c b/kernel/module/kallsyms.c
index ef73ae7c8909..62fb57bb9f16 100644
--- a/kernel/module/kallsyms.c
+++ b/kernel/module/kallsyms.c
@@ -348,7 +348,7 @@ const char *module_address_lookup(unsigned long addr,
 	}
 	/* Make a copy in here where it's safe */
 	if (ret) {
-		strncpy(namebuf, ret, KSYM_NAME_LEN - 1);
+		strscpy(namebuf, ret, KSYM_NAME_LEN);
 		ret = namebuf;
 	}
 	preempt_enable();