{
  "hash": "11bf9b865898961cee60a41c483c9f27ec76e12e",
  "hash_short": "11bf9b86",
  "subject": "ARM/vdso: Mark the vDSO code read-only after init",
  "body": "Although the ARM vDSO is cleanly separated by code/data with the code\nbeing read-only in userspace mappings, the code page is still writable\nfrom the kernel.\n\nThere have been exploits (such as http://itszn.com/blog/?p=21) that\ntake advantage of this on x86 to go from a bad kernel write to full\nroot.\n\nPrevent this specific exploit class on ARM as well by putting the vDSO\ncode page in post-init read-only memory as well.\n\nBefore:\n\tvdso: 1 text pages at base 80927000\n\troot@Vexpress:/ cat /sys/kernel/debug/kernel_page_tables\n\t---[ Modules ]---\n\t---[ Kernel Mapping ]---\n\t0x80000000-0x80100000           1M     RW NX SHD\n\t0x80100000-0x80600000           5M     ro x  SHD\n\t0x80600000-0x80800000           2M     ro NX SHD\n\t0x80800000-0xbe000000         984M     RW NX SHD\n\nAfter:\n\tvdso: 1 text pages at base 8072b000\n\troot@Vexpress:/ cat /sys/kernel/debug/kernel_page_tables\n\t---[ Modules ]---\n\t---[ Kernel Mapping ]---\n\t0x80000000-0x80100000           1M     RW NX SHD\n\t0x80100000-0x80600000           5M     ro x  SHD\n\t0x80600000-0x80800000           2M     ro NX SHD\n\t0x80800000-0xbe000000         984M     RW NX SHD\n\nInspired by https://lkml.org/lkml/2016/1/19/494 based on work by the\nPaX Team, Brad Spengler, and Kees Cook.\n\nSigned-off-by: David Brown <david.brown@linaro.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Mathias Krause <minipli@googlemail.com>\nCc: Michael Ellerman <mpe@ellerman.id.au>\nCc: Nathan Lynch <nathan_lynch@mentor.com>\nCc: PaX Team <pageexec@freemail.hu>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Russell King <linux@arm.linux.org.uk>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: kernel-hardening@lists.openwall.com\nCc: linux-arch <linux-arch@vger.kernel.org>\nCc: linux-arm-kernel@lists.infradead.org\nCc: linux-kernel@vger.kernel.org\nLink: http://lkml.kernel.org/r/1455748879-21872-8-git-send-email-keescook@chromium.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "ARM/vdso: Mark the vDSO code read-only after init\n\nAlthough the ARM vDSO is cleanly separated by code/data with the code\nbeing read-only in userspace mappings, the code page is still writable\nfrom the kernel.\n\nThere have been exploits (such as http://itszn.com/blog/?p=21) that\ntake advantage of this on x86 to go from a bad kernel write to full\nroot.\n\nPrevent this specific exploit class on ARM as well by putting the vDSO\ncode page in post-init read-only memory as well.\n\nBefore:\n\tvdso: 1 text pages at base 80927000\n\troot@Vexpress:/ cat /sys/kernel/debug/kernel_page_tables\n\t---[ Modules ]---\n\t---[ Kernel Mapping ]---\n\t0x80000000-0x80100000           1M     RW NX SHD\n\t0x80100000-0x80600000           5M     ro x  SHD\n\t0x80600000-0x80800000           2M     ro NX SHD\n\t0x80800000-0xbe000000         984M     RW NX SHD\n\nAfter:\n\tvdso: 1 text pages at base 8072b000\n\troot@Vexpress:/ cat /sys/kernel/debug/kernel_page_tables\n\t---[ Modules ]---\n\t---[ Kernel Mapping ]---\n\t0x80000000-0x80100000           1M     RW NX SHD\n\t0x80100000-0x80600000           5M     ro x  SHD\n\t0x80600000-0x80800000           2M     ro NX SHD\n\t0x80800000-0xbe000000         984M     RW NX SHD\n\nInspired by https://lkml.org/lkml/2016/1/19/494 based on work by the\nPaX Team, Brad Spengler, and Kees Cook.\n\nSigned-off-by: David Brown <david.brown@linaro.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Mathias Krause <minipli@googlemail.com>\nCc: Michael Ellerman <mpe@ellerman.id.au>\nCc: Nathan Lynch <nathan_lynch@mentor.com>\nCc: PaX Team <pageexec@freemail.hu>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Russell King <linux@arm.linux.org.uk>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: kernel-hardening@lists.openwall.com\nCc: linux-arch <linux-arch@vger.kernel.org>\nCc: linux-arm-kernel@lists.infradead.org\nCc: linux-kernel@vger.kernel.org\nLink: http://lkml.kernel.org/r/1455748879-21872-8-git-send-email-keescook@chromium.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "David Brown",
  "author_email": "david.brown@linaro.org",
  "author_date": "Wed Feb 17 14:41:18 2016 -0800",
  "author_date_iso": "2016-02-17T14:41:18-08:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Mon Feb 22 08:51:39 2016 +0100",
  "committer_date_iso": "2016-02-22T08:51:39+01:00",
  "files_changed": [
    "arch/arm/vdso/vdso.S"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/arm/vdso/vdso.S",
      "insertions": 1,
      "deletions": 2
    }
  ],
  "total_insertions": 1,
  "total_deletions": 2,
  "total_changes": 3,
  "parents": [
    "018ef8dcf3de5f62e2cc1a9273cc27e1c6ba8de5"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening",
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm/vdso/vdso.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}