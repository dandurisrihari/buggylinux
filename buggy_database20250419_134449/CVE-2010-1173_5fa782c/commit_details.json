{
  "hash": "5fa782c2f5ef6c2e4f04d3e228412c9b4a4c8809",
  "hash_short": "5fa782c2",
  "subject": "sctp: Fix skb_over_panic resulting from multiple invalid parameter errors (CVE-2010-1173) (v4)",
  "body": "Ok, version 4\n\nChange Notes:\n1) Minor cleanups, from Vlads notes\n\nSummary:\n\nHey-\n\tRecently, it was reported to me that the kernel could oops in the\nfollowing way:\n\n<5> kernel BUG at net/core/skbuff.c:91!\n<5> invalid operand: 0000 [#1]\n<5> Modules linked in: sctp netconsole nls_utf8 autofs4 sunrpc iptable_filter\nip_tables cpufreq_powersave parport_pc lp parport vmblock(U) vsock(U) vmci(U)\nvmxnet(U) vmmemctl(U) vmhgfs(U) acpiphp dm_mirror dm_mod button battery ac md5\nipv6 uhci_hcd ehci_hcd snd_ens1371 snd_rawmidi snd_seq_device snd_pcm_oss\nsnd_mixer_oss snd_pcm snd_timer snd_page_alloc snd_ac97_codec snd soundcore\npcnet32 mii floppy ext3 jbd ata_piix libata mptscsih mptsas mptspi mptscsi\nmptbase sd_mod scsi_mod\n<5> CPU:    0\n<5> EIP:    0060:[<c02bff27>]    Not tainted VLI\n<5> EFLAGS: 00010216   (2.6.9-89.0.25.EL)\n<5> EIP is at skb_over_panic+0x1f/0x2d\n<5> eax: 0000002c   ebx: c033f461   ecx: c0357d96   edx: c040fd44\n<5> esi: c033f461   edi: df653280   ebp: 00000000   esp: c040fd40\n<5> ds: 007b   es: 007b   ss: 0068\n<5> Process swapper (pid: 0, threadinfo=c040f000 task=c0370be0)\n<5> Stack: c0357d96 e0c29478 00000084 00000004 c033f461 df653280 d7883180\ne0c2947d\n<5>        00000000 00000080 df653490 00000004 de4f1ac0 de4f1ac0 00000004\ndf653490\n<5>        00000001 e0c2877a 08000800 de4f1ac0 df653490 00000000 e0c29d2e\n00000004\n<5> Call Trace:\n<5>  [<e0c29478>] sctp_addto_chunk+0xb0/0x128 [sctp]\n<5>  [<e0c2947d>] sctp_addto_chunk+0xb5/0x128 [sctp]\n<5>  [<e0c2877a>] sctp_init_cause+0x3f/0x47 [sctp]\n<5>  [<e0c29d2e>] sctp_process_unk_param+0xac/0xb8 [sctp]\n<5>  [<e0c29e90>] sctp_verify_init+0xcc/0x134 [sctp]\n<5>  [<e0c20322>] sctp_sf_do_5_1B_init+0x83/0x28e [sctp]\n<5>  [<e0c25333>] sctp_do_sm+0x41/0x77 [sctp]\n<5>  [<c01555a4>] cache_grow+0x140/0x233\n<5>  [<e0c26ba1>] sctp_endpoint_bh_rcv+0xc5/0x108 [sctp]\n<5>  [<e0c2b863>] sctp_inq_push+0xe/0x10 [sctp]\n<5>  [<e0c34600>] sctp_rcv+0x454/0x509 [sctp]\n<5>  [<e084e017>] ipt_hook+0x17/0x1c [iptable_filter]\n<5>  [<c02d005e>] nf_iterate+0x40/0x81\n<5>  [<c02e0bb9>] ip_local_deliver_finish+0x0/0x151\n<5>  [<c02e0c7f>] ip_local_deliver_finish+0xc6/0x151\n<5>  [<c02d0362>] nf_hook_slow+0x83/0xb5\n<5>  [<c02e0bb2>] ip_local_deliver+0x1a2/0x1a9\n<5>  [<c02e0bb9>] ip_local_deliver_finish+0x0/0x151\n<5>  [<c02e103e>] ip_rcv+0x334/0x3b4\n<5>  [<c02c66fd>] netif_receive_skb+0x320/0x35b\n<5>  [<e0a0928b>] init_stall_timer+0x67/0x6a [uhci_hcd]\n<5>  [<c02c67a4>] process_backlog+0x6c/0xd9\n<5>  [<c02c690f>] net_rx_action+0xfe/0x1f8\n<5>  [<c012a7b1>] __do_softirq+0x35/0x79\n<5>  [<c0107efb>] handle_IRQ_event+0x0/0x4f\n<5>  [<c01094de>] do_softirq+0x46/0x4d\n\nIts an skb_over_panic BUG halt that results from processing an init chunk in\nwhich too many of its variable length parameters are in some way malformed.\n\nThe problem is in sctp_process_unk_param:\nif (NULL == *errp)\n\t*errp = sctp_make_op_error_space(asoc, chunk,\n\t\t\t\t\t ntohs(chunk->chunk_hdr->length));\n\n\tif (*errp) {\n\t\tsctp_init_cause(*errp, SCTP_ERROR_UNKNOWN_PARAM,\n\t\t\t\t WORD_ROUND(ntohs(param.p->length)));\n\t\tsctp_addto_chunk(*errp,\n\t\t\tWORD_ROUND(ntohs(param.p->length)),\n\t\t\t\t  param.v);\n\nWhen we allocate an error chunk, we assume that the worst case scenario requires\nthat we have chunk_hdr->length data allocated, which would be correct nominally,\ngiven that we call sctp_addto_chunk for the violating parameter.  Unfortunately,\nwe also, in sctp_init_cause insert a sctp_errhdr_t structure into the error\nchunk, so the worst case situation in which all parameters are in violation\nrequires chunk_hdr->length+(sizeof(sctp_errhdr_t)*param_count) bytes of data.\n\nThe result of this error is that a deliberately malformed packet sent to a\nlistening host can cause a remote DOS, described in CVE-2010-1173:\nhttp://cve.mitre.org/cgi-bin/cvename.cgi?name=2010-1173\n\nI've tested the below fix and confirmed that it fixes the issue.  We move to a\nstrategy whereby we allocate a fixed size error chunk and ignore errors we don't\nhave space to report.  Tested by me successfully\n\nSigned-off-by: Neil Horman <nhorman@tuxdriver.com>\nAcked-by: Vlad Yasevich <vladislav.yasevich@hp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "sctp: Fix skb_over_panic resulting from multiple invalid parameter errors (CVE-2010-1173) (v4)\n\nOk, version 4\n\nChange Notes:\n1) Minor cleanups, from Vlads notes\n\nSummary:\n\nHey-\n\tRecently, it was reported to me that the kernel could oops in the\nfollowing way:\n\n<5> kernel BUG at net/core/skbuff.c:91!\n<5> invalid operand: 0000 [#1]\n<5> Modules linked in: sctp netconsole nls_utf8 autofs4 sunrpc iptable_filter\nip_tables cpufreq_powersave parport_pc lp parport vmblock(U) vsock(U) vmci(U)\nvmxnet(U) vmmemctl(U) vmhgfs(U) acpiphp dm_mirror dm_mod button battery ac md5\nipv6 uhci_hcd ehci_hcd snd_ens1371 snd_rawmidi snd_seq_device snd_pcm_oss\nsnd_mixer_oss snd_pcm snd_timer snd_page_alloc snd_ac97_codec snd soundcore\npcnet32 mii floppy ext3 jbd ata_piix libata mptscsih mptsas mptspi mptscsi\nmptbase sd_mod scsi_mod\n<5> CPU:    0\n<5> EIP:    0060:[<c02bff27>]    Not tainted VLI\n<5> EFLAGS: 00010216   (2.6.9-89.0.25.EL)\n<5> EIP is at skb_over_panic+0x1f/0x2d\n<5> eax: 0000002c   ebx: c033f461   ecx: c0357d96   edx: c040fd44\n<5> esi: c033f461   edi: df653280   ebp: 00000000   esp: c040fd40\n<5> ds: 007b   es: 007b   ss: 0068\n<5> Process swapper (pid: 0, threadinfo=c040f000 task=c0370be0)\n<5> Stack: c0357d96 e0c29478 00000084 00000004 c033f461 df653280 d7883180\ne0c2947d\n<5>        00000000 00000080 df653490 00000004 de4f1ac0 de4f1ac0 00000004\ndf653490\n<5>        00000001 e0c2877a 08000800 de4f1ac0 df653490 00000000 e0c29d2e\n00000004\n<5> Call Trace:\n<5>  [<e0c29478>] sctp_addto_chunk+0xb0/0x128 [sctp]\n<5>  [<e0c2947d>] sctp_addto_chunk+0xb5/0x128 [sctp]\n<5>  [<e0c2877a>] sctp_init_cause+0x3f/0x47 [sctp]\n<5>  [<e0c29d2e>] sctp_process_unk_param+0xac/0xb8 [sctp]\n<5>  [<e0c29e90>] sctp_verify_init+0xcc/0x134 [sctp]\n<5>  [<e0c20322>] sctp_sf_do_5_1B_init+0x83/0x28e [sctp]\n<5>  [<e0c25333>] sctp_do_sm+0x41/0x77 [sctp]\n<5>  [<c01555a4>] cache_grow+0x140/0x233\n<5>  [<e0c26ba1>] sctp_endpoint_bh_rcv+0xc5/0x108 [sctp]\n<5>  [<e0c2b863>] sctp_inq_push+0xe/0x10 [sctp]\n<5>  [<e0c34600>] sctp_rcv+0x454/0x509 [sctp]\n<5>  [<e084e017>] ipt_hook+0x17/0x1c [iptable_filter]\n<5>  [<c02d005e>] nf_iterate+0x40/0x81\n<5>  [<c02e0bb9>] ip_local_deliver_finish+0x0/0x151\n<5>  [<c02e0c7f>] ip_local_deliver_finish+0xc6/0x151\n<5>  [<c02d0362>] nf_hook_slow+0x83/0xb5\n<5>  [<c02e0bb2>] ip_local_deliver+0x1a2/0x1a9\n<5>  [<c02e0bb9>] ip_local_deliver_finish+0x0/0x151\n<5>  [<c02e103e>] ip_rcv+0x334/0x3b4\n<5>  [<c02c66fd>] netif_receive_skb+0x320/0x35b\n<5>  [<e0a0928b>] init_stall_timer+0x67/0x6a [uhci_hcd]\n<5>  [<c02c67a4>] process_backlog+0x6c/0xd9\n<5>  [<c02c690f>] net_rx_action+0xfe/0x1f8\n<5>  [<c012a7b1>] __do_softirq+0x35/0x79\n<5>  [<c0107efb>] handle_IRQ_event+0x0/0x4f\n<5>  [<c01094de>] do_softirq+0x46/0x4d\n\nIts an skb_over_panic BUG halt that results from processing an init chunk in\nwhich too many of its variable length parameters are in some way malformed.\n\nThe problem is in sctp_process_unk_param:\nif (NULL == *errp)\n\t*errp = sctp_make_op_error_space(asoc, chunk,\n\t\t\t\t\t ntohs(chunk->chunk_hdr->length));\n\n\tif (*errp) {\n\t\tsctp_init_cause(*errp, SCTP_ERROR_UNKNOWN_PARAM,\n\t\t\t\t WORD_ROUND(ntohs(param.p->length)));\n\t\tsctp_addto_chunk(*errp,\n\t\t\tWORD_ROUND(ntohs(param.p->length)),\n\t\t\t\t  param.v);\n\nWhen we allocate an error chunk, we assume that the worst case scenario requires\nthat we have chunk_hdr->length data allocated, which would be correct nominally,\ngiven that we call sctp_addto_chunk for the violating parameter.  Unfortunately,\nwe also, in sctp_init_cause insert a sctp_errhdr_t structure into the error\nchunk, so the worst case situation in which all parameters are in violation\nrequires chunk_hdr->length+(sizeof(sctp_errhdr_t)*param_count) bytes of data.\n\nThe result of this error is that a deliberately malformed packet sent to a\nlistening host can cause a remote DOS, described in CVE-2010-1173:\nhttp://cve.mitre.org/cgi-bin/cvename.cgi?name=2010-1173\n\nI've tested the below fix and confirmed that it fixes the issue.  We move to a\nstrategy whereby we allocate a fixed size error chunk and ignore errors we don't\nhave space to report.  Tested by me successfully\n\nSigned-off-by: Neil Horman <nhorman@tuxdriver.com>\nAcked-by: Vlad Yasevich <vladislav.yasevich@hp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Neil Horman",
  "author_email": "nhorman@tuxdriver.com",
  "author_date": "Wed Apr 28 10:30:59 2010 +0000",
  "author_date_iso": "2010-04-28T10:30:59+00:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Wed Apr 28 14:22:01 2010 -0700",
  "committer_date_iso": "2010-04-28T14:22:01-07:00",
  "files_changed": [
    "include/net/sctp/structs.h",
    "net/sctp/sm_make_chunk.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "include/net/sctp/structs.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/sctp/sm_make_chunk.c",
      "insertions": 57,
      "deletions": 5
    }
  ],
  "total_insertions": 58,
  "total_deletions": 5,
  "total_changes": 63,
  "parents": [
    "e41c11ee0cc602bcde68916be85fb97d1a484324"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.34",
    "v2.6.34-rc7",
    "v2.6.35",
    "v2.6.35-rc1",
    "v2.6.35-rc2",
    "v2.6.35-rc3",
    "v2.6.35-rc4",
    "v2.6.35-rc5",
    "v2.6.35-rc6",
    "v2.6.36"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2010-1173",
      "CVE-2010-1173",
      "CVE-2010-1173"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "include/net/sctp/structs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/sctp/sm_make_chunk.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}