{
  "hash": "25362dc496edaf17f714c0fecd8b3eb79670207b",
  "hash_short": "25362dc4",
  "subject": "ARM: 8501/1: mm: flip priority of CONFIG_DEBUG_RODATA",
  "body": "The use of CONFIG_DEBUG_RODATA is generally seen as an essential part of\nkernel self-protection:\nhttp://www.openwall.com/lists/kernel-hardening/2015/11/30/13\nAdditionally, its name has grown to mean things beyond just rodata. To\nget ARM closer to this, we ought to rearrange the names of the configs\nthat control how the kernel protects its memory. What was called\nCONFIG_ARM_KERNMEM_PERMS is realy doing the work that other architectures\ncall CONFIG_DEBUG_RODATA.\n\nThis redefines CONFIG_DEBUG_RODATA to actually do the bulk of the\nROing (and NXing). In the place of the old CONFIG_DEBUG_RODATA, use\nCONFIG_DEBUG_ALIGN_RODATA, since that's what the option does: adds\nsection alignment for making rodata explicitly NX, as arm does not split\nthe page tables like arm64 does without _ALIGN_RODATA.\n\nAlso adds human readable names to the sections so I could more easily\ndebug my typos, and makes CONFIG_DEBUG_RODATA default \"y\" for CPU_V7.\n\nResults in /sys/kernel/debug/kernel_page_tables for each config state:\n\n # CONFIG_DEBUG_RODATA is not set\n # CONFIG_DEBUG_ALIGN_RODATA is not set\n\n---[ Kernel Mapping ]---\n0x80000000-0x80900000           9M     RW x  SHD\n0x80900000-0xa0000000         503M     RW NX SHD\n\n CONFIG_DEBUG_RODATA=y\n CONFIG_DEBUG_ALIGN_RODATA=y\n\n---[ Kernel Mapping ]---\n0x80000000-0x80100000           1M     RW NX SHD\n0x80100000-0x80700000           6M     ro x  SHD\n0x80700000-0x80a00000           3M     ro NX SHD\n0x80a00000-0xa0000000         502M     RW NX SHD\n\n CONFIG_DEBUG_RODATA=y\n # CONFIG_DEBUG_ALIGN_RODATA is not set\n\n---[ Kernel Mapping ]---\n0x80000000-0x80100000           1M     RW NX SHD\n0x80100000-0x80a00000           9M     ro x  SHD\n0x80a00000-0xa0000000         502M     RW NX SHD\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Laura Abbott <labbott@fedoraproject.org>\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>",
  "full_message": "ARM: 8501/1: mm: flip priority of CONFIG_DEBUG_RODATA\n\nThe use of CONFIG_DEBUG_RODATA is generally seen as an essential part of\nkernel self-protection:\nhttp://www.openwall.com/lists/kernel-hardening/2015/11/30/13\nAdditionally, its name has grown to mean things beyond just rodata. To\nget ARM closer to this, we ought to rearrange the names of the configs\nthat control how the kernel protects its memory. What was called\nCONFIG_ARM_KERNMEM_PERMS is realy doing the work that other architectures\ncall CONFIG_DEBUG_RODATA.\n\nThis redefines CONFIG_DEBUG_RODATA to actually do the bulk of the\nROing (and NXing). In the place of the old CONFIG_DEBUG_RODATA, use\nCONFIG_DEBUG_ALIGN_RODATA, since that's what the option does: adds\nsection alignment for making rodata explicitly NX, as arm does not split\nthe page tables like arm64 does without _ALIGN_RODATA.\n\nAlso adds human readable names to the sections so I could more easily\ndebug my typos, and makes CONFIG_DEBUG_RODATA default \"y\" for CPU_V7.\n\nResults in /sys/kernel/debug/kernel_page_tables for each config state:\n\n # CONFIG_DEBUG_RODATA is not set\n # CONFIG_DEBUG_ALIGN_RODATA is not set\n\n---[ Kernel Mapping ]---\n0x80000000-0x80900000           9M     RW x  SHD\n0x80900000-0xa0000000         503M     RW NX SHD\n\n CONFIG_DEBUG_RODATA=y\n CONFIG_DEBUG_ALIGN_RODATA=y\n\n---[ Kernel Mapping ]---\n0x80000000-0x80100000           1M     RW NX SHD\n0x80100000-0x80700000           6M     ro x  SHD\n0x80700000-0x80a00000           3M     ro NX SHD\n0x80a00000-0xa0000000         502M     RW NX SHD\n\n CONFIG_DEBUG_RODATA=y\n # CONFIG_DEBUG_ALIGN_RODATA is not set\n\n---[ Kernel Mapping ]---\n0x80000000-0x80100000           1M     RW NX SHD\n0x80100000-0x80a00000           9M     ro x  SHD\n0x80a00000-0xa0000000         502M     RW NX SHD\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Laura Abbott <labbott@fedoraproject.org>\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Tue Jan 26 01:19:36 2016 +0100",
  "author_date_iso": "2016-01-26T01:19:36+01:00",
  "committer_name": "Russell King",
  "committer_email": "rmk+kernel@arm.linux.org.uk",
  "committer_date": "Mon Feb 8 15:56:45 2016 +0000",
  "committer_date_iso": "2016-02-08T15:56:45+00:00",
  "files_changed": [
    "arch/arm/kernel/vmlinux.lds.S",
    "arch/arm/mm/Kconfig",
    "arch/arm/mm/init.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/arm/kernel/vmlinux.lds.S",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "arch/arm/mm/Kconfig",
      "insertions": 18,
      "deletions": 16
    },
    {
      "file": "arch/arm/mm/init.c",
      "insertions": 10,
      "deletions": 9
    }
  ],
  "total_insertions": 33,
  "total_deletions": 30,
  "total_changes": 63,
  "parents": [
    "4138323eac0b485316e54ad9ce241bac24ddd175"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm/kernel/vmlinux.lds.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/mm/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/mm/init.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}