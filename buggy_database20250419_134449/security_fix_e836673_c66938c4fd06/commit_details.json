{
  "hash": "e836673c9b4966bc78e38aeda25f7022c57f0e90",
  "hash_short": "e836673c",
  "subject": "x86/alternatives: Add text_poke_kgdb() to not assert the lock when debugging",
  "body": "text_mutex is currently expected to be held before text_poke() is\ncalled, but kgdb does not take the mutex, and instead *supposedly*\nensures the lock is not taken and will not be acquired by any other core\nwhile text_poke() is running.\n\nThe reason for the \"supposedly\" comment is that it is not entirely clear\nthat this would be the case if gdb_do_roundup is zero.\n\nCreate two wrapper functions, text_poke() and text_poke_kgdb(), which do\nor do not run the lockdep assertion respectively.\n\nWhile we are at it, change the return code of text_poke() to something\nmeaningful. One day, callers might actually respect it and the existing\nBUG_ON() when patching fails could be removed. For kgdb, the return\nvalue can actually be used.\n\nSuggested-by: Peter Zijlstra <peterz@infradead.org>\nSigned-off-by: Nadav Amit <namit@vmware.com>\nSigned-off-by: Rick Edgecombe <rick.p.edgecombe@intel.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nReviewed-by: Masami Hiramatsu <mhiramat@kernel.org>\nAcked-by: Jiri Kosina <jkosina@suse.cz>\nCc: <akpm@linux-foundation.org>\nCc: <ard.biesheuvel@linaro.org>\nCc: <deneen.t.dock@intel.com>\nCc: <kernel-hardening@lists.openwall.com>\nCc: <kristen@linux.intel.com>\nCc: <linux_dti@icloud.com>\nCc: <will.deacon@arm.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Kees Cook <keescook@chromium.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Rik van Riel <riel@surriel.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nFixes: 9222f606506c (\"x86/alternatives: Lockdep-enforce text_mutex in text_poke*()\")\nLink: https://lkml.kernel.org/r/20190426001143.4983-2-namit@vmware.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "x86/alternatives: Add text_poke_kgdb() to not assert the lock when debugging\n\ntext_mutex is currently expected to be held before text_poke() is\ncalled, but kgdb does not take the mutex, and instead *supposedly*\nensures the lock is not taken and will not be acquired by any other core\nwhile text_poke() is running.\n\nThe reason for the \"supposedly\" comment is that it is not entirely clear\nthat this would be the case if gdb_do_roundup is zero.\n\nCreate two wrapper functions, text_poke() and text_poke_kgdb(), which do\nor do not run the lockdep assertion respectively.\n\nWhile we are at it, change the return code of text_poke() to something\nmeaningful. One day, callers might actually respect it and the existing\nBUG_ON() when patching fails could be removed. For kgdb, the return\nvalue can actually be used.\n\nSuggested-by: Peter Zijlstra <peterz@infradead.org>\nSigned-off-by: Nadav Amit <namit@vmware.com>\nSigned-off-by: Rick Edgecombe <rick.p.edgecombe@intel.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nReviewed-by: Masami Hiramatsu <mhiramat@kernel.org>\nAcked-by: Jiri Kosina <jkosina@suse.cz>\nCc: <akpm@linux-foundation.org>\nCc: <ard.biesheuvel@linaro.org>\nCc: <deneen.t.dock@intel.com>\nCc: <kernel-hardening@lists.openwall.com>\nCc: <kristen@linux.intel.com>\nCc: <linux_dti@icloud.com>\nCc: <will.deacon@arm.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Kees Cook <keescook@chromium.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Rik van Riel <riel@surriel.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nFixes: 9222f606506c (\"x86/alternatives: Lockdep-enforce text_mutex in text_poke*()\")\nLink: https://lkml.kernel.org/r/20190426001143.4983-2-namit@vmware.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "Nadav Amit",
  "author_email": "namit@vmware.com",
  "author_date": "Thu Apr 25 17:11:21 2019 -0700",
  "author_date_iso": "2019-04-25T17:11:21-07:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Tue Apr 30 12:37:47 2019 +0200",
  "committer_date_iso": "2019-04-30T12:37:47+02:00",
  "files_changed": [
    "arch/x86/include/asm/text-patching.h",
    "arch/x86/kernel/alternative.c",
    "arch/x86/kernel/kgdb.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/x86/include/asm/text-patching.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/alternative.c",
      "insertions": 38,
      "deletions": 14
    },
    {
      "file": "arch/x86/kernel/kgdb.c",
      "insertions": 6,
      "deletions": 5
    }
  ],
  "total_insertions": 45,
  "total_deletions": 19,
  "total_changes": 64,
  "parents": [
    "d5963d87bf84060ff3fb572bf6d3606f7fd087d1"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.2",
    "v5.2-rc1",
    "v5.2-rc2",
    "v5.2-rc3",
    "v5.2-rc4",
    "v5.2-rc5",
    "v5.2-rc6",
    "v5.2-rc7",
    "v5.3",
    "v5.3-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/text-patching.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/alternative.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/kgdb.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}