{
  "hash": "39e72bf96f5847ba87cc5bd7a3ce0fed813dc9ad",
  "hash_short": "39e72bf9",
  "subject": "powerpc/book3s64: Fix link stack flush on context switch",
  "body": "In commit ee13cb249fab (\"powerpc/64s: Add support for software count\ncache flush\"), I added support for software to flush the count\ncache (indirect branch cache) on context switch if firmware told us\nthat was the required mitigation for Spectre v2.\n\nAs part of that code we also added a software flush of the link\nstack (return address stack), which protects against Spectre-RSB\nbetween user processes.\n\nThat is all correct for CPUs that activate that mitigation, which is\ncurrently Power9 Nimbus DD2.3.\n\nWhat I got wrong is that on older CPUs, where firmware has disabled\nthe count cache, we also need to flush the link stack on context\nswitch.\n\nTo fix it we create a new feature bit which is not set by firmware,\nwhich tells us we need to flush the link stack. We set that when\nfirmware tells us that either of the existing Spectre v2 mitigations\nare enabled.\n\nThen we adjust the patching code so that if we see that feature bit we\nenable the link stack flush. If we're also told to flush the count\ncache in software then we fall through and do that also.\n\nOn the older CPUs we don't need to do do the software count cache\nflush, firmware has disabled it, so in that case we patch in an early\nreturn after the link stack flush.\n\nThe naming of some of the functions is awkward after this patch,\nbecause they're called \"count cache\" but they also do link stack. But\nwe'll fix that up in a later commit to ease backporting.\n\nThis is the fix for CVE-2019-18660.\n\nReported-by: Anthony Steinhauser <asteinhauser@google.com>\nFixes: ee13cb249fab (\"powerpc/64s: Add support for software count cache flush\")\nCc: stable@vger.kernel.org # v4.4+\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "full_message": "powerpc/book3s64: Fix link stack flush on context switch\n\nIn commit ee13cb249fab (\"powerpc/64s: Add support for software count\ncache flush\"), I added support for software to flush the count\ncache (indirect branch cache) on context switch if firmware told us\nthat was the required mitigation for Spectre v2.\n\nAs part of that code we also added a software flush of the link\nstack (return address stack), which protects against Spectre-RSB\nbetween user processes.\n\nThat is all correct for CPUs that activate that mitigation, which is\ncurrently Power9 Nimbus DD2.3.\n\nWhat I got wrong is that on older CPUs, where firmware has disabled\nthe count cache, we also need to flush the link stack on context\nswitch.\n\nTo fix it we create a new feature bit which is not set by firmware,\nwhich tells us we need to flush the link stack. We set that when\nfirmware tells us that either of the existing Spectre v2 mitigations\nare enabled.\n\nThen we adjust the patching code so that if we see that feature bit we\nenable the link stack flush. If we're also told to flush the count\ncache in software then we fall through and do that also.\n\nOn the older CPUs we don't need to do do the software count cache\nflush, firmware has disabled it, so in that case we patch in an early\nreturn after the link stack flush.\n\nThe naming of some of the functions is awkward after this patch,\nbecause they're called \"count cache\" but they also do link stack. But\nwe'll fix that up in a later commit to ease backporting.\n\nThis is the fix for CVE-2019-18660.\n\nReported-by: Anthony Steinhauser <asteinhauser@google.com>\nFixes: ee13cb249fab (\"powerpc/64s: Add support for software count cache flush\")\nCc: stable@vger.kernel.org # v4.4+\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "author_name": "Michael Ellerman",
  "author_email": "mpe@ellerman.id.au",
  "author_date": "Wed Nov 13 21:05:41 2019 +1100",
  "author_date_iso": "2019-11-13T21:05:41+11:00",
  "committer_name": "Michael Ellerman",
  "committer_email": "mpe@ellerman.id.au",
  "committer_date": "Thu Nov 14 15:37:52 2019 +1100",
  "committer_date_iso": "2019-11-14T15:37:52+11:00",
  "files_changed": [
    "arch/powerpc/include/asm/asm-prototypes.h",
    "arch/powerpc/include/asm/security_features.h",
    "arch/powerpc/kernel/entry_64.S",
    "arch/powerpc/kernel/security.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/powerpc/include/asm/asm-prototypes.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/include/asm/security_features.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/kernel/entry_64.S",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/kernel/security.c",
      "insertions": 44,
      "deletions": 4
    }
  ],
  "total_insertions": 54,
  "total_deletions": 4,
  "total_changes": 58,
  "parents": [
    "31f4f5b495a62c9a8b15b1c3581acd5efeb9af8c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.5",
    "v5.5-rc1",
    "v5.5-rc2",
    "v5.5-rc3",
    "v5.5-rc4",
    "v5.5-rc5",
    "v5.5-rc6",
    "v5.5-rc7",
    "v5.6",
    "v5.6-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2019-18660"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/powerpc/include/asm/asm-prototypes.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/include/asm/security_features.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/kernel/entry_64.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/kernel/security.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}