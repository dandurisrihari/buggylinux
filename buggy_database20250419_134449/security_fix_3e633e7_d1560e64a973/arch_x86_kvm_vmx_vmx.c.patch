commit 3e633e7e7d0725b483aee843cbdce22bc9cd1707
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Tue Sep 10 16:03:48 2024 -0400

    KVM: x86: Add interrupt injection information to the kvm_entry tracepoint
    
    Add VMX/SVM specific interrupt injection info the kvm_entry tracepoint.
    As is done with kvm_exit, gather the information via a kvm_x86_ops hook
    to avoid the moderately costly VMREADs on VMX when the tracepoint isn't
    enabled.
    
    Opportunistically rename the parameters in the get_exit_info()
    declaration to match the names used by both SVM and VMX.
    
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20240910200350.264245-2-mlevitsk@redhat.com
    [sean: drop is_guest_mode() change, use intr_info/error_code for names]
    Signed-off-by: Sean Christopherson <seanjc@google.com>

diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index e93c48ff61c5..3fd6df782492 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -6194,6 +6194,15 @@ void vmx_get_exit_info(struct kvm_vcpu *vcpu, u32 *reason,
 	}
 }
 
+void vmx_get_entry_info(struct kvm_vcpu *vcpu, u32 *intr_info, u32 *error_code)
+{
+	*intr_info = vmcs_read32(VM_ENTRY_INTR_INFO_FIELD);
+	if (is_exception_with_error_code(*intr_info))
+		*error_code = vmcs_read32(VM_ENTRY_EXCEPTION_ERROR_CODE);
+	else
+		*error_code = 0;
+}
+
 static void vmx_destroy_pml_buffer(struct vcpu_vmx *vmx)
 {
 	if (vmx->pml_pg) {