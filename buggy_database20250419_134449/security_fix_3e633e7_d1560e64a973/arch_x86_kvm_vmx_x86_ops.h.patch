commit 3e633e7e7d0725b483aee843cbdce22bc9cd1707
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Tue Sep 10 16:03:48 2024 -0400

    KVM: x86: Add interrupt injection information to the kvm_entry tracepoint
    
    Add VMX/SVM specific interrupt injection info the kvm_entry tracepoint.
    As is done with kvm_exit, gather the information via a kvm_x86_ops hook
    to avoid the moderately costly VMREADs on VMX when the tracepoint isn't
    enabled.
    
    Opportunistically rename the parameters in the get_exit_info()
    declaration to match the names used by both SVM and VMX.
    
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20240910200350.264245-2-mlevitsk@redhat.com
    [sean: drop is_guest_mode() change, use intr_info/error_code for names]
    Signed-off-by: Sean Christopherson <seanjc@google.com>

diff --git a/arch/x86/kvm/vmx/x86_ops.h b/arch/x86/kvm/vmx/x86_ops.h
index a55981c5216e..f7f65e81920b 100644
--- a/arch/x86/kvm/vmx/x86_ops.h
+++ b/arch/x86/kvm/vmx/x86_ops.h
@@ -104,8 +104,11 @@ void vmx_load_eoi_exitmap(struct kvm_vcpu *vcpu, u64 *eoi_exit_bitmap);
 int vmx_set_tss_addr(struct kvm *kvm, unsigned int addr);
 int vmx_set_identity_map_addr(struct kvm *kvm, u64 ident_addr);
 u8 vmx_get_mt_mask(struct kvm_vcpu *vcpu, gfn_t gfn, bool is_mmio);
+
 void vmx_get_exit_info(struct kvm_vcpu *vcpu, u32 *reason,
 		       u64 *info1, u64 *info2, u32 *intr_info, u32 *error_code);
+void vmx_get_entry_info(struct kvm_vcpu *vcpu, u32 *intr_info, u32 *error_code);
+
 u64 vmx_get_l2_tsc_offset(struct kvm_vcpu *vcpu);
 u64 vmx_get_l2_tsc_multiplier(struct kvm_vcpu *vcpu);
 void vmx_write_tsc_offset(struct kvm_vcpu *vcpu);