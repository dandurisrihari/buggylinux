commit 3e633e7e7d0725b483aee843cbdce22bc9cd1707
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Tue Sep 10 16:03:48 2024 -0400

    KVM: x86: Add interrupt injection information to the kvm_entry tracepoint
    
    Add VMX/SVM specific interrupt injection info the kvm_entry tracepoint.
    As is done with kvm_exit, gather the information via a kvm_x86_ops hook
    to avoid the moderately costly VMREADs on VMX when the tracepoint isn't
    enabled.
    
    Opportunistically rename the parameters in the get_exit_info()
    declaration to match the names used by both SVM and VMX.
    
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20240910200350.264245-2-mlevitsk@redhat.com
    [sean: drop is_guest_mode() change, use intr_info/error_code for names]
    Signed-off-by: Sean Christopherson <seanjc@google.com>

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 1a09ac99132c..c07d8318e9d8 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1770,12 +1770,15 @@ struct kvm_x86_ops {
 	void (*write_tsc_multiplier)(struct kvm_vcpu *vcpu);
 
 	/*
-	 * Retrieve somewhat arbitrary exit information.  Intended to
+	 * Retrieve somewhat arbitrary exit/entry information.  Intended to
 	 * be used only from within tracepoints or error paths.
 	 */
 	void (*get_exit_info)(struct kvm_vcpu *vcpu, u32 *reason,
 			      u64 *info1, u64 *info2,
-			      u32 *exit_int_info, u32 *exit_int_info_err_code);
+			      u32 *intr_info, u32 *error_code);
+
+	void (*get_entry_info)(struct kvm_vcpu *vcpu,
+			       u32 *intr_info, u32 *error_code);
 
 	int (*check_intercept)(struct kvm_vcpu *vcpu,
 			       struct x86_instruction_info *info,