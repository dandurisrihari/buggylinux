commit b39c9a661b9bc77e064cade26cf913a1d4255d55
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Sep 4 14:47:06 2015 -0500

    SCSI: Increase REPORT_LUNS timeout
    
    This patch fixes an issue seen with an IBM 2145 (SVC) where, following an error
    injection test which results in paths going offline, when they came
    back online, the path would timeout the REPORT_LUNS issued during the
    scan. This timeout situation continued until retries were expired, resulting in
    falling back to a sequential LUN scan. Then, since the target responds
    with PQ=1, PDT=0 for all possible LUNs, due to the way the sequential
    LUN scan code works, we end up adding 512 LUNs for each target, when there
    is really only a small handful of LUNs that are actually present.
    
    This patch increases the timeout used on the REPORT_LUNS to 30 seconds.
    This patch solves the issue of 512 non existent LUNs showing up after
    this event.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

diff --git a/drivers/scsi/scsi_scan.c b/drivers/scsi/scsi_scan.c
index f9f3f8203d42..3b3dfef4d839 100644
--- a/drivers/scsi/scsi_scan.c
+++ b/drivers/scsi/scsi_scan.c
@@ -55,6 +55,7 @@
  * Default timeout
  */
 #define SCSI_TIMEOUT (2*HZ)
+#define SCSI_REPORT_LUNS_TIMEOUT (30*HZ)
 
 /*
  * Prefix values for the SCSI id's (stored in sysfs name field)
@@ -1383,7 +1384,7 @@ static int scsi_report_lun_scan(struct scsi_target *starget, int bflags,
 
 		result = scsi_execute_req(sdev, scsi_cmd, DMA_FROM_DEVICE,
 					  lun_data, length, &sshdr,
-					  SCSI_TIMEOUT + 4 * HZ, 3, NULL);
+					  SCSI_REPORT_LUNS_TIMEOUT, 3, NULL);
 
 		SCSI_LOG_SCAN_BUS(3, sdev_printk (KERN_INFO, sdev,
 				"scsi scan: REPORT LUNS"