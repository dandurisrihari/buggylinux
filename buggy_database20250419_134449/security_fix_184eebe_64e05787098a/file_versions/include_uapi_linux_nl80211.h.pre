commit e3718a611470d311a92c60d4eb535270b49a7108
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Wed Jun 17 09:30:33 2020 +0200

    cfg80211/mac80211: add mesh_param "mesh_nolearn" to skip path discovery
    
    Currently, before being able to forward a packet between two 802.11s
    nodes, both a PLINK handshake is performed upon receiving a beacon and
    then later a PREQ/PREP exchange for path discovery is performed on
    demand upon receiving a data frame to forward.
    
    When running a mesh protocol on top of an 802.11s interface, like
    batman-adv, we do not need the multi-hop mesh routing capabilities of
    802.11s and usually set mesh_fwding=0. However, even with mesh_fwding=0
    the PREQ/PREP path discovery is still performed on demand. Even though
    in this scenario the next hop PREQ/PREP will determine is always the
    direct 11s neighbor node.
    
    The new mesh_nolearn parameter allows to skip the PREQ/PREP exchange in
    this scenario, leading to a reduced delay, reduced packet buffering and
    simplifies HWMP in general.
    
    mesh_nolearn is still rather conservative in that if the packet destination
    is not a direct 11s neighbor, it will fall back to PREQ/PREP path
    discovery.
    
    For normal, multi-hop 802.11s mesh routing it is usually not advisable
    to enable mesh_nolearn as a transmission to a direct but distant neighbor
    might be worse than reaching that same node via a more robust /
    higher throughput etc. multi-hop path.
    
    Cc: Sven Eckelmann <sven@narfation.org>
    Cc: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Linus Lüssing <ll@simonwunderlich.de>
    Link: https://lore.kernel.org/r/20200617073034.26149-1-linus.luessing@c0d3.blue
    [fix nl80211 policy to range 0/1 only]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/include/uapi/linux/nl80211.h b/include/uapi/linux/nl80211.h
index f47a7a8d0216..a83d8faf88ac 100644
--- a/include/uapi/linux/nl80211.h
+++ b/include/uapi/linux/nl80211.h
@@ -4236,6 +4236,12 @@ enum nl80211_mesh_power_mode {
  *	field.  If left unset then the mesh formation field will only
  *	advertise such if there is an active root mesh path.
  *
+ * @NL80211_MESHCONF_NOLEARN: Try to avoid multi-hop path discovery (e.g.
+ *      PREQ/PREP for HWMP) if the destination is a direct neighbor. Note that
+ *      this might not be the optimal decision as a multi-hop route might be
+ *      better. So if using this setting you will likely also want to disable
+ *      dot11MeshForwarding and use another mesh routing protocol on top.
+ *
  * @__NL80211_MESHCONF_ATTR_AFTER_LAST: internal use
  */
 enum nl80211_meshconf_params {
@@ -4269,6 +4275,7 @@ enum nl80211_meshconf_params {
 	NL80211_MESHCONF_AWAKE_WINDOW,
 	NL80211_MESHCONF_PLINK_TIMEOUT,
 	NL80211_MESHCONF_CONNECTED_TO_GATE,
+	NL80211_MESHCONF_NOLEARN,
 
 	/* keep last */
 	__NL80211_MESHCONF_ATTR_AFTER_LAST,