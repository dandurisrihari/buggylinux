{
  "hash": "d1ce02e1689dff9d413138f60a79b4e3affb4708",
  "hash_short": "d1ce02e1",
  "subject": "NFS: SETCLIENTID truncates client ID and netid",
  "body": "The sc_name field is currently 56 bytes long.  This is not large enough\nto hold a pair of IPv6 addresses, the authentication type, the protocol\nname, and a uniquifier number.  The maximum possible size of the name\nstring using IPv6 addresses is just under 110 bytes, so I increased the\nsize of the sc_name field to accomodate this maximum.\n\nIn addition, the strings in the nfs4_setclientid structure are\nconstructed with scnprintf(), which wants to terminate its output with\n'\\0'.  The sc_netid field was large enough only for a three byte netid\nstring and a '\\0' so inet6 netids were being truncated.  Perhaps we\ndon't need the overhead of scnprintf() to do a simple string copy, but\nI fixed this by increasing the size of the buffer by one byte.\n\nSince all three of the string buffers in nfs4_setclientid are\nconstructed with scnprintf(), I increased the size of all three by one\nbyte to document the requirement, although I don't think either the\nuniversal address field or the name field will be so small that these\nstrings get truncated in this way.\n\nThe size of the Linux client's client ID on the wire will be larger\nthan before.  RFC 3530 suggests the size limit for client IDs is 1024,\nand we are still well below that.\n\nSigned-off-by: Chuck Lever <chuck.lever@oracle.com>\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>",
  "full_message": "NFS: SETCLIENTID truncates client ID and netid\n\nThe sc_name field is currently 56 bytes long.  This is not large enough\nto hold a pair of IPv6 addresses, the authentication type, the protocol\nname, and a uniquifier number.  The maximum possible size of the name\nstring using IPv6 addresses is just under 110 bytes, so I increased the\nsize of the sc_name field to accomodate this maximum.\n\nIn addition, the strings in the nfs4_setclientid structure are\nconstructed with scnprintf(), which wants to terminate its output with\n'\\0'.  The sc_netid field was large enough only for a three byte netid\nstring and a '\\0' so inet6 netids were being truncated.  Perhaps we\ndon't need the overhead of scnprintf() to do a simple string copy, but\nI fixed this by increasing the size of the buffer by one byte.\n\nSince all three of the string buffers in nfs4_setclientid are\nconstructed with scnprintf(), I increased the size of all three by one\nbyte to document the requirement, although I don't think either the\nuniversal address field or the name field will be so small that these\nstrings get truncated in this way.\n\nThe size of the Linux client's client ID on the wire will be larger\nthan before.  RFC 3530 suggests the size limit for client IDs is 1024,\nand we are still well below that.\n\nSigned-off-by: Chuck Lever <chuck.lever@oracle.com>\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>",
  "author_name": "Chuck Lever",
  "author_email": "chuck.lever@oracle.com",
  "author_date": "Thu Sep 25 11:57:12 2008 -0400",
  "author_date_iso": "2008-09-25T11:57:12-04:00",
  "committer_name": "Trond Myklebust",
  "committer_email": "Trond.Myklebust@netapp.com",
  "committer_date": "Tue Oct 7 18:18:48 2008 -0400",
  "committer_date_iso": "2008-10-07T18:18:48-04:00",
  "files_changed": [
    "include/linux/nfs_xdr.h"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "include/linux/nfs_xdr.h",
      "insertions": 4,
      "deletions": 4
    }
  ],
  "total_insertions": 4,
  "total_deletions": 4,
  "total_changes": 8,
  "parents": [
    "9fa8d66f1e55bf197568c8c689043c2aad1ffc97"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.28",
    "v2.6.28-rc1",
    "v2.6.28-rc2",
    "v2.6.28-rc3",
    "v2.6.28-rc4",
    "v2.6.28-rc5",
    "v2.6.28-rc6",
    "v2.6.28-rc7",
    "v2.6.28-rc8",
    "v2.6.28-rc9"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/nfs_xdr.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}