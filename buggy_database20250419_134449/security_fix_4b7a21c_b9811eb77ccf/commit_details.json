{
  "hash": "4b7a21c57b14fbcd0e1729150189e5933f5088e9",
  "hash_short": "4b7a21c5",
  "subject": "blk-mq: fix possible memleak when register 'hctx' failed",
  "body": "There's issue as follows when do fault injection test:\nunreferenced object 0xffff888132a9f400 (size 512):\n  comm \"insmod\", pid 308021, jiffies 4324277909 (age 509.733s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 08 f4 a9 32 81 88 ff ff  ...........2....\n    08 f4 a9 32 81 88 ff ff 00 00 00 00 00 00 00 00  ...2............\n  backtrace:\n    [<00000000e8952bb4>] kmalloc_node_trace+0x22/0xa0\n    [<00000000f9980e0f>] blk_mq_alloc_and_init_hctx+0x3f1/0x7e0\n    [<000000002e719efa>] blk_mq_realloc_hw_ctxs+0x1e6/0x230\n    [<000000004f1fda40>] blk_mq_init_allocated_queue+0x27e/0x910\n    [<00000000287123ec>] __blk_mq_alloc_disk+0x67/0xf0\n    [<00000000a2a34657>] 0xffffffffa2ad310f\n    [<00000000b173f718>] 0xffffffffa2af824a\n    [<0000000095a1dabb>] do_one_initcall+0x87/0x2a0\n    [<00000000f32fdf93>] do_init_module+0xdf/0x320\n    [<00000000cbe8541e>] load_module+0x3006/0x3390\n    [<0000000069ed1bdb>] __do_sys_finit_module+0x113/0x1b0\n    [<00000000a1a29ae8>] do_syscall_64+0x35/0x80\n    [<000000009cd878b0>] entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nFault injection context as follows:\n kobject_add\n blk_mq_register_hctx\n blk_mq_sysfs_register\n blk_register_queue\n device_add_disk\n null_add_dev.part.0 [null_blk]\n\nAs 'blk_mq_register_hctx' may already add some objects when failed halfway,\nbut there isn't do fallback, caller don't know which objects add failed.\nTo solve above issue just do fallback when add objects failed halfway in\n'blk_mq_register_hctx'.\n\nSigned-off-by: Ye Bin <yebin10@huawei.com>\nReviewed-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20221117022940.873959-1-yebin@huaweicloud.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "full_message": "blk-mq: fix possible memleak when register 'hctx' failed\n\nThere's issue as follows when do fault injection test:\nunreferenced object 0xffff888132a9f400 (size 512):\n  comm \"insmod\", pid 308021, jiffies 4324277909 (age 509.733s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 08 f4 a9 32 81 88 ff ff  ...........2....\n    08 f4 a9 32 81 88 ff ff 00 00 00 00 00 00 00 00  ...2............\n  backtrace:\n    [<00000000e8952bb4>] kmalloc_node_trace+0x22/0xa0\n    [<00000000f9980e0f>] blk_mq_alloc_and_init_hctx+0x3f1/0x7e0\n    [<000000002e719efa>] blk_mq_realloc_hw_ctxs+0x1e6/0x230\n    [<000000004f1fda40>] blk_mq_init_allocated_queue+0x27e/0x910\n    [<00000000287123ec>] __blk_mq_alloc_disk+0x67/0xf0\n    [<00000000a2a34657>] 0xffffffffa2ad310f\n    [<00000000b173f718>] 0xffffffffa2af824a\n    [<0000000095a1dabb>] do_one_initcall+0x87/0x2a0\n    [<00000000f32fdf93>] do_init_module+0xdf/0x320\n    [<00000000cbe8541e>] load_module+0x3006/0x3390\n    [<0000000069ed1bdb>] __do_sys_finit_module+0x113/0x1b0\n    [<00000000a1a29ae8>] do_syscall_64+0x35/0x80\n    [<000000009cd878b0>] entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nFault injection context as follows:\n kobject_add\n blk_mq_register_hctx\n blk_mq_sysfs_register\n blk_register_queue\n device_add_disk\n null_add_dev.part.0 [null_blk]\n\nAs 'blk_mq_register_hctx' may already add some objects when failed halfway,\nbut there isn't do fallback, caller don't know which objects add failed.\nTo solve above issue just do fallback when add objects failed halfway in\n'blk_mq_register_hctx'.\n\nSigned-off-by: Ye Bin <yebin10@huawei.com>\nReviewed-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20221117022940.873959-1-yebin@huaweicloud.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "author_name": "Ye Bin",
  "author_email": "yebin10@huawei.com",
  "author_date": "Thu Nov 17 10:29:40 2022 +0800",
  "author_date_iso": "2022-11-17T10:29:40+08:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Fri Nov 25 06:34:03 2022 -0700",
  "committer_date_iso": "2022-11-25T06:34:03-07:00",
  "files_changed": [
    "block/blk-mq-sysfs.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "block/blk-mq-sysfs.c",
      "insertions": 9,
      "deletions": 2
    }
  ],
  "total_insertions": 9,
  "total_deletions": 2,
  "total_changes": 11,
  "parents": [
    "90b0296ece4bd8f70419f0addc1171be6feee195"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "block/blk-mq-sysfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}