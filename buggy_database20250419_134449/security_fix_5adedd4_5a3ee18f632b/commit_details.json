{
  "hash": "5adedd42245af0860ebda8fe0949f24f5204c1b1",
  "hash_short": "5adedd42",
  "subject": "KEYS: encrypted: fix key instantiation with user-provided data",
  "body": "Commit cd3bc044af48 (\"KEYS: encrypted: Instantiate key with\nuser-provided decrypted data\") added key instantiation with user\nprovided decrypted data.  The user data is hex-ascii-encoded but was\njust memcpy'ed to the binary buffer. Fix this to use hex2bin instead.\n\nOld keys created from user provided decrypted data saved with \"keyctl\npipe\" are still valid, however if the key is recreated from decrypted\ndata the old key must be converted to the correct format. This can be\ndone with a small shell script, e.g.:\n\nBROKENKEY=abcdefABCDEF1234567890aaaaaaaaaa\nNEWKEY=$(echo -ne $BROKENKEY | xxd -p -c32)\nkeyctl add user masterkey \"$(cat masterkey.bin)\" @u\nkeyctl add encrypted testkey \"new user:masterkey 32 $NEWKEY\" @u\n\nHowever, NEWKEY is still broken: If for BROKENKEY 32 bytes were\nspecified, a brute force attacker knowing the key properties would only\nneed to try at most 2^(16*8) keys, as if the key was only 16 bytes long.\n\nThe security issue is a result of the combination of limiting the input\nrange to hex-ascii and using memcpy() instead of hex2bin(). It could\nhave been fixed either by allowing binary input or using hex2bin() (and\ndoubling the ascii input key length). This patch implements the latter.\n\nThe corresponding test for the Linux Test Project ltp has also been\nfixed (see link below).\n\nFixes: cd3bc044af48 (\"KEYS: encrypted: Instantiate key with user-provided decrypted data\")\nCc: stable@kernel.org\nLink: https://lore.kernel.org/ltp/20221006081709.92303897@mail.steuer-voss.de/\nReviewed-by: Mimi Zohar <zohar@linux.ibm.com>\nSigned-off-by: Nikolaus Voss <nikolaus.voss@haag-streit.com>\nSigned-off-by: Mimi Zohar <zohar@linux.ibm.com>",
  "full_message": "KEYS: encrypted: fix key instantiation with user-provided data\n\nCommit cd3bc044af48 (\"KEYS: encrypted: Instantiate key with\nuser-provided decrypted data\") added key instantiation with user\nprovided decrypted data.  The user data is hex-ascii-encoded but was\njust memcpy'ed to the binary buffer. Fix this to use hex2bin instead.\n\nOld keys created from user provided decrypted data saved with \"keyctl\npipe\" are still valid, however if the key is recreated from decrypted\ndata the old key must be converted to the correct format. This can be\ndone with a small shell script, e.g.:\n\nBROKENKEY=abcdefABCDEF1234567890aaaaaaaaaa\nNEWKEY=$(echo -ne $BROKENKEY | xxd -p -c32)\nkeyctl add user masterkey \"$(cat masterkey.bin)\" @u\nkeyctl add encrypted testkey \"new user:masterkey 32 $NEWKEY\" @u\n\nHowever, NEWKEY is still broken: If for BROKENKEY 32 bytes were\nspecified, a brute force attacker knowing the key properties would only\nneed to try at most 2^(16*8) keys, as if the key was only 16 bytes long.\n\nThe security issue is a result of the combination of limiting the input\nrange to hex-ascii and using memcpy() instead of hex2bin(). It could\nhave been fixed either by allowing binary input or using hex2bin() (and\ndoubling the ascii input key length). This patch implements the latter.\n\nThe corresponding test for the Linux Test Project ltp has also been\nfixed (see link below).\n\nFixes: cd3bc044af48 (\"KEYS: encrypted: Instantiate key with user-provided decrypted data\")\nCc: stable@kernel.org\nLink: https://lore.kernel.org/ltp/20221006081709.92303897@mail.steuer-voss.de/\nReviewed-by: Mimi Zohar <zohar@linux.ibm.com>\nSigned-off-by: Nikolaus Voss <nikolaus.voss@haag-streit.com>\nSigned-off-by: Mimi Zohar <zohar@linux.ibm.com>",
  "author_name": "Nikolaus Voss",
  "author_email": "nikolaus.voss@haag-streit.com",
  "author_date": "Wed Oct 19 18:38:20 2022 +0200",
  "author_date_iso": "2022-10-19T18:38:20+02:00",
  "committer_name": "Mimi Zohar",
  "committer_email": "zohar@linux.ibm.com",
  "committer_date": "Wed Oct 19 13:01:23 2022 -0400",
  "committer_date_iso": "2022-10-19T13:01:23-04:00",
  "files_changed": [
    "Documentation/security/keys/trusted-encrypted.rst",
    "security/keys/encrypted-keys/encrypted.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "Documentation/security/keys/trusted-encrypted.rst",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "security/keys/encrypted-keys/encrypted.c",
      "insertions": 3,
      "deletions": 3
    }
  ],
  "total_insertions": 5,
  "total_deletions": 4,
  "total_changes": 9,
  "parents": [
    "9abf2313adc1ca1b6180c508c25f22f9395cc780"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/security/keys/trusted-encrypted.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/keys/encrypted-keys/encrypted.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}