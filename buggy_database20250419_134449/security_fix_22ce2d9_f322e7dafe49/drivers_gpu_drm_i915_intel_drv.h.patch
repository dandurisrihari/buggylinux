commit 22ce2d948abffb2782d62df6074bf42151a8d372
Author: Ramalingam C <ramalingam.c@intel.com>
Date:   Sat Feb 16 23:06:57 2019 +0530

    drm/i915: Implement HDCP2.2 link integrity check
    
    Implements the link integrity check once in 500mSec.
    
    Once encryption is enabled, an ongoing Link Integrity Check is
    performed by the HDCP Receiver to check that cipher synchronization
    is maintained between the HDCP Transmitter and the HDCP Receiver.
    
    On the detection of synchronization lost, the HDCP Receiver must assert
    the corresponding bits of the RxStatus register. The Transmitter polls
    the RxStatus register and it may initiate re-authentication.
    
    v2:
      Rebased.
    v3:
      enum check_link_response is used check the link status [Uma]
    v4:
      Rebased as part of patch reordering.
    v5:
      Required members of intel_hdcp is defined [Sean Paul]
    v6:
      hdcp2_check_link is cancelled at required places.
    v7:
      Rebased for the component i/f changes.
      Errors due to the sinks are reported as DEBUG logs.
    v8:
      hdcp_check_work is used for both hdcp1 and hdcp2 check_link [Daniel]
      hdcp2.2 encryption status check is put under WARN_ON [Daniel]
      drm_hdcp.h changes are moved into separate patch [Daniel]
    v9:
      enum check_link_status is defined at intel_drv.h [Daniel]
    
    Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
    Reviewed-by: Uma Shankar <uma.shankar@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/1550338640-17470-11-git-send-email-ramalingam.c@intel.com

diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 5aa50fe34471..60f1a85ec384 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -324,6 +324,13 @@ struct intel_panel {
 
 struct intel_digital_port;
 
+enum check_link_response {
+	HDCP_LINK_PROTECTED	= 0,
+	HDCP_TOPOLOGY_CHANGE,
+	HDCP_LINK_INTEGRITY_FAILURE,
+	HDCP_REAUTH_REQUEST
+};
+
 /*
  * This structure serves as a translation layer between the generic HDCP code
  * and the bus-specific code. What that means is that HDCP over HDMI differs
@@ -419,6 +426,9 @@ struct intel_hdcp_shim {
 	 */
 	int (*config_stream_type)(struct intel_digital_port *intel_dig_port,
 				  bool is_repeater, u8 type);
+
+	/* HDCP2.2 Link Integrity Check */
+	int (*check_2_2_link)(struct intel_digital_port *intel_dig_port);
 };
 
 struct intel_hdcp {