commit b16c42c8fde808b4f047d94f1f2aeda93487670d
Author: Marco Elver <elver@google.com>
Date:   Fri Aug 11 17:18:39 2023 +0200

    list_debug: Introduce inline wrappers for debug checks
    
    Turn the list debug checking functions __list_*_valid() into inline
    functions that wrap the out-of-line functions. Care is taken to ensure
    the inline wrappers are always inlined, so that additional compiler
    instrumentation (such as sanitizers) does not result in redundant
    outlining.
    
    This change is preparation for performing checks in the inline wrappers.
    
    No functional change intended.
    
    Signed-off-by: Marco Elver <elver@google.com>
    Link: https://lore.kernel.org/r/20230811151847.1594958-2-elver@google.com
    Signed-off-by: Kees Cook <keescook@chromium.org>

diff --git a/lib/list_debug.c b/lib/list_debug.c
index d98d43f80958..2def33b1491f 100644
--- a/lib/list_debug.c
+++ b/lib/list_debug.c
@@ -17,8 +17,8 @@
  * attempt).
  */
 
-bool __list_add_valid(struct list_head *new, struct list_head *prev,
-		      struct list_head *next)
+bool __list_add_valid_or_report(struct list_head *new, struct list_head *prev,
+				struct list_head *next)
 {
 	if (CHECK_DATA_CORRUPTION(prev == NULL,
 			"list_add corruption. prev is NULL.\n") ||
@@ -37,9 +37,9 @@ bool __list_add_valid(struct list_head *new, struct list_head *prev,
 
 	return true;
 }
-EXPORT_SYMBOL(__list_add_valid);
+EXPORT_SYMBOL(__list_add_valid_or_report);
 
-bool __list_del_entry_valid(struct list_head *entry)
+bool __list_del_entry_valid_or_report(struct list_head *entry)
 {
 	struct list_head *prev, *next;
 
@@ -65,6 +65,5 @@ bool __list_del_entry_valid(struct list_head *entry)
 		return false;
 
 	return true;
-
 }
-EXPORT_SYMBOL(__list_del_entry_valid);
+EXPORT_SYMBOL(__list_del_entry_valid_or_report);