{
  "hash": "576b75f93b3d3c408235808f689453f1ed891486",
  "hash_short": "576b75f9",
  "subject": "nvme-fabrics: replace deprecated strncpy with strscpy",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect both data->subsysnqn and data->hostnqn to be NUL-terminated\nbased on their usage with format specifier (\"%s\"):\nfabrics.c:\n322: dev_err(ctrl->device,\n323:   \"%s, subsysnqn \\\"%s\\\"\\n\",\n324:   inv_data, data->subsysnqn);\n...\n349: dev_err(ctrl->device,\n350: \t \"Connect for subsystem %s is not allowed, hostnqn: %s\\n\",\n351: \t data->subsysnqn, data->hostnqn);\n\nMoreover, there's no need to NUL-pad since `data` is zero-allocated\nalready in fabrics.c:\n383: data = kzalloc(sizeof(*data), GFP_KERNEL);\n... therefore any further NUL-padding is rendered useless.\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nI opted not to switch NVMF_NQN_SIZE to sizeof(data->xyz) because the\nsize is defined as:\n|       /* NQN names in commands fields specified one size */\n|       #define NVMF_NQN_FIELD_LEN\t256\n\n... while NVMF_NQN_SIZE is defined as:\n|       /* However the max length of a qualified name is another size */\n|       #define NVMF_NQN_SIZE\t\t223\n\nSince 223 seems pretty magic, I'm not going to touch it.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20231018-strncpy-drivers-nvme-host-fabrics-c-v1-1-b6677df40a35@google.com\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "nvme-fabrics: replace deprecated strncpy with strscpy\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect both data->subsysnqn and data->hostnqn to be NUL-terminated\nbased on their usage with format specifier (\"%s\"):\nfabrics.c:\n322: dev_err(ctrl->device,\n323:   \"%s, subsysnqn \\\"%s\\\"\\n\",\n324:   inv_data, data->subsysnqn);\n...\n349: dev_err(ctrl->device,\n350: \t \"Connect for subsystem %s is not allowed, hostnqn: %s\\n\",\n351: \t data->subsysnqn, data->hostnqn);\n\nMoreover, there's no need to NUL-pad since `data` is zero-allocated\nalready in fabrics.c:\n383: data = kzalloc(sizeof(*data), GFP_KERNEL);\n... therefore any further NUL-padding is rendered useless.\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nI opted not to switch NVMF_NQN_SIZE to sizeof(data->xyz) because the\nsize is defined as:\n|       /* NQN names in commands fields specified one size */\n|       #define NVMF_NQN_FIELD_LEN\t256\n\n... while NVMF_NQN_SIZE is defined as:\n|       /* However the max length of a qualified name is another size */\n|       #define NVMF_NQN_SIZE\t\t223\n\nSince 223 seems pretty magic, I'm not going to touch it.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20231018-strncpy-drivers-nvme-host-fabrics-c-v1-1-b6677df40a35@google.com\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Wed Oct 18 22:48:49 2023 +0000",
  "author_date_iso": "2023-10-18T22:48:49+00:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Fri Dec 1 09:51:43 2023 -0800",
  "committer_date_iso": "2023-12-01T09:51:43-08:00",
  "files_changed": [
    "drivers/nvme/host/fabrics.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/nvme/host/fabrics.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 2,
  "total_deletions": 2,
  "total_changes": 4,
  "parents": [
    "3b2894c967377a49be084b9b39b21b2315bd9b2c"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/nvme/host/fabrics.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}