{
  "hash": "0b8c0ec7eedcd8f9f1a1f238d87f9b512b09e71a",
  "hash_short": "0b8c0ec7",
  "subject": "io_uring: use current task creds instead of allocating a new one",
  "body": "syzbot reports:\n\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] PREEMPT SMP KASAN\nCPU: 0 PID: 9217 Comm: io_uring-sq Not tainted 5.4.0-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nRIP: 0010:creds_are_invalid kernel/cred.c:792 [inline]\nRIP: 0010:__validate_creds include/linux/cred.h:187 [inline]\nRIP: 0010:override_creds+0x9f/0x170 kernel/cred.c:550\nCode: ac 25 00 81 fb 64 65 73 43 0f 85 a3 37 00 00 e8 17 ab 25 00 49 8d 7c\n24 10 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84\nc0 74 08 3c 03 0f 8e 96 00 00 00 41 8b 5c 24 10 bf\nRSP: 0018:ffff88809c45fda0 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000043736564 RCX: ffffffff814f3318\nRDX: 0000000000000002 RSI: ffffffff814f3329 RDI: 0000000000000010\nRBP: ffff88809c45fdb8 R08: ffff8880a3aac240 R09: ffffed1014755849\nR10: ffffed1014755848 R11: ffff8880a3aac247 R12: 0000000000000000\nR13: ffff888098ab1600 R14: 0000000000000000 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff8880ae800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffd51c40664 CR3: 0000000092641000 CR4: 00000000001406f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n  io_sq_thread+0x1c7/0xa20 fs/io_uring.c:3274\n  kthread+0x361/0x430 kernel/kthread.c:255\n  ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352\nModules linked in:\n---[ end trace f2e1a4307fbe2245 ]---\nRIP: 0010:creds_are_invalid kernel/cred.c:792 [inline]\nRIP: 0010:__validate_creds include/linux/cred.h:187 [inline]\nRIP: 0010:override_creds+0x9f/0x170 kernel/cred.c:550\nCode: ac 25 00 81 fb 64 65 73 43 0f 85 a3 37 00 00 e8 17 ab 25 00 49 8d 7c\n24 10 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84\nc0 74 08 3c 03 0f 8e 96 00 00 00 41 8b 5c 24 10 bf\nRSP: 0018:ffff88809c45fda0 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000043736564 RCX: ffffffff814f3318\nRDX: 0000000000000002 RSI: ffffffff814f3329 RDI: 0000000000000010\nRBP: ffff88809c45fdb8 R08: ffff8880a3aac240 R09: ffffed1014755849\nR10: ffffed1014755848 R11: ffff8880a3aac247 R12: 0000000000000000\nR13: ffff888098ab1600 R14: 0000000000000000 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff8880ae800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffd51c40664 CR3: 0000000092641000 CR4: 00000000001406f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n\nwhich is caused by slab fault injection triggering a failure in\nprepare_creds(). We don't actually need to create a copy of the creds\nas we're not modifying it, we just need a reference on the current task\ncreds. This avoids the failure case as well, and propagates the const\nthroughout the stack.\n\nFixes: 181e448d8709 (\"io_uring: async workers should inherit the user creds\")\nReported-by: syzbot+5320383e16029ba057ff@syzkaller.appspotmail.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "full_message": "io_uring: use current task creds instead of allocating a new one\n\nsyzbot reports:\n\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] PREEMPT SMP KASAN\nCPU: 0 PID: 9217 Comm: io_uring-sq Not tainted 5.4.0-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nRIP: 0010:creds_are_invalid kernel/cred.c:792 [inline]\nRIP: 0010:__validate_creds include/linux/cred.h:187 [inline]\nRIP: 0010:override_creds+0x9f/0x170 kernel/cred.c:550\nCode: ac 25 00 81 fb 64 65 73 43 0f 85 a3 37 00 00 e8 17 ab 25 00 49 8d 7c\n24 10 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84\nc0 74 08 3c 03 0f 8e 96 00 00 00 41 8b 5c 24 10 bf\nRSP: 0018:ffff88809c45fda0 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000043736564 RCX: ffffffff814f3318\nRDX: 0000000000000002 RSI: ffffffff814f3329 RDI: 0000000000000010\nRBP: ffff88809c45fdb8 R08: ffff8880a3aac240 R09: ffffed1014755849\nR10: ffffed1014755848 R11: ffff8880a3aac247 R12: 0000000000000000\nR13: ffff888098ab1600 R14: 0000000000000000 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff8880ae800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffd51c40664 CR3: 0000000092641000 CR4: 00000000001406f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n  io_sq_thread+0x1c7/0xa20 fs/io_uring.c:3274\n  kthread+0x361/0x430 kernel/kthread.c:255\n  ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352\nModules linked in:\n---[ end trace f2e1a4307fbe2245 ]---\nRIP: 0010:creds_are_invalid kernel/cred.c:792 [inline]\nRIP: 0010:__validate_creds include/linux/cred.h:187 [inline]\nRIP: 0010:override_creds+0x9f/0x170 kernel/cred.c:550\nCode: ac 25 00 81 fb 64 65 73 43 0f 85 a3 37 00 00 e8 17 ab 25 00 49 8d 7c\n24 10 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84\nc0 74 08 3c 03 0f 8e 96 00 00 00 41 8b 5c 24 10 bf\nRSP: 0018:ffff88809c45fda0 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000043736564 RCX: ffffffff814f3318\nRDX: 0000000000000002 RSI: ffffffff814f3329 RDI: 0000000000000010\nRBP: ffff88809c45fdb8 R08: ffff8880a3aac240 R09: ffffed1014755849\nR10: ffffed1014755848 R11: ffff8880a3aac247 R12: 0000000000000000\nR13: ffff888098ab1600 R14: 0000000000000000 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff8880ae800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffd51c40664 CR3: 0000000092641000 CR4: 00000000001406f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n\nwhich is caused by slab fault injection triggering a failure in\nprepare_creds(). We don't actually need to create a copy of the creds\nas we're not modifying it, we just need a reference on the current task\ncreds. This avoids the failure case as well, and propagates the const\nthroughout the stack.\n\nFixes: 181e448d8709 (\"io_uring: async workers should inherit the user creds\")\nReported-by: syzbot+5320383e16029ba057ff@syzkaller.appspotmail.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "author_name": "Jens Axboe",
  "author_email": "axboe@kernel.dk",
  "author_date": "Mon Dec 2 08:50:00 2019 -0700",
  "author_date_iso": "2019-12-02T08:50:00-07:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Mon Dec 2 08:50:00 2019 -0700",
  "committer_date_iso": "2019-12-02T08:50:00-07:00",
  "files_changed": [
    "fs/io-wq.c",
    "fs/io-wq.h",
    "fs/io_uring.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "fs/io-wq.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/io-wq.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/io_uring.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 4,
  "total_deletions": 4,
  "total_changes": 8,
  "parents": [
    "72c0870e3a05d9cd5466d08c3d2a3069ed0a2f9f"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.5",
    "v5.5-rc1",
    "v5.5-rc2",
    "v5.5-rc3",
    "v5.5-rc4",
    "v5.5-rc5",
    "v5.5-rc6",
    "v5.5-rc7",
    "v5.6",
    "v5.6-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/io-wq.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/io-wq.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/io_uring.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}