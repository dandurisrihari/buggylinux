{
  "hash": "c7cd6f04c0dfb6d44337f92b4c32126d20339873",
  "hash_short": "c7cd6f04",
  "subject": "powercap: idle_inject: Support 100% idle injection",
  "body": "The users of the idle injection framework allow 100% idle injection. For\nexample: thermal/cpuidle_cooling.c driver. When the ratio is set to\n100%, the runtime_duration becomes zero.\n\nHowever, idle_inject_set_duration() in the idle injection framework\nsilently ignores run_duration_us == 0 without any error (it is a void\nfunction). The caller will then assume that everything is fine and\n100% idle is effective, but in reality the idle duration will not\nchange.\n\nThere are two options:\n\n - The caller may change their max state to 99% instead of 100% and\n   document that 100% is not supported by the idle inject framework.\n\n - Add 100% idle support to the idle inject framework.\n\nSince there are other protections via RT throttling, this framework can\nallow 100% idle. The RT throttling will be activated at 95% idle by\ndefault. The caller disabling RT throttling and injecting 100% idle,\nshould be aware that CPU can't be used at all.\n\nThe idle inject timer is started for (run_duration_us + idle_duration_us)\nduration. Hence replace (run_duration_us && idle_duration_us) with\n(run_duration_us + idle_duration_us) in the function\nidle_inject_set_duration(). Also check for !(run_duration_us +\nidle_duration_us) to return -EINVAL in idle_inject_start().\n\nSigned-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>\nAcked-by: Daniel Lezcano <daniel.lezcano@linaro.org>\n[ rjw: Changelog edits ]\nSigned-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>",
  "full_message": "powercap: idle_inject: Support 100% idle injection\n\nThe users of the idle injection framework allow 100% idle injection. For\nexample: thermal/cpuidle_cooling.c driver. When the ratio is set to\n100%, the runtime_duration becomes zero.\n\nHowever, idle_inject_set_duration() in the idle injection framework\nsilently ignores run_duration_us == 0 without any error (it is a void\nfunction). The caller will then assume that everything is fine and\n100% idle is effective, but in reality the idle duration will not\nchange.\n\nThere are two options:\n\n - The caller may change their max state to 99% instead of 100% and\n   document that 100% is not supported by the idle inject framework.\n\n - Add 100% idle support to the idle inject framework.\n\nSince there are other protections via RT throttling, this framework can\nallow 100% idle. The RT throttling will be activated at 95% idle by\ndefault. The caller disabling RT throttling and injecting 100% idle,\nshould be aware that CPU can't be used at all.\n\nThe idle inject timer is started for (run_duration_us + idle_duration_us)\nduration. Hence replace (run_duration_us && idle_duration_us) with\n(run_duration_us + idle_duration_us) in the function\nidle_inject_set_duration(). Also check for !(run_duration_us +\nidle_duration_us) to return -EINVAL in idle_inject_start().\n\nSigned-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>\nAcked-by: Daniel Lezcano <daniel.lezcano@linaro.org>\n[ rjw: Changelog edits ]\nSigned-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>",
  "author_name": "Srinivas Pandruvada",
  "author_email": "srinivas.pandruvada@linux.intel.com",
  "author_date": "Tue Jan 17 10:22:40 2023 -0800",
  "author_date_iso": "2023-01-17T10:22:40-08:00",
  "committer_name": "Rafael J. Wysocki",
  "committer_email": "rafael.j.wysocki@intel.com",
  "committer_date": "Fri Jan 20 18:28:19 2023 +0100",
  "committer_date_iso": "2023-01-20T18:28:19+01:00",
  "files_changed": [
    "drivers/powercap/idle_inject.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/powercap/idle_inject.c",
      "insertions": 4,
      "deletions": 2
    }
  ],
  "total_insertions": 4,
  "total_deletions": 2,
  "total_changes": 6,
  "parents": [
    "7adc6885259edd4ef5c9a7a62fd4270cf38fdbfb"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/powercap/idle_inject.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}