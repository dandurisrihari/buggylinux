{
  "hash": "f2c65fb3221adc6b73b0549fc7ba892022db9797",
  "hash_short": "f2c65fb3",
  "subject": "x86/modules: Avoid breaking W^X while loading modules",
  "body": "When modules and BPF filters are loaded, there is a time window in\nwhich some memory is both writable and executable. An attacker that has\nalready found another vulnerability (e.g., a dangling pointer) might be\nable to exploit this behavior to overwrite kernel code. Prevent having\nwritable executable PTEs in this stage.\n\nIn addition, avoiding having W+X mappings can also slightly simplify the\npatching of modules code on initialization (e.g., by alternatives and\nstatic-key), as would be done in the next patch. This was actually the\nmain motivation for this patch.\n\nTo avoid having W+X mappings, set them initially as RW (NX) and after\nthey are set as RO set them as X as well. Setting them as executable is\ndone as a separate step to avoid one core in which the old PTE is cached\n(hence writable), and another which sees the updated PTE (executable),\nwhich would break the W^X protection.\n\nSuggested-by: Thomas Gleixner <tglx@linutronix.de>\nSuggested-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: Nadav Amit <namit@vmware.com>\nSigned-off-by: Rick Edgecombe <rick.p.edgecombe@intel.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: <akpm@linux-foundation.org>\nCc: <ard.biesheuvel@linaro.org>\nCc: <deneen.t.dock@intel.com>\nCc: <kernel-hardening@lists.openwall.com>\nCc: <kristen@linux.intel.com>\nCc: <linux_dti@icloud.com>\nCc: <will.deacon@arm.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Jessica Yu <jeyu@kernel.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Masami Hiramatsu <mhiramat@kernel.org>\nCc: Rik van Riel <riel@surriel.com>\nLink: https://lkml.kernel.org/r/20190426001143.4983-12-namit@vmware.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "x86/modules: Avoid breaking W^X while loading modules\n\nWhen modules and BPF filters are loaded, there is a time window in\nwhich some memory is both writable and executable. An attacker that has\nalready found another vulnerability (e.g., a dangling pointer) might be\nable to exploit this behavior to overwrite kernel code. Prevent having\nwritable executable PTEs in this stage.\n\nIn addition, avoiding having W+X mappings can also slightly simplify the\npatching of modules code on initialization (e.g., by alternatives and\nstatic-key), as would be done in the next patch. This was actually the\nmain motivation for this patch.\n\nTo avoid having W+X mappings, set them initially as RW (NX) and after\nthey are set as RO set them as X as well. Setting them as executable is\ndone as a separate step to avoid one core in which the old PTE is cached\n(hence writable), and another which sees the updated PTE (executable),\nwhich would break the W^X protection.\n\nSuggested-by: Thomas Gleixner <tglx@linutronix.de>\nSuggested-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: Nadav Amit <namit@vmware.com>\nSigned-off-by: Rick Edgecombe <rick.p.edgecombe@intel.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: <akpm@linux-foundation.org>\nCc: <ard.biesheuvel@linaro.org>\nCc: <deneen.t.dock@intel.com>\nCc: <kernel-hardening@lists.openwall.com>\nCc: <kristen@linux.intel.com>\nCc: <linux_dti@icloud.com>\nCc: <will.deacon@arm.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Jessica Yu <jeyu@kernel.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Masami Hiramatsu <mhiramat@kernel.org>\nCc: Rik van Riel <riel@surriel.com>\nLink: https://lkml.kernel.org/r/20190426001143.4983-12-namit@vmware.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "Nadav Amit",
  "author_email": "namit@vmware.com",
  "author_date": "Thu Apr 25 17:11:31 2019 -0700",
  "author_date_iso": "2019-04-25T17:11:31-07:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Tue Apr 30 12:37:55 2019 +0200",
  "committer_date_iso": "2019-04-30T12:37:55+02:00",
  "files_changed": [
    "arch/x86/kernel/alternative.c",
    "arch/x86/kernel/module.c",
    "include/linux/filter.h",
    "kernel/module.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/x86/kernel/alternative.c",
      "insertions": 21,
      "deletions": 7
    },
    {
      "file": "arch/x86/kernel/module.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "include/linux/filter.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "kernel/module.c",
      "insertions": 5,
      "deletions": 0
    }
  ],
  "total_insertions": 28,
  "total_deletions": 8,
  "total_changes": 36,
  "parents": [
    "7298e24f904224fa79eb8fd7e0fbd78950ccf2db"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.2",
    "v5.2-rc1",
    "v5.2-rc2",
    "v5.2-rc3",
    "v5.2-rc4",
    "v5.2-rc5",
    "v5.2-rc6",
    "v5.2-rc7",
    "v5.3",
    "v5.3-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening",
      "vulnerability",
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kernel/alternative.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/module.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/filter.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/module.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}