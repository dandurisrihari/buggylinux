{
  "hash": "4ad3278df6fe2b0852b00d5757fc2ccd8e92c26e",
  "hash_short": "4ad3278d",
  "subject": "x86/speculation: Disable RRSBA behavior",
  "body": "Some Intel processors may use alternate predictors for RETs on\nRSB-underflow. This condition may be vulnerable to Branch History\nInjection (BHI) and intramode-BTI.\n\nKernel earlier added spectre_v2 mitigation modes (eIBRS+Retpolines,\neIBRS+LFENCE, Retpolines) which protect indirect CALLs and JMPs against\nsuch attacks. However, on RSB-underflow, RET target prediction may\nfallback to alternate predictors. As a result, RET's predicted target\nmay get influenced by branch history.\n\nA new MSR_IA32_SPEC_CTRL bit (RRSBA_DIS_S) controls this fallback\nbehavior when in kernel mode. When set, RETs will not take predictions\nfrom alternate predictors, hence mitigating RETs as well. Support for\nthis is enumerated by CPUID.7.2.EDX[RRSBA_CTRL] (bit2).\n\nFor spectre v2 mitigation, when a user selects a mitigation that\nprotects indirect CALLs and JMPs against BHI and intramode-BTI, set\nRRSBA_DIS_S also to protect RETs for RSB-underflow case.\n\nSigned-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nSigned-off-by: Borislav Petkov <bp@suse.de>",
  "full_message": "x86/speculation: Disable RRSBA behavior\n\nSome Intel processors may use alternate predictors for RETs on\nRSB-underflow. This condition may be vulnerable to Branch History\nInjection (BHI) and intramode-BTI.\n\nKernel earlier added spectre_v2 mitigation modes (eIBRS+Retpolines,\neIBRS+LFENCE, Retpolines) which protect indirect CALLs and JMPs against\nsuch attacks. However, on RSB-underflow, RET target prediction may\nfallback to alternate predictors. As a result, RET's predicted target\nmay get influenced by branch history.\n\nA new MSR_IA32_SPEC_CTRL bit (RRSBA_DIS_S) controls this fallback\nbehavior when in kernel mode. When set, RETs will not take predictions\nfrom alternate predictors, hence mitigating RETs as well. Support for\nthis is enumerated by CPUID.7.2.EDX[RRSBA_CTRL] (bit2).\n\nFor spectre v2 mitigation, when a user selects a mitigation that\nprotects indirect CALLs and JMPs against BHI and intramode-BTI, set\nRRSBA_DIS_S also to protect RETs for RSB-underflow case.\n\nSigned-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nSigned-off-by: Borislav Petkov <bp@suse.de>",
  "author_name": "Pawan Gupta",
  "author_email": "pawan.kumar.gupta@linux.intel.com",
  "author_date": "Fri Jul 8 13:36:09 2022 -0700",
  "author_date_iso": "2022-07-08T13:36:09-07:00",
  "committer_name": "Borislav Petkov",
  "committer_email": "bp@suse.de",
  "committer_date": "Sat Jul 9 13:12:45 2022 +0200",
  "committer_date_iso": "2022-07-09T13:12:45+02:00",
  "files_changed": [
    "arch/x86/include/asm/cpufeatures.h",
    "arch/x86/include/asm/msr-index.h",
    "arch/x86/kernel/cpu/bugs.c",
    "arch/x86/kernel/cpu/scattered.c",
    "tools/arch/x86/include/asm/msr-index.h"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "arch/x86/include/asm/cpufeatures.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/include/asm/msr-index.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/bugs.c",
      "insertions": 26,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/cpu/scattered.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/arch/x86/include/asm/msr-index.h",
      "insertions": 9,
      "deletions": 0
    }
  ],
  "total_insertions": 46,
  "total_deletions": 1,
  "total_changes": 47,
  "parents": [
    "697977d8415d61f3acbc4ee6d564c9dcf0309507"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/include/asm/cpufeatures.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/msr-index.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/bugs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/cpu/scattered.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/arch/x86/include/asm/msr-index.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}