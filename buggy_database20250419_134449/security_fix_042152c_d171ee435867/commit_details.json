{
  "hash": "042152c27c3bc3e20882f75c289ced32331f4010",
  "hash_short": "042152c2",
  "subject": "bpf, arm64: Sign return address for JITed code",
  "body": "Sign return address for JITed code when the kernel is built with pointer\nauthentication enabled:\n\n1. Sign LR with paciasp instruction before LR is pushed to stack. Since\n   paciasp acts like landing pads for function entry, no need to insert\n   bti instruction before paciasp.\n\n2. Authenticate LR with autiasp instruction after LR is popped from stack.\n\nFor BPF tail call, the stack frame constructed by the caller is reused by\nthe callee. That is, the stack frame is constructed by the caller and\ndestructed by the callee. Thus LR is signed and pushed to the stack in the\ncaller's prologue, and poped from the stack and authenticated in the\ncallee's epilogue.\n\nFor BPF2BPF call, the caller and callee construct their own stack frames,\nand sign and authenticate their own LRs.\n\nSigned-off-by: Xu Kuohai <xukuohai@huawei.com>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>\nLink: https://events.static.linuxfound.org/sites/events/files/slides/slides_23.pdf\nLink: https://lore.kernel.org/bpf/20220402073942.3782529-1-xukuohai@huawei.com",
  "full_message": "bpf, arm64: Sign return address for JITed code\n\nSign return address for JITed code when the kernel is built with pointer\nauthentication enabled:\n\n1. Sign LR with paciasp instruction before LR is pushed to stack. Since\n   paciasp acts like landing pads for function entry, no need to insert\n   bti instruction before paciasp.\n\n2. Authenticate LR with autiasp instruction after LR is popped from stack.\n\nFor BPF tail call, the stack frame constructed by the caller is reused by\nthe callee. That is, the stack frame is constructed by the caller and\ndestructed by the callee. Thus LR is signed and pushed to the stack in the\ncaller's prologue, and poped from the stack and authenticated in the\ncallee's epilogue.\n\nFor BPF2BPF call, the caller and callee construct their own stack frames,\nand sign and authenticate their own LRs.\n\nSigned-off-by: Xu Kuohai <xukuohai@huawei.com>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>\nLink: https://events.static.linuxfound.org/sites/events/files/slides/slides_23.pdf\nLink: https://lore.kernel.org/bpf/20220402073942.3782529-1-xukuohai@huawei.com",
  "author_name": "Xu Kuohai",
  "author_email": "xukuohai@huawei.com",
  "author_date": "Sat Apr 2 03:39:42 2022 -0400",
  "author_date_iso": "2022-04-02T03:39:42-04:00",
  "committer_name": "Daniel Borkmann",
  "committer_email": "daniel@iogearbox.net",
  "committer_date": "Wed Apr 6 00:04:22 2022 +0200",
  "committer_date_iso": "2022-04-06T00:04:22+02:00",
  "files_changed": [
    "arch/arm64/net/bpf_jit.h",
    "arch/arm64/net/bpf_jit_comp.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm64/net/bpf_jit.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm64/net/bpf_jit_comp.c",
      "insertions": 10,
      "deletions": 2
    }
  ],
  "total_insertions": 13,
  "total_deletions": 2,
  "total_changes": 15,
  "parents": [
    "9a7ef9f86b96be22d009422e4c0ba52e1292492f"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/net/bpf_jit.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/net/bpf_jit_comp.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}