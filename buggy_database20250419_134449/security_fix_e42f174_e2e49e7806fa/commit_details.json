{
  "hash": "e42f174e43e47b623d9dbf814521c4961000c962",
  "hash_short": "e42f174e",
  "subject": "mm, slab/slub: improve error reporting and overhead of cache_from_obj()",
  "body": "cache_from_obj() was added by commit b9ce5ef49f00 (\"sl[au]b: always get\nthe cache from its page in kmem_cache_free()\") to support kmemcg, where\nper-memcg cache can be different from the root one, so we can't use the\nkmem_cache pointer given to kmem_cache_free().\n\nPrior to that commit, SLUB already had debugging check+warning that could\nbe enabled to compare the given kmem_cache pointer to one referenced by\nthe slab page where the object-to-be-freed resides.  This check was moved\nto cache_from_obj().  Later the check was also enabled for\nSLAB_FREELIST_HARDENED configs by commit 598a0717a816 (\"mm/slab: validate\ncache membership under freelist hardening\").\n\nThese checks and warnings can be useful especially for the debugging,\nwhich can be improved.  Commit 598a0717a816 changed the pr_err() with\nWARN_ON_ONCE() to WARN_ONCE() so only the first hit is now reported,\nothers are silent.  This patch changes it to WARN() so that all errors are\nreported.\n\nIt's also useful to print SLUB allocation/free tracking info for the\noffending object, if tracking is enabled.  Thus, export the SLUB\nprint_tracking() function and provide an empty one for SLAB.\n\nFor SLUB we can also benefit from the static key check in\nkmem_cache_debug_flags(), but we need to move this function to slab.h and\ndeclare the static key there.\n\n[1] https://lore.kernel.org/r/20200608230654.828134-18-guro@fb.com\n\n[vbabka@suse.cz: avoid bogus WARN()]\n  Link: https://lore.kernel.org/r/20200623090213.GW5535@shao2-debian\n  Link: http://lkml.kernel.org/r/b33e0fa7-cd28-4788-9e54-5927846329ef@suse.cz\n\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nAcked-by: Kees Cook <keescook@chromium.org>\nAcked-by: Roman Gushchin <guro@fb.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Matthew Garrett <mjg59@google.com>\nCc: Jann Horn <jannh@google.com>\nCc: Vijayanand Jitta <vjitta@codeaurora.org>\nCc: Vinayak Menon <vinmenon@codeaurora.org>\nLink: http://lkml.kernel.org/r/afeda7ac-748b-33d8-a905-56b708148ad5@suse.cz\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "mm, slab/slub: improve error reporting and overhead of cache_from_obj()\n\ncache_from_obj() was added by commit b9ce5ef49f00 (\"sl[au]b: always get\nthe cache from its page in kmem_cache_free()\") to support kmemcg, where\nper-memcg cache can be different from the root one, so we can't use the\nkmem_cache pointer given to kmem_cache_free().\n\nPrior to that commit, SLUB already had debugging check+warning that could\nbe enabled to compare the given kmem_cache pointer to one referenced by\nthe slab page where the object-to-be-freed resides.  This check was moved\nto cache_from_obj().  Later the check was also enabled for\nSLAB_FREELIST_HARDENED configs by commit 598a0717a816 (\"mm/slab: validate\ncache membership under freelist hardening\").\n\nThese checks and warnings can be useful especially for the debugging,\nwhich can be improved.  Commit 598a0717a816 changed the pr_err() with\nWARN_ON_ONCE() to WARN_ONCE() so only the first hit is now reported,\nothers are silent.  This patch changes it to WARN() so that all errors are\nreported.\n\nIt's also useful to print SLUB allocation/free tracking info for the\noffending object, if tracking is enabled.  Thus, export the SLUB\nprint_tracking() function and provide an empty one for SLAB.\n\nFor SLUB we can also benefit from the static key check in\nkmem_cache_debug_flags(), but we need to move this function to slab.h and\ndeclare the static key there.\n\n[1] https://lore.kernel.org/r/20200608230654.828134-18-guro@fb.com\n\n[vbabka@suse.cz: avoid bogus WARN()]\n  Link: https://lore.kernel.org/r/20200623090213.GW5535@shao2-debian\n  Link: http://lkml.kernel.org/r/b33e0fa7-cd28-4788-9e54-5927846329ef@suse.cz\n\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nAcked-by: Kees Cook <keescook@chromium.org>\nAcked-by: Roman Gushchin <guro@fb.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Matthew Garrett <mjg59@google.com>\nCc: Jann Horn <jannh@google.com>\nCc: Vijayanand Jitta <vjitta@codeaurora.org>\nCc: Vinayak Menon <vinmenon@codeaurora.org>\nLink: http://lkml.kernel.org/r/afeda7ac-748b-33d8-a905-56b708148ad5@suse.cz\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Vlastimil Babka",
  "author_email": "vbabka@suse.cz",
  "author_date": "Thu Aug 6 23:19:05 2020 -0700",
  "author_date_iso": "2020-08-06T23:19:05-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Aug 7 11:33:23 2020 -0700",
  "committer_date_iso": "2020-08-07T11:33:23-07:00",
  "files_changed": [
    "mm/slab.c",
    "mm/slab.h",
    "mm/slub.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "mm/slab.c",
      "insertions": 0,
      "deletions": 8
    },
    {
      "file": "mm/slab.h",
      "insertions": 45,
      "deletions": 0
    },
    {
      "file": "mm/slub.c",
      "insertions": 1,
      "deletions": 37
    }
  ],
  "total_insertions": 46,
  "total_deletions": 45,
  "total_changes": 91,
  "parents": [
    "d3c58f24be1bf10fa9e11977080a2398ddcd8361"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "mm/slab.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slab.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slub.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}