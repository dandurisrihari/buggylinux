{
  "hash": "58d1b717879bfeabe09b35e41ad667c79933eb2e",
  "hash_short": "58d1b717",
  "subject": "wifi: iwlwifi: pcie: Fix integer overflow in iwl_write_to_user_buf",
  "body": "An integer overflow occurs in the iwl_write_to_user_buf() function,\nwhich is called by the iwl_dbgfs_monitor_data_read() function.\n\nstatic bool iwl_write_to_user_buf(char __user *user_buf, ssize_t count,\n\t\t\t\t  void *buf, ssize_t *size,\n\t\t\t\t  ssize_t *bytes_copied)\n{\n\tint buf_size_left = count - *bytes_copied;\n\n\tbuf_size_left = buf_size_left - (buf_size_left % sizeof(u32));\n\tif (*size > buf_size_left)\n\t\t*size = buf_size_left;\n\nIf the user passes a SIZE_MAX value to the \"ssize_t count\" parameter,\nthe ssize_t count parameter is assigned to \"int buf_size_left\".\nThen compare \"*size\" with \"buf_size_left\" . Here, \"buf_size_left\" is a\nnegative number, so \"*size\" is assigned \"buf_size_left\" and goes into\nthe third argument of the copy_to_user function, causing a heap overflow.\n\nThis is not a security vulnerability because iwl_dbgfs_monitor_data_read()\nis a debugfs operation with 0400 privileges.\n\nSigned-off-by: Hyunwoo Kim <imv4bel@gmail.com>\nSigned-off-by: Gregory Greenman <gregory.greenman@intel.com>\nLink: https://lore.kernel.org/r/20230414130637.2d80ace81532.Iecfba549e0e0be21bbb0324675392e42e75bd5ad@changeid\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "full_message": "wifi: iwlwifi: pcie: Fix integer overflow in iwl_write_to_user_buf\n\nAn integer overflow occurs in the iwl_write_to_user_buf() function,\nwhich is called by the iwl_dbgfs_monitor_data_read() function.\n\nstatic bool iwl_write_to_user_buf(char __user *user_buf, ssize_t count,\n\t\t\t\t  void *buf, ssize_t *size,\n\t\t\t\t  ssize_t *bytes_copied)\n{\n\tint buf_size_left = count - *bytes_copied;\n\n\tbuf_size_left = buf_size_left - (buf_size_left % sizeof(u32));\n\tif (*size > buf_size_left)\n\t\t*size = buf_size_left;\n\nIf the user passes a SIZE_MAX value to the \"ssize_t count\" parameter,\nthe ssize_t count parameter is assigned to \"int buf_size_left\".\nThen compare \"*size\" with \"buf_size_left\" . Here, \"buf_size_left\" is a\nnegative number, so \"*size\" is assigned \"buf_size_left\" and goes into\nthe third argument of the copy_to_user function, causing a heap overflow.\n\nThis is not a security vulnerability because iwl_dbgfs_monitor_data_read()\nis a debugfs operation with 0400 privileges.\n\nSigned-off-by: Hyunwoo Kim <imv4bel@gmail.com>\nSigned-off-by: Gregory Greenman <gregory.greenman@intel.com>\nLink: https://lore.kernel.org/r/20230414130637.2d80ace81532.Iecfba549e0e0be21bbb0324675392e42e75bd5ad@changeid\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "author_name": "Hyunwoo Kim",
  "author_email": "imv4bel@gmail.com",
  "author_date": "Fri Apr 14 13:11:59 2023 +0300",
  "author_date_iso": "2023-04-14T13:11:59+03:00",
  "committer_name": "Johannes Berg",
  "committer_email": "johannes.berg@intel.com",
  "committer_date": "Fri Apr 14 13:15:27 2023 +0200",
  "committer_date_iso": "2023-04-14T13:15:27+02:00",
  "files_changed": [
    "drivers/net/wireless/intel/iwlwifi/pcie/trans.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/wireless/intel/iwlwifi/pcie/trans.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "8ce437dd5b2e4adef13aa4ecce07392f9966b1ab"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security vulnerability",
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/wireless/intel/iwlwifi/pcie/trans.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}