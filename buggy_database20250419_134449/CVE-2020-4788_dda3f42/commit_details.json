{
  "hash": "dda3f4252e6c8b833a2ef164afd3da9808d0f07c",
  "hash_short": "dda3f425",
  "subject": "Merge tag 'powerpc-cve-2020-4788' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux",
  "body": "Pull powerpc fixes from Michael Ellerman:\n \"Fixes for CVE-2020-4788.\n\n  From Daniel's cover letter:\n\n  IBM Power9 processors can speculatively operate on data in the L1\n  cache before it has been completely validated, via a way-prediction\n  mechanism. It is not possible for an attacker to determine the\n  contents of impermissible memory using this method, since these\n  systems implement a combination of hardware and software security\n  measures to prevent scenarios where protected data could be leaked.\n\n  However these measures don't address the scenario where an attacker\n  induces the operating system to speculatively execute instructions\n  using data that the attacker controls. This can be used for example to\n  speculatively bypass \"kernel user access prevention\" techniques, as\n  discovered by Anthony Steinhauser of Google's Safeside Project. This\n  is not an attack by itself, but there is a possibility it could be\n  used in conjunction with side-channels or other weaknesses in the\n  privileged code to construct an attack.\n\n  This issue can be mitigated by flushing the L1 cache between privilege\n  boundaries of concern.\n\n  This patch series flushes the L1 cache on kernel entry (patch 2) and\n  after the kernel performs any user accesses (patch 3). It also adds a\n  self-test and performs some related cleanups\"\n\n* tag 'powerpc-cve-2020-4788' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/64s: rename pnv|pseries_setup_rfi_flush to _setup_security_mitigations\n  selftests/powerpc: refactor entry and rfi_flush tests\n  selftests/powerpc: entry flush test\n  powerpc: Only include kup-radix.h for 64-bit Book3S\n  powerpc/64s: flush L1D after user accesses\n  powerpc/64s: flush L1D on kernel entry\n  selftests/powerpc: rfi_flush: disable entry flush if present",
  "full_message": "Merge tag 'powerpc-cve-2020-4788' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"Fixes for CVE-2020-4788.\n\n  From Daniel's cover letter:\n\n  IBM Power9 processors can speculatively operate on data in the L1\n  cache before it has been completely validated, via a way-prediction\n  mechanism. It is not possible for an attacker to determine the\n  contents of impermissible memory using this method, since these\n  systems implement a combination of hardware and software security\n  measures to prevent scenarios where protected data could be leaked.\n\n  However these measures don't address the scenario where an attacker\n  induces the operating system to speculatively execute instructions\n  using data that the attacker controls. This can be used for example to\n  speculatively bypass \"kernel user access prevention\" techniques, as\n  discovered by Anthony Steinhauser of Google's Safeside Project. This\n  is not an attack by itself, but there is a possibility it could be\n  used in conjunction with side-channels or other weaknesses in the\n  privileged code to construct an attack.\n\n  This issue can be mitigated by flushing the L1 cache between privilege\n  boundaries of concern.\n\n  This patch series flushes the L1 cache on kernel entry (patch 2) and\n  after the kernel performs any user accesses (patch 3). It also adds a\n  self-test and performs some related cleanups\"\n\n* tag 'powerpc-cve-2020-4788' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/64s: rename pnv|pseries_setup_rfi_flush to _setup_security_mitigations\n  selftests/powerpc: refactor entry and rfi_flush tests\n  selftests/powerpc: entry flush test\n  powerpc: Only include kup-radix.h for 64-bit Book3S\n  powerpc/64s: flush L1D after user accesses\n  powerpc/64s: flush L1D on kernel entry\n  selftests/powerpc: rfi_flush: disable entry flush if present",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Thu Nov 19 11:32:31 2020 -0800",
  "author_date_iso": "2020-11-19T11:32:31-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Nov 19 11:32:31 2020 -0800",
  "committer_date_iso": "2020-11-19T11:32:31-08:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/include/asm/book3s/64/kup-radix.h",
      "insertions": 42,
      "deletions": 24
    },
    {
      "file": "arch/powerpc/include/asm/exception-64s.h",
      "insertions": 11,
      "deletions": 1
    },
    {
      "file": "arch/powerpc/include/asm/feature-fixups.h",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/include/asm/kup.h",
      "insertions": 20,
      "deletions": 6
    },
    {
      "file": "arch/powerpc/include/asm/security_features.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/include/asm/setup.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/kernel/exceptions-64s.S",
      "insertions": 42,
      "deletions": 38
    },
    {
      "file": "arch/powerpc/kernel/setup_64.c",
      "insertions": 121,
      "deletions": 1
    },
    {
      "file": "arch/powerpc/kernel/syscall_64.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/powerpc/kernel/vmlinux.lds.S",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/lib/feature-fixups.c",
      "insertions": 104,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/platforms/powernv/setup.c",
      "insertions": 21,
      "deletions": 3
    },
    {
      "file": "arch/powerpc/platforms/pseries/mobility.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/powerpc/platforms/pseries/pseries.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/powerpc/platforms/pseries/setup.c",
      "insertions": 12,
      "deletions": 3
    },
    {
      "file": "tools/testing/selftests/powerpc/include/utils.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/powerpc/security/.gitignore",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/powerpc/security/Makefile",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/powerpc/security/entry_flush.c",
      "insertions": 139,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/powerpc/security/flush_utils.c",
      "insertions": 70,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/powerpc/security/flush_utils.h",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/powerpc/security/rfi_flush.c",
      "insertions": 30,
      "deletions": 66
    }
  ],
  "total_insertions": 693,
  "total_deletions": 147,
  "total_changes": 840,
  "parents": [
    "3494d58865ad4a47611dbb427b214cc5227fa5eb",
    "da631f7fd623b6c180c8d93a93040d1e0d61291f"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [
      "CVE-2020-4788"
    ],
    "security_keywords": [
      "bypass"
    ]
  },
  "fix_type": "cve",
  "file_results": []
}