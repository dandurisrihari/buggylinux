commit 45880f7b7b19e043ce0aaa4cb7d05369425c82fa
Author: Leo Yan <leo.yan@linux.dev>
Date:   Tue Aug 6 18:00:13 2019 +0800

    error-injection: Consolidate override function definition
    
    The function override_function_with_return() is defined separately for
    each architecture and every architecture's definition is almost same
    with each other.  E.g. x86 and powerpc both define function in its own
    asm/error-injection.h header and override_function_with_return() has
    the same definition, the only difference is that x86 defines an extra
    function just_return_func() but it is specific for x86 and is only used
    by x86's override_function_with_return(), so don't need to export this
    function.
    
    This patch consolidates override_function_with_return() definition into
    asm-generic/error-injection.h header, thus all architectures can use the
    common definition.  As result, the architecture specific headers are
    removed; the include/linux/error-injection.h header also changes to
    include asm-generic/error-injection.h header rather than architecture
    header, furthermore, it includes linux/compiler.h for successful
    compilation.
    
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Will Deacon <will@kernel.org>

diff --git a/include/asm-generic/error-injection.h b/include/asm-generic/error-injection.h
index 95a159a4137f..80ca61058dd2 100644
--- a/include/asm-generic/error-injection.h
+++ b/include/asm-generic/error-injection.h
@@ -16,6 +16,8 @@ struct error_injection_entry {
 	int		etype;
 };
 
+struct pt_regs;
+
 #ifdef CONFIG_FUNCTION_ERROR_INJECTION
 /*
  * Whitelist ganerating macro. Specify functions which can be
@@ -28,8 +30,12 @@ static struct error_injection_entry __used				\
 		.addr = (unsigned long)fname,				\
 		.etype = EI_ETYPE_##_etype,				\
 	};
+
+void override_function_with_return(struct pt_regs *regs);
 #else
 #define ALLOW_ERROR_INJECTION(fname, _etype)
+
+static inline void override_function_with_return(struct pt_regs *regs) { }
 #endif
 #endif