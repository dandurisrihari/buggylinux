{
  "hash": "1731a0c492c806ba3678b6c1aa3081a77ca1abb3",
  "hash_short": "1731a0c4",
  "subject": "iio: adc: stm32-adc: Replace deprecated strncpy() with strscpy()",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings [1].\n\nWe should prefer more robust and less ambiguous string interfaces.\n\nWe expect adc->chan_name[val] to be NUL-terminated based on ch_name's\nuse within functions that expect NUL-terminated strings like strncmp and\nprintf-likes:\n| \tif (!strncmp(stm32_adc_ic[i].name, ch_name, STM32_ADC_CH_SZ)) {\n| \t\t/* Check internal channel availability */\n| \t\tswitch (i) {\n| \t\tcase STM32_ADC_INT_CH_VDDCORE:\n| \t\t\tif (!adc->cfg->regs->or_vddcore.reg)\n| \t\t\t\tdev_warn(&indio_dev->dev,\n| \t\t\t\t\t \"%s channel not available\\n\", ch_name);\n...\n\nThere is no evidence that NUL-padding is needed either.\n\nConsidering the above, a suitable replacement is strscpy() [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding. If, for any reason, NUL-padding _is_\nrequired we should go for `strscpy_pad`.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20230921-strncpy-drivers-iio-adc-stm32-adc-c-v1-1-c50eca098597@google.com\nSigned-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>",
  "full_message": "iio: adc: stm32-adc: Replace deprecated strncpy() with strscpy()\n\nstrncpy() is deprecated for use on NUL-terminated destination strings [1].\n\nWe should prefer more robust and less ambiguous string interfaces.\n\nWe expect adc->chan_name[val] to be NUL-terminated based on ch_name's\nuse within functions that expect NUL-terminated strings like strncmp and\nprintf-likes:\n| \tif (!strncmp(stm32_adc_ic[i].name, ch_name, STM32_ADC_CH_SZ)) {\n| \t\t/* Check internal channel availability */\n| \t\tswitch (i) {\n| \t\tcase STM32_ADC_INT_CH_VDDCORE:\n| \t\t\tif (!adc->cfg->regs->or_vddcore.reg)\n| \t\t\t\tdev_warn(&indio_dev->dev,\n| \t\t\t\t\t \"%s channel not available\\n\", ch_name);\n...\n\nThere is no evidence that NUL-padding is needed either.\n\nConsidering the above, a suitable replacement is strscpy() [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding. If, for any reason, NUL-padding _is_\nrequired we should go for `strscpy_pad`.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20230921-strncpy-drivers-iio-adc-stm32-adc-c-v1-1-c50eca098597@google.com\nSigned-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Thu Sep 21 04:54:00 2023 +0000",
  "author_date_iso": "2023-09-21T04:54:00+00:00",
  "committer_name": "Jonathan Cameron",
  "committer_email": "Jonathan.Cameron@huawei.com",
  "committer_date": "Thu Oct 5 15:01:08 2023 +0100",
  "committer_date_iso": "2023-10-05T15:01:08+01:00",
  "files_changed": [
    "drivers/iio/adc/stm32-adc.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/iio/adc/stm32-adc.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "d27425d5d8b1cd930a31b92fb426cdbcbf876b10"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/iio/adc/stm32-adc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}