{
  "hash": "f79643787e0a0762d2409b7b8334e83f22d85695",
  "hash_short": "f7964378",
  "subject": "powerpc/64s: flush L1D on kernel entry",
  "body": "IBM Power9 processors can speculatively operate on data in the L1 cache\nbefore it has been completely validated, via a way-prediction mechanism. It\nis not possible for an attacker to determine the contents of impermissible\nmemory using this method, since these systems implement a combination of\nhardware and software security measures to prevent scenarios where\nprotected data could be leaked.\n\nHowever these measures don't address the scenario where an attacker induces\nthe operating system to speculatively execute instructions using data that\nthe attacker controls. This can be used for example to speculatively bypass\n\"kernel user access prevention\" techniques, as discovered by Anthony\nSteinhauser of Google's Safeside Project. This is not an attack by itself,\nbut there is a possibility it could be used in conjunction with\nside-channels or other weaknesses in the privileged code to construct an\nattack.\n\nThis issue can be mitigated by flushing the L1 cache between privilege\nboundaries of concern. This patch flushes the L1 cache on kernel entry.\n\nThis is part of the fix for CVE-2020-4788.\n\nSigned-off-by: Nicholas Piggin <npiggin@gmail.com>\nSigned-off-by: Daniel Axtens <dja@axtens.net>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "full_message": "powerpc/64s: flush L1D on kernel entry\n\nIBM Power9 processors can speculatively operate on data in the L1 cache\nbefore it has been completely validated, via a way-prediction mechanism. It\nis not possible for an attacker to determine the contents of impermissible\nmemory using this method, since these systems implement a combination of\nhardware and software security measures to prevent scenarios where\nprotected data could be leaked.\n\nHowever these measures don't address the scenario where an attacker induces\nthe operating system to speculatively execute instructions using data that\nthe attacker controls. This can be used for example to speculatively bypass\n\"kernel user access prevention\" techniques, as discovered by Anthony\nSteinhauser of Google's Safeside Project. This is not an attack by itself,\nbut there is a possibility it could be used in conjunction with\nside-channels or other weaknesses in the privileged code to construct an\nattack.\n\nThis issue can be mitigated by flushing the L1 cache between privilege\nboundaries of concern. This patch flushes the L1 cache on kernel entry.\n\nThis is part of the fix for CVE-2020-4788.\n\nSigned-off-by: Nicholas Piggin <npiggin@gmail.com>\nSigned-off-by: Daniel Axtens <dja@axtens.net>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "author_name": "Nicholas Piggin",
  "author_email": "npiggin@gmail.com",
  "author_date": "Tue Nov 17 16:59:12 2020 +1100",
  "author_date_iso": "2020-11-17T16:59:12+11:00",
  "committer_name": "Michael Ellerman",
  "committer_email": "mpe@ellerman.id.au",
  "committer_date": "Thu Nov 19 23:47:15 2020 +1100",
  "committer_date_iso": "2020-11-19T23:47:15+11:00",
  "files_changed": [
    "Documentation/admin-guide/kernel-parameters.txt",
    "arch/powerpc/include/asm/exception-64s.h",
    "arch/powerpc/include/asm/feature-fixups.h",
    "arch/powerpc/include/asm/security_features.h",
    "arch/powerpc/include/asm/setup.h",
    "arch/powerpc/kernel/exceptions-64s.S",
    "arch/powerpc/kernel/setup_64.c",
    "arch/powerpc/kernel/vmlinux.lds.S",
    "arch/powerpc/lib/feature-fixups.c",
    "arch/powerpc/platforms/powernv/setup.c",
    "arch/powerpc/platforms/pseries/setup.c"
  ],
  "files_changed_count": 11,
  "stats": [
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/include/asm/exception-64s.h",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "arch/powerpc/include/asm/feature-fixups.h",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/include/asm/security_features.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/include/asm/setup.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/kernel/exceptions-64s.S",
      "insertions": 37,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/kernel/setup_64.c",
      "insertions": 59,
      "deletions": 1
    },
    {
      "file": "arch/powerpc/kernel/vmlinux.lds.S",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/lib/feature-fixups.c",
      "insertions": 54,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/platforms/powernv/setup.c",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/platforms/pseries/setup.c",
      "insertions": 4,
      "deletions": 0
    }
  ],
  "total_insertions": 200,
  "total_deletions": 2,
  "total_changes": 202,
  "parents": [
    "fcb48454c23c5679d1a2e252f127642e91b05cbe"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2020-4788"
    ],
    "security_keywords": [
      "bypass"
    ]
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/powerpc/include/asm/exception-64s.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/include/asm/setup.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/include/asm/feature-fixups.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/kernel/setup_64.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/kernel/vmlinux.lds.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/include/asm/security_features.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/lib/feature-fixups.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/kernel/exceptions-64s.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/platforms/powernv/setup.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/platforms/pseries/setup.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}