Commit Hash: f79643787e0a0762d2409b7b8334e83f22d85695
Subject: powerpc/64s: flush L1D on kernel entry

CVE Identifiers:
- CVE-2020-4788

Security Keywords:
- bypass

Full commit message:
powerpc/64s: flush L1D on kernel entry

IBM Power9 processors can speculatively operate on data in the L1 cache
before it has been completely validated, via a way-prediction mechanism. It
is not possible for an attacker to determine the contents of impermissible
memory using this method, since these systems implement a combination of
hardware and software security measures to prevent scenarios where
protected data could be leaked.

However these measures don't address the scenario where an attacker induces
the operating system to speculatively execute instructions using data that
the attacker controls. This can be used for example to speculatively bypass
"kernel user access prevention" techniques, as discovered by Anthony
Steinhauser of Google's Safeside Project. This is not an attack by itself,
but there is a possibility it could be used in conjunction with
side-channels or other weaknesses in the privileged code to construct an
attack.

This issue can be mitigated by flushing the L1 cache between privilege
boundaries of concern. This patch flushes the L1 cache on kernel entry.

This is part of the fix for CVE-2020-4788.

Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
Signed-off-by: Daniel Axtens <dja@axtens.net>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

Metadata:
Author: Nicholas Piggin <npiggin@gmail.com>
Author Date: Tue Nov 17 16:59:12 2020 +1100
Committer: Michael Ellerman <mpe@ellerman.id.au>
Commit Date: Thu Nov 19 23:47:15 2020 +1100

Files Changed: 11
Lines Added: 200
Lines Removed: 2
Total Changes: 202
