{
  "hash": "c0cd884af045338476b8e69a61fceb3f34ff22f1",
  "hash_short": "c0cd884a",
  "subject": "r8169: offical fix for CVE-2009-4537 (overlength frame DMAs)",
  "body": "Official patch to fix the r8169 frame length check error.\n\nBased on this initial thread:\nhttp://marc.info/?l=linux-netdev&m=126202972828626&w=1\nThis is the official patch to fix the frame length problems in the r8169\ndriver.  As noted in the previous thread, while this patch incurs a performance\nhit on the driver, its possible to improve performance dynamically by updating\nthe mtu and rx_copybreak values at runtime to return performance to what it was\nfor those NICS which are unaffected by the ideosyncracy (if there are any).\n\nSummary:\n\n    A while back Eric submitted a patch for r8169 in which the proper\nallocated frame size was written to RXMaxSize to prevent the NIC from dmaing too\nmuch data.  This was done in commit fdd7b4c3302c93f6833e338903ea77245eb510b4.  A\nlong time prior to that however, Francois posted\n126fa4b9ca5d9d7cb7d46f779ad3bd3631ca387c, which expiclitly disabled the MaxSize\nsetting due to the fact that the hardware behaved in odd ways when overlong\nframes were received on NIC's supported by this driver.  This was mentioned in a\nsecurity conference recently:\nhttp://events.ccc.de/congress/2009/Fahrplan//events/3596.en.html\n\nIt seems that if we can't enable frame size filtering, then, as Eric correctly\nnoticed, we can find ourselves DMA-ing too much data to a buffer, causing\ncorruption.  As a result is seems that we are forced to allocate a frame which\nis ready to handle a maximally sized receive.\n\nThis obviously has performance issues with it, so to mitigate that issue, this\npatch does two things:\n\n1) Raises the copybreak value to the frame allocation size, which should force\nappropriately sized packets to get allocated on rx, rather than a full new 16k\nbuffer.\n\n2) This patch only disables frame filtering initially (i.e., during the NIC\nopen), changing the MTU results in ring buffer allocation of a size in relation\nto the new mtu (along with a warning indicating that this is dangerous).\n\nBecause of item (2), individuals who can't cope with the performance hit (or can\notherwise filter frames to prevent the bug), or who have hardware they are sure\nis unaffected by this issue, can manually lower the copybreak and reset the mtu\nsuch that performance is restored easily.\n\nSigned-off-by: Neil Horman <nhorman@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "r8169: offical fix for CVE-2009-4537 (overlength frame DMAs)\n\nOfficial patch to fix the r8169 frame length check error.\n\nBased on this initial thread:\nhttp://marc.info/?l=linux-netdev&m=126202972828626&w=1\nThis is the official patch to fix the frame length problems in the r8169\ndriver.  As noted in the previous thread, while this patch incurs a performance\nhit on the driver, its possible to improve performance dynamically by updating\nthe mtu and rx_copybreak values at runtime to return performance to what it was\nfor those NICS which are unaffected by the ideosyncracy (if there are any).\n\nSummary:\n\n    A while back Eric submitted a patch for r8169 in which the proper\nallocated frame size was written to RXMaxSize to prevent the NIC from dmaing too\nmuch data.  This was done in commit fdd7b4c3302c93f6833e338903ea77245eb510b4.  A\nlong time prior to that however, Francois posted\n126fa4b9ca5d9d7cb7d46f779ad3bd3631ca387c, which expiclitly disabled the MaxSize\nsetting due to the fact that the hardware behaved in odd ways when overlong\nframes were received on NIC's supported by this driver.  This was mentioned in a\nsecurity conference recently:\nhttp://events.ccc.de/congress/2009/Fahrplan//events/3596.en.html\n\nIt seems that if we can't enable frame size filtering, then, as Eric correctly\nnoticed, we can find ourselves DMA-ing too much data to a buffer, causing\ncorruption.  As a result is seems that we are forced to allocate a frame which\nis ready to handle a maximally sized receive.\n\nThis obviously has performance issues with it, so to mitigate that issue, this\npatch does two things:\n\n1) Raises the copybreak value to the frame allocation size, which should force\nappropriately sized packets to get allocated on rx, rather than a full new 16k\nbuffer.\n\n2) This patch only disables frame filtering initially (i.e., during the NIC\nopen), changing the MTU results in ring buffer allocation of a size in relation\nto the new mtu (along with a warning indicating that this is dangerous).\n\nBecause of item (2), individuals who can't cope with the performance hit (or can\notherwise filter frames to prevent the bug), or who have hardware they are sure\nis unaffected by this issue, can manually lower the copybreak and reset the mtu\nsuch that performance is restored easily.\n\nSigned-off-by: Neil Horman <nhorman@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Neil Horman",
  "author_email": "nhorman@redhat.com",
  "author_date": "Mon Mar 29 13:16:02 2010 -0700",
  "author_date_iso": "2010-03-29T13:16:02-07:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Mon Mar 29 13:16:02 2010 -0700",
  "committer_date_iso": "2010-03-29T13:16:02-07:00",
  "files_changed": [
    "drivers/net/r8169.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/r8169.c",
      "insertions": 24,
      "deletions": 5
    }
  ],
  "total_insertions": 24,
  "total_deletions": 5,
  "total_changes": 29,
  "parents": [
    "54c1a859efd9fd6cda05bc700315ba2519c14eba"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.34",
    "v2.6.34-rc3",
    "v2.6.34-rc4",
    "v2.6.34-rc5",
    "v2.6.34-rc6",
    "v2.6.34-rc7",
    "v2.6.35",
    "v2.6.35-rc1",
    "v2.6.35-rc2",
    "v2.6.35-rc3"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2009-4537",
      "CVE-2009-4537"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "drivers/net/r8169.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}