{
  "hash": "df8386d13ea280d55beee1b95f61a59234a3798b",
  "hash_short": "df8386d1",
  "subject": "seg6: fix skb checksum evaluation in SRH encapsulation/insertion",
  "body": "Support for SRH encapsulation and insertion was introduced with\ncommit 6c8702c60b88 (\"ipv6: sr: add support for SRH encapsulation and\ninjection with lwtunnels\"), through the seg6_do_srh_encap() and\nseg6_do_srh_inline() functions, respectively.\nThe former encapsulates the packet in an outer IPv6 header along with\nthe SRH, while the latter inserts the SRH between the IPv6 header and\nthe payload. Then, the headers are initialized/updated according to the\noperating mode (i.e., encap/inline).\nFinally, the skb checksum is calculated to reflect the changes applied\nto the headers.\n\nThe IPv6 payload length ('payload_len') is not initialized\nwithin seg6_do_srh_{inline,encap}() but is deferred in seg6_do_srh(), i.e.\nthe caller of seg6_do_srh_{inline,encap}().\nHowever, this operation invalidates the skb checksum, since the\n'payload_len' is updated only after the checksum is evaluated.\n\nTo solve this issue, the initialization of the IPv6 payload length is\nmoved from seg6_do_srh() directly into the seg6_do_srh_{inline,encap}()\nfunctions and before the skb checksum update takes place.\n\nFixes: 6c8702c60b88 (\"ipv6: sr: add support for SRH encapsulation and injection with lwtunnels\")\nReported-by: Paolo Abeni <pabeni@redhat.com>\nLink: https://lore.kernel.org/all/20220705190727.69d532417be7438b15404ee1@uniroma2.it\nSigned-off-by: Andrea Mayer <andrea.mayer@uniroma2.it>\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "full_message": "seg6: fix skb checksum evaluation in SRH encapsulation/insertion\n\nSupport for SRH encapsulation and insertion was introduced with\ncommit 6c8702c60b88 (\"ipv6: sr: add support for SRH encapsulation and\ninjection with lwtunnels\"), through the seg6_do_srh_encap() and\nseg6_do_srh_inline() functions, respectively.\nThe former encapsulates the packet in an outer IPv6 header along with\nthe SRH, while the latter inserts the SRH between the IPv6 header and\nthe payload. Then, the headers are initialized/updated according to the\noperating mode (i.e., encap/inline).\nFinally, the skb checksum is calculated to reflect the changes applied\nto the headers.\n\nThe IPv6 payload length ('payload_len') is not initialized\nwithin seg6_do_srh_{inline,encap}() but is deferred in seg6_do_srh(), i.e.\nthe caller of seg6_do_srh_{inline,encap}().\nHowever, this operation invalidates the skb checksum, since the\n'payload_len' is updated only after the checksum is evaluated.\n\nTo solve this issue, the initialization of the IPv6 payload length is\nmoved from seg6_do_srh() directly into the seg6_do_srh_{inline,encap}()\nfunctions and before the skb checksum update takes place.\n\nFixes: 6c8702c60b88 (\"ipv6: sr: add support for SRH encapsulation and injection with lwtunnels\")\nReported-by: Paolo Abeni <pabeni@redhat.com>\nLink: https://lore.kernel.org/all/20220705190727.69d532417be7438b15404ee1@uniroma2.it\nSigned-off-by: Andrea Mayer <andrea.mayer@uniroma2.it>\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "author_name": "Andrea Mayer",
  "author_email": "andrea.mayer@uniroma2.it",
  "author_date": "Tue Jul 12 19:58:35 2022 +0200",
  "author_date_iso": "2022-07-12T19:58:35+02:00",
  "committer_name": "Paolo Abeni",
  "committer_email": "pabeni@redhat.com",
  "committer_date": "Thu Jul 14 10:15:15 2022 +0200",
  "committer_date_iso": "2022-07-14T10:15:15+02:00",
  "files_changed": [
    "net/ipv6/seg6_iptunnel.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/ipv6/seg6_iptunnel.c",
      "insertions": 4,
      "deletions": 1
    }
  ],
  "total_insertions": 4,
  "total_deletions": 1,
  "total_changes": 5,
  "parents": [
    "f46a5a9c679f495c555b7842807db5e886a9e650"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/ipv6/seg6_iptunnel.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}