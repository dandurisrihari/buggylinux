{
  "hash": "e1f2760ba3478fa3f8c48db8e91fbe3df8bea2f8",
  "hash_short": "e1f2760b",
  "subject": "null_blk: replace strncpy with strscpy",
  "body": "`strncpy` is deprecated for use on NUL-terminated destination strings [1].\n\nWe should favor a more robust and less ambiguous interface.\n\nWe expect that both `nullb->disk_name` and `disk->disk_name` be\nNUL-terminated:\n|     snprintf(nullb->disk_name, sizeof(nullb->disk_name),\n|              \"%s\", config_item_name(&dev->group.cg_item));\n...\n|       pr_info(\"disk %s created\\n\", nullb->disk_name);\n\nIt seems like NUL-padding may be required due to __assign_disk_name()\nutilizing a memcpy as opposed to a `str*cpy` api.\n| static inline void __assign_disk_name(char *name, struct gendisk *disk)\n| {\n| \tif (disk)\n| \t\tmemcpy(name, disk->disk_name, DISK_NAME_LEN);\n| \telse\n| \t\tmemset(name, 0, DISK_NAME_LEN);\n| }\n\nThen we go and print it with `__print_disk_name` which wraps `nullb_trace_disk_name()`.\n| #define __print_disk_name(name) nullb_trace_disk_name(p, name)\n\nThis function obviously expects a NUL-terminated string.\n| const char *nullb_trace_disk_name(struct trace_seq *p, char *name)\n| {\n| \tconst char *ret = trace_seq_buffer_ptr(p);\n|\n| \tif (name && *name)\n| \t\ttrace_seq_printf(p, \"disk=%s, \", name);\n| \ttrace_seq_putc(p, 0);\n|\n| \treturn ret;\n| }\n\n>From the above, we need both 1) a NUL-terminated string and 2) a\nNUL-padded string. So, let's use strscpy_pad() as per Kees' suggestion\nfrom v1.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nCc: Kees Cook <keescook@chromium.org>\nCc: Nick Desaulniers <ndesaulniers@google.com>\nCc: Nathan Chancellor <nathan@kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20230919-strncpy-drivers-block-null_blk-main-c-v3-1-10cf0a87a2c3@google.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "full_message": "null_blk: replace strncpy with strscpy\n\n`strncpy` is deprecated for use on NUL-terminated destination strings [1].\n\nWe should favor a more robust and less ambiguous interface.\n\nWe expect that both `nullb->disk_name` and `disk->disk_name` be\nNUL-terminated:\n|     snprintf(nullb->disk_name, sizeof(nullb->disk_name),\n|              \"%s\", config_item_name(&dev->group.cg_item));\n...\n|       pr_info(\"disk %s created\\n\", nullb->disk_name);\n\nIt seems like NUL-padding may be required due to __assign_disk_name()\nutilizing a memcpy as opposed to a `str*cpy` api.\n| static inline void __assign_disk_name(char *name, struct gendisk *disk)\n| {\n| \tif (disk)\n| \t\tmemcpy(name, disk->disk_name, DISK_NAME_LEN);\n| \telse\n| \t\tmemset(name, 0, DISK_NAME_LEN);\n| }\n\nThen we go and print it with `__print_disk_name` which wraps `nullb_trace_disk_name()`.\n| #define __print_disk_name(name) nullb_trace_disk_name(p, name)\n\nThis function obviously expects a NUL-terminated string.\n| const char *nullb_trace_disk_name(struct trace_seq *p, char *name)\n| {\n| \tconst char *ret = trace_seq_buffer_ptr(p);\n|\n| \tif (name && *name)\n| \t\ttrace_seq_printf(p, \"disk=%s, \", name);\n| \ttrace_seq_putc(p, 0);\n|\n| \treturn ret;\n| }\n\n>From the above, we need both 1) a NUL-terminated string and 2) a\nNUL-padded string. So, let's use strscpy_pad() as per Kees' suggestion\nfrom v1.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nCc: Kees Cook <keescook@chromium.org>\nCc: Nick Desaulniers <ndesaulniers@google.com>\nCc: Nathan Chancellor <nathan@kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20230919-strncpy-drivers-block-null_blk-main-c-v3-1-10cf0a87a2c3@google.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Tue Sep 19 05:30:35 2023 +0000",
  "author_date_iso": "2023-09-19T05:30:35+00:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Tue Oct 3 18:23:02 2023 -0600",
  "committer_date_iso": "2023-10-03T18:23:02-06:00",
  "files_changed": [
    "drivers/block/null_blk/main.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/block/null_blk/main.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "114b0ff62a6510eb218660cb4925b4c4a01cdd84"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/block/null_blk/main.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}