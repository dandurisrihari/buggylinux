Commit Hash: 2198d07c509f1db4a1185d1f65aaada794c6ea59
Subject: arm64: Always load shadow stack pointer directly from the task struct


Security Keywords:
- exploit

Full commit message:
arm64: Always load shadow stack pointer directly from the task struct

All occurrences of the scs_load macro load the value of the shadow call
stack pointer from the task which is current at that point. So instead
of taking a task struct register argument in the scs_load macro to
specify the task struct to load from, let's always reference the current
task directly. This should make it much harder to exploit any
instruction sequences reloading the shadow call stack pointer register
from memory.

Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
Acked-by: Mark Rutland <mark.rutland@arm.com>
Reviewed-by: Kees Cook <keescook@chromium.org>
Link: https://lore.kernel.org/r/20230109174800.3286265-2-ardb@kernel.org
Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

Metadata:
Author: Ard Biesheuvel <ardb@kernel.org>
Author Date: Mon Jan 9 18:47:59 2023 +0100
Committer: Catalin Marinas <catalin.marinas@arm.com>
Commit Date: Fri Jan 20 14:26:18 2023 +0000

Files Changed: 3
Lines Added: 7
Lines Removed: 6
Total Changes: 13
