commit 2198d07c509f1db4a1185d1f65aaada794c6ea59
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Jan 9 18:47:59 2023 +0100

    arm64: Always load shadow stack pointer directly from the task struct
    
    All occurrences of the scs_load macro load the value of the shadow call
    stack pointer from the task which is current at that point. So instead
    of taking a task struct register argument in the scs_load macro to
    specify the task struct to load from, let's always reference the current
    task directly. This should make it much harder to exploit any
    instruction sequences reloading the shadow call stack pointer register
    from memory.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20230109174800.3286265-2-ardb@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

diff --git a/arch/arm64/include/asm/scs.h b/arch/arm64/include/asm/scs.h
index ff7da1268a52..13df982a0808 100644
--- a/arch/arm64/include/asm/scs.h
+++ b/arch/arm64/include/asm/scs.h
@@ -10,15 +10,16 @@
 #ifdef CONFIG_SHADOW_CALL_STACK
 	scs_sp	.req	x18
 
-	.macro scs_load tsk
-	ldr	scs_sp, [\tsk, #TSK_TI_SCS_SP]
+	.macro scs_load_current
+	get_current_task scs_sp
+	ldr	scs_sp, [scs_sp, #TSK_TI_SCS_SP]
 	.endm
 
 	.macro scs_save tsk
 	str	scs_sp, [\tsk, #TSK_TI_SCS_SP]
 	.endm
 #else
-	.macro scs_load tsk
+	.macro scs_load_current
 	.endm
 
 	.macro scs_save tsk