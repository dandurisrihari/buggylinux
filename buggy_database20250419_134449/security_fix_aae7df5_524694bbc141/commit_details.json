{
  "hash": "aae7df50190a640e51bfe11c93f94741ac82ff0b",
  "hash_short": "aae7df50",
  "subject": "block: Integrity checksum flag",
  "body": "Make the choice of checksum a per-I/O property by introducing a flag\nthat can be inspected by the SCSI layer. There are several reasons for\nthis:\n\n 1. It allows us to switch choice of checksum without unloading and\n    reloading the HBA driver.\n\n 2. During error recovery we need to be able to tell the HBA that\n    checksums read from disk should not be verified and converted to IP\n    checksums.\n\n 3. For error injection purposes we need to be able to write a bad guard\n    tag to storage. Since the storage device only supports T10 CRC we\n    need to be able to disable IP checksum conversion on the HBA.\n\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>\nReviewed-by: Sagi Grimberg <sagig@mellanox.com>\nSigned-off-by: Jens Axboe <axboe@fb.com>",
  "full_message": "block: Integrity checksum flag\n\nMake the choice of checksum a per-I/O property by introducing a flag\nthat can be inspected by the SCSI layer. There are several reasons for\nthis:\n\n 1. It allows us to switch choice of checksum without unloading and\n    reloading the HBA driver.\n\n 2. During error recovery we need to be able to tell the HBA that\n    checksums read from disk should not be verified and converted to IP\n    checksums.\n\n 3. For error injection purposes we need to be able to write a bad guard\n    tag to storage. Since the storage device only supports T10 CRC we\n    need to be able to disable IP checksum conversion on the HBA.\n\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>\nReviewed-by: Sagi Grimberg <sagig@mellanox.com>\nSigned-off-by: Jens Axboe <axboe@fb.com>",
  "author_name": "Martin K. Petersen",
  "author_email": "martin.petersen@oracle.com",
  "author_date": "Fri Sep 26 19:20:05 2014 -0400",
  "author_date_iso": "2014-09-26T19:20:05-04:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@fb.com",
  "committer_date": "Sat Sep 27 09:14:55 2014 -0600",
  "committer_date_iso": "2014-09-27T09:14:55-06:00",
  "files_changed": [
    "block/bio-integrity.c",
    "drivers/scsi/sd_dif.c",
    "include/linux/bio.h",
    "include/linux/blkdev.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "block/bio-integrity.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "drivers/scsi/sd_dif.c",
      "insertions": 4,
      "deletions": 2
    },
    {
      "file": "include/linux/bio.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/blkdev.h",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 9,
  "total_deletions": 2,
  "total_changes": 11,
  "parents": [
    "b1f01388574c9329922f760fc2a7335c2d14b08b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.18",
    "v3.18-rc1",
    "v3.18-rc2",
    "v3.18-rc3",
    "v3.18-rc4",
    "v3.18-rc5",
    "v3.18-rc6",
    "v3.18-rc7",
    "v3.19",
    "v3.19-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "block/bio-integrity.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/scsi/sd_dif.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/bio.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/blkdev.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}