{
  "hash": "8668860b0ad32a13fcd6c94a0995b7aa7638c9ef",
  "hash_short": "8668860b",
  "subject": "mptcp: reset when MPTCP opts are dropped after join",
  "body": "Before this patch, if the checksum was not used, the subflow was only\nreset if map_data_len was != 0. If there were no MPTCP options or an\ninvalid mapping, map_data_len was not set to the data len, and then the\nsubflow was not reset as it should have been, leaving the MPTCP\nconnection in a wrong fallback mode.\n\nThis map_data_len condition has been introduced to handle the reception\nof the infinite mapping. Instead, a new dedicated mapping error could\nhave been returned and treated as a special case. However, the commit\n31bf11de146c (\"mptcp: introduce MAPPING_BAD_CSUM\") has been introduced\nby Paolo Abeni soon after, and backported later on to stable. It better\nhandle the csum case, and it means the exception for valid_csum_seen in\nsubflow_can_fallback(), plus this one for the infinite mapping in\nsubflow_check_data_avail(), are no longer needed.\n\nIn other words, the code can be simplified there: a fallback should only\nbe done if msk->allow_infinite_fallback is set. This boolean is set to\nfalse once MPTCP-specific operations acting on the whole MPTCP\nconnection vs the initial path have been done, e.g. a second path has\nbeen created, or an MPTCP re-injection -- yes, possible even with a\nsingle subflow. The subflow_can_fallback() helper can then be dropped,\nand replaced by this single condition.\n\nThis also makes the code clearer: a fallback should only be done if it\nis possible to do so.\n\nWhile at it, no need to set map_data_len to 0 in get_mapping_status()\nfor the infinite mapping case: it will be set to skb->len just after, at\nthe end of subflow_check_data_avail(), and not read in between.\n\nFixes: f8d4bcacff3b (\"mptcp: infinite mapping receiving\")\nCc: stable@vger.kernel.org\nReported-by: Chester A. Unal <chester.a.unal@xpedite-tech.com>\nCloses: https://github.com/multipath-tcp/mptcp_net-next/issues/544\nAcked-by: Paolo Abeni <pabeni@redhat.com>\nSigned-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nTested-by: Chester A. Unal <chester.a.unal@xpedite-tech.com>\nLink: https://patch.msgid.link/20250224-net-mptcp-misc-fixes-v1-2-f550f636b435@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "mptcp: reset when MPTCP opts are dropped after join\n\nBefore this patch, if the checksum was not used, the subflow was only\nreset if map_data_len was != 0. If there were no MPTCP options or an\ninvalid mapping, map_data_len was not set to the data len, and then the\nsubflow was not reset as it should have been, leaving the MPTCP\nconnection in a wrong fallback mode.\n\nThis map_data_len condition has been introduced to handle the reception\nof the infinite mapping. Instead, a new dedicated mapping error could\nhave been returned and treated as a special case. However, the commit\n31bf11de146c (\"mptcp: introduce MAPPING_BAD_CSUM\") has been introduced\nby Paolo Abeni soon after, and backported later on to stable. It better\nhandle the csum case, and it means the exception for valid_csum_seen in\nsubflow_can_fallback(), plus this one for the infinite mapping in\nsubflow_check_data_avail(), are no longer needed.\n\nIn other words, the code can be simplified there: a fallback should only\nbe done if msk->allow_infinite_fallback is set. This boolean is set to\nfalse once MPTCP-specific operations acting on the whole MPTCP\nconnection vs the initial path have been done, e.g. a second path has\nbeen created, or an MPTCP re-injection -- yes, possible even with a\nsingle subflow. The subflow_can_fallback() helper can then be dropped,\nand replaced by this single condition.\n\nThis also makes the code clearer: a fallback should only be done if it\nis possible to do so.\n\nWhile at it, no need to set map_data_len to 0 in get_mapping_status()\nfor the infinite mapping case: it will be set to skb->len just after, at\nthe end of subflow_check_data_avail(), and not read in between.\n\nFixes: f8d4bcacff3b (\"mptcp: infinite mapping receiving\")\nCc: stable@vger.kernel.org\nReported-by: Chester A. Unal <chester.a.unal@xpedite-tech.com>\nCloses: https://github.com/multipath-tcp/mptcp_net-next/issues/544\nAcked-by: Paolo Abeni <pabeni@redhat.com>\nSigned-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nTested-by: Chester A. Unal <chester.a.unal@xpedite-tech.com>\nLink: https://patch.msgid.link/20250224-net-mptcp-misc-fixes-v1-2-f550f636b435@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Matthieu Baerts (NGI0)",
  "author_email": "matttbe@kernel.org",
  "author_date": "Mon Feb 24 19:11:51 2025 +0100",
  "author_date_iso": "2025-02-24T19:11:51+01:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Tue Feb 25 18:34:36 2025 -0800",
  "committer_date_iso": "2025-02-25T18:34:36-08:00",
  "files_changed": [
    "net/mptcp/subflow.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/mptcp/subflow.c",
      "insertions": 1,
      "deletions": 14
    }
  ],
  "total_insertions": 1,
  "total_deletions": 14,
  "total_changes": 15,
  "parents": [
    "f865c24bc55158313d5779fc81116023a6940ca3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/mptcp/subflow.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}