commit 31ca7e77fd7efc3f98582bf682fcaadc31a7d505
Author: Justin Stitt <justinstitt@google.com>
Date:   Thu Mar 28 21:16:52 2024 +0000

    reiserfs: replace deprecated strncpy with scnprintf
    
    strncpy() is deprecated for use on NUL-terminated destination strings
    [1] and as such we should prefer more robust and less ambiguous string
    interfaces.
    
    Our goal here is to get @namebuf populated with @name's contents but
    surrounded with quotes. There is some careful handling done to ensure we
    properly truncate @name so that we have room for a literal quote as well
    as a NUL-term. All this careful handling can be done with scnprintf
    using the dynamic string width specifier %.*s which allows us to pass in
    the max size for a source string. Doing this, we can put literal quotes
    in our format specifier and ensure @name is truncated to fit inbetween
    these quotes (-3 is from 2 quotes + 1 NUL-byte).
    
    All in all, we get to remove a deprecated use of strncpy and clean up
    this code nicely!
    
    Link: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]
    Link: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]
    Link: https://github.com/KSPP/linux/issues/90
    Cc:  <linux-hardening@vger.kernel.org>
    Signed-off-by: Justin Stitt <justinstitt@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20240328-strncpy-fs-reiserfs-item_ops-c-v1-1-2dab6d22a996@google.com
    Signed-off-by: Kees Cook <keescook@chromium.org>

diff --git a/fs/reiserfs/item_ops.c b/fs/reiserfs/item_ops.c
index 3a5a752d96c7..5011c10287c6 100644
--- a/fs/reiserfs/item_ops.c
+++ b/fs/reiserfs/item_ops.c
@@ -389,16 +389,9 @@ static void direntry_print_item(struct item_head *ih, char *item)
 		name = item + deh_location(deh);
 		if (name[namelen - 1] == 0)
 			namelen = strlen(name);
-		namebuf[0] = '"';
-		if (namelen > sizeof(namebuf) - 3) {
-			strncpy(namebuf + 1, name, sizeof(namebuf) - 3);
-			namebuf[sizeof(namebuf) - 2] = '"';
-			namebuf[sizeof(namebuf) - 1] = 0;
-		} else {
-			memcpy(namebuf + 1, name, namelen);
-			namebuf[namelen + 1] = '"';
-			namebuf[namelen + 2] = 0;
-		}
+
+		scnprintf(namebuf, sizeof(namebuf), "\"%.*s\"",
+			  (int)sizeof(namebuf)-3, name);
 
 		printk("%d:  %-15s%-15d%-15d%-15lld%-15lld(%s)\n",
 		       i, namebuf,