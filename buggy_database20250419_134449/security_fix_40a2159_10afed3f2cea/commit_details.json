{
  "hash": "40a2159abf3d0107bba359246554bd7d56f2171b",
  "hash_short": "40a2159a",
  "subject": "sysfs: Disallow truncation of files in sysfs",
  "body": "sysfs allows attribute files to be truncated, e.g. using ftruncate(), with the\nexpected effect on their inode.   For most attributes, this doesn't change the\n\"real\" size of the file i.e. how much can be read from it.  However, the\nparameter validation for reading and writing binary attribute files is based\non the inode size and not the size specified in the file's bin_attribute, so it\ncan be broken by this. For example, if we try using dd to write to such a file:\n\n# pwd\n/sys/bus/pci/devices/0000:08:00.0\n# ls -l config\n-rw-r--r--  1 root root 4096 Feb  1 17:35 config\n# dd if=/dev/zero of=config bs=4 count=1\n1+0 records in\n1+0 records out\n# ls -l config\n-rw-r--r--  1 root root 0 Feb  1 17:50 config\n# dd if=/dev/zero of=config bs=4 count=1 seek=128\ndd: writing `config': No space left on device\n1+0 records in\n0+0 records out\n\nAlso, after truncation to 0, parameter validation for read and write is\ndisabled.  Most bin_attribute read and write methods also validate the size and\noffset, but for some this will allow out-of-range access.  This may be a\nsecurity issue, though access to such files is often limited to root.  In any\ncase, the validation should remain for safety's sake!)\n\nThis was previously reported in Bugzilla as bug 9867.\n\nsysfs should ignore size changes or else refuse them (by returning -EINVAL).\nThis patch makes it ignore them.\n\nSigned-off-by: Ben Hutchings <bhutchings@solarflare.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>",
  "full_message": "sysfs: Disallow truncation of files in sysfs\n\nsysfs allows attribute files to be truncated, e.g. using ftruncate(), with the\nexpected effect on their inode.   For most attributes, this doesn't change the\n\"real\" size of the file i.e. how much can be read from it.  However, the\nparameter validation for reading and writing binary attribute files is based\non the inode size and not the size specified in the file's bin_attribute, so it\ncan be broken by this. For example, if we try using dd to write to such a file:\n\n# pwd\n/sys/bus/pci/devices/0000:08:00.0\n# ls -l config\n-rw-r--r--  1 root root 4096 Feb  1 17:35 config\n# dd if=/dev/zero of=config bs=4 count=1\n1+0 records in\n1+0 records out\n# ls -l config\n-rw-r--r--  1 root root 0 Feb  1 17:50 config\n# dd if=/dev/zero of=config bs=4 count=1 seek=128\ndd: writing `config': No space left on device\n1+0 records in\n0+0 records out\n\nAlso, after truncation to 0, parameter validation for read and write is\ndisabled.  Most bin_attribute read and write methods also validate the size and\noffset, but for some this will allow out-of-range access.  This may be a\nsecurity issue, though access to such files is often limited to root.  In any\ncase, the validation should remain for safety's sake!)\n\nThis was previously reported in Bugzilla as bug 9867.\n\nsysfs should ignore size changes or else refuse them (by returning -EINVAL).\nThis patch makes it ignore them.\n\nSigned-off-by: Ben Hutchings <bhutchings@solarflare.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>",
  "author_name": "Ben Hutchings",
  "author_email": "bhutchings@solarflare.com",
  "author_date": "Mon Apr 28 15:59:58 2008 +0100",
  "author_date_iso": "2008-04-28T15:59:58+01:00",
  "committer_name": "Greg Kroah-Hartman",
  "committer_email": "gregkh@suse.de",
  "committer_date": "Wed Apr 30 16:52:46 2008 -0700",
  "committer_date_iso": "2008-04-30T16:52:46-07:00",
  "files_changed": [
    "fs/sysfs/inode.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/sysfs/inode.c",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 2,
  "total_deletions": 0,
  "total_changes": 2,
  "parents": [
    "08acd4f8af42affd8cbed81cc1b69fa12ddb213f"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.26",
    "v2.6.26-rc1",
    "v2.6.26-rc2",
    "v2.6.26-rc3",
    "v2.6.26-rc4",
    "v2.6.26-rc5",
    "v2.6.26-rc6",
    "v2.6.26-rc7",
    "v2.6.26-rc8",
    "v2.6.26-rc9"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/sysfs/inode.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}