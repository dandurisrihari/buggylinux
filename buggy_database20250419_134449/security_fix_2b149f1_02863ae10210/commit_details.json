{
  "hash": "2b149f11978b44199954710d32c0eecf6c9efd9c",
  "hash_short": "2b149f11",
  "subject": "cifs NTLMv2/NTLMSSP ntlmv2 within ntlmssp autentication code",
  "body": "Attribue Value (AV) pairs or Target Info (TI) pairs are part of\nntlmv2 authentication.\nStructure ntlmv2_resp had only definition for two av pairs.\nSo removed it, and now allocation of av pairs is dynamic.\nFor servers like Windows 7/2008, av pairs sent by server in\nchallege packet (type 2 in the ntlmssp exchange/negotiation) can\nvary.\n\nServer sends them during ntlmssp negotiation. So when ntlmssp is used\nas an authentication mechanism, type 2 challenge packet from server\nhas this information.  Pluck it and use the entire blob for\nauthenticaiton purpose.  If user has not specified, extract\n(netbios) domain name from the av pairs which is used to calculate\nntlmv2 hash.  Servers like Windows 7 are particular about the AV pair\nblob.\n\nServers like Windows 2003, are not very strict about the contents\nof av pair blob used during ntlmv2 authentication.\nSo when security mechanism such as ntlmv2 is used (not ntlmv2 in ntlmssp),\nthere is no negotiation and so genereate a minimal blob that gets\nused in ntlmv2 authentication as well as gets sent.\n\nFields tilen and tilbob are session specific.  AV pair values are defined.\n\nTo calculate ntlmv2 response we need ti/av pair blob.\n\nFor sec mech like ntlmssp, the blob is plucked from type 2 response from\nthe server.  From this blob, netbios name of the domain is retrieved,\nif user has not already provided, to be included in the Target String\nas part of ntlmv2 hash calculations.\n\nFor sec mech like ntlmv2, create a minimal, two av pair blob.\n\nThe allocated blob is freed in case of error.  In case there is no error,\nthis blob is used in calculating ntlmv2 response (in CalcNTLMv2_response)\nand is also copied on the response to the server, and then freed.\n\nThe type 3 ntlmssp response is prepared on a buffer,\n5 * sizeof of struct _AUTHENTICATE_MESSAGE, an empirical value large\nenough to hold _AUTHENTICATE_MESSAGE plus a blob with max possible\n10 values as part of ntlmv2 response and lmv2 keys and domain, user,\nworkstation  names etc.\n\nAlso, kerberos gets selected as a default mechanism if server supports it,\nover the other security mechanisms.\n\nSigned-off-by: Shirish Pargaonkar <shirishpargaonkar@gmail.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>",
  "full_message": "cifs NTLMv2/NTLMSSP ntlmv2 within ntlmssp autentication code\n\nAttribue Value (AV) pairs or Target Info (TI) pairs are part of\nntlmv2 authentication.\nStructure ntlmv2_resp had only definition for two av pairs.\nSo removed it, and now allocation of av pairs is dynamic.\nFor servers like Windows 7/2008, av pairs sent by server in\nchallege packet (type 2 in the ntlmssp exchange/negotiation) can\nvary.\n\nServer sends them during ntlmssp negotiation. So when ntlmssp is used\nas an authentication mechanism, type 2 challenge packet from server\nhas this information.  Pluck it and use the entire blob for\nauthenticaiton purpose.  If user has not specified, extract\n(netbios) domain name from the av pairs which is used to calculate\nntlmv2 hash.  Servers like Windows 7 are particular about the AV pair\nblob.\n\nServers like Windows 2003, are not very strict about the contents\nof av pair blob used during ntlmv2 authentication.\nSo when security mechanism such as ntlmv2 is used (not ntlmv2 in ntlmssp),\nthere is no negotiation and so genereate a minimal blob that gets\nused in ntlmv2 authentication as well as gets sent.\n\nFields tilen and tilbob are session specific.  AV pair values are defined.\n\nTo calculate ntlmv2 response we need ti/av pair blob.\n\nFor sec mech like ntlmssp, the blob is plucked from type 2 response from\nthe server.  From this blob, netbios name of the domain is retrieved,\nif user has not already provided, to be included in the Target String\nas part of ntlmv2 hash calculations.\n\nFor sec mech like ntlmv2, create a minimal, two av pair blob.\n\nThe allocated blob is freed in case of error.  In case there is no error,\nthis blob is used in calculating ntlmv2 response (in CalcNTLMv2_response)\nand is also copied on the response to the server, and then freed.\n\nThe type 3 ntlmssp response is prepared on a buffer,\n5 * sizeof of struct _AUTHENTICATE_MESSAGE, an empirical value large\nenough to hold _AUTHENTICATE_MESSAGE plus a blob with max possible\n10 values as part of ntlmv2 response and lmv2 keys and domain, user,\nworkstation  names etc.\n\nAlso, kerberos gets selected as a default mechanism if server supports it,\nover the other security mechanisms.\n\nSigned-off-by: Shirish Pargaonkar <shirishpargaonkar@gmail.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>",
  "author_name": "Shirish Pargaonkar",
  "author_email": "shirishpargaonkar@gmail.com",
  "author_date": "Sat Sep 18 22:02:18 2010 -0500",
  "author_date_iso": "2010-09-18T22:02:18-05:00",
  "committer_name": "Steve French",
  "committer_email": "sfrench@us.ibm.com",
  "committer_date": "Wed Sep 29 19:04:29 2010 +0000",
  "committer_date_iso": "2010-09-29T19:04:29+00:00",
  "files_changed": [
    "fs/cifs/cifsencrypt.c",
    "fs/cifs/cifsglob.h",
    "fs/cifs/cifspdu.h",
    "fs/cifs/cifsproto.h",
    "fs/cifs/cifssmb.c",
    "fs/cifs/connect.c",
    "fs/cifs/ntlmssp.h",
    "fs/cifs/sess.c"
  ],
  "files_changed_count": 8,
  "stats": [
    {
      "file": "fs/cifs/cifsencrypt.c",
      "insertions": 115,
      "deletions": 6
    },
    {
      "file": "fs/cifs/cifsglob.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/cifs/cifspdu.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "fs/cifs/cifsproto.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/cifs/cifssmb.c",
      "insertions": 9,
      "deletions": 7
    },
    {
      "file": "fs/cifs/connect.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/cifs/ntlmssp.h",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "fs/cifs/sess.c",
      "insertions": 81,
      "deletions": 38
    }
  ],
  "total_insertions": 225,
  "total_deletions": 53,
  "total_changes": 278,
  "parents": [
    "5f98ca9afb9c004f8948c0d40920503de447918a"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.37",
    "v2.6.37-rc1",
    "v2.6.37-rc2",
    "v2.6.37-rc3",
    "v2.6.37-rc4",
    "v2.6.37-rc5",
    "v2.6.37-rc6",
    "v2.6.37-rc7",
    "v2.6.37-rc8",
    "v2.6.38"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/cifs/cifsproto.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/sess.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/cifsglob.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/connect.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/cifspdu.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/ntlmssp.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/cifssmb.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/cifs/cifsencrypt.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}