commit a2a00d2a66e480c8b225012db538dca6e389a92d
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Sun Nov 13 13:24:21 2022 +0200

    nvme-auth: remove redundant auth_work flush
    
    only ctrl deletion calls nvme_auth_free, which was stopped prior in the
    teardown stage, so there is no possibility that it should ever run when
    nvme_auth_free is called. As a result, we can remove a local chap pointer
    variable.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>

diff --git a/drivers/nvme/host/auth.c b/drivers/nvme/host/auth.c
index 24726683d4bc..c9b3f0056afc 100644
--- a/drivers/nvme/host/auth.c
+++ b/drivers/nvme/host/auth.c
@@ -989,15 +989,11 @@ EXPORT_SYMBOL_GPL(nvme_auth_stop);
 
 void nvme_auth_free(struct nvme_ctrl *ctrl)
 {
-	struct nvme_dhchap_queue_context *chap;
 	int i;
 
 	if (ctrl->dhchap_ctxs) {
-		for (i = 0; i < ctrl_max_dhchaps(ctrl); i++) {
-			chap = &ctrl->dhchap_ctxs[i];
-			flush_work(&chap->auth_work);
-			nvme_auth_free_dhchap(chap);
-		}
+		for (i = 0; i < ctrl_max_dhchaps(ctrl); i++)
+			nvme_auth_free_dhchap(&ctrl->dhchap_ctxs[i]);
 		kfree(ctrl->dhchap_ctxs);
 	}
 	if (ctrl->host_key) {