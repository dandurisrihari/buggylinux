{
  "hash": "3c09f17c3d11f3e98928f55b600e6de22f58017a",
  "hash_short": "3c09f17c",
  "subject": "[CRYPTO] aead: Add authenc",
  "body": "This patch adds the authenc algorithm which constructs an AEAD algorithm\nfrom an asynchronous block cipher and a hash.  The construction is done\nby concatenating the encrypted result from the cipher with the output\nfrom the hash, as is used by the IPsec ESP protocol.\n\nThe authenc algorithm exists as a template with four parameters:\n\n\tauthenc(auth, authsize, enc, enckeylen).\n\nThe authentication algorithm, the authentication size (i.e., truncating\nthe output of the authentication algorithm), the encryption algorithm,\nand the encryption key length.  Both the size field and the key length\nfield are in bytes.  For example, AES-128 with SHA1-HMAC would be\nrepresented by\n\n\tauthenc(hmac(sha1), 12, cbc(aes), 16)\n\nThe key for the authenc algorithm is the concatenation of the keys for\nthe authentication algorithm with the encryption algorithm.  For the\nabove example, if a key of length 36 bytes is given, then hmac(sha1)\nwould receive the first 20 bytes while the last 16 would be given to\ncbc(aes).\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "full_message": "[CRYPTO] aead: Add authenc\n\nThis patch adds the authenc algorithm which constructs an AEAD algorithm\nfrom an asynchronous block cipher and a hash.  The construction is done\nby concatenating the encrypted result from the cipher with the output\nfrom the hash, as is used by the IPsec ESP protocol.\n\nThe authenc algorithm exists as a template with four parameters:\n\n\tauthenc(auth, authsize, enc, enckeylen).\n\nThe authentication algorithm, the authentication size (i.e., truncating\nthe output of the authentication algorithm), the encryption algorithm,\nand the encryption key length.  Both the size field and the key length\nfield are in bytes.  For example, AES-128 with SHA1-HMAC would be\nrepresented by\n\n\tauthenc(hmac(sha1), 12, cbc(aes), 16)\n\nThe key for the authenc algorithm is the concatenation of the keys for\nthe authentication algorithm with the encryption algorithm.  For the\nabove example, if a key of length 36 bytes is given, then hmac(sha1)\nwould receive the first 20 bytes while the last 16 would be given to\ncbc(aes).\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "author_name": "Herbert Xu",
  "author_email": "herbert@gondor.apana.org.au",
  "author_date": "Thu Aug 30 16:24:15 2007 +0800",
  "author_date_iso": "2007-08-30T16:24:15+08:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@sunset.davemloft.net",
  "committer_date": "Wed Oct 10 16:55:43 2007 -0700",
  "committer_date_iso": "2007-10-10T16:55:43-07:00",
  "files_changed": [
    "crypto/Kconfig",
    "crypto/Makefile",
    "crypto/algapi.c",
    "crypto/authenc.c",
    "include/crypto/algapi.h"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "crypto/Kconfig",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "crypto/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "crypto/algapi.c",
      "insertions": 20,
      "deletions": 3
    },
    {
      "file": "crypto/authenc.c",
      "insertions": 400,
      "deletions": 0
    },
    {
      "file": "include/crypto/algapi.h",
      "insertions": 43,
      "deletions": 1
    }
  ],
  "total_insertions": 472,
  "total_deletions": 4,
  "total_changes": 476,
  "parents": [
    "b16c3a2e2c0307f5370b2b5e18bcbe1437b5f3d8"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.24",
    "v2.6.24-rc1",
    "v2.6.24-rc2",
    "v2.6.24-rc3",
    "v2.6.24-rc4",
    "v2.6.24-rc5",
    "v2.6.24-rc6",
    "v2.6.24-rc7",
    "v2.6.24-rc8",
    "v2.6.25"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "auth"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "crypto/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/algapi.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/authenc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/crypto/algapi.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}