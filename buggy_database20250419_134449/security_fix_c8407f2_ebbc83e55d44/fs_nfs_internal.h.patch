commit c8407f2e560c53c4c73e77cb5604c8a408dbe7f7
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Jun 7 10:00:09 2023 -0400

    NFS: Add an "xprtsec=" NFS mount option
    
    After some discussion, we decided that controlling transport layer
    security policy should be separate from the setting for the user
    authentication flavor. To accomplish this, add a new NFS mount
    option to select a transport layer security policy for RPC
    operations associated with the mount point.
    
      xprtsec=none     - Transport layer security is forced off.
    
      xprtsec=tls      - Establish an encryption-only TLS session. If
                         the initial handshake fails, the mount fails.
                         If TLS is not available on a reconnect, drop
                         the connection and try again.
    
      xprtsec=mtls     - Both sides authenticate and an encrypted
                         session is created. If the initial handshake
                         fails, the mount fails. If TLS is not available
                         on a reconnect, drop the connection and try
                         again.
    
    To support client peer authentication (mtls), the handshake daemon
    will have configurable default authentication material (certificate
    or pre-shared key). In the future, mount options can be added that
    can provide this material on a per-mount basis.
    
    Updates to mount.nfs (to support xprtsec=auto) and nfs(5) will be
    sent under separate cover.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>

diff --git a/fs/nfs/internal.h b/fs/nfs/internal.h
index 5c986c0d3cce..0019c7578f9d 100644
--- a/fs/nfs/internal.h
+++ b/fs/nfs/internal.h
@@ -102,6 +102,7 @@ struct nfs_fs_context {
 	unsigned int		bsize;
 	struct nfs_auth_info	auth_info;
 	rpc_authflavor_t	selected_flavor;
+	struct xprtsec_parms	xprtsec;
 	char			*client_address;
 	unsigned int		version;
 	unsigned int		minorversion;