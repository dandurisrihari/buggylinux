{
  "hash": "f22f9aaf6c3d92ebd5ad9e67acc03afebaaeb289",
  "hash_short": "f22f9aaf",
  "subject": "selinux: remove the runtime disable functionality",
  "body": "After working with the larger SELinux-based distros for several\nyears, we're finally at a place where we can disable the SELinux\nruntime disable functionality.  The existing kernel deprecation\nnotice explains the functionality and why we want to remove it:\n\n  The selinuxfs \"disable\" node allows SELinux to be disabled at\n  runtime prior to a policy being loaded into the kernel.  If\n  disabled via this mechanism, SELinux will remain disabled until\n  the system is rebooted.\n\n  The preferred method of disabling SELinux is via the \"selinux=0\"\n  boot parameter, but the selinuxfs \"disable\" node was created to\n  make it easier for systems with primitive bootloaders that did not\n  allow for easy modification of the kernel command line.\n  Unfortunately, allowing for SELinux to be disabled at runtime makes\n  it difficult to secure the kernel's LSM hooks using the\n  \"__ro_after_init\" feature.\n\nIt is that last sentence, mentioning the '__ro_after_init' hardening,\nwhich is the real motivation for this change, and if you look at the\ndiffstat you'll see that the impact of this patch reaches across all\nthe different LSMs, helping prevent tampering at the LSM hook level.\n\nFrom a SELinux perspective, it is important to note that if you\ncontinue to disable SELinux via \"/etc/selinux/config\" it may appear\nthat SELinux is disabled, but it is simply in an uninitialized state.\nIf you load a policy with `load_policy -i`, you will see SELinux\ncome alive just as if you had loaded the policy during early-boot.\n\nIt is also worth noting that the \"/sys/fs/selinux/disable\" file is\nalways writable now, regardless of the Kconfig settings, but writing\nto the file has no effect on the system, other than to display an\nerror on the console if a non-zero/true value is written.\n\nFinally, in the several years where we have been working on\ndeprecating this functionality, there has only been one instance of\nsomeone mentioning any user visible breakage.  In this particular\ncase it was an individual's kernel test system, and the workaround\ndocumented in the deprecation notice (\"selinux=0\" on the kernel\ncommand line) resolved the issue without problem.\n\nAcked-by: Casey Schaufler <casey@schaufler-ca.com>\nSigned-off-by: Paul Moore <paul@paul-moore.com>",
  "full_message": "selinux: remove the runtime disable functionality\n\nAfter working with the larger SELinux-based distros for several\nyears, we're finally at a place where we can disable the SELinux\nruntime disable functionality.  The existing kernel deprecation\nnotice explains the functionality and why we want to remove it:\n\n  The selinuxfs \"disable\" node allows SELinux to be disabled at\n  runtime prior to a policy being loaded into the kernel.  If\n  disabled via this mechanism, SELinux will remain disabled until\n  the system is rebooted.\n\n  The preferred method of disabling SELinux is via the \"selinux=0\"\n  boot parameter, but the selinuxfs \"disable\" node was created to\n  make it easier for systems with primitive bootloaders that did not\n  allow for easy modification of the kernel command line.\n  Unfortunately, allowing for SELinux to be disabled at runtime makes\n  it difficult to secure the kernel's LSM hooks using the\n  \"__ro_after_init\" feature.\n\nIt is that last sentence, mentioning the '__ro_after_init' hardening,\nwhich is the real motivation for this change, and if you look at the\ndiffstat you'll see that the impact of this patch reaches across all\nthe different LSMs, helping prevent tampering at the LSM hook level.\n\nFrom a SELinux perspective, it is important to note that if you\ncontinue to disable SELinux via \"/etc/selinux/config\" it may appear\nthat SELinux is disabled, but it is simply in an uninitialized state.\nIf you load a policy with `load_policy -i`, you will see SELinux\ncome alive just as if you had loaded the policy during early-boot.\n\nIt is also worth noting that the \"/sys/fs/selinux/disable\" file is\nalways writable now, regardless of the Kconfig settings, but writing\nto the file has no effect on the system, other than to display an\nerror on the console if a non-zero/true value is written.\n\nFinally, in the several years where we have been working on\ndeprecating this functionality, there has only been one instance of\nsomeone mentioning any user visible breakage.  In this particular\ncase it was an individual's kernel test system, and the workaround\ndocumented in the deprecation notice (\"selinux=0\" on the kernel\ncommand line) resolved the issue without problem.\n\nAcked-by: Casey Schaufler <casey@schaufler-ca.com>\nSigned-off-by: Paul Moore <paul@paul-moore.com>",
  "author_name": "Paul Moore",
  "author_email": "paul@paul-moore.com",
  "author_date": "Fri Mar 17 12:43:07 2023 -0400",
  "author_date_iso": "2023-03-17T12:43:07-04:00",
  "committer_name": "Paul Moore",
  "committer_email": "paul@paul-moore.com",
  "committer_date": "Mon Mar 20 12:34:23 2023 -0400",
  "committer_date_iso": "2023-03-20T12:34:23-04:00",
  "files_changed": [
    "Documentation/ABI/removed/sysfs-selinux-disable",
    "include/linux/lsm_hooks.h",
    "security/Kconfig",
    "security/apparmor/lsm.c",
    "security/bpf/hooks.c",
    "security/commoncap.c",
    "security/landlock/cred.c",
    "security/landlock/fs.c",
    "security/landlock/ptrace.c",
    "security/landlock/setup.c",
    "security/loadpin/loadpin.c",
    "security/lockdown/lockdown.c",
    "security/security.c",
    "security/selinux/Kconfig",
    "security/selinux/hooks.c",
    "security/selinux/include/security.h",
    "security/selinux/selinuxfs.c",
    "security/smack/smack_lsm.c",
    "security/tomoyo/tomoyo.c",
    "security/yama/yama_lsm.c"
  ],
  "files_changed_count": 20,
  "stats": [
    {
      "file": "Documentation/ABI/{obsolete => removed}/sysfs-selinux-disable",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "include/linux/lsm_hooks.h",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "security/Kconfig",
      "insertions": 0,
      "deletions": 5
    },
    {
      "file": "security/apparmor/lsm.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "security/bpf/hooks.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "security/commoncap.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "security/landlock/cred.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "security/landlock/fs.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "security/landlock/ptrace.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "security/landlock/setup.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "security/loadpin/loadpin.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "security/lockdown/lockdown.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "security/security.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "security/selinux/Kconfig",
      "insertions": 0,
      "deletions": 24
    },
    {
      "file": "security/selinux/hooks.c",
      "insertions": 2,
      "deletions": 55
    },
    {
      "file": "security/selinux/include/security.h",
      "insertions": 0,
      "deletions": 21
    },
    {
      "file": "security/selinux/selinuxfs.c",
      "insertions": 6,
      "deletions": 37
    },
    {
      "file": "security/smack/smack_lsm.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "security/tomoyo/tomoyo.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "security/yama/yama_lsm.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 32,
  "total_deletions": 170,
  "total_changes": 202,
  "parents": [
    "a7e4676e8e2cb158a4d24123de778087955e1b36"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/ABI/removed/sysfs-selinux-disable",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/apparmor/lsm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/bpf/hooks.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/lsm_hooks.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/landlock/cred.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/landlock/fs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/commoncap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/loadpin/loadpin.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/landlock/ptrace.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/landlock/setup.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/lockdown/lockdown.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/security.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/selinux/Kconfig",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/tomoyo/tomoyo.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/selinux/hooks.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/selinux/include/security.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/selinux/selinuxfs.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/smack/smack_lsm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/yama/yama_lsm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}