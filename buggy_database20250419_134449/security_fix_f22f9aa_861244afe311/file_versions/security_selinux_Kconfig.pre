commit a7e4676e8e2cb158a4d24123de778087955e1b36
Author: Paul Moore <paul@paul-moore.com>
Date:   Thu Mar 16 11:43:08 2023 -0400

    selinux: remove the 'checkreqprot' functionality
    
    We originally promised that the SELinux 'checkreqprot' functionality
    would be removed no sooner than June 2021, and now that it is March
    2023 it seems like it is a good time to do the final removal.  The
    deprecation notice in the kernel provides plenty of detail on why
    'checkreqprot' is not desirable, with the key point repeated below:
    
      This was a compatibility mechanism for legacy userspace and
      for the READ_IMPLIES_EXEC personality flag.  However, if set to
      1, it weakens security by allowing mappings to be made executable
      without authorization by policy.  The default value of checkreqprot
      at boot was changed starting in Linux v4.4 to 0 (i.e. check the
      actual protection), and Android and Linux distributions have been
      explicitly writing a "0" to /sys/fs/selinux/checkreqprot during
      initialization for some time.
    
    Along with the official deprecation notice, we have been discussing
    this on-list and directly with several of the larger SELinux-based
    distros and everyone is happy to see this feature finally removed.
    In an attempt to catch all of the smaller, and DIY, Linux systems
    we have been writing a deprecation notice URL into the kernel log,
    along with a growing ssleep() penalty, when admins enabled
    checkreqprot at runtime or via the kernel command line.  We have
    yet to have anyone come to us and raise an objection to the
    deprecation or planned removal.
    
    It is worth noting that while this patch removes the checkreqprot
    functionality, it leaves the user visible interfaces (kernel command
    line and selinuxfs file) intact, just inert.  This should help
    prevent breakages with existing userspace tools that correctly, but
    unnecessarily, disable checkreqprot at boot or runtime.  Admins
    that attempt to enable checkreqprot will be met with a removal
    message in the kernel log.
    
    Acked-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>

diff --git a/security/selinux/Kconfig b/security/selinux/Kconfig
index 9e921fc72538..4ea946123255 100644
--- a/security/selinux/Kconfig
+++ b/security/selinux/Kconfig
@@ -70,29 +70,6 @@ config SECURITY_SELINUX_AVC_STATS
 	  /sys/fs/selinux/avc/cache_stats, which may be monitored via
 	  tools such as avcstat.
 
-config SECURITY_SELINUX_CHECKREQPROT_VALUE
-	int "NSA SELinux checkreqprot default value"
-	depends on SECURITY_SELINUX
-	range 0 1
-	default 0
-	help
-	  This option sets the default value for the 'checkreqprot' flag
-	  that determines whether SELinux checks the protection requested
-	  by the application or the protection that will be applied by the
-	  kernel (including any implied execute for read-implies-exec) for
-	  mmap and mprotect calls.  If this option is set to 0 (zero),
-	  SELinux will default to checking the protection that will be applied
-	  by the kernel.  If this option is set to 1 (one), SELinux will
-	  default to checking the protection requested by the application.
-	  The checkreqprot flag may be changed from the default via the
-	  'checkreqprot=' boot parameter.  It may also be changed at runtime
-	  via /sys/fs/selinux/checkreqprot if authorized by policy.
-
-	  WARNING: this option is deprecated and will be removed in a future
-	  kernel release.
-
-	  If you are unsure how to answer this question, answer 0.
-
 config SECURITY_SELINUX_SIDTAB_HASH_BITS
 	int "NSA SELinux sidtab hashtable size"
 	depends on SECURITY_SELINUX