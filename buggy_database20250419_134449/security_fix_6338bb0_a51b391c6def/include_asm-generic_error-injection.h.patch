commit 6338bb05c15f88e2f4beae296ef389224837758c
Author: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Date:   Mon Dec 12 11:46:44 2022 +0900

    error-injection: remove EI_ETYPE_NONE
    
    Patch series "error-injection: Clarify the requirements of error
    injectable functions".
    
    Patches for clarifying the requirement of error injectable functions and
    to remove the confusing EI_ETYPE_NONE.
    
    
    This patch (of 2):
    
    Since the EI_ETYPE_NONE is confusing type, replace it with appropriate
    errno.  The EI_ETYPE_NONE has been introduced for a dummy (error) value,
    but it can mislead people that they can use ALLOW_ERROR_INJECTION(func,
    NONE).  So remove it from the EI_ETYPE and use appropriate errno instead.
    
    [akpm@linux-foundation.org: include/linux/error-injection.h needs errno.h]
    Link: https://lkml.kernel.org/r/167081319306.387937.10079195394503045678.stgit@devnote3
    Link: https://lkml.kernel.org/r/167081320421.387937.4259807348852421112.stgit@devnote3
    Fixes: 663faf9f7bee ("error-injection: Add injectable error types")
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Cc: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: Chris Mason <clm@meta.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Florent Revest <revest@chromium.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: KP Singh <kpsingh@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

diff --git a/include/asm-generic/error-injection.h b/include/asm-generic/error-injection.h
index fbca56bd9cbc..c0b9d3217ed9 100644
--- a/include/asm-generic/error-injection.h
+++ b/include/asm-generic/error-injection.h
@@ -4,7 +4,6 @@
 
 #if defined(__KERNEL__) && !defined(__ASSEMBLY__)
 enum {
-	EI_ETYPE_NONE,		/* Dummy value for undefined case */
 	EI_ETYPE_NULL,		/* Return NULL if failure */
 	EI_ETYPE_ERRNO,		/* Return -ERRNO if failure */
 	EI_ETYPE_ERRNO_NULL,	/* Return -ERRNO or NULL if failure */