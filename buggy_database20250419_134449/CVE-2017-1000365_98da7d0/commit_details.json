{
  "hash": "98da7d08850fb8bdeb395d6368ed15753304aa0c",
  "hash_short": "98da7d08",
  "subject": "fs/exec.c: account for argv/envp pointers",
  "body": "When limiting the argv/envp strings during exec to 1/4 of the stack limit,\nthe storage of the pointers to the strings was not included.  This means\nthat an exec with huge numbers of tiny strings could eat 1/4 of the stack\nlimit in strings and then additional space would be later used by the\npointers to the strings.\n\nFor example, on 32-bit with a 8MB stack rlimit, an exec with 1677721\nsingle-byte strings would consume less than 2MB of stack, the max (8MB /\n4) amount allowed, but the pointers to the strings would consume the\nremaining additional stack space (1677721 * 4 == 6710884).\n\nThe result (1677721 + 6710884 == 8388605) would exhaust stack space\nentirely.  Controlling this stack exhaustion could result in\npathological behavior in setuid binaries (CVE-2017-1000365).\n\n[akpm@linux-foundation.org: additional commenting from Kees]\nFixes: b6a2fea39318 (\"mm: variable length argument support\")\nLink: http://lkml.kernel.org/r/20170622001720.GA32173@beast\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Rik van Riel <riel@redhat.com>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: Qualys Security Advisory <qsa@qualys.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "fs/exec.c: account for argv/envp pointers\n\nWhen limiting the argv/envp strings during exec to 1/4 of the stack limit,\nthe storage of the pointers to the strings was not included.  This means\nthat an exec with huge numbers of tiny strings could eat 1/4 of the stack\nlimit in strings and then additional space would be later used by the\npointers to the strings.\n\nFor example, on 32-bit with a 8MB stack rlimit, an exec with 1677721\nsingle-byte strings would consume less than 2MB of stack, the max (8MB /\n4) amount allowed, but the pointers to the strings would consume the\nremaining additional stack space (1677721 * 4 == 6710884).\n\nThe result (1677721 + 6710884 == 8388605) would exhaust stack space\nentirely.  Controlling this stack exhaustion could result in\npathological behavior in setuid binaries (CVE-2017-1000365).\n\n[akpm@linux-foundation.org: additional commenting from Kees]\nFixes: b6a2fea39318 (\"mm: variable length argument support\")\nLink: http://lkml.kernel.org/r/20170622001720.GA32173@beast\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Rik van Riel <riel@redhat.com>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: Qualys Security Advisory <qsa@qualys.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Fri Jun 23 15:08:57 2017 -0700",
  "author_date_iso": "2017-06-23T15:08:57-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Jun 23 16:15:56 2017 -0700",
  "committer_date_iso": "2017-06-23T16:15:56-07:00",
  "files_changed": [
    "fs/exec.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/exec.c",
      "insertions": 24,
      "deletions": 4
    }
  ],
  "total_insertions": 24,
  "total_deletions": 4,
  "total_changes": 28,
  "parents": [
    "8818efaaacb78c60a9d90c5705b6c99b75d7d442"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.12",
    "v4.12-rc7",
    "v4.13",
    "v4.13-rc1",
    "v4.13-rc2",
    "v4.13-rc3",
    "v4.13-rc4",
    "v4.13-rc5",
    "v4.13-rc6",
    "v4.13-rc7"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2017-1000365"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "fs/exec.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}