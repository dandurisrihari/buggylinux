{
  "hash": "57b8b1b4351dafe94de09a2aab5eba885b6705f0",
  "hash_short": "57b8b1b4",
  "subject": "Merge branches 'for-next/acpi', 'for-next/boot', 'for-next/bpf', 'for-next/cpuinfo', 'for-next/fpsimd', 'for-next/misc', 'for-next/mm', 'for-next/pci', 'for-next/perf', 'for-next/ptrauth', 'for-next/sdei', 'for-next/selftests', 'for-next/stacktrace', 'for-next/svm', 'for-next/topology', 'for-next/tpyos' and 'for-next/vdso' into for-next/core",
  "body": "Remove unused functions and parameters from ACPI IORT code.\n(Zenghui Yu via Lorenzo Pieralisi)\n* for-next/acpi:\n  ACPI/IORT: Remove the unused inline functions\n  ACPI/IORT: Drop the unused @ops of iort_add_device_replay()\n\nRemove redundant code and fix documentation of caching behaviour for the\nHVC_SOFT_RESTART hypercall.\n(Pingfan Liu)\n* for-next/boot:\n  Documentation/kvm/arm: improve description of HVC_SOFT_RESTART\n  arm64/relocate_kernel: remove redundant code\n\nImprove reporting of unexpected kernel traps due to BPF JIT failure.\n(Will Deacon)\n* for-next/bpf:\n  arm64: Improve diagnostics when trapping BRK with FAULT_BRK_IMM\n\nImprove robustness of user-visible HWCAP strings and their corresponding\nnumerical constants.\n(Anshuman Khandual)\n* for-next/cpuinfo:\n  arm64/cpuinfo: Define HWCAP name arrays per their actual bit definitions\n\nCleanups to handling of SVE and FPSIMD register state in preparation\nfor potential future optimisation of handling across syscalls.\n(Julien Grall)\n* for-next/fpsimd:\n  arm64/sve: Implement a helper to load SVE registers from FPSIMD state\n  arm64/sve: Implement a helper to flush SVE registers\n  arm64/fpsimdmacros: Allow the macro \"for\" to be used in more cases\n  arm64/fpsimdmacros: Introduce a macro to update ZCR_EL1.LEN\n  arm64/signal: Update the comment in preserve_sve_context\n  arm64/fpsimd: Update documentation of do_sve_acc\n\nMiscellaneous changes.\n(Tian Tao and others)\n* for-next/misc:\n  arm64/mm: return cpu_all_mask when node is NUMA_NO_NODE\n  arm64: mm: Fix missing-prototypes in pageattr.c\n  arm64/fpsimd: Fix missing-prototypes in fpsimd.c\n  arm64: hibernate: Remove unused including <linux/version.h>\n  arm64/mm: Refactor {pgd, pud, pmd, pte}_ERROR()\n  arm64: Remove the unused include statements\n  arm64: get rid of TEXT_OFFSET\n  arm64: traps: Add str of description to panic() in die()\n\nMemory management updates and cleanups.\n(Anshuman Khandual and others)\n* for-next/mm:\n  arm64: dbm: Invalidate local TLB when setting TCR_EL1.HD\n  arm64: mm: Make flush_tlb_fix_spurious_fault() a no-op\n  arm64/mm: Unify CONT_PMD_SHIFT\n  arm64/mm: Unify CONT_PTE_SHIFT\n  arm64/mm: Remove CONT_RANGE_OFFSET\n  arm64/mm: Enable THP migration\n  arm64/mm: Change THP helpers to comply with generic MM semantics\n  arm64/mm/ptdump: Add address markers for BPF regions\n\nAllow prefetchable PCI BARs to be exposed to userspace using normal\nnon-cacheable mappings.\n(Clint Sbisa)\n* for-next/pci:\n  arm64: Enable PCI write-combine resources under sysfs\n\nPerf/PMU driver updates.\n(Julien Thierry and others)\n* for-next/perf:\n  perf: arm-cmn: Fix conversion specifiers for node type\n  perf: arm-cmn: Fix unsigned comparison to less than zero\n  arm_pmu: arm64: Use NMIs for PMU\n  arm_pmu: Introduce pmu_irq_ops\n  KVM: arm64: pmu: Make overflow handler NMI safe\n  arm64: perf: Defer irq_work to IPI_IRQ_WORK\n  arm64: perf: Remove PMU locking\n  arm64: perf: Avoid PMXEV* indirection\n  arm64: perf: Add missing ISB in armv8pmu_enable_counter()\n  perf: Add Arm CMN-600 PMU driver\n  perf: Add Arm CMN-600 DT binding\n  arm64: perf: Add support caps under sysfs\n  drivers/perf: thunderx2_pmu: Fix memory resource error handling\n  drivers/perf: xgene_pmu: Fix uninitialized resource struct\n  perf: arm_dsu: Support DSU ACPI devices\n  arm64: perf: Remove unnecessary event_idx check\n  drivers/perf: hisi: Add missing include of linux/module.h\n  arm64: perf: Add general hardware LLC events for PMUv3\n\nSupport for the Armv8.3 Pointer Authentication enhancements.\n(By Amit Daniel Kachhap)\n* for-next/ptrauth:\n  arm64: kprobe: clarify the comment of steppable hint instructions\n  arm64: kprobe: disable probe of fault prone ptrauth instruction\n  arm64: cpufeature: Modify address authentication cpufeature to exact\n  arm64: ptrauth: Introduce Armv8.3 pointer authentication enhancements\n  arm64: traps: Allow force_signal_inject to pass esr error code\n  arm64: kprobe: add checks for ARMv8.3-PAuth combined instructions\n\nTonnes of cleanup to the SDEI driver.\n(Gavin Shan)\n* for-next/sdei:\n  firmware: arm_sdei: Remove _sdei_event_unregister()\n  firmware: arm_sdei: Remove _sdei_event_register()\n  firmware: arm_sdei: Introduce sdei_do_local_call()\n  firmware: arm_sdei: Cleanup on cross call function\n  firmware: arm_sdei: Remove while loop in sdei_event_unregister()\n  firmware: arm_sdei: Remove while loop in sdei_event_register()\n  firmware: arm_sdei: Remove redundant error message in sdei_probe()\n  firmware: arm_sdei: Remove duplicate check in sdei_get_conduit()\n  firmware: arm_sdei: Unregister driver on error in sdei_init()\n  firmware: arm_sdei: Avoid nested statements in sdei_init()\n  firmware: arm_sdei: Retrieve event number from event instance\n  firmware: arm_sdei: Common block for failing path in sdei_event_create()\n  firmware: arm_sdei: Remove sdei_is_err()\n\nSelftests for Pointer Authentication and FPSIMD/SVE context-switching.\n(Mark Brown and Boyan Karatotev)\n* for-next/selftests:\n  selftests: arm64: Add build and documentation for FP tests\n  selftests: arm64: Add wrapper scripts for stress tests\n  selftests: arm64: Add utility to set SVE vector lengths\n  selftests: arm64: Add stress tests for FPSMID and SVE context switching\n  selftests: arm64: Add test for the SVE ptrace interface\n  selftests: arm64: Test case for enumeration of SVE vector lengths\n  kselftests/arm64: add PAuth tests for single threaded consistency and differently initialized keys\n  kselftests/arm64: add PAuth test for whether exec() changes keys\n  kselftests/arm64: add nop checks for PAuth tests\n  kselftests/arm64: add a basic Pointer Authentication test\n\nImplementation of ARCH_STACKWALK for unwinding.\n(Mark Brown)\n* for-next/stacktrace:\n  arm64: Move console stack display code to stacktrace.c\n  arm64: stacktrace: Convert to ARCH_STACKWALK\n  arm64: stacktrace: Make stack walk callback consistent with generic code\n  stacktrace: Remove reliable argument from arch_stack_walk() callback\n\nSupport for ASID pinning, which is required when sharing page-tables with\nthe SMMU.\n(Jean-Philippe Brucker)\n* for-next/svm:\n  arm64: cpufeature: Export symbol read_sanitised_ftr_reg()\n  arm64: mm: Pin down ASIDs for sharing mm with devices\n\nRely on firmware tables for establishing CPU topology.\n(Valentin Schneider)\n* for-next/topology:\n  arm64: topology: Stop using MPIDR for topology information\n\nSpelling fixes.\n(Xiaoming Ni and Yanfei Xu)\n* for-next/tpyos:\n  arm64/numa: Fix a typo in comment of arm64_numa_init\n  arm64: fix some spelling mistakes in the comments by codespell\n\nvDSO cleanups.\n(Will Deacon)\n* for-next/vdso:\n  arm64: vdso: Fix unusual formatting in *setup_additional_pages()\n  arm64: vdso32: Remove a bunch of #ifdef CONFIG_COMPAT_VDSO guards",
  "full_message": "Merge branches 'for-next/acpi', 'for-next/boot', 'for-next/bpf', 'for-next/cpuinfo', 'for-next/fpsimd', 'for-next/misc', 'for-next/mm', 'for-next/pci', 'for-next/perf', 'for-next/ptrauth', 'for-next/sdei', 'for-next/selftests', 'for-next/stacktrace', 'for-next/svm', 'for-next/topology', 'for-next/tpyos' and 'for-next/vdso' into for-next/core\n\nRemove unused functions and parameters from ACPI IORT code.\n(Zenghui Yu via Lorenzo Pieralisi)\n* for-next/acpi:\n  ACPI/IORT: Remove the unused inline functions\n  ACPI/IORT: Drop the unused @ops of iort_add_device_replay()\n\nRemove redundant code and fix documentation of caching behaviour for the\nHVC_SOFT_RESTART hypercall.\n(Pingfan Liu)\n* for-next/boot:\n  Documentation/kvm/arm: improve description of HVC_SOFT_RESTART\n  arm64/relocate_kernel: remove redundant code\n\nImprove reporting of unexpected kernel traps due to BPF JIT failure.\n(Will Deacon)\n* for-next/bpf:\n  arm64: Improve diagnostics when trapping BRK with FAULT_BRK_IMM\n\nImprove robustness of user-visible HWCAP strings and their corresponding\nnumerical constants.\n(Anshuman Khandual)\n* for-next/cpuinfo:\n  arm64/cpuinfo: Define HWCAP name arrays per their actual bit definitions\n\nCleanups to handling of SVE and FPSIMD register state in preparation\nfor potential future optimisation of handling across syscalls.\n(Julien Grall)\n* for-next/fpsimd:\n  arm64/sve: Implement a helper to load SVE registers from FPSIMD state\n  arm64/sve: Implement a helper to flush SVE registers\n  arm64/fpsimdmacros: Allow the macro \"for\" to be used in more cases\n  arm64/fpsimdmacros: Introduce a macro to update ZCR_EL1.LEN\n  arm64/signal: Update the comment in preserve_sve_context\n  arm64/fpsimd: Update documentation of do_sve_acc\n\nMiscellaneous changes.\n(Tian Tao and others)\n* for-next/misc:\n  arm64/mm: return cpu_all_mask when node is NUMA_NO_NODE\n  arm64: mm: Fix missing-prototypes in pageattr.c\n  arm64/fpsimd: Fix missing-prototypes in fpsimd.c\n  arm64: hibernate: Remove unused including <linux/version.h>\n  arm64/mm: Refactor {pgd, pud, pmd, pte}_ERROR()\n  arm64: Remove the unused include statements\n  arm64: get rid of TEXT_OFFSET\n  arm64: traps: Add str of description to panic() in die()\n\nMemory management updates and cleanups.\n(Anshuman Khandual and others)\n* for-next/mm:\n  arm64: dbm: Invalidate local TLB when setting TCR_EL1.HD\n  arm64: mm: Make flush_tlb_fix_spurious_fault() a no-op\n  arm64/mm: Unify CONT_PMD_SHIFT\n  arm64/mm: Unify CONT_PTE_SHIFT\n  arm64/mm: Remove CONT_RANGE_OFFSET\n  arm64/mm: Enable THP migration\n  arm64/mm: Change THP helpers to comply with generic MM semantics\n  arm64/mm/ptdump: Add address markers for BPF regions\n\nAllow prefetchable PCI BARs to be exposed to userspace using normal\nnon-cacheable mappings.\n(Clint Sbisa)\n* for-next/pci:\n  arm64: Enable PCI write-combine resources under sysfs\n\nPerf/PMU driver updates.\n(Julien Thierry and others)\n* for-next/perf:\n  perf: arm-cmn: Fix conversion specifiers for node type\n  perf: arm-cmn: Fix unsigned comparison to less than zero\n  arm_pmu: arm64: Use NMIs for PMU\n  arm_pmu: Introduce pmu_irq_ops\n  KVM: arm64: pmu: Make overflow handler NMI safe\n  arm64: perf: Defer irq_work to IPI_IRQ_WORK\n  arm64: perf: Remove PMU locking\n  arm64: perf: Avoid PMXEV* indirection\n  arm64: perf: Add missing ISB in armv8pmu_enable_counter()\n  perf: Add Arm CMN-600 PMU driver\n  perf: Add Arm CMN-600 DT binding\n  arm64: perf: Add support caps under sysfs\n  drivers/perf: thunderx2_pmu: Fix memory resource error handling\n  drivers/perf: xgene_pmu: Fix uninitialized resource struct\n  perf: arm_dsu: Support DSU ACPI devices\n  arm64: perf: Remove unnecessary event_idx check\n  drivers/perf: hisi: Add missing include of linux/module.h\n  arm64: perf: Add general hardware LLC events for PMUv3\n\nSupport for the Armv8.3 Pointer Authentication enhancements.\n(By Amit Daniel Kachhap)\n* for-next/ptrauth:\n  arm64: kprobe: clarify the comment of steppable hint instructions\n  arm64: kprobe: disable probe of fault prone ptrauth instruction\n  arm64: cpufeature: Modify address authentication cpufeature to exact\n  arm64: ptrauth: Introduce Armv8.3 pointer authentication enhancements\n  arm64: traps: Allow force_signal_inject to pass esr error code\n  arm64: kprobe: add checks for ARMv8.3-PAuth combined instructions\n\nTonnes of cleanup to the SDEI driver.\n(Gavin Shan)\n* for-next/sdei:\n  firmware: arm_sdei: Remove _sdei_event_unregister()\n  firmware: arm_sdei: Remove _sdei_event_register()\n  firmware: arm_sdei: Introduce sdei_do_local_call()\n  firmware: arm_sdei: Cleanup on cross call function\n  firmware: arm_sdei: Remove while loop in sdei_event_unregister()\n  firmware: arm_sdei: Remove while loop in sdei_event_register()\n  firmware: arm_sdei: Remove redundant error message in sdei_probe()\n  firmware: arm_sdei: Remove duplicate check in sdei_get_conduit()\n  firmware: arm_sdei: Unregister driver on error in sdei_init()\n  firmware: arm_sdei: Avoid nested statements in sdei_init()\n  firmware: arm_sdei: Retrieve event number from event instance\n  firmware: arm_sdei: Common block for failing path in sdei_event_create()\n  firmware: arm_sdei: Remove sdei_is_err()\n\nSelftests for Pointer Authentication and FPSIMD/SVE context-switching.\n(Mark Brown and Boyan Karatotev)\n* for-next/selftests:\n  selftests: arm64: Add build and documentation for FP tests\n  selftests: arm64: Add wrapper scripts for stress tests\n  selftests: arm64: Add utility to set SVE vector lengths\n  selftests: arm64: Add stress tests for FPSMID and SVE context switching\n  selftests: arm64: Add test for the SVE ptrace interface\n  selftests: arm64: Test case for enumeration of SVE vector lengths\n  kselftests/arm64: add PAuth tests for single threaded consistency and differently initialized keys\n  kselftests/arm64: add PAuth test for whether exec() changes keys\n  kselftests/arm64: add nop checks for PAuth tests\n  kselftests/arm64: add a basic Pointer Authentication test\n\nImplementation of ARCH_STACKWALK for unwinding.\n(Mark Brown)\n* for-next/stacktrace:\n  arm64: Move console stack display code to stacktrace.c\n  arm64: stacktrace: Convert to ARCH_STACKWALK\n  arm64: stacktrace: Make stack walk callback consistent with generic code\n  stacktrace: Remove reliable argument from arch_stack_walk() callback\n\nSupport for ASID pinning, which is required when sharing page-tables with\nthe SMMU.\n(Jean-Philippe Brucker)\n* for-next/svm:\n  arm64: cpufeature: Export symbol read_sanitised_ftr_reg()\n  arm64: mm: Pin down ASIDs for sharing mm with devices\n\nRely on firmware tables for establishing CPU topology.\n(Valentin Schneider)\n* for-next/topology:\n  arm64: topology: Stop using MPIDR for topology information\n\nSpelling fixes.\n(Xiaoming Ni and Yanfei Xu)\n* for-next/tpyos:\n  arm64/numa: Fix a typo in comment of arm64_numa_init\n  arm64: fix some spelling mistakes in the comments by codespell\n\nvDSO cleanups.\n(Will Deacon)\n* for-next/vdso:\n  arm64: vdso: Fix unusual formatting in *setup_additional_pages()\n  arm64: vdso32: Remove a bunch of #ifdef CONFIG_COMPAT_VDSO guards",
  "author_name": "Will Deacon",
  "author_email": "will@kernel.org",
  "author_date": "Fri Oct 2 12:01:41 2020 +0100",
  "author_date_iso": "2020-10-02T12:01:41+01:00",
  "committer_name": "Will Deacon",
  "committer_email": "will@kernel.org",
  "committer_date": "Fri Oct 2 12:01:41 2020 +0100",
  "committer_date_iso": "2020-10-02T12:01:41+01:00",
  "files_changed": [
    "arch/arm64/Kconfig",
    "arch/arm64/include/asm/pgtable.h",
    "arch/arm64/include/asm/sysreg.h",
    "arch/arm64/kernel/cpufeature.c",
    "arch/arm64/kernel/fpsimd.c",
    "arch/arm64/kernel/traps.c",
    "arch/arm64/mm/numa.c"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "Documentation/admin-guide/perf/arm-cmn.rst",
      "insertions": 65,
      "deletions": 0
    },
    {
      "file": "Documentation/admin-guide/perf/index.rst",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "Documentation/devicetree/bindings/perf/arm,cmn.yaml",
      "insertions": 57,
      "deletions": 0
    },
    {
      "file": "Documentation/virt/kvm/arm/hyp-abi.rst",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/arm64/Kconfig",
      "insertions": 12,
      "deletions": 1
    },
    {
      "file": "arch/arm64/Makefile",
      "insertions": 0,
      "deletions": 6
    },
    {
      "file": "arch/arm64/include/asm/boot.h",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "arch/arm64/include/asm/cpu_ops.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/cpufeature.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/esr.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/exception.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/extable.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/fpsimd.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/fpsimdmacros.h",
      "insertions": 38,
      "deletions": 10
    },
    {
      "file": "arch/arm64/include/asm/hwcap.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/insn.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/kernel-pgtable.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/kvm_arm.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/memory.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/mmu.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/mmu_context.h",
      "insertions": 10,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/numa.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/page-def.h",
      "insertions": 0,
      "deletions": 5
    },
    {
      "file": "arch/arm64/include/asm/pci.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/perf_event.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/pgtable-hwdef.h",
      "insertions": 3,
      "deletions": 13
    },
    {
      "file": "arch/arm64/include/asm/pgtable-prot.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/pgtable.h",
      "insertions": 52,
      "deletions": 12
    },
    {
      "file": "arch/arm64/include/asm/stacktrace.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/sysreg.h",
      "insertions": 18,
      "deletions": 8
    },
    {
      "file": "arch/arm64/include/asm/traps.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/Makefile",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kernel/cpu-reset.S",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/cpu_errata.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "insertions": 37,
      "deletions": 9
    },
    {
      "file": "arch/arm64/kernel/cpuinfo.c",
      "insertions": 92,
      "deletions": 85
    },
    {
      "file": "arch/arm64/kernel/debug-monitors.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/entry-common.c",
      "insertions": 21,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/entry-fpsimd.S",
      "insertions": 25,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/fpsimd.c",
      "insertions": 5,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kernel/head.S",
      "insertions": 6,
      "deletions": 10
    },
    {
      "file": "arch/arm64/kernel/hibernate.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/image.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/insn.c",
      "insertions": 4,
      "deletions": 7
    },
    {
      "file": "arch/arm64/kernel/perf_callchain.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kernel/perf_event.c",
      "insertions": 170,
      "deletions": 102
    },
    {
      "file": "arch/arm64/kernel/perf_regs.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/probes/decode-insn.c",
      "insertions": 6,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kernel/relocate_kernel.S",
      "insertions": 0,
      "deletions": 12
    },
    {
      "file": "arch/arm64/kernel/return_address.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "arch/arm64/kernel/signal.c",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/smp_spin_table.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kernel/stacktrace.c",
      "insertions": 61,
      "deletions": 56
    },
    {
      "file": "arch/arm64/kernel/topology.c",
      "insertions": 17,
      "deletions": 15
    },
    {
      "file": "arch/arm64/kernel/traps.c",
      "insertions": 38,
      "deletions": 94
    },
    {
      "file": "arch/arm64/kernel/vdso.c",
      "insertions": 17,
      "deletions": 34
    },
    {
      "file": "arch/arm64/kernel/vmlinux.lds.S",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kvm/pmu-emul.c",
      "insertions": 25,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kvm/vgic/vgic-mmio-v3.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/mm/Makefile",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/mm/context.c",
      "insertions": 99,
      "deletions": 6
    },
    {
      "file": "arch/arm64/mm/extable.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "arch/arm64/mm/fault.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "arch/arm64/mm/numa.c",
      "insertions": 6,
      "deletions": 2
    },
    {
      "file": "arch/arm64/mm/pageattr.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/mm/{dump.c => ptdump.c}",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/s390/kernel/stacktrace.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/x86/kernel/stacktrace.c",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "drivers/acpi/arm64/iort.c",
      "insertions": 2,
      "deletions": 8
    },
    {
      "file": "drivers/firmware/arm_sdei.c",
      "insertions": 136,
      "deletions": 169
    },
    {
      "file": "drivers/firmware/efi/libstub/Makefile",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/firmware/efi/libstub/arm64-stub.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "drivers/perf/Kconfig",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "drivers/perf/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/perf/arm-cmn.c",
      "insertions": 1641,
      "deletions": 0
    },
    {
      "file": "drivers/perf/arm_dsu_pmu.c",
      "insertions": 57,
      "deletions": 6
    },
    {
      "file": "drivers/perf/arm_pmu.c",
      "insertions": 134,
      "deletions": 21
    },
    {
      "file": "drivers/perf/hisilicon/hisi_uncore_pmu.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/perf/thunderx2_pmu.c",
      "insertions": 5,
      "deletions": 2
    },
    {
      "file": "drivers/perf/xgene_pmu.c",
      "insertions": 17,
      "deletions": 15
    },
    {
      "file": "include/kvm/arm_pmu.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/perf/arm_pmu.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "include/linux/stacktrace.h",
      "insertions": 1,
      "deletions": 4
    },
    {
      "file": "kernel/stacktrace.c",
      "insertions": 3,
      "deletions": 5
    },
    {
      "file": "tools/testing/selftests/arm64/Makefile",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/arm64/fp/.gitignore",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/Makefile",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/README",
      "insertions": 100,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/asm-offsets.h",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/assembler.h",
      "insertions": 57,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/fpsimd-stress",
      "insertions": 60,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/fpsimd-test.S",
      "insertions": 482,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/sve-probe-vls.c",
      "insertions": 58,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/sve-ptrace-asm.S",
      "insertions": 33,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/sve-ptrace.c",
      "insertions": 336,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/sve-stress",
      "insertions": 59,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/sve-test.S",
      "insertions": 672,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/fp/vlset.c",
      "insertions": 155,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/pauth/.gitignore",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/pauth/Makefile",
      "insertions": 39,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/pauth/exec_target.c",
      "insertions": 34,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/pauth/helper.c",
      "insertions": 39,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/pauth/helper.h",
      "insertions": 28,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/pauth/pac.c",
      "insertions": 368,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/arm64/pauth/pac_corruptor.S",
      "insertions": 19,
      "deletions": 0
    }
  ],
  "total_insertions": 5565,
  "total_deletions": 777,
  "total_changes": 6342,
  "parents": [
    "f75aef392f869018f78cfedf3c320a6b3fcfda6b",
    "c2bea7a1a1c0c4c5c970696ff556a73f55f998eb",
    "3a1793066fdfbbd657d9591cc03d6e1b6634a587",
    "0fdb64c2a303e4d2562245501920241c0e507951",
    "4e56de82d4ec9d98ffdc9e0387d8fdecbf496226",
    "9c4b4c701e53183df94f6b9802b63762f0c0e1e3",
    "a194c5f2d2b3a05428805146afcabe5140b5d378",
    "80d6b466679c3dced3b359a6379c6d913de39afd",
    "5fd39dc220279108131edbc85832a5fef821a826",
    "887e2cff0f8dc4dac4c35e631b711325c6dd65b8",
    "03c9c8fad6cb5e8fdfb40287fa1cdf8ee2db0b67",
    "4b2b76cbbc8ff5dabc18123d94a1125143aea567",
    "e093256d14fbf9e8aaf02ed0ac69087eef6792bd",
    "9e0f085c2b33ebe13bcec53cbacce505fe78fde7",
    "6f3c4afae9805bda1682e0ad17b8ce56d85c9a83",
    "3102bc0e6ac752cc5df896acb557d779af4d82a1",
    "9a747c91e8d69d7283c850031d2462f4d27bf25b",
    "2a30aca81a72d71e128eb692cc4755f33e317670"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/sysreg.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/pgtable.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/fpsimd.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/mm/numa.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/traps.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}