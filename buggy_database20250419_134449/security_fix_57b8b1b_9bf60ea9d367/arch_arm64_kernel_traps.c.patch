commit 57b8b1b4351dafe94de09a2aab5eba885b6705f0
Merge: f75aef392f86 c2bea7a1a1c0 3a1793066fdf 0fdb64c2a303 4e56de82d4ec 9c4b4c701e53 a194c5f2d2b3 80d6b466679c 5fd39dc22027 887e2cff0f8d 03c9c8fad6cb 4b2b76cbbc8f e093256d14fb 9e0f085c2b33 6f3c4afae980 3102bc0e6ac7 9a747c91e8d6 2a30aca81a72
Author: Will Deacon <will@kernel.org>
Date:   Fri Oct 2 12:01:41 2020 +0100

    Merge branches 'for-next/acpi', 'for-next/boot', 'for-next/bpf', 'for-next/cpuinfo', 'for-next/fpsimd', 'for-next/misc', 'for-next/mm', 'for-next/pci', 'for-next/perf', 'for-next/ptrauth', 'for-next/sdei', 'for-next/selftests', 'for-next/stacktrace', 'for-next/svm', 'for-next/topology', 'for-next/tpyos' and 'for-next/vdso' into for-next/core
    
    Remove unused functions and parameters from ACPI IORT code.
    (Zenghui Yu via Lorenzo Pieralisi)
    * for-next/acpi:
      ACPI/IORT: Remove the unused inline functions
      ACPI/IORT: Drop the unused @ops of iort_add_device_replay()
    
    Remove redundant code and fix documentation of caching behaviour for the
    HVC_SOFT_RESTART hypercall.
    (Pingfan Liu)
    * for-next/boot:
      Documentation/kvm/arm: improve description of HVC_SOFT_RESTART
      arm64/relocate_kernel: remove redundant code
    
    Improve reporting of unexpected kernel traps due to BPF JIT failure.
    (Will Deacon)
    * for-next/bpf:
      arm64: Improve diagnostics when trapping BRK with FAULT_BRK_IMM
    
    Improve robustness of user-visible HWCAP strings and their corresponding
    numerical constants.
    (Anshuman Khandual)
    * for-next/cpuinfo:
      arm64/cpuinfo: Define HWCAP name arrays per their actual bit definitions
    
    Cleanups to handling of SVE and FPSIMD register state in preparation
    for potential future optimisation of handling across syscalls.
    (Julien Grall)
    * for-next/fpsimd:
      arm64/sve: Implement a helper to load SVE registers from FPSIMD state
      arm64/sve: Implement a helper to flush SVE registers
      arm64/fpsimdmacros: Allow the macro "for" to be used in more cases
      arm64/fpsimdmacros: Introduce a macro to update ZCR_EL1.LEN
      arm64/signal: Update the comment in preserve_sve_context
      arm64/fpsimd: Update documentation of do_sve_acc
    
    Miscellaneous changes.
    (Tian Tao and others)
    * for-next/misc:
      arm64/mm: return cpu_all_mask when node is NUMA_NO_NODE
      arm64: mm: Fix missing-prototypes in pageattr.c
      arm64/fpsimd: Fix missing-prototypes in fpsimd.c
      arm64: hibernate: Remove unused including <linux/version.h>
      arm64/mm: Refactor {pgd, pud, pmd, pte}_ERROR()
      arm64: Remove the unused include statements
      arm64: get rid of TEXT_OFFSET
      arm64: traps: Add str of description to panic() in die()
    
    Memory management updates and cleanups.
    (Anshuman Khandual and others)
    * for-next/mm:
      arm64: dbm: Invalidate local TLB when setting TCR_EL1.HD
      arm64: mm: Make flush_tlb_fix_spurious_fault() a no-op
      arm64/mm: Unify CONT_PMD_SHIFT
      arm64/mm: Unify CONT_PTE_SHIFT
      arm64/mm: Remove CONT_RANGE_OFFSET
      arm64/mm: Enable THP migration
      arm64/mm: Change THP helpers to comply with generic MM semantics
      arm64/mm/ptdump: Add address markers for BPF regions
    
    Allow prefetchable PCI BARs to be exposed to userspace using normal
    non-cacheable mappings.
    (Clint Sbisa)
    * for-next/pci:
      arm64: Enable PCI write-combine resources under sysfs
    
    Perf/PMU driver updates.
    (Julien Thierry and others)
    * for-next/perf:
      perf: arm-cmn: Fix conversion specifiers for node type
      perf: arm-cmn: Fix unsigned comparison to less than zero
      arm_pmu: arm64: Use NMIs for PMU
      arm_pmu: Introduce pmu_irq_ops
      KVM: arm64: pmu: Make overflow handler NMI safe
      arm64: perf: Defer irq_work to IPI_IRQ_WORK
      arm64: perf: Remove PMU locking
      arm64: perf: Avoid PMXEV* indirection
      arm64: perf: Add missing ISB in armv8pmu_enable_counter()
      perf: Add Arm CMN-600 PMU driver
      perf: Add Arm CMN-600 DT binding
      arm64: perf: Add support caps under sysfs
      drivers/perf: thunderx2_pmu: Fix memory resource error handling
      drivers/perf: xgene_pmu: Fix uninitialized resource struct
      perf: arm_dsu: Support DSU ACPI devices
      arm64: perf: Remove unnecessary event_idx check
      drivers/perf: hisi: Add missing include of linux/module.h
      arm64: perf: Add general hardware LLC events for PMUv3
    
    Support for the Armv8.3 Pointer Authentication enhancements.
    (By Amit Daniel Kachhap)
    * for-next/ptrauth:
      arm64: kprobe: clarify the comment of steppable hint instructions
      arm64: kprobe: disable probe of fault prone ptrauth instruction
      arm64: cpufeature: Modify address authentication cpufeature to exact
      arm64: ptrauth: Introduce Armv8.3 pointer authentication enhancements
      arm64: traps: Allow force_signal_inject to pass esr error code
      arm64: kprobe: add checks for ARMv8.3-PAuth combined instructions
    
    Tonnes of cleanup to the SDEI driver.
    (Gavin Shan)
    * for-next/sdei:
      firmware: arm_sdei: Remove _sdei_event_unregister()
      firmware: arm_sdei: Remove _sdei_event_register()
      firmware: arm_sdei: Introduce sdei_do_local_call()
      firmware: arm_sdei: Cleanup on cross call function
      firmware: arm_sdei: Remove while loop in sdei_event_unregister()
      firmware: arm_sdei: Remove while loop in sdei_event_register()
      firmware: arm_sdei: Remove redundant error message in sdei_probe()
      firmware: arm_sdei: Remove duplicate check in sdei_get_conduit()
      firmware: arm_sdei: Unregister driver on error in sdei_init()
      firmware: arm_sdei: Avoid nested statements in sdei_init()
      firmware: arm_sdei: Retrieve event number from event instance
      firmware: arm_sdei: Common block for failing path in sdei_event_create()
      firmware: arm_sdei: Remove sdei_is_err()
    
    Selftests for Pointer Authentication and FPSIMD/SVE context-switching.
    (Mark Brown and Boyan Karatotev)
    * for-next/selftests:
      selftests: arm64: Add build and documentation for FP tests
      selftests: arm64: Add wrapper scripts for stress tests
      selftests: arm64: Add utility to set SVE vector lengths
      selftests: arm64: Add stress tests for FPSMID and SVE context switching
      selftests: arm64: Add test for the SVE ptrace interface
      selftests: arm64: Test case for enumeration of SVE vector lengths
      kselftests/arm64: add PAuth tests for single threaded consistency and differently initialized keys
      kselftests/arm64: add PAuth test for whether exec() changes keys
      kselftests/arm64: add nop checks for PAuth tests
      kselftests/arm64: add a basic Pointer Authentication test
    
    Implementation of ARCH_STACKWALK for unwinding.
    (Mark Brown)
    * for-next/stacktrace:
      arm64: Move console stack display code to stacktrace.c
      arm64: stacktrace: Convert to ARCH_STACKWALK
      arm64: stacktrace: Make stack walk callback consistent with generic code
      stacktrace: Remove reliable argument from arch_stack_walk() callback
    
    Support for ASID pinning, which is required when sharing page-tables with
    the SMMU.
    (Jean-Philippe Brucker)
    * for-next/svm:
      arm64: cpufeature: Export symbol read_sanitised_ftr_reg()
      arm64: mm: Pin down ASIDs for sharing mm with devices
    
    Rely on firmware tables for establishing CPU topology.
    (Valentin Schneider)
    * for-next/topology:
      arm64: topology: Stop using MPIDR for topology information
    
    Spelling fixes.
    (Xiaoming Ni and Yanfei Xu)
    * for-next/tpyos:
      arm64/numa: Fix a typo in comment of arm64_numa_init
      arm64: fix some spelling mistakes in the comments by codespell
    
    vDSO cleanups.
    (Will Deacon)
    * for-next/vdso:
      arm64: vdso: Fix unusual formatting in *setup_additional_pages()
      arm64: vdso32: Remove a bunch of #ifdef CONFIG_COMPAT_VDSO guards