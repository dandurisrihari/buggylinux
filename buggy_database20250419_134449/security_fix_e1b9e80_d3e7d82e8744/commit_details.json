{
  "hash": "e1b9e80236c540fa85d76e2d510d1b38e1968c5d",
  "hash_short": "e1b9e802",
  "subject": "net: mscc: ocelot: fix QoS class for injected packets with \"ocelot-8021q\"",
  "body": "There are 2 distinct code paths (listed below) in the source code which\nset up an injection header for Ocelot(-like) switches. Code path (2)\nlacks the QoS class and source port being set correctly. Especially the\nimproper QoS classification is a problem for the \"ocelot-8021q\"\nalternative DSA tagging protocol, because we support tc-taprio and each\npacket needs to be scheduled precisely through its time slot. This\nincludes PTP, which is normally assigned to a traffic class other than\n0, but would be sent through TC 0 nonetheless.\n\nThe code paths are:\n\n(1) ocelot_xmit_common() from net/dsa/tag_ocelot.c - called only by the\n    standard \"ocelot\" DSA tagging protocol which uses NPI-based\n    injection - sets up bit fields in the tag manually to account for\n    a small difference (destination port offset) between Ocelot and\n    Seville. Namely, ocelot_ifh_set_dest() is omitted out of\n    ocelot_xmit_common(), because there's also seville_ifh_set_dest().\n\n(2) ocelot_ifh_set_basic(), called by:\n    - ocelot_fdma_prepare_skb() for FDMA transmission of the ocelot\n      switchdev driver\n    - ocelot_port_xmit() -> ocelot_port_inject_frame() for\n      register-based transmission of the ocelot switchdev driver\n    - felix_port_deferred_xmit() -> ocelot_port_inject_frame() for the\n      DSA tagger ocelot-8021q when it must transmit PTP frames (also\n      through register-based injection).\n    sets the bit fields according to its own logic.\n\nThe problem is that (2) doesn't call ocelot_ifh_set_qos_class().\nCopying that logic from ocelot_xmit_common() fixes that.\n\nUnfortunately, although desirable, it is not easily possible to\nde-duplicate code paths (1) and (2), and make net/dsa/tag_ocelot.c\ndirectly call ocelot_ifh_set_basic()), because of the ocelot/seville\ndifference. This is the \"minimal\" fix with some logic duplicated (but\nat least more consolidated).\n\nFixes: 0a6f17c6ae21 (\"net: dsa: tag_ocelot_8021q: add support for PTP timestamping\")\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "net: mscc: ocelot: fix QoS class for injected packets with \"ocelot-8021q\"\n\nThere are 2 distinct code paths (listed below) in the source code which\nset up an injection header for Ocelot(-like) switches. Code path (2)\nlacks the QoS class and source port being set correctly. Especially the\nimproper QoS classification is a problem for the \"ocelot-8021q\"\nalternative DSA tagging protocol, because we support tc-taprio and each\npacket needs to be scheduled precisely through its time slot. This\nincludes PTP, which is normally assigned to a traffic class other than\n0, but would be sent through TC 0 nonetheless.\n\nThe code paths are:\n\n(1) ocelot_xmit_common() from net/dsa/tag_ocelot.c - called only by the\n    standard \"ocelot\" DSA tagging protocol which uses NPI-based\n    injection - sets up bit fields in the tag manually to account for\n    a small difference (destination port offset) between Ocelot and\n    Seville. Namely, ocelot_ifh_set_dest() is omitted out of\n    ocelot_xmit_common(), because there's also seville_ifh_set_dest().\n\n(2) ocelot_ifh_set_basic(), called by:\n    - ocelot_fdma_prepare_skb() for FDMA transmission of the ocelot\n      switchdev driver\n    - ocelot_port_xmit() -> ocelot_port_inject_frame() for\n      register-based transmission of the ocelot switchdev driver\n    - felix_port_deferred_xmit() -> ocelot_port_inject_frame() for the\n      DSA tagger ocelot-8021q when it must transmit PTP frames (also\n      through register-based injection).\n    sets the bit fields according to its own logic.\n\nThe problem is that (2) doesn't call ocelot_ifh_set_qos_class().\nCopying that logic from ocelot_xmit_common() fixes that.\n\nUnfortunately, although desirable, it is not easily possible to\nde-duplicate code paths (1) and (2), and make net/dsa/tag_ocelot.c\ndirectly call ocelot_ifh_set_basic()), because of the ocelot/seville\ndifference. This is the \"minimal\" fix with some logic duplicated (but\nat least more consolidated).\n\nFixes: 0a6f17c6ae21 (\"net: dsa: tag_ocelot_8021q: add support for PTP timestamping\")\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Vladimir Oltean",
  "author_email": "vladimir.oltean@nxp.com",
  "author_date": "Thu Aug 15 03:07:03 2024 +0300",
  "author_date_iso": "2024-08-15T03:07:03+03:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Fri Aug 16 09:59:32 2024 +0100",
  "committer_date_iso": "2024-08-16T09:59:32+01:00",
  "files_changed": [
    "drivers/net/ethernet/mscc/ocelot.c",
    "drivers/net/ethernet/mscc/ocelot_fdma.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/net/ethernet/mscc/ocelot.c",
      "insertions": 9,
      "deletions": 1
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot_fdma.c",
      "insertions": 0,
      "deletions": 1
    }
  ],
  "total_insertions": 9,
  "total_deletions": 2,
  "total_changes": 11,
  "parents": [
    "67c3ca2c5cfe6a50772514e3349b5e7b3b0fac03"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/ethernet/mscc/ocelot.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot_fdma.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}