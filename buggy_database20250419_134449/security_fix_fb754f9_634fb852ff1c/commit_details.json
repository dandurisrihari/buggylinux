{
  "hash": "fb754f958f8e46202c1efd7f66d5b3db1208117d",
  "hash_short": "fb754f95",
  "subject": "x86/mm/KASLR: Increase BRK pages for KASLR memory randomization",
  "body": "Default implementation expects 6 pages maximum are needed for low page\nallocations. If KASLR memory randomization is enabled, the worse case\nof e820 layout would require 12 pages (no large pages). It is due to the\nPUD level randomization and the variable e820 memory layout.\n\nThis bug was found while doing extensive testing of KASLR memory\nrandomization on different type of hardware.\n\nSigned-off-by: Thomas Garnier <thgarnie@google.com>\nCc: Aleksey Makarov <aleksey.makarov@linaro.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Baoquan He <bhe@redhat.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Borislav Petkov <bp@suse.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Christian Borntraeger <borntraeger@de.ibm.com>\nCc: Dan Williams <dan.j.williams@intel.com>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: Dave Young <dyoung@redhat.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Fabian Frederick <fabf@skynet.be>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Joerg Roedel <jroedel@suse.de>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nCc: Kees Cook <keescook@chromium.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Lv Zheng <lv.zheng@intel.com>\nCc: Mark Salter <msalter@redhat.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Rafael J . Wysocki <rafael.j.wysocki@intel.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Toshi Kani <toshi.kani@hp.com>\nCc: kernel-hardening@lists.openwall.com\nFixes: 021182e52fe0 (\"Enable KASLR for physical mapping memory regions\")\nLink: http://lkml.kernel.org/r/1470762665-88032-2-git-send-email-thgarnie@google.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "x86/mm/KASLR: Increase BRK pages for KASLR memory randomization\n\nDefault implementation expects 6 pages maximum are needed for low page\nallocations. If KASLR memory randomization is enabled, the worse case\nof e820 layout would require 12 pages (no large pages). It is due to the\nPUD level randomization and the variable e820 memory layout.\n\nThis bug was found while doing extensive testing of KASLR memory\nrandomization on different type of hardware.\n\nSigned-off-by: Thomas Garnier <thgarnie@google.com>\nCc: Aleksey Makarov <aleksey.makarov@linaro.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Baoquan He <bhe@redhat.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Borislav Petkov <bp@suse.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Christian Borntraeger <borntraeger@de.ibm.com>\nCc: Dan Williams <dan.j.williams@intel.com>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: Dave Young <dyoung@redhat.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Fabian Frederick <fabf@skynet.be>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Joerg Roedel <jroedel@suse.de>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nCc: Kees Cook <keescook@chromium.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Lv Zheng <lv.zheng@intel.com>\nCc: Mark Salter <msalter@redhat.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Rafael J . Wysocki <rafael.j.wysocki@intel.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Toshi Kani <toshi.kani@hp.com>\nCc: kernel-hardening@lists.openwall.com\nFixes: 021182e52fe0 (\"Enable KASLR for physical mapping memory regions\")\nLink: http://lkml.kernel.org/r/1470762665-88032-2-git-send-email-thgarnie@google.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "Thomas Garnier",
  "author_email": "thgarnie@google.com",
  "author_date": "Tue Aug 9 10:11:05 2016 -0700",
  "author_date_iso": "2016-08-09T10:11:05-07:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Wed Aug 10 14:45:19 2016 +0200",
  "committer_date_iso": "2016-08-10T14:45:19+02:00",
  "files_changed": [
    "arch/x86/mm/init.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/mm/init.c",
      "insertions": 12,
      "deletions": 2
    }
  ],
  "total_insertions": 12,
  "total_deletions": 2,
  "total_changes": 14,
  "parents": [
    "c7d2361f7524f365c1ae42f47880e3fa9efb2c2a"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/mm/init.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}