{
  "hash": "900cf086fd2fbad07f72f4575449e0d0958f860f",
  "hash_short": "900cf086",
  "subject": "Be more robust about bad arguments in get_user_pages()",
  "body": "So I spent a while pounding my head against my monitor trying to figure\nout the vmsplice() vulnerability - how could a failure to check for\n*read* access turn into a root exploit? It turns out that it's a buffer\noverflow problem which is made easy by the way get_user_pages() is\ncoded.\n\nIn particular, \"len\" is a signed int, and it is only checked at the\n*end* of a do {} while() loop.  So, if it is passed in as zero, the loop\nwill execute once and decrement len to -1.  At that point, the loop will\nproceed until the next invalid address is found; in the process, it will\nlikely overflow the pages array passed in to get_user_pages().\n\nI think that, if get_user_pages() has been asked to grab zero pages,\nthat's what it should do.  Thus this patch; it is, among other things,\nenough to block the (already fixed) root exploit and any others which\nmight be lurking in similar code.  I also think that the number of pages\nshould be unsigned, but changing the prototype of this function probably\nrequires some more careful review.\n\nSigned-off-by: Jonathan Corbet <corbet@lwn.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "Be more robust about bad arguments in get_user_pages()\n\nSo I spent a while pounding my head against my monitor trying to figure\nout the vmsplice() vulnerability - how could a failure to check for\n*read* access turn into a root exploit? It turns out that it's a buffer\noverflow problem which is made easy by the way get_user_pages() is\ncoded.\n\nIn particular, \"len\" is a signed int, and it is only checked at the\n*end* of a do {} while() loop.  So, if it is passed in as zero, the loop\nwill execute once and decrement len to -1.  At that point, the loop will\nproceed until the next invalid address is found; in the process, it will\nlikely overflow the pages array passed in to get_user_pages().\n\nI think that, if get_user_pages() has been asked to grab zero pages,\nthat's what it should do.  Thus this patch; it is, among other things,\nenough to block the (already fixed) root exploit and any others which\nmight be lurking in similar code.  I also think that the number of pages\nshould be unsigned, but changing the prototype of this function probably\nrequires some more careful review.\n\nSigned-off-by: Jonathan Corbet <corbet@lwn.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Jonathan Corbet",
  "author_email": "corbet@lwn.net",
  "author_date": "Mon Feb 11 16:17:33 2008 -0700",
  "author_date_iso": "2008-02-11T16:17:33-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@woody.linux-foundation.org",
  "committer_date": "Mon Feb 11 20:44:44 2008 -0800",
  "committer_date_iso": "2008-02-11T20:44:44-08:00",
  "files_changed": [
    "mm/memory.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "mm/memory.c",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 2,
  "total_deletions": 0,
  "total_changes": 2,
  "parents": [
    "b1292b17dc03fcd90f3301974cea1b7c61371ba5"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.25",
    "v2.6.25-rc2",
    "v2.6.25-rc3",
    "v2.6.25-rc4",
    "v2.6.25-rc5",
    "v2.6.25-rc6",
    "v2.6.25-rc7",
    "v2.6.25-rc8",
    "v2.6.25-rc9",
    "v2.6.26"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability",
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "mm/memory.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}