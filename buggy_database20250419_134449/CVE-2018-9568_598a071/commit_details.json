{
  "hash": "598a0717a816abc8f5d3c4598628338b9190d127",
  "hash_short": "598a0717",
  "subject": "mm/slab: validate cache membership under freelist hardening",
  "body": "Patch series \"mm/slab: Improved sanity checking\".\n\nThis adds defenses against slab cache confusion (as seen in real-world\nexploits[1]) and gracefully handles type confusions when trying to look\nup slab caches from an arbitrary page.  (Also is patch 3: new LKDTM\ntests for these defenses as well as for the existing double-free\ndetection.\n\nThis patch (of 3):\n\nWhen building under CONFIG_SLAB_FREELIST_HARDENING, it makes sense to\nperform sanity-checking on the assumed slab cache during\nkmem_cache_free() to make sure the kernel doesn't mix freelists across\nslab caches and corrupt memory (as seen in the exploitation of flaws\nlike CVE-2018-9568[1]).  Note that the prior code might WARN() but still\ncorrupt memory (i.e.  return the assumed cache instead of the owned\ncache).\n\nThere is no noticeable performance impact (changes are within noise).\nMeasuring parallel kernel builds, I saw the following with\nCONFIG_SLAB_FREELIST_HARDENED, before and after this patch:\n\nbefore:\n\n\tRun times: 288.85 286.53 287.09 287.07 287.21\n\tMin: 286.53 Max: 288.85 Mean: 287.35 Std Dev: 0.79\n\nafter:\n\n\tRun times: 289.58 287.40 286.97 287.20 287.01\n\tMin: 286.97 Max: 289.58 Mean: 287.63 Std Dev: 0.99\n\nDelta: 0.1% which is well below the standard deviation\n\n[1] https://github.com/ThomasKing2014/slides/raw/master/Building%20universal%20Android%20rooting%20with%20a%20type%20confusion%20vulnerability.pdf\n\nLink: http://lkml.kernel.org/r/20190530045017.15252-2-keescook@chromium.org\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Matthew Wilcox <willy@infradead.org>\nCc: Alexander Popov <alex.popov@linux.com>\nCc: Alexander Potapenko <glider@google.com>\nCc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "mm/slab: validate cache membership under freelist hardening\n\nPatch series \"mm/slab: Improved sanity checking\".\n\nThis adds defenses against slab cache confusion (as seen in real-world\nexploits[1]) and gracefully handles type confusions when trying to look\nup slab caches from an arbitrary page.  (Also is patch 3: new LKDTM\ntests for these defenses as well as for the existing double-free\ndetection.\n\nThis patch (of 3):\n\nWhen building under CONFIG_SLAB_FREELIST_HARDENING, it makes sense to\nperform sanity-checking on the assumed slab cache during\nkmem_cache_free() to make sure the kernel doesn't mix freelists across\nslab caches and corrupt memory (as seen in the exploitation of flaws\nlike CVE-2018-9568[1]).  Note that the prior code might WARN() but still\ncorrupt memory (i.e.  return the assumed cache instead of the owned\ncache).\n\nThere is no noticeable performance impact (changes are within noise).\nMeasuring parallel kernel builds, I saw the following with\nCONFIG_SLAB_FREELIST_HARDENED, before and after this patch:\n\nbefore:\n\n\tRun times: 288.85 286.53 287.09 287.07 287.21\n\tMin: 286.53 Max: 288.85 Mean: 287.35 Std Dev: 0.79\n\nafter:\n\n\tRun times: 289.58 287.40 286.97 287.20 287.01\n\tMin: 286.97 Max: 289.58 Mean: 287.63 Std Dev: 0.99\n\nDelta: 0.1% which is well below the standard deviation\n\n[1] https://github.com/ThomasKing2014/slides/raw/master/Building%20universal%20Android%20rooting%20with%20a%20type%20confusion%20vulnerability.pdf\n\nLink: http://lkml.kernel.org/r/20190530045017.15252-2-keescook@chromium.org\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Matthew Wilcox <willy@infradead.org>\nCc: Alexander Popov <alex.popov@linux.com>\nCc: Alexander Potapenko <glider@google.com>\nCc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Thu Jul 11 20:53:23 2019 -0700",
  "author_date_iso": "2019-07-11T20:53:23-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Jul 12 11:05:41 2019 -0700",
  "committer_date_iso": "2019-07-12T11:05:41-07:00",
  "files_changed": [
    "mm/slab.h"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "mm/slab.h",
      "insertions": 6,
      "deletions": 8
    }
  ],
  "total_insertions": 6,
  "total_deletions": 8,
  "total_changes": 14,
  "parents": [
    "d8b2fa657deaa73ff70d40aea9a54997fc0c7fc9"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.3",
    "v5.3-rc1",
    "v5.3-rc2",
    "v5.3-rc3",
    "v5.3-rc4",
    "v5.3-rc5",
    "v5.3-rc6",
    "v5.3-rc7",
    "v5.3-rc8",
    "v5.4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2018-9568"
    ],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "mm/slab.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}