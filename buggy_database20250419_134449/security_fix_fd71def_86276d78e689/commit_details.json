{
  "hash": "fd71def6d9abc5ae362fb9995d46049b7b0ed391",
  "hash_short": "fd71def6",
  "subject": "Merge tag 'for-6.15-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux",
  "body": "Pull btrfs updates from David Sterba:\n \"User visible changes:\n\n   - fall back to buffered write if direct io is done on a file that\n     requires checksums\n      - this avoids a problem with checksum mismatch errors, observed\n        e.g. on virtual images when writes to pages under writeback\n        cause the checksum mismatch reports\n      - this may lead to some performance degradation but currently the\n        recommended setup for VM images is to use the NOCOW file\n        attribute that also disables checksums\n\n   - fast/realtime zstd levels -15 to -1\n      - supported by mount options (compress=zstd:-5) and defrag ioctl\n      - improved speed, reduced compression ratio, check the commit for\n        sample measurements\n\n   - defrag ioctl extended to accept negative compression levels\n\n   - subpage mode\n      - remove warning when subpage mode is used, the feature is now\n        reasonably complete and tested\n      - in debug mode allow to create 2K b-tree nodes to allow testing\n        subpage on x86_64 with 4K pages too\n\n  Performance improvements:\n\n   - in send, better file path caching improves runtime (on sample load\n     by -30%)\n\n   - on s390x with hardware zlib support prepare the input buffer in a\n     better way to get the best results from the acceleration\n\n   - minor speed improvement in encoded read, avoid memory allocation in\n     synchronous mode\n\n  Core:\n\n   - enable stable writes on inodes, replacing manually waiting for\n     writeback and allowing to skip that on inodes without checksums\n\n   - add last checks and warnings for out-of-band dirty writes to pages,\n     requiring a fixup (\"fixup worker\"), this should not be necessary\n     since 5.8 where get_user_page() and pin_user_pages*() prevent this\n      - long history behind that, we'll be happy to remove the whole\n        infrastructure in the near future\n\n   - more folio API conversions and preparations for large folio support\n\n   - subpage cleanups and refactoring, split handling of data and\n     metadata to allow future support for large folios\n\n   - readpage works as block-by-block, no change for normal mode, this\n     is preparation for future subpage updates\n\n   - block group refcount fixes and hardening\n\n   - delayed iput fixes\n\n   - in zoned mode, fix zone activation on filesystem with missing\n     devices\n\n  Cleanups:\n\n   - inode parameter cleanups\n\n   - path auto-freeing updates\n\n   - code flow simplifications in send\n\n   - redundant parameter cleanups\"\n\n* tag 'for-6.15-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux: (164 commits)\n  btrfs: zoned: fix zone finishing with missing devices\n  btrfs: zoned: fix zone activation with missing devices\n  btrfs: remove end_no_trans label from btrfs_log_inode_parent()\n  btrfs: simplify condition for logging new dentries at btrfs_log_inode_parent()\n  btrfs: remove redundant else statement from btrfs_log_inode_parent()\n  btrfs: use memcmp_extent_buffer() at replay_one_extent()\n  btrfs: update outdated comment for overwrite_item()\n  btrfs: use variables to store extent buffer and slot at overwrite_item()\n  btrfs: avoid unnecessary memory allocation and copy at overwrite_item()\n  btrfs: don't clobber ret in btrfs_validate_super()\n  btrfs: prepare btrfs_page_mkwrite() for large folios\n  btrfs: prepare extent_io.c for future large folio support\n  btrfs: prepare btrfs_launcher_folio() for large folios support\n  btrfs: replace PAGE_SIZE with folio_size for subpage.[ch]\n  btrfs: add a size parameter to btrfs_alloc_subpage()\n  btrfs: subpage: make btrfs_is_subpage() check against a folio\n  btrfs: add extra warning if delayed iput is added when it's not allowed\n  btrfs: avoid redundant path slot assignment in btrfs_search_forward()\n  btrfs: remove unnecessary btrfs_key local variable in btrfs_search_forward()\n  btrfs: simplify the return value handling in search_ioctl()\n  ...",
  "full_message": "Merge tag 'for-6.15-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux\n\nPull btrfs updates from David Sterba:\n \"User visible changes:\n\n   - fall back to buffered write if direct io is done on a file that\n     requires checksums\n      - this avoids a problem with checksum mismatch errors, observed\n        e.g. on virtual images when writes to pages under writeback\n        cause the checksum mismatch reports\n      - this may lead to some performance degradation but currently the\n        recommended setup for VM images is to use the NOCOW file\n        attribute that also disables checksums\n\n   - fast/realtime zstd levels -15 to -1\n      - supported by mount options (compress=zstd:-5) and defrag ioctl\n      - improved speed, reduced compression ratio, check the commit for\n        sample measurements\n\n   - defrag ioctl extended to accept negative compression levels\n\n   - subpage mode\n      - remove warning when subpage mode is used, the feature is now\n        reasonably complete and tested\n      - in debug mode allow to create 2K b-tree nodes to allow testing\n        subpage on x86_64 with 4K pages too\n\n  Performance improvements:\n\n   - in send, better file path caching improves runtime (on sample load\n     by -30%)\n\n   - on s390x with hardware zlib support prepare the input buffer in a\n     better way to get the best results from the acceleration\n\n   - minor speed improvement in encoded read, avoid memory allocation in\n     synchronous mode\n\n  Core:\n\n   - enable stable writes on inodes, replacing manually waiting for\n     writeback and allowing to skip that on inodes without checksums\n\n   - add last checks and warnings for out-of-band dirty writes to pages,\n     requiring a fixup (\"fixup worker\"), this should not be necessary\n     since 5.8 where get_user_page() and pin_user_pages*() prevent this\n      - long history behind that, we'll be happy to remove the whole\n        infrastructure in the near future\n\n   - more folio API conversions and preparations for large folio support\n\n   - subpage cleanups and refactoring, split handling of data and\n     metadata to allow future support for large folios\n\n   - readpage works as block-by-block, no change for normal mode, this\n     is preparation for future subpage updates\n\n   - block group refcount fixes and hardening\n\n   - delayed iput fixes\n\n   - in zoned mode, fix zone activation on filesystem with missing\n     devices\n\n  Cleanups:\n\n   - inode parameter cleanups\n\n   - path auto-freeing updates\n\n   - code flow simplifications in send\n\n   - redundant parameter cleanups\"\n\n* tag 'for-6.15-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux: (164 commits)\n  btrfs: zoned: fix zone finishing with missing devices\n  btrfs: zoned: fix zone activation with missing devices\n  btrfs: remove end_no_trans label from btrfs_log_inode_parent()\n  btrfs: simplify condition for logging new dentries at btrfs_log_inode_parent()\n  btrfs: remove redundant else statement from btrfs_log_inode_parent()\n  btrfs: use memcmp_extent_buffer() at replay_one_extent()\n  btrfs: update outdated comment for overwrite_item()\n  btrfs: use variables to store extent buffer and slot at overwrite_item()\n  btrfs: avoid unnecessary memory allocation and copy at overwrite_item()\n  btrfs: don't clobber ret in btrfs_validate_super()\n  btrfs: prepare btrfs_page_mkwrite() for large folios\n  btrfs: prepare extent_io.c for future large folio support\n  btrfs: prepare btrfs_launcher_folio() for large folios support\n  btrfs: replace PAGE_SIZE with folio_size for subpage.[ch]\n  btrfs: add a size parameter to btrfs_alloc_subpage()\n  btrfs: subpage: make btrfs_is_subpage() check against a folio\n  btrfs: add extra warning if delayed iput is added when it's not allowed\n  btrfs: avoid redundant path slot assignment in btrfs_search_forward()\n  btrfs: remove unnecessary btrfs_key local variable in btrfs_search_forward()\n  btrfs: simplify the return value handling in search_ioctl()\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Thu Mar 27 12:51:48 2025 -0700",
  "author_date_iso": "2025-03-27T12:51:48-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Mar 27 12:51:48 2025 -0700",
  "committer_date_iso": "2025-03-27T12:51:48-07:00",
  "files_changed": [
    "fs/btrfs/inode.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/btrfs/accessors.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/acl.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/async-thread.c",
      "insertions": 5,
      "deletions": 6
    },
    {
      "file": "fs/btrfs/backref.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/btrfs/bio.c",
      "insertions": 15,
      "deletions": 23
    },
    {
      "file": "fs/btrfs/block-group.c",
      "insertions": 95,
      "deletions": 60
    },
    {
      "file": "fs/btrfs/btrfs_inode.h",
      "insertions": 13,
      "deletions": 4
    },
    {
      "file": "fs/btrfs/compression.c",
      "insertions": 20,
      "deletions": 11
    },
    {
      "file": "fs/btrfs/compression.h",
      "insertions": 9,
      "deletions": 17
    },
    {
      "file": "fs/btrfs/ctree.c",
      "insertions": 7,
      "deletions": 11
    },
    {
      "file": "fs/btrfs/ctree.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/defrag.c",
      "insertions": 46,
      "deletions": 32
    },
    {
      "file": "fs/btrfs/defrag.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/btrfs/delayed-inode.c",
      "insertions": 49,
      "deletions": 52
    },
    {
      "file": "fs/btrfs/delayed-inode.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/delayed-ref.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/dev-replace.c",
      "insertions": 12,
      "deletions": 21
    },
    {
      "file": "fs/btrfs/dir-item.c",
      "insertions": 9,
      "deletions": 15
    },
    {
      "file": "fs/btrfs/dir-item.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/direct-io.c",
      "insertions": 18,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/direct-io.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/discard.c",
      "insertions": 16,
      "deletions": 18
    },
    {
      "file": "fs/btrfs/discard.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/disk-io.c",
      "insertions": 66,
      "deletions": 43
    },
    {
      "file": "fs/btrfs/export.c",
      "insertions": 26,
      "deletions": 25
    },
    {
      "file": "fs/btrfs/extent-io-tree.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "fs/btrfs/extent-tree.c",
      "insertions": 30,
      "deletions": 33
    },
    {
      "file": "fs/btrfs/extent-tree.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/extent_io.c",
      "insertions": 346,
      "deletions": 243
    },
    {
      "file": "fs/btrfs/extent_io.h",
      "insertions": 5,
      "deletions": 4
    },
    {
      "file": "fs/btrfs/file-item.c",
      "insertions": 13,
      "deletions": 17
    },
    {
      "file": "fs/btrfs/file-item.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/file.c",
      "insertions": 14,
      "deletions": 14
    },
    {
      "file": "fs/btrfs/file.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/free-space-cache.c",
      "insertions": 28,
      "deletions": 29
    },
    {
      "file": "fs/btrfs/free-space-tree.c",
      "insertions": 17,
      "deletions": 28
    },
    {
      "file": "fs/btrfs/fs.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/fs.h",
      "insertions": 23,
      "deletions": 3
    },
    {
      "file": "fs/btrfs/inode-item.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "fs/btrfs/inode.c",
      "insertions": 316,
      "deletions": 273
    },
    {
      "file": "fs/btrfs/ioctl.c",
      "insertions": 108,
      "deletions": 109
    },
    {
      "file": "fs/btrfs/ioctl.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/locking.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/ordered-data.c",
      "insertions": 18,
      "deletions": 5
    },
    {
      "file": "fs/btrfs/ordered-data.h",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/print-tree.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/props.c",
      "insertions": 33,
      "deletions": 33
    },
    {
      "file": "fs/btrfs/props.h",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "fs/btrfs/qgroup.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/qgroup.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/raid-stripe-tree.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/reflink.c",
      "insertions": 51,
      "deletions": 49
    },
    {
      "file": "fs/btrfs/relocation.c",
      "insertions": 16,
      "deletions": 14
    },
    {
      "file": "fs/btrfs/scrub.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/btrfs/send.c",
      "insertions": 253,
      "deletions": 291
    },
    {
      "file": "fs/btrfs/send.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/btrfs/space-info.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/btrfs/subpage.c",
      "insertions": 137,
      "deletions": 87
    },
    {
      "file": "fs/btrfs/subpage.h",
      "insertions": 45,
      "deletions": 7
    },
    {
      "file": "fs/btrfs/super.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "fs/btrfs/sysfs.c",
      "insertions": 8,
      "deletions": 6
    },
    {
      "file": "fs/btrfs/sysfs.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/tests/extent-io-tests.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "fs/btrfs/tests/extent-map-tests.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/transaction.c",
      "insertions": 26,
      "deletions": 13
    },
    {
      "file": "fs/btrfs/tree-log.c",
      "insertions": 180,
      "deletions": 212
    },
    {
      "file": "fs/btrfs/verity.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/btrfs/volumes.c",
      "insertions": 8,
      "deletions": 8
    },
    {
      "file": "fs/btrfs/volumes.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/xattr.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/zlib.c",
      "insertions": 56,
      "deletions": 29
    },
    {
      "file": "fs/btrfs/zoned.c",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/zstd.c",
      "insertions": 36,
      "deletions": 30
    },
    {
      "file": "include/uapi/linux/btrfs.h",
      "insertions": 13,
      "deletions": 3
    }
  ],
  "total_insertions": 2264,
  "total_deletions": 1915,
  "total_changes": 4179,
  "parents": [
    "b2e7b0ffa56185d04871c6fe317b36d30ce2861d",
    "35fec1089ebb5617f85884d3fa6a699ce6337a75"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/inode.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}