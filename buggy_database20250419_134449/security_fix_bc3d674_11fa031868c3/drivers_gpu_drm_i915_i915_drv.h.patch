commit bc3d674462e5df5f2b33adbfcaad9edff8b827f4
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Jul 4 08:08:39 2016 +0100

    drm/i915: Allow userspace to request no-error-capture upon GPU hangs
    
    igt likes to inject GPU hangs into its command streams. However, as we
    expect these hangs, we don't actually want them recorded in the dmesg
    output or stored in the i915_error_state (usually). To accommodate this
    allow userspace to set a flag on the context that any hang emanating
    from that context will not be recorded. We still do the error capture
    (otherwise how do we find the guilty context and know its intent?) as
    part of the reason for random GPU hang injection is to exercise the race
    conditions between the error capture and normal execution.
    
    v2: Split out the request->ringbuf error capture changes.
    v3: Move the flag defines next to the intel_context->flags definition
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Dave Gordon <david.s.gordon@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1467616119-4093-9-git-send-email-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 488891853cb5..251a08d8808d 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -475,6 +475,7 @@ struct drm_i915_error_state {
 	struct timeval time;
 
 	char error_msg[128];
+	bool simulated;
 	int iommu;
 	u32 reset_count;
 	u32 suspend_count;
@@ -875,9 +876,10 @@ struct i915_gem_context {
 
 	/* Unique identifier for this context, used by the hw for tracking */
 	unsigned long flags;
+#define CONTEXT_NO_ZEROMAP		BIT(0)
+#define CONTEXT_NO_ERROR_CAPTURE	BIT(1)
 	unsigned hw_id;
 	u32 user_handle;
-#define CONTEXT_NO_ZEROMAP		(1<<0)
 
 	u32 ggtt_alignment;