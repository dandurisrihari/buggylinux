{
  "hash": "5c6ca9d936654a135b459c846885e08966e5e5bf",
  "hash_short": "5c6ca9d9",
  "subject": "X.509: Introduce scope-based x509_certificate allocation",
  "body": "Add a DEFINE_FREE() clause for x509_certificate structs and use it in\nx509_cert_parse() and x509_key_preparse().  These are the only functions\nwhere scope-based x509_certificate allocation currently makes sense.\nA third user will be introduced with the forthcoming SPDM library\n(Security Protocol and Data Model) for PCI device authentication.\n\nUnlike most other DEFINE_FREE() clauses, this one checks for IS_ERR()\ninstead of NULL before calling x509_free_certificate() at end of scope.\nThat's because the \"constructor\" of x509_certificate structs,\nx509_cert_parse(), returns a valid pointer or an ERR_PTR(), but never\nNULL.\n\nComparing the Assembler output before/after has shown they are identical,\nsave for the fact that gcc-12 always generates two return paths when\n__cleanup() is used, one for the success case and one for the error case.\n\nIn x509_cert_parse(), add a hint for the compiler that kzalloc() never\nreturns an ERR_PTR().  Otherwise the compiler adds a gratuitous IS_ERR()\ncheck on return.  Introduce an assume() macro for this which can be\nre-used elsewhere in the kernel to provide hints for the compiler.\n\nSuggested-by: Jonathan Cameron <Jonathan.Cameron@Huawei.com>\nLink: https://lore.kernel.org/all/20231003153937.000034ca@Huawei.com/\nLink: https://lwn.net/Articles/934679/\nSigned-off-by: Lukas Wunner <lukas@wunner.de>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "full_message": "X.509: Introduce scope-based x509_certificate allocation\n\nAdd a DEFINE_FREE() clause for x509_certificate structs and use it in\nx509_cert_parse() and x509_key_preparse().  These are the only functions\nwhere scope-based x509_certificate allocation currently makes sense.\nA third user will be introduced with the forthcoming SPDM library\n(Security Protocol and Data Model) for PCI device authentication.\n\nUnlike most other DEFINE_FREE() clauses, this one checks for IS_ERR()\ninstead of NULL before calling x509_free_certificate() at end of scope.\nThat's because the \"constructor\" of x509_certificate structs,\nx509_cert_parse(), returns a valid pointer or an ERR_PTR(), but never\nNULL.\n\nComparing the Assembler output before/after has shown they are identical,\nsave for the fact that gcc-12 always generates two return paths when\n__cleanup() is used, one for the success case and one for the error case.\n\nIn x509_cert_parse(), add a hint for the compiler that kzalloc() never\nreturns an ERR_PTR().  Otherwise the compiler adds a gratuitous IS_ERR()\ncheck on return.  Introduce an assume() macro for this which can be\nre-used elsewhere in the kernel to provide hints for the compiler.\n\nSuggested-by: Jonathan Cameron <Jonathan.Cameron@Huawei.com>\nLink: https://lore.kernel.org/all/20231003153937.000034ca@Huawei.com/\nLink: https://lwn.net/Articles/934679/\nSigned-off-by: Lukas Wunner <lukas@wunner.de>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "author_name": "Lukas Wunner",
  "author_email": "lukas@wunner.de",
  "author_date": "Sun Apr 7 19:57:40 2024 +0200",
  "author_date_iso": "2024-04-07T19:57:40+02:00",
  "committer_name": "Herbert Xu",
  "committer_email": "herbert@gondor.apana.org.au",
  "committer_date": "Fri Apr 12 15:07:53 2024 +0800",
  "committer_date_iso": "2024-04-12T15:07:53+08:00",
  "files_changed": [
    "crypto/asymmetric_keys/x509_cert_parser.c",
    "crypto/asymmetric_keys/x509_parser.h",
    "crypto/asymmetric_keys/x509_public_key.c",
    "include/linux/compiler.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "crypto/asymmetric_keys/x509_cert_parser.c",
      "insertions": 16,
      "deletions": 27
    },
    {
      "file": "crypto/asymmetric_keys/x509_parser.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "crypto/asymmetric_keys/x509_public_key.c",
      "insertions": 9,
      "deletions": 22
    },
    {
      "file": "include/linux/compiler.h",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 30,
  "total_deletions": 49,
  "total_changes": 79,
  "parents": [
    "c9ccfd5e0ff0dd929ce86d1b5f3c6a414110947a"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "crypto/asymmetric_keys/x509_cert_parser.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/asymmetric_keys/x509_parser.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/asymmetric_keys/x509_public_key.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/compiler.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}