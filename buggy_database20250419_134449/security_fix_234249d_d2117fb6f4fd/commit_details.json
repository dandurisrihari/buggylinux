{
  "hash": "234249d88b091d006b82f8d570343aae5f383736",
  "hash_short": "234249d8",
  "subject": "wifi: cfg80211/mac80211: hold link BSSes when assoc fails for MLO connection",
  "body": "When connect to MLO AP with more than one link, and the assoc response of\nAP is not success, then cfg80211_unhold_bss() is not called for all the\nlinks' cfg80211_bss except the primary link which means the link used by\nthe latest successful association request. Thus the hold value of the\ncfg80211_bss is not reset to 0 after the assoc fail, and then the\n__cfg80211_unlink_bss() will not be called for the cfg80211_bss by\n__cfg80211_bss_expire().\n\nThen the AP always looks exist even the AP is shutdown or reconfigured\nto another type, then it will lead error while connecting it again.\n\nThe detail info are as below.\n\nWhen connect with muti-links AP, cfg80211_hold_bss() is called by\ncfg80211_mlme_assoc() for each cfg80211_bss of all the links. When\nassoc response from AP is not success(such as status_code==1), the\nieee80211_link_data of non-primary link(sdata->link[link_id]) is NULL\nbecause ieee80211_assoc_success()->ieee80211_vif_update_links() is\nnot called for the links.\n\nThen struct cfg80211_rx_assoc_resp resp in cfg80211_rx_assoc_resp() and\nstruct cfg80211_connect_resp_params cr in __cfg80211_connect_result()\nwill only have the data of the primary link, and finally function\ncfg80211_connect_result_release_bsses() only call cfg80211_unhold_bss()\nfor the primary link. Then cfg80211_bss of the other links will never free\nbecause its hold is always > 0 now.\n\nHence assign value for the bss and status from assoc_data since it is\nvalid for this case. Also assign value of addr from assoc_data when the\nlink is NULL because the addrs of assoc_data and link both represent the\nlocal link addr and they are same value for success connection.\n\nFixes: 81151ce462e5 (\"wifi: mac80211: support MLO authentication/association with one link\")\nSigned-off-by: Wen Gong <quic_wgong@quicinc.com>\nLink: https://lore.kernel.org/r/20230825070055.28164-1-quic_wgong@quicinc.com\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "full_message": "wifi: cfg80211/mac80211: hold link BSSes when assoc fails for MLO connection\n\nWhen connect to MLO AP with more than one link, and the assoc response of\nAP is not success, then cfg80211_unhold_bss() is not called for all the\nlinks' cfg80211_bss except the primary link which means the link used by\nthe latest successful association request. Thus the hold value of the\ncfg80211_bss is not reset to 0 after the assoc fail, and then the\n__cfg80211_unlink_bss() will not be called for the cfg80211_bss by\n__cfg80211_bss_expire().\n\nThen the AP always looks exist even the AP is shutdown or reconfigured\nto another type, then it will lead error while connecting it again.\n\nThe detail info are as below.\n\nWhen connect with muti-links AP, cfg80211_hold_bss() is called by\ncfg80211_mlme_assoc() for each cfg80211_bss of all the links. When\nassoc response from AP is not success(such as status_code==1), the\nieee80211_link_data of non-primary link(sdata->link[link_id]) is NULL\nbecause ieee80211_assoc_success()->ieee80211_vif_update_links() is\nnot called for the links.\n\nThen struct cfg80211_rx_assoc_resp resp in cfg80211_rx_assoc_resp() and\nstruct cfg80211_connect_resp_params cr in __cfg80211_connect_result()\nwill only have the data of the primary link, and finally function\ncfg80211_connect_result_release_bsses() only call cfg80211_unhold_bss()\nfor the primary link. Then cfg80211_bss of the other links will never free\nbecause its hold is always > 0 now.\n\nHence assign value for the bss and status from assoc_data since it is\nvalid for this case. Also assign value of addr from assoc_data when the\nlink is NULL because the addrs of assoc_data and link both represent the\nlocal link addr and they are same value for success connection.\n\nFixes: 81151ce462e5 (\"wifi: mac80211: support MLO authentication/association with one link\")\nSigned-off-by: Wen Gong <quic_wgong@quicinc.com>\nLink: https://lore.kernel.org/r/20230825070055.28164-1-quic_wgong@quicinc.com\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "author_name": "Wen Gong",
  "author_email": "quic_wgong@quicinc.com",
  "author_date": "Fri Aug 25 03:00:55 2023 -0400",
  "author_date_iso": "2023-08-25T03:00:55-04:00",
  "committer_name": "Johannes Berg",
  "committer_email": "johannes.berg@intel.com",
  "committer_date": "Mon Sep 11 12:16:52 2023 +0200",
  "committer_date_iso": "2023-09-11T12:16:52+02:00",
  "files_changed": [
    "include/net/cfg80211.h",
    "net/mac80211/mlme.c",
    "net/wireless/mlme.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "include/net/cfg80211.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "net/mac80211/mlme.c",
      "insertions": 6,
      "deletions": 5
    },
    {
      "file": "net/wireless/mlme.c",
      "insertions": 2,
      "deletions": 1
    }
  ],
  "total_insertions": 9,
  "total_deletions": 7,
  "total_changes": 16,
  "parents": [
    "d5a93b7d2877aae4ba7590ad6cb65f8d33079489"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/net/cfg80211.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/mac80211/mlme.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/wireless/mlme.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}