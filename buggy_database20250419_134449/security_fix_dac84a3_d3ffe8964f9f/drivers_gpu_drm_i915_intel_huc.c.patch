commit dac84a388528ab002b517213be47f53dc0fd978a
Author: Anusha Srivatsa <anusha.srivatsa@intel.com>
Date:   Wed Jan 18 08:05:57 2017 -0800

    drm/i915/huc: Support HuC authentication
    
    The HuC authentication is done by host2guc call. The HuC RSA keys
    are sent to GuC for authentication.
    
    v2: rebased on top of drm-tip. Changed name format and upped
    version 1.7.
    v3: changed wait_for_atomic to wait_for
    v4: rebased. Rename intel_huc_auh() to intel_guc_auth_huc()
    and place the prototype in intel_guc.h,correct the comments.
    v5: rebased. Moved intel_guc_auth_huc from i915_guc_submission.c
    to intel_uc.c.Update dev to dev_priv in intel_guc_auth_huc().
    Renamed HOST2GUC_ACTION_AUTHENTICATE_HUC TO INTEL_GUC_ACTION_
    AUTHENTICATE_HUC
    v6: rebased. Add newline on DRM_ERRORs that already dont have one.
    v7: rebased. Replace wait_for with intel_wait_for_register() since
    the latter employs sleep optimisations for quick responses- as pointed
    out by Chris Wilson.
    v8: rebased. Cleanup the intel_guc_auth_huc() by removing checks
    already performed in earlier functions. Make comments more descriptive.
    v9: rebased. Changed the bias for pinning the HuC object. Move
    intel_guc_auth_huc() to intel_huc.c. Change DRM_DEBUGs to DRM_ERRORs
    in intel_guc_auth_huc(). Add return status to DRM_ERRORs.
    v10: Remove message not required for the user..
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Arkadiusz Hiler <arkadiusz.hiler@intel.com>
    Cc: Michal Wajdeczko <michal.wajdeczko@intel.com>
    Tested-by: Xiang Haihao <haihao.xiang@intel.com>
    Signed-off-by: Anusha Srivatsa <anusha.srivatsa@intel.com>
    Signed-off-by: Alex Dai <yu.dai@intel.com>
    Signed-off-by: Peter Antoine <peter.antoine@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1484755558-1234-5-git-send-email-anusha.srivatsa@intel.com

diff --git a/drivers/gpu/drm/i915/intel_huc.c b/drivers/gpu/drm/i915/intel_huc.c
index 8b84ba835b1f..897ef31d865e 100644
--- a/drivers/gpu/drm/i915/intel_huc.c
+++ b/drivers/gpu/drm/i915/intel_huc.c
@@ -284,3 +284,52 @@ void intel_huc_fini(struct drm_i915_private *dev_priv)
 	huc_fw->fetch_status = INTEL_UC_FIRMWARE_NONE;
 }
 
+/**
+ * intel_guc_auth_huc() - authenticate ucode
+ * @dev_priv: the drm_i915_device
+ *
+ * Triggers a HuC fw authentication request to the GuC via intel_guc_action_
+ * authenticate_huc interface.
+ */
+void intel_guc_auth_huc(struct drm_i915_private *dev_priv)
+{
+	struct intel_guc *guc = &dev_priv->guc;
+	struct intel_huc *huc = &dev_priv->huc;
+	struct i915_vma *vma;
+	int ret;
+	u32 data[2];
+
+	vma = i915_gem_object_ggtt_pin(huc->fw.obj, NULL, 0, 0,
+				PIN_OFFSET_BIAS | GUC_WOPCM_TOP);
+	if (IS_ERR(vma)) {
+		DRM_ERROR("failed to pin huc fw object %d\n",
+				(int)PTR_ERR(vma));
+		return;
+	}
+
+	/* Specify auth action and where public signature is. */
+	data[0] = INTEL_GUC_ACTION_AUTHENTICATE_HUC;
+	data[1] = i915_ggtt_offset(vma) + huc->fw.rsa_offset;
+
+	ret = intel_guc_send(guc, data, ARRAY_SIZE(data));
+	if (ret) {
+		DRM_ERROR("HuC: GuC did not ack Auth request %d\n", ret);
+		goto out;
+	}
+
+	/* Check authentication status, it should be done by now */
+	ret = intel_wait_for_register(dev_priv,
+				HUC_STATUS2,
+				HUC_FW_VERIFIED,
+				HUC_FW_VERIFIED,
+				50);
+
+	if (ret) {
+		DRM_ERROR("HuC: Authentication failed %d\n", ret);
+		goto out;
+	}
+
+out:
+	i915_vma_unpin(vma);
+}
+