Commit Hash: 3d96208c30f84d6edf9ab4fac813306ac0d20c10
Subject: sunrpc: expiry_time should be seconds not timeval


Security Keywords:
- auth

Full commit message:
sunrpc: expiry_time should be seconds not timeval

When upcalling gssproxy, cache_head.expiry_time is set as a
timeval, not seconds since boot. As such, RPC cache expiry
logic will not clean expired objects created under
auth.rpcsec.context cache.

This has proven to cause kernel memory leaks on field. Using
64 bit variants of getboottime/timespec

Expiration times have worked this way since 2010's c5b29f885afe "sunrpc:
use seconds since boot in expiry cache".  The gssproxy code introduced
in 2012 added gss_proxy_save_rsc and introduced the bug.  That's a while
for this to lurk, but it required a bit of an extreme case to make it
obvious.

Signed-off-by: Roberto Bergantinos Corpas <rbergant@redhat.com>
Cc: stable@vger.kernel.org
Fixes: 030d794bf498 "SUNRPC: Use gssproxy upcall for server..."
Tested-By: Frank Sorenson <sorenson@redhat.com>
Signed-off-by: J. Bruce Fields <bfields@redhat.com>

Metadata:
Author: Roberto Bergantinos Corpas <rbergant@redhat.com>
Author Date: Tue Feb 4 11:32:56 2020 +0100
Committer: J. Bruce Fields <bfields@redhat.com>
Commit Date: Fri Feb 7 13:30:41 2020 -0500

Files Changed: 1
Lines Added: 4
Lines Removed: 0
Total Changes: 4
