{
  "hash": "7c0ade6c9023b2b90b757e2927b306bec1cc4ca6",
  "hash_short": "7c0ade6c",
  "subject": "KVM: rename kvm_arch_can_inject_async_page_present() to kvm_arch_can_dequeue_async_page_present()",
  "body": "An innocent reader of the following x86 KVM code:\n\nbool kvm_arch_can_inject_async_page_present(struct kvm_vcpu *vcpu)\n{\n        if (!(vcpu->arch.apf.msr_val & KVM_ASYNC_PF_ENABLED))\n                return true;\n...\n\nmay get very confused: if APF mechanism is not enabled, why do we report\nthat we 'can inject async page present'? In reality, upon injection\nkvm_arch_async_page_present() will check the same condition again and,\nin case APF is disabled, will just drop the item. This is fine as the\nguest which deliberately disabled APF doesn't expect to get any APF\nnotifications.\n\nRename kvm_arch_can_inject_async_page_present() to\nkvm_arch_can_dequeue_async_page_present() to make it clear what we are\nchecking: if the item can be dequeued (meaning either injected or just\ndropped).\n\nOn s390 kvm_arch_can_inject_async_page_present() always returns 'true' so\nthe rename doesn't matter much.\n\nSigned-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>\nMessage-Id: <20200525144125.143875-4-vkuznets@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: rename kvm_arch_can_inject_async_page_present() to kvm_arch_can_dequeue_async_page_present()\n\nAn innocent reader of the following x86 KVM code:\n\nbool kvm_arch_can_inject_async_page_present(struct kvm_vcpu *vcpu)\n{\n        if (!(vcpu->arch.apf.msr_val & KVM_ASYNC_PF_ENABLED))\n                return true;\n...\n\nmay get very confused: if APF mechanism is not enabled, why do we report\nthat we 'can inject async page present'? In reality, upon injection\nkvm_arch_async_page_present() will check the same condition again and,\nin case APF is disabled, will just drop the item. This is fine as the\nguest which deliberately disabled APF doesn't expect to get any APF\nnotifications.\n\nRename kvm_arch_can_inject_async_page_present() to\nkvm_arch_can_dequeue_async_page_present() to make it clear what we are\nchecking: if the item can be dequeued (meaning either injected or just\ndropped).\n\nOn s390 kvm_arch_can_inject_async_page_present() always returns 'true' so\nthe rename doesn't matter much.\n\nSigned-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>\nMessage-Id: <20200525144125.143875-4-vkuznets@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Vitaly Kuznetsov",
  "author_email": "vkuznets@redhat.com",
  "author_date": "Mon May 25 16:41:18 2020 +0200",
  "author_date_iso": "2020-05-25T16:41:18+02:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Mon Jun 1 04:26:07 2020 -0400",
  "committer_date_iso": "2020-06-01T04:26:07-04:00",
  "files_changed": [
    "arch/s390/include/asm/kvm_host.h",
    "arch/s390/kvm/kvm-s390.c",
    "arch/x86/include/asm/kvm_host.h",
    "arch/x86/kvm/x86.c",
    "virt/kvm/async_pf.c"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "arch/s390/include/asm/kvm_host.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/s390/kvm/kvm-s390.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "virt/kvm/async_pf.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 5,
  "total_deletions": 5,
  "total_changes": 10,
  "parents": [
    "68fd66f100d196d35ab3008d4c69af3a0d7e7200"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/s390/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/s390/kvm/kvm-s390.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "virt/kvm/async_pf.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}