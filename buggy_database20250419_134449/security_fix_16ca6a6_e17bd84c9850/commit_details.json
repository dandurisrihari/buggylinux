{
  "hash": "16ca6a607d84bef0129698d8d808f501afd08d43",
  "hash_short": "16ca6a60",
  "subject": "KVM: arm/arm64: vgic: Don't populate multiple LRs with the same vintid",
  "body": "The vgic code is trying to be clever when injecting GICv2 SGIs,\nand will happily populate LRs with the same interrupt number if\nthey come from multiple vcpus (after all, they are distinct\ninterrupt sources).\n\nUnfortunately, this is against the letter of the architecture,\nand the GICv2 architecture spec says \"Each valid interrupt stored\nin the List registers must have a unique VirtualID for that\nvirtual CPU interface.\". GICv3 has similar (although slightly\nambiguous) restrictions.\n\nThis results in guests locking up when using GICv2-on-GICv3, for\nexample. The obvious fix is to stop trying so hard, and inject\na single vcpu per SGI per guest entry. After all, pending SGIs\nwith multiple source vcpus are pretty rare, and are mostly seen\nin scenario where the physical CPUs are severely overcomitted.\n\nBut as we now only inject a single instance of a multi-source SGI per\nvcpu entry, we may delay those interrupts for longer than strictly\nnecessary, and run the risk of injecting lower priority interrupts\nin the meantime.\n\nIn order to address this, we adopt a three stage strategy:\n- If we encounter a multi-source SGI in the AP list while computing\n  its depth, we force the list to be sorted\n- When populating the LRs, we prevent the injection of any interrupt\n  of lower priority than that of the first multi-source SGI we've\n  injected.\n- Finally, the injection of a multi-source SGI triggers the request\n  of a maintenance interrupt when there will be no pending interrupt\n  in the LRs (HCR_NPIE).\n\nAt the point where the last pending interrupt in the LRs switches\nfrom Pending to Active, the maintenance interrupt will be delivered,\nallowing us to add the remaining SGIs using the same process.\n\nCc: stable@vger.kernel.org\nFixes: 0919e84c0fc1 (\"KVM: arm/arm64: vgic-new: Add IRQ sync/flush framework\")\nAcked-by: Christoffer Dall <cdall@kernel.org>\nSigned-off-by: Marc Zyngier <marc.zyngier@arm.com>",
  "full_message": "KVM: arm/arm64: vgic: Don't populate multiple LRs with the same vintid\n\nThe vgic code is trying to be clever when injecting GICv2 SGIs,\nand will happily populate LRs with the same interrupt number if\nthey come from multiple vcpus (after all, they are distinct\ninterrupt sources).\n\nUnfortunately, this is against the letter of the architecture,\nand the GICv2 architecture spec says \"Each valid interrupt stored\nin the List registers must have a unique VirtualID for that\nvirtual CPU interface.\". GICv3 has similar (although slightly\nambiguous) restrictions.\n\nThis results in guests locking up when using GICv2-on-GICv3, for\nexample. The obvious fix is to stop trying so hard, and inject\na single vcpu per SGI per guest entry. After all, pending SGIs\nwith multiple source vcpus are pretty rare, and are mostly seen\nin scenario where the physical CPUs are severely overcomitted.\n\nBut as we now only inject a single instance of a multi-source SGI per\nvcpu entry, we may delay those interrupts for longer than strictly\nnecessary, and run the risk of injecting lower priority interrupts\nin the meantime.\n\nIn order to address this, we adopt a three stage strategy:\n- If we encounter a multi-source SGI in the AP list while computing\n  its depth, we force the list to be sorted\n- When populating the LRs, we prevent the injection of any interrupt\n  of lower priority than that of the first multi-source SGI we've\n  injected.\n- Finally, the injection of a multi-source SGI triggers the request\n  of a maintenance interrupt when there will be no pending interrupt\n  in the LRs (HCR_NPIE).\n\nAt the point where the last pending interrupt in the LRs switches\nfrom Pending to Active, the maintenance interrupt will be delivered,\nallowing us to add the remaining SGIs using the same process.\n\nCc: stable@vger.kernel.org\nFixes: 0919e84c0fc1 (\"KVM: arm/arm64: vgic-new: Add IRQ sync/flush framework\")\nAcked-by: Christoffer Dall <cdall@kernel.org>\nSigned-off-by: Marc Zyngier <marc.zyngier@arm.com>",
  "author_name": "Marc Zyngier",
  "author_email": "marc.zyngier@arm.com",
  "author_date": "Tue Mar 6 21:48:01 2018 +0000",
  "author_date_iso": "2018-03-06T21:48:01+00:00",
  "committer_name": "Marc Zyngier",
  "committer_email": "marc.zyngier@arm.com",
  "committer_date": "Wed Mar 14 18:31:04 2018 +0000",
  "committer_date_iso": "2018-03-14T18:31:04+00:00",
  "files_changed": [
    "include/linux/irqchip/arm-gic-v3.h",
    "include/linux/irqchip/arm-gic.h",
    "virt/kvm/arm/vgic/vgic-v2.c",
    "virt/kvm/arm/vgic/vgic-v3.c",
    "virt/kvm/arm/vgic/vgic.c",
    "virt/kvm/arm/vgic/vgic.h"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "include/linux/irqchip/arm-gic-v3.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/irqchip/arm-gic.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "virt/kvm/arm/vgic/vgic-v2.c",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "virt/kvm/arm/vgic/vgic-v3.c",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "virt/kvm/arm/vgic/vgic.c",
      "insertions": 47,
      "deletions": 14
    },
    {
      "file": "virt/kvm/arm/vgic/vgic.h",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 67,
  "total_deletions": 16,
  "total_changes": 83,
  "parents": [
    "76600428c3677659e3c3633bb4f2ea302220a275"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/irqchip/arm-gic.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "virt/kvm/arm/vgic/vgic.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "virt/kvm/arm/vgic/vgic.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "virt/kvm/arm/vgic/vgic-v2.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/irqchip/arm-gic-v3.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "virt/kvm/arm/vgic/vgic-v3.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}