Commit Hash: 06e7e776ca4d36547e503279aeff996cbb292c16
Subject: Bluetooth: Prevent stack info leak from the EFS element.

CVE Identifiers:
- CVE-2017-1000410

Full commit message:
Bluetooth: Prevent stack info leak from the EFS element.

In the function l2cap_parse_conf_rsp and in the function
l2cap_parse_conf_req the following variable is declared without
initialization:

struct l2cap_conf_efs efs;

In addition, when parsing input configuration parameters in both of
these functions, the switch case for handling EFS elements may skip the
memcpy call that will write to the efs variable:

...
case L2CAP_CONF_EFS:
if (olen == sizeof(efs))
memcpy(&efs, (void *)val, olen);
...

The olen in the above if is attacker controlled, and regardless of that
if, in both of these functions the efs variable would eventually be
added to the outgoing configuration request that is being built:

l2cap_add_conf_opt(&ptr, L2CAP_CONF_EFS, sizeof(efs), (unsigned long) &efs);

So by sending a configuration request, or response, that contains an
L2CAP_CONF_EFS element, but with an element length that is not
sizeof(efs) - the memcpy to the uninitialized efs variable can be
avoided, and the uninitialized variable would be returned to the
attacker (16 bytes).

This issue has been assigned CVE-2017-1000410

Cc: Marcel Holtmann <marcel@holtmann.org>
Cc: Gustavo Padovan <gustavo@padovan.org>
Cc: Johan Hedberg <johan.hedberg@gmail.com>
Cc: stable <stable@vger.kernel.org>
Signed-off-by: Ben Seri <ben@armis.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Metadata:
Author: Ben Seri <ben@armis.com>
Author Date: Fri Dec 8 15:14:47 2017 +0100
Committer: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Commit Date: Thu Jan 4 17:01:01 2018 +0100

Files Changed: 1
Lines Added: 11
Lines Removed: 9
Total Changes: 20
