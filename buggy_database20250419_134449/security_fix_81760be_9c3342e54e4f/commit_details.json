{
  "hash": "81760bedc65194ff38e1e4faefd5f9f0c95c19a4",
  "hash_short": "81760bed",
  "subject": "RDMA/core: Use size_{add,sub,mul}() in calls to struct_size()",
  "body": "If, for any reason, the open-coded arithmetic causes a wraparound,\nthe protection that `struct_size()` provides against potential integer\noverflows is defeated. Fix this by hardening calls to `struct_size()`\nwith `size_add()`, `size_sub()` and `size_mul()`.\n\nFixes: 467f432a521a (\"RDMA/core: Split port and device counter sysfs attributes\")\nFixes: a4676388e2e2 (\"RDMA/core: Simplify how the gid_attrs sysfs is created\")\nFixes: e9dd5daf884c (\"IB/umad: Refactor code to use cdev_device_add()\")\nFixes: 324e227ea7c9 (\"RDMA/device: Add ib_device_get_by_netdev()\")\nFixes: 5aad26a7eac5 (\"IB/core: Use struct_size() in kzalloc()\")\nSigned-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>\nLink: https://lore.kernel.org/r/ZQdt4NsJFwwOYxUR@work\nSigned-off-by: Leon Romanovsky <leon@kernel.org>",
  "full_message": "RDMA/core: Use size_{add,sub,mul}() in calls to struct_size()\n\nIf, for any reason, the open-coded arithmetic causes a wraparound,\nthe protection that `struct_size()` provides against potential integer\noverflows is defeated. Fix this by hardening calls to `struct_size()`\nwith `size_add()`, `size_sub()` and `size_mul()`.\n\nFixes: 467f432a521a (\"RDMA/core: Split port and device counter sysfs attributes\")\nFixes: a4676388e2e2 (\"RDMA/core: Simplify how the gid_attrs sysfs is created\")\nFixes: e9dd5daf884c (\"IB/umad: Refactor code to use cdev_device_add()\")\nFixes: 324e227ea7c9 (\"RDMA/device: Add ib_device_get_by_netdev()\")\nFixes: 5aad26a7eac5 (\"IB/core: Use struct_size() in kzalloc()\")\nSigned-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>\nLink: https://lore.kernel.org/r/ZQdt4NsJFwwOYxUR@work\nSigned-off-by: Leon Romanovsky <leon@kernel.org>",
  "author_name": "Gustavo A. R. Silva",
  "author_email": "gustavoars@kernel.org",
  "author_date": "Sun Sep 17 15:21:36 2023 -0600",
  "author_date_iso": "2023-09-17T15:21:36-06:00",
  "committer_name": "Leon Romanovsky",
  "committer_email": "leon@kernel.org",
  "committer_date": "Tue Sep 19 10:33:45 2023 +0300",
  "committer_date_iso": "2023-09-19T10:33:45+03:00",
  "files_changed": [
    "drivers/infiniband/core/device.c",
    "drivers/infiniband/core/sa_query.c",
    "drivers/infiniband/core/sysfs.c",
    "drivers/infiniband/core/user_mad.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "drivers/infiniband/core/device.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/infiniband/core/sa_query.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "drivers/infiniband/core/sysfs.c",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "drivers/infiniband/core/user_mad.c",
      "insertions": 3,
      "deletions": 1
    }
  ],
  "total_insertions": 12,
  "total_deletions": 8,
  "total_changes": 20,
  "parents": [
    "4ececeb839868ad235515f5bb332530f2ac11253"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/infiniband/core/device.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/infiniband/core/sa_query.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/infiniband/core/sysfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/infiniband/core/user_mad.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}