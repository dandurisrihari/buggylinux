{
  "hash": "4cb1a880e7f774e59c2ebb68187d4811ad9d0c4e",
  "hash_short": "4cb1a880",
  "subject": "Merge tag 'soundwire-5.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vkoul/soundwire into char-misc-next",
  "body": "Vinod writes:\n\nsoundwire updates for 5.10-rc1\n\nThis round of update includes:\n - Generic bandwidth allocation algorithm from Intel folks\n - PM support for Intel chipsets\n - Updates to Intel drivers which makes sdw usable on latest laptops\n - Support for MMIO SDW controllers found in QC chipsets\n - Update to subsystem to use helpers in bitfield.h to manage register\n   bits\n\n* tag 'soundwire-5.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vkoul/soundwire: (66 commits)\n  soundwire: sysfs: add slave status and device number before probe\n  soundwire: bus: add enumerated Slave device to device list\n  soundwire: remove an unnecessary NULL check\n  soundwire: cadence: add data port test fail interrupt\n  soundwire: intel: enable test modes\n  soundwire: enable Data Port test modes\n  soundwire: intel: use {u32|u16}p_replace_bits\n  soundwire: cadence: use u32p_replace_bits\n  soundwire: qcom: get max rows and cols info from compatible\n  soundwire: qcom: add support to block packing mode\n  soundwire: qcom: clear BIT FIELDs before value set.\n  soundwire: Add generic bandwidth allocation algorithm\n  soundwire: cadence: add parity error injection through debugfs\n  soundwire: bus: export broadcast read/write capability for tests\n  ASoC: codecs: realtek-soundwire: ignore initial PARITY errors\n  soundwire: bus: use quirk to filter out invalid parity errors\n  soundwire: slave: add first_interrupt_done status\n  soundwire: bus: filter-out unwanted interrupt reports\n  ASoC/soundwire: bus: use property to set interrupt masks\n  soundwire: qcom: fix SLIBMUS/SLIMBUS typo\n  ...",
  "full_message": "Merge tag 'soundwire-5.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vkoul/soundwire into char-misc-next\n\nVinod writes:\n\nsoundwire updates for 5.10-rc1\n\nThis round of update includes:\n - Generic bandwidth allocation algorithm from Intel folks\n - PM support for Intel chipsets\n - Updates to Intel drivers which makes sdw usable on latest laptops\n - Support for MMIO SDW controllers found in QC chipsets\n - Update to subsystem to use helpers in bitfield.h to manage register\n   bits\n\n* tag 'soundwire-5.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vkoul/soundwire: (66 commits)\n  soundwire: sysfs: add slave status and device number before probe\n  soundwire: bus: add enumerated Slave device to device list\n  soundwire: remove an unnecessary NULL check\n  soundwire: cadence: add data port test fail interrupt\n  soundwire: intel: enable test modes\n  soundwire: enable Data Port test modes\n  soundwire: intel: use {u32|u16}p_replace_bits\n  soundwire: cadence: use u32p_replace_bits\n  soundwire: qcom: get max rows and cols info from compatible\n  soundwire: qcom: add support to block packing mode\n  soundwire: qcom: clear BIT FIELDs before value set.\n  soundwire: Add generic bandwidth allocation algorithm\n  soundwire: cadence: add parity error injection through debugfs\n  soundwire: bus: export broadcast read/write capability for tests\n  ASoC: codecs: realtek-soundwire: ignore initial PARITY errors\n  soundwire: bus: use quirk to filter out invalid parity errors\n  soundwire: slave: add first_interrupt_done status\n  soundwire: bus: filter-out unwanted interrupt reports\n  ASoC/soundwire: bus: use property to set interrupt masks\n  soundwire: qcom: fix SLIBMUS/SLIMBUS typo\n  ...",
  "author_name": "Greg Kroah-Hartman",
  "author_email": "gregkh@linuxfoundation.org",
  "author_date": "Thu Oct 1 22:59:55 2020 +0200",
  "author_date_iso": "2020-10-01T22:59:55+02:00",
  "committer_name": "Greg Kroah-Hartman",
  "committer_email": "gregkh@linuxfoundation.org",
  "committer_date": "Thu Oct 1 22:59:55 2020 +0200",
  "committer_date_iso": "2020-10-01T22:59:55+02:00",
  "files_changed": [
    "drivers/soundwire/bus.c",
    "drivers/soundwire/stream.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-bus-soundwire-slave",
      "insertions": 18,
      "deletions": 0
    },
    {
      "file": "Documentation/devicetree/bindings/soundwire/qcom,sdw.txt",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/soundwire/Kconfig",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "drivers/soundwire/Makefile",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "drivers/soundwire/bus.c",
      "insertions": 99,
      "deletions": 21
    },
    {
      "file": "drivers/soundwire/bus.h",
      "insertions": 50,
      "deletions": 2
    },
    {
      "file": "drivers/soundwire/bus_type.c",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "drivers/soundwire/cadence_master.c",
      "insertions": 159,
      "deletions": 40
    },
    {
      "file": "drivers/soundwire/cadence_master.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "drivers/soundwire/generic_bandwidth_allocation.c",
      "insertions": 425,
      "deletions": 0
    },
    {
      "file": "drivers/soundwire/intel.c",
      "insertions": 702,
      "deletions": 101
    },
    {
      "file": "drivers/soundwire/intel.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "drivers/soundwire/intel_init.c",
      "insertions": 20,
      "deletions": 2
    },
    {
      "file": "drivers/soundwire/master.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "drivers/soundwire/mipi_disco.c",
      "insertions": 1,
      "deletions": 17
    },
    {
      "file": "drivers/soundwire/qcom.c",
      "insertions": 86,
      "deletions": 32
    },
    {
      "file": "drivers/soundwire/slave.c",
      "insertions": 10,
      "deletions": 3
    },
    {
      "file": "drivers/soundwire/stream.c",
      "insertions": 29,
      "deletions": 16
    },
    {
      "file": "drivers/soundwire/sysfs_local.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "drivers/soundwire/sysfs_slave.c",
      "insertions": 57,
      "deletions": 1
    },
    {
      "file": "include/linux/soundwire/sdw.h",
      "insertions": 40,
      "deletions": 8
    },
    {
      "file": "include/linux/soundwire/sdw_registers.h",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "sound/soc/codecs/max98373-sdw.c",
      "insertions": 4,
      "deletions": 14
    },
    {
      "file": "sound/soc/codecs/rt1308-sdw.c",
      "insertions": 4,
      "deletions": 13
    },
    {
      "file": "sound/soc/codecs/rt5682-sdw.c",
      "insertions": 6,
      "deletions": 14
    },
    {
      "file": "sound/soc/codecs/rt700-sdw.c",
      "insertions": 6,
      "deletions": 14
    },
    {
      "file": "sound/soc/codecs/rt711-sdw.c",
      "insertions": 6,
      "deletions": 14
    },
    {
      "file": "sound/soc/codecs/rt715-sdw.c",
      "insertions": 6,
      "deletions": 32
    },
    {
      "file": "sound/soc/codecs/wsa881x.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 1763,
  "total_deletions": 352,
  "total_changes": 2115,
  "parents": [
    "c471bf4b11c7df0f0f9f42b5aeec424dc62d0c7e",
    "0173f525b2c1b02a51784e2119d434593235aed1"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/soundwire/bus.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/soundwire/stream.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}