{
  "hash": "726a342120eba8197b3bc5e01af1bd2dbf80f77f",
  "hash_short": "726a3421",
  "subject": "btrfs: relocation: add error injection points for cancelling balance",
  "body": "Introduce a new error injection point, should_cancel_balance().\n\nIt's just a wrapper of atomic_read(&fs_info->balance_cancel_req), but\nallows us to override the return value.\n\nCurrently there are only one locations using this function:\n\n- btrfs_balance()\n  It checks cancel before each block group.\n\nThere are other locations checking fs_info->balance_cancel_req, but they\nare not used as an indicator to exit, so there is no need to use the\nwrapper.\n\nBut there will be more locations coming, and some locations can cause\nkernel panic if not handled properly.  So introduce this error injection\nto provide better test interface.\n\nReviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>\nSigned-off-by: Qu Wenruo <wqu@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "full_message": "btrfs: relocation: add error injection points for cancelling balance\n\nIntroduce a new error injection point, should_cancel_balance().\n\nIt's just a wrapper of atomic_read(&fs_info->balance_cancel_req), but\nallows us to override the return value.\n\nCurrently there are only one locations using this function:\n\n- btrfs_balance()\n  It checks cancel before each block group.\n\nThere are other locations checking fs_info->balance_cancel_req, but they\nare not used as an indicator to exit, so there is no need to use the\nwrapper.\n\nBut there will be more locations coming, and some locations can cause\nkernel panic if not handled properly.  So introduce this error injection\nto provide better test interface.\n\nReviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>\nSigned-off-by: Qu Wenruo <wqu@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "author_name": "Qu Wenruo",
  "author_email": "wqu@suse.com",
  "author_date": "Mon Feb 17 14:16:52 2020 +0800",
  "author_date_iso": "2020-02-17T14:16:52+08:00",
  "committer_name": "David Sterba",
  "committer_email": "dsterba@suse.com",
  "committer_date": "Mon Mar 23 17:01:54 2020 +0100",
  "committer_date_iso": "2020-03-23T17:01:54+01:00",
  "files_changed": [
    "fs/btrfs/ctree.h",
    "fs/btrfs/relocation.c",
    "fs/btrfs/volumes.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "fs/btrfs/ctree.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/relocation.c",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "fs/btrfs/volumes.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 12,
  "total_deletions": 1,
  "total_changes": 13,
  "parents": [
    "05a5a7621ce66c142e081ffc24dd6ade6e912061"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.7-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/ctree.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/btrfs/relocation.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/btrfs/volumes.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}