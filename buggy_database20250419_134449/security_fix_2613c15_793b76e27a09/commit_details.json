{
  "hash": "2613c15b0cc1c0607d9f2b718d7bc117c40f9230",
  "hash_short": "2613c15b",
  "subject": "Merge patch series \"riscv: Add support for xtheadvector\"",
  "body": "Charlie Jenkins <charlie@rivosinc.com> says:\n\nxtheadvector is a custom extension that is based upon riscv vector\nversion 0.7.1 [1]. All of the vector routines have been modified to\nsupport this alternative vector version based upon whether xtheadvector\nwas determined to be supported at boot.\n\nvlenb is not supported on the existing xtheadvector hardware, so a\ndevicetree property thead,vlenb is added to provide the vlenb to Linux.\n\nThere is a new hwprobe key RISCV_HWPROBE_KEY_VENDOR_EXT_THEAD_0 that is\nused to request which thead vendor extensions are supported on the\ncurrent platform. This allows future vendors to allocate hwprobe keys\nfor their vendor.\n\nSupport for xtheadvector is also added to the vector kselftests.\n\n[1] https://github.com/T-head-Semi/thead-extension-spec/blob/95358cb2cca9489361c61d335e03d3134b14133f/xtheadvector.adoc\n\n* b4-shazam-merge:\n  riscv: Add ghostwrite vulnerability\n  selftests: riscv: Support xtheadvector in vector tests\n  selftests: riscv: Fix vector tests\n  riscv: hwprobe: Document thead vendor extensions and xtheadvector extension\n  riscv: hwprobe: Add thead vendor extension probing\n  riscv: vector: Support xtheadvector save/restore\n  riscv: Add xtheadvector instruction definitions\n  riscv: csr: Add CSR encodings for CSR_VXRM/CSR_VXSAT\n  RISC-V: define the elements of the VCSR vector CSR\n  riscv: vector: Use vlenb from DT for thead\n  riscv: Add thead and xtheadvector as a vendor extension\n  riscv: dts: allwinner: Add xtheadvector to the D1/D1s devicetree\n  dt-bindings: cpus: add a thead vlen register length property\n  dt-bindings: riscv: Add xtheadvector ISA extension description\n\nSigned-off-by: Charlie Jenkins <charlie@rivosinc.com>\nLink: https://lore.kernel.org/r/20241113-xtheadvector-v11-0-236c22791ef9@rivosinc.com\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
  "full_message": "Merge patch series \"riscv: Add support for xtheadvector\"\n\nCharlie Jenkins <charlie@rivosinc.com> says:\n\nxtheadvector is a custom extension that is based upon riscv vector\nversion 0.7.1 [1]. All of the vector routines have been modified to\nsupport this alternative vector version based upon whether xtheadvector\nwas determined to be supported at boot.\n\nvlenb is not supported on the existing xtheadvector hardware, so a\ndevicetree property thead,vlenb is added to provide the vlenb to Linux.\n\nThere is a new hwprobe key RISCV_HWPROBE_KEY_VENDOR_EXT_THEAD_0 that is\nused to request which thead vendor extensions are supported on the\ncurrent platform. This allows future vendors to allocate hwprobe keys\nfor their vendor.\n\nSupport for xtheadvector is also added to the vector kselftests.\n\n[1] https://github.com/T-head-Semi/thead-extension-spec/blob/95358cb2cca9489361c61d335e03d3134b14133f/xtheadvector.adoc\n\n* b4-shazam-merge:\n  riscv: Add ghostwrite vulnerability\n  selftests: riscv: Support xtheadvector in vector tests\n  selftests: riscv: Fix vector tests\n  riscv: hwprobe: Document thead vendor extensions and xtheadvector extension\n  riscv: hwprobe: Add thead vendor extension probing\n  riscv: vector: Support xtheadvector save/restore\n  riscv: Add xtheadvector instruction definitions\n  riscv: csr: Add CSR encodings for CSR_VXRM/CSR_VXSAT\n  RISC-V: define the elements of the VCSR vector CSR\n  riscv: vector: Use vlenb from DT for thead\n  riscv: Add thead and xtheadvector as a vendor extension\n  riscv: dts: allwinner: Add xtheadvector to the D1/D1s devicetree\n  dt-bindings: cpus: add a thead vlen register length property\n  dt-bindings: riscv: Add xtheadvector ISA extension description\n\nSigned-off-by: Charlie Jenkins <charlie@rivosinc.com>\nLink: https://lore.kernel.org/r/20241113-xtheadvector-v11-0-236c22791ef9@rivosinc.com\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
  "author_name": "Palmer Dabbelt",
  "author_email": "palmer@rivosinc.com",
  "author_date": "Mon Dec 30 11:54:12 2024 -0800",
  "author_date_iso": "2024-12-30T11:54:12-08:00",
  "committer_name": "Palmer Dabbelt",
  "committer_email": "palmer@rivosinc.com",
  "committer_date": "Sat Jan 18 12:33:43 2025 -0800",
  "committer_date_iso": "2025-01-18T12:33:43-08:00",
  "files_changed": [
    "Documentation/devicetree/bindings/riscv/extensions.yaml",
    "arch/riscv/errata/thead/errata.c",
    "arch/riscv/include/asm/csr.h",
    "arch/riscv/kernel/Makefile",
    "arch/riscv/kernel/cpufeature.c",
    "arch/riscv/kernel/sys_hwprobe.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "Documentation/arch/riscv/hwprobe.rst",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "Documentation/devicetree/bindings/riscv/cpus.yaml",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "Documentation/devicetree/bindings/riscv/extensions.yaml",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "arch/riscv/Kconfig.errata",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "arch/riscv/Kconfig.vendor",
      "insertions": 26,
      "deletions": 0
    },
    {
      "file": "arch/riscv/boot/dts/allwinner/sun20i-d1s.dtsi",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "arch/riscv/errata/thead/errata.c",
      "insertions": 28,
      "deletions": 0
    },
    {
      "file": "arch/riscv/include/asm/bugs.h",
      "insertions": 22,
      "deletions": 0
    },
    {
      "file": "arch/riscv/include/asm/cpufeature.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/riscv/include/asm/csr.h",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "arch/riscv/include/asm/errata_list.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "arch/riscv/include/asm/hwprobe.h",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "arch/riscv/include/asm/switch_to.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/riscv/include/asm/vector.h",
      "insertions": 173,
      "deletions": 49
    },
    {
      "file": "arch/riscv/include/asm/vendor_extensions/thead.h",
      "insertions": 47,
      "deletions": 0
    },
    {
      "file": "arch/riscv/include/asm/vendor_extensions/thead_hwprobe.h",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "arch/riscv/include/asm/vendor_extensions/vendor_hwprobe.h",
      "insertions": 37,
      "deletions": 0
    },
    {
      "file": "arch/riscv/include/uapi/asm/hwprobe.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "arch/riscv/include/uapi/asm/vendor/thead.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/riscv/kernel/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/riscv/kernel/bugs.c",
      "insertions": 60,
      "deletions": 0
    },
    {
      "file": "arch/riscv/kernel/cpufeature.c",
      "insertions": 58,
      "deletions": 1
    },
    {
      "file": "arch/riscv/kernel/kernel_mode_vector.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "arch/riscv/kernel/process.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/riscv/kernel/signal.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/riscv/kernel/sys_hwprobe.c",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/riscv/kernel/vector.c",
      "insertions": 18,
      "deletions": 8
    },
    {
      "file": "arch/riscv/kernel/vendor_extensions.c",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "arch/riscv/kernel/vendor_extensions/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/riscv/kernel/vendor_extensions/thead.c",
      "insertions": 29,
      "deletions": 0
    },
    {
      "file": "arch/riscv/kernel/vendor_extensions/thead_hwprobe.c",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "drivers/base/cpu.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "include/linux/cpu.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/riscv/vector/.gitignore",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/riscv/vector/Makefile",
      "insertions": 13,
      "deletions": 4
    },
    {
      "file": "tools/testing/selftests/riscv/vector/v_exec_initval_nolibc.c",
      "insertions": 94,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/riscv/vector/v_helpers.c",
      "insertions": 68,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/riscv/vector/v_helpers.h",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/riscv/vector/v_initval.c",
      "insertions": 22,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/riscv/vector/v_initval_nolibc.c",
      "insertions": 0,
      "deletions": 68
    },
    {
      "file": "tools/testing/selftests/riscv/vector/vstate_exec_nolibc.c",
      "insertions": 13,
      "deletions": 7
    },
    {
      "file": "tools/testing/selftests/riscv/vector/vstate_prctl.c",
      "insertions": 185,
      "deletions": 120
    }
  ],
  "total_insertions": 1053,
  "total_deletions": 273,
  "total_changes": 1326,
  "parents": [
    "26f2d6de41795a931d1c16950114dbcf55dfbd75",
    "4bf97069239bcfca9840936313c7ac35a6e04488"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/riscv/kernel/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/riscv/kernel/cpufeature.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/riscv/errata/thead/errata.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/riscv/include/asm/csr.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/devicetree/bindings/riscv/extensions.yaml",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/riscv/kernel/sys_hwprobe.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}