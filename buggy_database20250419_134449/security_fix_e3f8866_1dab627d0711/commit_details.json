{
  "hash": "e3f88665a78045fe35c7669d2926b8d97b892c11",
  "hash_short": "e3f88665",
  "subject": "HSI: ssi_protocol: Fix use after free vulnerability in ssi_protocol Driver Due to Race Condition",
  "body": "In the ssi_protocol_probe() function, &ssi->work is bound with\nssip_xmit_work(), In ssip_pn_setup(), the ssip_pn_xmit() function\nwithin the ssip_pn_ops structure is capable of starting the\nwork.\n\nIf we remove the module which will call ssi_protocol_remove()\nto make a cleanup, it will free ssi through kfree(ssi),\nwhile the work mentioned above will be used. The sequence\nof operations that may lead to a UAF bug is as follows:\n\nCPU0                                    CPU1\n\n                        | ssip_xmit_work\nssi_protocol_remove     |\nkfree(ssi);             |\n                        | struct hsi_client *cl = ssi->cl;\n                        | // use ssi\n\nFix it by ensuring that the work is canceled before proceeding\nwith the cleanup in ssi_protocol_remove().\n\nSigned-off-by: Kaixin Wang <kxwang23@m.fudan.edu.cn>\nAcked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nLink: https://lore.kernel.org/r/20240918120749.1730-1-kxwang23@m.fudan.edu.cn\nSigned-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>",
  "full_message": "HSI: ssi_protocol: Fix use after free vulnerability in ssi_protocol Driver Due to Race Condition\n\nIn the ssi_protocol_probe() function, &ssi->work is bound with\nssip_xmit_work(), In ssip_pn_setup(), the ssip_pn_xmit() function\nwithin the ssip_pn_ops structure is capable of starting the\nwork.\n\nIf we remove the module which will call ssi_protocol_remove()\nto make a cleanup, it will free ssi through kfree(ssi),\nwhile the work mentioned above will be used. The sequence\nof operations that may lead to a UAF bug is as follows:\n\nCPU0                                    CPU1\n\n                        | ssip_xmit_work\nssi_protocol_remove     |\nkfree(ssi);             |\n                        | struct hsi_client *cl = ssi->cl;\n                        | // use ssi\n\nFix it by ensuring that the work is canceled before proceeding\nwith the cleanup in ssi_protocol_remove().\n\nSigned-off-by: Kaixin Wang <kxwang23@m.fudan.edu.cn>\nAcked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nLink: https://lore.kernel.org/r/20240918120749.1730-1-kxwang23@m.fudan.edu.cn\nSigned-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>",
  "author_name": "Kaixin Wang",
  "author_email": "kxwang23@m.fudan.edu.cn",
  "author_date": "Wed Sep 18 20:07:50 2024 +0800",
  "author_date_iso": "2024-09-18T20:07:50+08:00",
  "committer_name": "Sebastian Reichel",
  "committer_email": "sebastian.reichel@collabora.com",
  "committer_date": "Tue Feb 25 02:07:09 2025 +0100",
  "committer_date_iso": "2025-02-25T02:07:09+01:00",
  "files_changed": [
    "drivers/hsi/clients/ssi_protocol.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/hsi/clients/ssi_protocol.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 1,
  "total_deletions": 0,
  "total_changes": 1,
  "parents": [
    "2014c95afecee3e76ca4a56956a936e23283f05b"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/hsi/clients/ssi_protocol.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}