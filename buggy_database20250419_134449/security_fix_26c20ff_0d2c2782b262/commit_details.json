{
  "hash": "26c20ffcb5c86eb6a052e0d528396de5600c9710",
  "hash_short": "26c20ffc",
  "subject": "Merge tag 'afs-fixes-20200616' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs",
  "body": "Pull AFS fixes from David Howells:\n \"I've managed to get xfstests kind of working with afs. Here are a set\n  of patches that fix most of the bugs found.\n\n  There are a number of primary issues:\n\n   - Incorrect handling of mtime and non-handling of ctime. It might be\n     argued, that the latter isn't a bug since the AFS protocol doesn't\n     support ctime, but I should probably still update it locally.\n\n   - Shared-write mmap, truncate and writeback bugs. This includes not\n     changing i_size under the callback lock, overwriting local i_size\n     with the reply from the server after a partial writeback, not\n     limiting the writeback from an mmapped page to EOF.\n\n   - Checks for an abort code indicating that the primary vnode in an\n     operation was deleted by a third-party are done in the wrong place.\n\n   - Silly rename bugs. This includes an incomplete conversion to the\n     new operation handling, duplicate nlink handling, nlink changing\n     not being done inside the callback lock and insufficient handling\n     of third-party conflicting directory changes.\n\n  And some secondary ones:\n\n   - The UAEOVERFLOW abort code should map to EOVERFLOW not EREMOTEIO.\n\n   - Remove a couple of unused or incompletely used bits.\n\n   - Remove a couple of redundant success checks.\n\n  These seem to fix all the data-corruption bugs found by\n\n\t./check -afs -g quick\n\n  along with the obvious silly rename bugs and time bugs.\n\n  There are still some test failures, but they seem to fall into two\n  classes: firstly, the authentication/security model is different to\n  the standard UNIX model and permission is arbitrated by the server and\n  cached locally; and secondly, there are a number of features that AFS\n  does not support (such as mknod). But in these cases, the tests\n  themselves need to be adapted or skipped.\n\n  Using the in-kernel afs client with xfstests also found a bug in the\n  AuriStor AFS server that has been fixed for a future release\"\n\n* tag 'afs-fixes-20200616' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs:\n  afs: Fix silly rename\n  afs: afs_vnode_commit_status() doesn't need to check the RPC error\n  afs: Fix use of afs_check_for_remote_deletion()\n  afs: Remove afs_operation::abort_code\n  afs: Fix yfs_fs_fetch_status() to honour vnode selector\n  afs: Remove yfs_fs_fetch_file_status() as it's not used\n  afs: Fix the mapping of the UAEOVERFLOW abort code\n  afs: Fix truncation issues and mmap writeback size\n  afs: Concoct ctimes\n  afs: Fix EOF corruption\n  afs: afs_write_end() should change i_size under the right lock\n  afs: Fix non-setting of mtime when writing into mmap",
  "full_message": "Merge tag 'afs-fixes-20200616' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs\n\nPull AFS fixes from David Howells:\n \"I've managed to get xfstests kind of working with afs. Here are a set\n  of patches that fix most of the bugs found.\n\n  There are a number of primary issues:\n\n   - Incorrect handling of mtime and non-handling of ctime. It might be\n     argued, that the latter isn't a bug since the AFS protocol doesn't\n     support ctime, but I should probably still update it locally.\n\n   - Shared-write mmap, truncate and writeback bugs. This includes not\n     changing i_size under the callback lock, overwriting local i_size\n     with the reply from the server after a partial writeback, not\n     limiting the writeback from an mmapped page to EOF.\n\n   - Checks for an abort code indicating that the primary vnode in an\n     operation was deleted by a third-party are done in the wrong place.\n\n   - Silly rename bugs. This includes an incomplete conversion to the\n     new operation handling, duplicate nlink handling, nlink changing\n     not being done inside the callback lock and insufficient handling\n     of third-party conflicting directory changes.\n\n  And some secondary ones:\n\n   - The UAEOVERFLOW abort code should map to EOVERFLOW not EREMOTEIO.\n\n   - Remove a couple of unused or incompletely used bits.\n\n   - Remove a couple of redundant success checks.\n\n  These seem to fix all the data-corruption bugs found by\n\n\t./check -afs -g quick\n\n  along with the obvious silly rename bugs and time bugs.\n\n  There are still some test failures, but they seem to fall into two\n  classes: firstly, the authentication/security model is different to\n  the standard UNIX model and permission is arbitrated by the server and\n  cached locally; and secondly, there are a number of features that AFS\n  does not support (such as mknod). But in these cases, the tests\n  themselves need to be adapted or skipped.\n\n  Using the in-kernel afs client with xfstests also found a bug in the\n  AuriStor AFS server that has been fixed for a future release\"\n\n* tag 'afs-fixes-20200616' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs:\n  afs: Fix silly rename\n  afs: afs_vnode_commit_status() doesn't need to check the RPC error\n  afs: Fix use of afs_check_for_remote_deletion()\n  afs: Remove afs_operation::abort_code\n  afs: Fix yfs_fs_fetch_status() to honour vnode selector\n  afs: Remove yfs_fs_fetch_file_status() as it's not used\n  afs: Fix the mapping of the UAEOVERFLOW abort code\n  afs: Fix truncation issues and mmap writeback size\n  afs: Concoct ctimes\n  afs: Fix EOF corruption\n  afs: afs_write_end() should change i_size under the right lock\n  afs: Fix non-setting of mtime when writing into mmap",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Tue Jun 16 17:40:51 2020 -0700",
  "author_date_iso": "2020-06-16T17:40:51-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Tue Jun 16 17:40:51 2020 -0700",
  "committer_date_iso": "2020-06-16T17:40:51-07:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "fs/afs/dir.c",
      "insertions": 55,
      "deletions": 7
    },
    {
      "file": "fs/afs/dir_silly.c",
      "insertions": 28,
      "deletions": 10
    },
    {
      "file": "fs/afs/file.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/afs/flock.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "fs/afs/fs_operation.c",
      "insertions": 9,
      "deletions": 1
    },
    {
      "file": "fs/afs/inode.c",
      "insertions": 71,
      "deletions": 20
    },
    {
      "file": "fs/afs/internal.h",
      "insertions": 23,
      "deletions": 13
    },
    {
      "file": "fs/afs/misc.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/afs/write.c",
      "insertions": 10,
      "deletions": 2
    },
    {
      "file": "fs/afs/yfsclient.c",
      "insertions": 26,
      "deletions": 67
    }
  ],
  "total_insertions": 225,
  "total_deletions": 124,
  "total_changes": 349,
  "parents": [
    "f17957f71d104d014118259acdcfe6315e24bb3a",
    "b6489a49f7b71964e37978d6f89bbdbdb263f6f5"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": []
}