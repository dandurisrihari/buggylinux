{
  "hash": "f1e65718ec1855263c349997dc294e186e55d67a",
  "hash_short": "f1e65718",
  "subject": "ACPI: APEI: EINJ: warn on invalid argument when explicitly indicated by platform",
  "body": "OSPM executes an EXECUTE_OPERATION action to instruct the platform to begin\nthe injection operation, then executes a GET_COMMAND_STATUS action to\ndetermine the status of the completed operation. The ACPI Specification\ndocumented error codes[1] are:\n\n\t0 = Success (Linux #define EINJ_STATUS_SUCCESS)\n\t1 = Unknown failure (Linux #define EINJ_STATUS_FAIL)\n\t2 = Invalid Access (Linux #define EINJ_STATUS_INVAL)\n\nThe original code report -EBUSY for both \"Unknown Failure\" and \"Invalid\nAccess\" cases. Actually, firmware could do some platform dependent sanity\nchecks and returns different error codes, e.g. \"Invalid Access\" to indicate\nto the user that the parameters they supplied cannot be used for injection.\n\nTo this end, fix to return -EINVAL in the __einj_error_inject() error\nhandling case instead of always -EBUSY, when explicitly indicated by the\nplatform in the status of the completed operation.\n\n[1] ACPI Specification 6.5 18.6.1. Error Injection Table\n\nSigned-off-by: Shuai Xue <xueshuai@linux.alibaba.com>\nReviewed-by: Tony Luck <tony.luck@intel.com>\nSigned-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>",
  "full_message": "ACPI: APEI: EINJ: warn on invalid argument when explicitly indicated by platform\n\nOSPM executes an EXECUTE_OPERATION action to instruct the platform to begin\nthe injection operation, then executes a GET_COMMAND_STATUS action to\ndetermine the status of the completed operation. The ACPI Specification\ndocumented error codes[1] are:\n\n\t0 = Success (Linux #define EINJ_STATUS_SUCCESS)\n\t1 = Unknown failure (Linux #define EINJ_STATUS_FAIL)\n\t2 = Invalid Access (Linux #define EINJ_STATUS_INVAL)\n\nThe original code report -EBUSY for both \"Unknown Failure\" and \"Invalid\nAccess\" cases. Actually, firmware could do some platform dependent sanity\nchecks and returns different error codes, e.g. \"Invalid Access\" to indicate\nto the user that the parameters they supplied cannot be used for injection.\n\nTo this end, fix to return -EINVAL in the __einj_error_inject() error\nhandling case instead of always -EBUSY, when explicitly indicated by the\nplatform in the status of the completed operation.\n\n[1] ACPI Specification 6.5 18.6.1. Error Injection Table\n\nSigned-off-by: Shuai Xue <xueshuai@linux.alibaba.com>\nReviewed-by: Tony Luck <tony.luck@intel.com>\nSigned-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>",
  "author_name": "Shuai Xue",
  "author_email": "xueshuai@linux.alibaba.com",
  "author_date": "Thu Mar 23 09:53:57 2023 +0800",
  "author_date_iso": "2023-03-23T09:53:57+08:00",
  "committer_name": "Rafael J. Wysocki",
  "committer_email": "rafael.j.wysocki@intel.com",
  "committer_date": "Mon Mar 27 20:46:08 2023 +0200",
  "committer_date_iso": "2023-03-27T20:46:08+02:00",
  "files_changed": [
    "drivers/acpi/apei/einj.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/acpi/apei/einj.c",
      "insertions": 7,
      "deletions": 1
    }
  ],
  "total_insertions": 7,
  "total_deletions": 1,
  "total_changes": 8,
  "parents": [
    "fe6603cafabbe9c0213cfaaca24bcbb3cc6e2a51"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/acpi/apei/einj.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}