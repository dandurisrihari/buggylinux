{
  "hash": "efb543e61cc3a2e75ffbe52f9b4cfcb850d812fd",
  "hash_short": "efb543e6",
  "subject": "mac80211: Extend SAE authentication in infra BSS STA mode",
  "body": "Previous implementation of SAE authentication in infrastructure BSS was\nsomewhat restricting and not exactly clean way of handling the two\nauth() operations. This ended up removing and re-adding the STA entry\nfor the AP in the middle of authentication and also messing up\nauthentication state tracking through the sequence of four\nAuthentication frames. Furthermore, this did not work if the AP ended up\nsending out SAE Confirm (auth trans #2) immediately after SAE Commit\n(auth trans #1) before the station had time to transmit its SAE Confirm.\n\nClean up authentication state handling for the SAE case to allow two\nrounds of auth() calls without dropping all state between those\noperations. Track peer Confirmed status and mark authentication\ncompleted only once both ends have confirmed.\n\nieee80211_mgd_auth() check for EBUSY cases is now handling only the\npending association (ifmgd->assoc_data) while all pending authentication\n(ifmgd->auth_data) cases are allowed to proceed to allow user space to\nstart a new connection attempt from scratch even if the previously\nrequested authentication is still waiting completion. This is needed to\navoid making SAE error cases with retries take excessive amount of time\nwith no means for the user space to stop that (apart from setting the\nnetdev down).\n\nAs an extra bonus, the end of ieee80211_rx_mgmt_auth() can be cleaned up\nto avoid the extra copy of the cfg80211_rx_mlme_mgmt() call for ongoing\nSAE authentication since the new ieee80211_mark_sta_auth() helper\nfunction can handle both completion of authentication and updates to the\nSTA entry under the same condition and there is no need to return from\nthe function between those operations.\n\nSigned-off-by: Jouni Malinen <jouni@codeaurora.org>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "full_message": "mac80211: Extend SAE authentication in infra BSS STA mode\n\nPrevious implementation of SAE authentication in infrastructure BSS was\nsomewhat restricting and not exactly clean way of handling the two\nauth() operations. This ended up removing and re-adding the STA entry\nfor the AP in the middle of authentication and also messing up\nauthentication state tracking through the sequence of four\nAuthentication frames. Furthermore, this did not work if the AP ended up\nsending out SAE Confirm (auth trans #2) immediately after SAE Commit\n(auth trans #1) before the station had time to transmit its SAE Confirm.\n\nClean up authentication state handling for the SAE case to allow two\nrounds of auth() calls without dropping all state between those\noperations. Track peer Confirmed status and mark authentication\ncompleted only once both ends have confirmed.\n\nieee80211_mgd_auth() check for EBUSY cases is now handling only the\npending association (ifmgd->assoc_data) while all pending authentication\n(ifmgd->auth_data) cases are allowed to proceed to allow user space to\nstart a new connection attempt from scratch even if the previously\nrequested authentication is still waiting completion. This is needed to\navoid making SAE error cases with retries take excessive amount of time\nwith no means for the user space to stop that (apart from setting the\nnetdev down).\n\nAs an extra bonus, the end of ieee80211_rx_mgmt_auth() can be cleaned up\nto avoid the extra copy of the cfg80211_rx_mlme_mgmt() call for ongoing\nSAE authentication since the new ieee80211_mark_sta_auth() helper\nfunction can handle both completion of authentication and updates to the\nSTA entry under the same condition and there is no need to return from\nthe function between those operations.\n\nSigned-off-by: Jouni Malinen <jouni@codeaurora.org>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "author_name": "Jouni Malinen",
  "author_email": "jouni@codeaurora.org",
  "author_date": "Thu Oct 11 00:21:21 2018 +0300",
  "author_date_iso": "2018-10-11T00:21:21+03:00",
  "committer_name": "Johannes Berg",
  "committer_email": "johannes.berg@intel.com",
  "committer_date": "Thu Oct 11 16:01:08 2018 +0200",
  "committer_date_iso": "2018-10-11T16:01:08+02:00",
  "files_changed": [
    "net/mac80211/ieee80211_i.h",
    "net/mac80211/mlme.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "net/mac80211/ieee80211_i.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/mac80211/mlme.c",
      "insertions": 47,
      "deletions": 23
    }
  ],
  "total_insertions": 48,
  "total_deletions": 23,
  "total_changes": 71,
  "parents": [
    "8d7432a2f53bc283148062955cbe7ffbf713e646"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.20",
    "v4.20-rc1",
    "v4.20-rc2",
    "v4.20-rc3",
    "v4.20-rc4",
    "v4.20-rc5",
    "v4.20-rc6",
    "v4.20-rc7",
    "v5.0",
    "v5.0-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/mac80211/ieee80211_i.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/mac80211/mlme.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}