commit f563db4bdb8ef5ea73d0f5ea2b20384c10fbd617
Author: Radim Krčmář <rkrcmar@redhat.com>
Date:   Fri Feb 27 16:32:38 2015 +0100

    KVM: SVM: fix interrupt injection (apic->isr_count always 0)
    
    In commit b4eef9b36db4, we started to use hwapic_isr_update() != NULL
    instead of kvm_apic_vid_enabled(vcpu->kvm).  This didn't work because
    SVM had it defined and "apicv" path in apic_{set,clear}_isr() does not
    change apic->isr_count, because it should always be 1.  The initial
    value of apic->isr_count was based on kvm_apic_vid_enabled(vcpu->kvm),
    which is always 0 for SVM, so KVM could have injected interrupts when it
    shouldn't.
    
    Fix it by implicitly setting SVM's hwapic_isr_update to NULL and make the
    initial isr_count depend on hwapic_isr_update() for good measure.
    
    Fixes: b4eef9b36db4 ("kvm: x86: vmx: NULL out hwapic_isr_update() in case of !enable_apicv")
    Reported-and-tested-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index d319e0c24758..cc618c882f90 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -3649,11 +3649,6 @@ static void svm_load_eoi_exitmap(struct kvm_vcpu *vcpu, u64 *eoi_exit_bitmap)
 	return;
 }
 
-static void svm_hwapic_isr_update(struct kvm *kvm, int isr)
-{
-	return;
-}
-
 static void svm_sync_pir_to_irr(struct kvm_vcpu *vcpu)
 {
 	return;
@@ -4403,7 +4398,6 @@ static struct kvm_x86_ops svm_x86_ops = {
 	.set_virtual_x2apic_mode = svm_set_virtual_x2apic_mode,
 	.vm_has_apicv = svm_vm_has_apicv,
 	.load_eoi_exitmap = svm_load_eoi_exitmap,
-	.hwapic_isr_update = svm_hwapic_isr_update,
 	.sync_pir_to_irr = svm_sync_pir_to_irr,
 
 	.set_tss_addr = svm_set_tss_addr,