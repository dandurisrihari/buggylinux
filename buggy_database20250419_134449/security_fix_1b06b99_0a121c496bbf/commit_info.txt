Commit Hash: 1b06b99f25e0c957feb488ff8117a37f592c3866
Subject: KVM: arm64: Harden __ctxt_sys_reg() against out-of-range values


Security Keywords:
- hardening

Full commit message:
KVM: arm64: Harden __ctxt_sys_reg() against out-of-range values

The unsuspecting kernel tinkerer can be easily confused into
writing something that looks like this:

	ikey.lo = __vcpu_sys_reg(vcpu, SYS_APIAKEYLO_EL1);

which seems vaguely sensible, until you realise that the second
parameter is the encoding of a sysreg, and not the index into
the vcpu sysreg file... Debugging what happens in this case is
an interesting exercise in head<->wall interactions.

As they often say: "Any resemblance to actual persons, living
or dead, or actual events is purely coincidental".

In order to save people's time, add some compile-time hardening
that will at least weed out the "stupidly out of range" values.
This will *not* catch anything that isn't a compile-time constant.

Reviewed-by: Joey Gouly <joey.gouly@arm.com>
Reviewed-by: Oliver Upton <oliver.upton@linux.dev>
Link: https://lore.kernel.org/r/20240419102935.1935571-2-maz@kernel.org
Signed-off-by: Marc Zyngier <maz@kernel.org>

Metadata:
Author: Marc Zyngier <maz@kernel.org>
Author Date: Fri Apr 19 11:29:21 2024 +0100
Committer: Marc Zyngier <maz@kernel.org>
Commit Date: Sat Apr 20 12:42:47 2024 +0100

Files Changed: 1
Lines Added: 8
Lines Removed: 1
Total Changes: 9
