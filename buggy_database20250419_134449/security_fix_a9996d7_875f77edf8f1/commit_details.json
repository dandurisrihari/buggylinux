{
  "hash": "a9996d722b1197b625acfa350dd2849e35ad6092",
  "hash_short": "a9996d72",
  "subject": "scsi: scsi_debug: Add interface to manage error injection for a single device",
  "body": "This new facility uses the debugfs pseudo file system which is typically\nmounted under the /sys/kernel/debug directory and requires root permissions\nto access.\n\nThe interface file is found at /sys/kernel/debug/scsi_debug/<h:c:t:l>/error\nwhere <h:c:t:l> identifies the device (logical unit (LU)) to inject errors\non.\n\nFor the following description the ${error} environment variable is assumed\nto be set to/sys/kernel/debug/scsi_debug/1:0:0:0/error where 1:0:0:0 is a\npseudo device (LU) owned by the scsi_debug driver. Rules are written to\n${error} in the normal sysfs fashion (e.g. 'echo \"0 -2 0x12\" > ${error}').\n\nMore than one rule can be active on a device at a time and inactive rules\n(i.e. those whose error count is 0) remain in the rule listing. The\nexisting rules can be read with 'cat ${error}' with oneline output for each\nrule.\n\nThe interface format is line-by-line, each line is an error injection rule.\nEach rule contains integers separated by spaces, the first three columns\ncorrespond to \"Error code\", \"Error count\" and \"SCSI command\", other\ncolumns depend on Error code.\n\nGeneral rule format:\n  +--------+------+-------------------------------------------------------+\n  | Column | Type | Description                                           |\n  +--------+------+-------------------------------------------------------+\n  |   1    |  u8  | Error code                                            |\n  |        |      |  0: timeout SCSI command                              |\n  |        |      |  1: fail queuecommand, make queuecommand return       |\n  |        |      |     given value                                       |\n  |        |      |  2: fail command, finish command with SCSI status,    |\n  |        |      |     sense key and ASC/ASCQ values                     |\n  |        |      |  3: make abort commands for specific command fail     |\n  |        |      |  4: make reset lun for specific command fail          |\n  +--------+------+-------------------------------------------------------+\n  |   2    |  s32 | Error count                                           |\n  |        |      |  0: this rule will be ignored                         |\n  |        |      |  positive: the rule will always take effect           |\n  |        |      |  negative: the rule takes effect n times where -n is  |\n  |        |      |            the value given. Ignored after n times     |\n  +--------+------+-------------------------------------------------------+\n  |   3    |  x8  | SCSI command opcode, 0xff for all commands            |\n  +--------+------+-------------------------------------------------------+\n  |  ...   |  xxx | Error type specific fields                            |\n  +--------+------+-------------------------------------------------------+\n\nNotes:\n\n - When multiple error inject rules are added for the same SCSI command,\n   the one with smaller error code will take effect (and the others will be\n   ignored).\n\n - If the same error (i.e. same Error code and SCSI command) is added, the\n   older one will be overwritten..\n\n - Currently, the basic types are (u8/u16/u32/u64/s8/s16/s32/s64) and the\n   hexadecimal types (x8/x16/x32/x64).\n\n - Where a hexadecimal value is expected (e.g. Column 3: SCSI command\n   opcode) the \"0x\" prefix is optional on the value (e.g. the INQUIRY\n   opcode can be given as '0x12' or '12').\n\n - When the Error count is negative, reading ${error} will show that value\n   incrementing, stopping when it gets to 0.\n\nAcked-by: Douglas Gilbert <dgilbert@interlog.com>\nSigned-off-by: Wenchao Hao <haowenchao2@huawei.com>\nLink: https://lore.kernel.org/r/20231010092051.608007-3-haowenchao2@huawei.com\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: scsi_debug: Add interface to manage error injection for a single device\n\nThis new facility uses the debugfs pseudo file system which is typically\nmounted under the /sys/kernel/debug directory and requires root permissions\nto access.\n\nThe interface file is found at /sys/kernel/debug/scsi_debug/<h:c:t:l>/error\nwhere <h:c:t:l> identifies the device (logical unit (LU)) to inject errors\non.\n\nFor the following description the ${error} environment variable is assumed\nto be set to/sys/kernel/debug/scsi_debug/1:0:0:0/error where 1:0:0:0 is a\npseudo device (LU) owned by the scsi_debug driver. Rules are written to\n${error} in the normal sysfs fashion (e.g. 'echo \"0 -2 0x12\" > ${error}').\n\nMore than one rule can be active on a device at a time and inactive rules\n(i.e. those whose error count is 0) remain in the rule listing. The\nexisting rules can be read with 'cat ${error}' with oneline output for each\nrule.\n\nThe interface format is line-by-line, each line is an error injection rule.\nEach rule contains integers separated by spaces, the first three columns\ncorrespond to \"Error code\", \"Error count\" and \"SCSI command\", other\ncolumns depend on Error code.\n\nGeneral rule format:\n  +--------+------+-------------------------------------------------------+\n  | Column | Type | Description                                           |\n  +--------+------+-------------------------------------------------------+\n  |   1    |  u8  | Error code                                            |\n  |        |      |  0: timeout SCSI command                              |\n  |        |      |  1: fail queuecommand, make queuecommand return       |\n  |        |      |     given value                                       |\n  |        |      |  2: fail command, finish command with SCSI status,    |\n  |        |      |     sense key and ASC/ASCQ values                     |\n  |        |      |  3: make abort commands for specific command fail     |\n  |        |      |  4: make reset lun for specific command fail          |\n  +--------+------+-------------------------------------------------------+\n  |   2    |  s32 | Error count                                           |\n  |        |      |  0: this rule will be ignored                         |\n  |        |      |  positive: the rule will always take effect           |\n  |        |      |  negative: the rule takes effect n times where -n is  |\n  |        |      |            the value given. Ignored after n times     |\n  +--------+------+-------------------------------------------------------+\n  |   3    |  x8  | SCSI command opcode, 0xff for all commands            |\n  +--------+------+-------------------------------------------------------+\n  |  ...   |  xxx | Error type specific fields                            |\n  +--------+------+-------------------------------------------------------+\n\nNotes:\n\n - When multiple error inject rules are added for the same SCSI command,\n   the one with smaller error code will take effect (and the others will be\n   ignored).\n\n - If the same error (i.e. same Error code and SCSI command) is added, the\n   older one will be overwritten..\n\n - Currently, the basic types are (u8/u16/u32/u64/s8/s16/s32/s64) and the\n   hexadecimal types (x8/x16/x32/x64).\n\n - Where a hexadecimal value is expected (e.g. Column 3: SCSI command\n   opcode) the \"0x\" prefix is optional on the value (e.g. the INQUIRY\n   opcode can be given as '0x12' or '12').\n\n - When the Error count is negative, reading ${error} will show that value\n   incrementing, stopping when it gets to 0.\n\nAcked-by: Douglas Gilbert <dgilbert@interlog.com>\nSigned-off-by: Wenchao Hao <haowenchao2@huawei.com>\nLink: https://lore.kernel.org/r/20231010092051.608007-3-haowenchao2@huawei.com\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Wenchao Hao",
  "author_email": "haowenchao2@huawei.com",
  "author_date": "Tue Oct 10 17:20:43 2023 +0800",
  "author_date_iso": "2023-10-10T17:20:43+08:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Mon Oct 16 20:50:11 2023 -0400",
  "committer_date_iso": "2023-10-16T20:50:11-04:00",
  "files_changed": [
    "drivers/scsi/scsi_debug.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/scsi_debug.c",
      "insertions": 210,
      "deletions": 4
    }
  ],
  "total_insertions": 210,
  "total_deletions": 4,
  "total_changes": 214,
  "parents": [
    "6e2d15f59b1cc6ed613b94e0969335a7868f04ca"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/scsi_debug.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}