{
  "hash": "8b51dc7291473093c821195c4b6af85fadedbc2f",
  "hash_short": "8b51dc72",
  "subject": "rsi: fix a double free bug in rsi_91x_deinit()",
  "body": "`dev` (struct rsi_91x_usbdev *) field of adapter\n(struct rsi_91x_usbdev *) is allocated  and initialized in\n`rsi_init_usb_interface`. If any error is detected in information\nread from the device side,  `rsi_init_usb_interface` will be\nfreed. However, in the higher level error handling code in\n`rsi_probe`, if error is detected, `rsi_91x_deinit` is called\nagain, in which `dev` will be freed again, resulting double free.\n\nThis patch fixes the double free by removing the free operation on\n`dev` in `rsi_init_usb_interface`, because `rsi_91x_deinit` is also\nused in `rsi_disconnect`, in that code path, the `dev` field is not\n (and thus needs to be) freed.\n\nThis bug was found in v4.19, but is also present in the latest version\nof kernel. Fixes CVE-2019-15504.\n\nReported-by: Hui Peng <benquike@gmail.com>\nReported-by: Mathias Payer <mathias.payer@nebelwelt.net>\nSigned-off-by: Hui Peng <benquike@gmail.com>\nReviewed-by: Guenter Roeck <linux@roeck-us.net>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>",
  "full_message": "rsi: fix a double free bug in rsi_91x_deinit()\n\n`dev` (struct rsi_91x_usbdev *) field of adapter\n(struct rsi_91x_usbdev *) is allocated  and initialized in\n`rsi_init_usb_interface`. If any error is detected in information\nread from the device side,  `rsi_init_usb_interface` will be\nfreed. However, in the higher level error handling code in\n`rsi_probe`, if error is detected, `rsi_91x_deinit` is called\nagain, in which `dev` will be freed again, resulting double free.\n\nThis patch fixes the double free by removing the free operation on\n`dev` in `rsi_init_usb_interface`, because `rsi_91x_deinit` is also\nused in `rsi_disconnect`, in that code path, the `dev` field is not\n (and thus needs to be) freed.\n\nThis bug was found in v4.19, but is also present in the latest version\nof kernel. Fixes CVE-2019-15504.\n\nReported-by: Hui Peng <benquike@gmail.com>\nReported-by: Mathias Payer <mathias.payer@nebelwelt.net>\nSigned-off-by: Hui Peng <benquike@gmail.com>\nReviewed-by: Guenter Roeck <linux@roeck-us.net>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>",
  "author_name": "Hui Peng",
  "author_email": "benquike@gmail.com",
  "author_date": "Mon Aug 19 18:02:29 2019 -0400",
  "author_date_iso": "2019-08-19T18:02:29-04:00",
  "committer_name": "Kalle Valo",
  "committer_email": "kvalo@codeaurora.org",
  "committer_date": "Tue Sep 3 16:54:48 2019 +0300",
  "committer_date_iso": "2019-09-03T16:54:48+03:00",
  "files_changed": [
    "drivers/net/wireless/rsi/rsi_91x_usb.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/wireless/rsi/rsi_91x_usb.c",
      "insertions": 0,
      "deletions": 1
    }
  ],
  "total_insertions": 0,
  "total_deletions": 1,
  "total_changes": 1,
  "parents": [
    "13fa451568ab9e8b3074ef741477c7938c713c42"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.3",
    "v5.4",
    "v5.4-rc1",
    "v5.4-rc2",
    "v5.4-rc3",
    "v5.4-rc4",
    "v5.4-rc5",
    "v5.4-rc6",
    "v5.4-rc7",
    "v5.4-rc8"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2019-15504"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "drivers/net/wireless/rsi/rsi_91x_usb.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}