{
  "hash": "69a3a0a45a2f72412c2ba31761cc9193bb746fef",
  "hash_short": "69a3a0a4",
  "subject": "Merge tag 'erofs-for-6.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs",
  "body": "Pull erofs updates from Gao Xiang:\n \"In this cycle, we add file-backed mount support, which has has been a\n  strong requirement for years. It is especially useful when there are\n  thousands of images running on the same host for containers and other\n  sandbox use cases, unlike OS image use cases.\n\n  Without file-backed mounts, it's hard for container runtimes to manage\n  and isolate so many unnecessary virtual block devices safely and\n  efficiently, therefore file-backed mounts are highly preferred. For\n  EROFS users, ComposeFS [1], containerd, and Android APEXes [2] will\n  directly benefit from it, and I've seen no risk in implementing it as\n  a completely immutable filesystem.\n\n  The previous experimental feature \"EROFS over fscache\" is now marked\n  as deprecated because:\n\n   - Fscache is no longer an independent subsystem and has been merged\n     into netfs, which was somewhat unexpected when it was proposed.\n\n   - New HSM \"fanotify pre-content hooks\" [3] will be landed upstream.\n     These hooks will replace \"EROFS over fscache\" in a simpler way, as\n     EROFS won't be bother with kernel caching anymore. Userspace\n     programs can also manage their own caching hierarchy more flexibly.\n\n  Once the HSM \"fanotify pre-content hooks\" is landed, I will remove the\n  fscache backend entirely as an internal dependency cleanup. More\n  backgrounds are listed in the original patchset [4].\n\n  In addition to that, there are bugfixes and cleanups as usual.\n\n  Summary:\n\n   - Support file-backed mounts for containers and sandboxes\n\n   - Mark the experimental fscache backend as deprecated\n\n   - Handle overlapped pclusters caused by crafted images properly\n\n   - Fix a failure path which could cause infinite loops in\n     z_erofs_init_decompressor()\n\n   - Get rid of unnecessary NOFAILs\n\n   - Harmless on-disk hardening & minor cleanups\"\n\n* tag 'erofs-for-6.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs:\n  erofs: reject inodes with negative i_size\n  erofs: restrict pcluster size limitations\n  erofs: allocate more short-lived pages from reserved pool first\n  erofs: sunset unneeded NOFAILs\n  erofs: simplify erofs_map_blocks_flatmode()\n  erofs: refactor read_inode calling convention\n  erofs: use kmemdup_nul in erofs_fill_symlink\n  erofs: mark experimental fscache backend deprecated\n  erofs: support compressed inodes for fileio\n  erofs: support unencoded inodes for fileio\n  erofs: add file-backed mount support\n  erofs: handle overlapped pclusters out of crafted images properly\n  erofs: fix error handling in z_erofs_init_decompressor\n  erofs: clean up erofs_register_sysfs()\n  erofs: fix incorrect symlink detection in fast symlink",
  "full_message": "Merge tag 'erofs-for-6.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs\n\nPull erofs updates from Gao Xiang:\n \"In this cycle, we add file-backed mount support, which has has been a\n  strong requirement for years. It is especially useful when there are\n  thousands of images running on the same host for containers and other\n  sandbox use cases, unlike OS image use cases.\n\n  Without file-backed mounts, it's hard for container runtimes to manage\n  and isolate so many unnecessary virtual block devices safely and\n  efficiently, therefore file-backed mounts are highly preferred. For\n  EROFS users, ComposeFS [1], containerd, and Android APEXes [2] will\n  directly benefit from it, and I've seen no risk in implementing it as\n  a completely immutable filesystem.\n\n  The previous experimental feature \"EROFS over fscache\" is now marked\n  as deprecated because:\n\n   - Fscache is no longer an independent subsystem and has been merged\n     into netfs, which was somewhat unexpected when it was proposed.\n\n   - New HSM \"fanotify pre-content hooks\" [3] will be landed upstream.\n     These hooks will replace \"EROFS over fscache\" in a simpler way, as\n     EROFS won't be bother with kernel caching anymore. Userspace\n     programs can also manage their own caching hierarchy more flexibly.\n\n  Once the HSM \"fanotify pre-content hooks\" is landed, I will remove the\n  fscache backend entirely as an internal dependency cleanup. More\n  backgrounds are listed in the original patchset [4].\n\n  In addition to that, there are bugfixes and cleanups as usual.\n\n  Summary:\n\n   - Support file-backed mounts for containers and sandboxes\n\n   - Mark the experimental fscache backend as deprecated\n\n   - Handle overlapped pclusters caused by crafted images properly\n\n   - Fix a failure path which could cause infinite loops in\n     z_erofs_init_decompressor()\n\n   - Get rid of unnecessary NOFAILs\n\n   - Harmless on-disk hardening & minor cleanups\"\n\n* tag 'erofs-for-6.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs:\n  erofs: reject inodes with negative i_size\n  erofs: restrict pcluster size limitations\n  erofs: allocate more short-lived pages from reserved pool first\n  erofs: sunset unneeded NOFAILs\n  erofs: simplify erofs_map_blocks_flatmode()\n  erofs: refactor read_inode calling convention\n  erofs: use kmemdup_nul in erofs_fill_symlink\n  erofs: mark experimental fscache backend deprecated\n  erofs: support compressed inodes for fileio\n  erofs: support unencoded inodes for fileio\n  erofs: add file-backed mount support\n  erofs: handle overlapped pclusters out of crafted images properly\n  erofs: fix error handling in z_erofs_init_decompressor\n  erofs: clean up erofs_register_sysfs()\n  erofs: fix incorrect symlink detection in fast symlink",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Mon Sep 16 13:17:11 2024 +0200",
  "author_date_iso": "2024-09-16T13:17:11+02:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Sep 16 13:17:11 2024 +0200",
  "committer_date_iso": "2024-09-16T13:17:11+02:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "fs/erofs/Kconfig",
      "insertions": 21,
      "deletions": 1
    },
    {
      "file": "fs/erofs/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/erofs/data.c",
      "insertions": 74,
      "deletions": 35
    },
    {
      "file": "fs/erofs/decompressor.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/erofs/erofs_fs.h",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "fs/erofs/fileio.c",
      "insertions": 192,
      "deletions": 0
    },
    {
      "file": "fs/erofs/inode.c",
      "insertions": 62,
      "deletions": 76
    },
    {
      "file": "fs/erofs/internal.h",
      "insertions": 23,
      "deletions": 3
    },
    {
      "file": "fs/erofs/super.c",
      "insertions": 51,
      "deletions": 29
    },
    {
      "file": "fs/erofs/sysfs.c",
      "insertions": 6,
      "deletions": 24
    },
    {
      "file": "fs/erofs/zdata.c",
      "insertions": 89,
      "deletions": 107
    },
    {
      "file": "fs/erofs/zmap.c",
      "insertions": 20,
      "deletions": 22
    }
  ],
  "total_insertions": 544,
  "total_deletions": 299,
  "total_changes": 843,
  "parents": [
    "7a40974fd0efa3698de4c6d1d0ee0436bcc4445d",
    "025497e1d176a9e063d1e60699527e2f3a871935"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": []
}