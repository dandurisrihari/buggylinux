Commit Hash: b939a08bc378a7c716ad7a9486b48794b95d22f5
Subject: drm/i915/guc: Flush ct receive tasklet during reset preparation


Security Keywords:
- sanitize

Full commit message:
drm/i915/guc: Flush ct receive tasklet during reset preparation

GuC to host communication is interrupt driven, the handling has 3
parts: interrupt context, tasklet and request queue worker.
During GuC reset prepare, interrupt is disabled before destroy
contexts steps start. The IRQ and worker are flushed to finish
any outstanding in-progress message handling. But, the tasklet
flush is missing, it might causes 2 race conditions:
1. Tasklet runs after IRQ flushed, add request to queue after worker
flush started, causes unexpected G2H message request processing,
meanwhile, reset prepare code already get the context destroyed.
This will causes error reported about bad context state.
(https://gitlab.freedesktop.org/drm/i915/kernel/-/issues/11349 and
https://gitlab.freedesktop.org/drm/i915/kernel/-/issues/12303)
2. Tasklet runs after intel_guc_submission_reset_prepare,
ct_try_receive_message start to run, while intel_uc_reset_prepare
already finished guc sanitize and set ct->enable to false. This will
causes warning on incorrect ct->enable state.
(https://gitlab.freedesktop.org/drm/i915/kernel/-/issues/12439)

Add the missing tasklet flush to flush all 3 parts.

Signed-off-by: Zhanjun Dong <zhanjun.dong@intel.com>
Reviewed-by: Alan Previn <alan.previn.teres.alexis@intel.com>
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20241104214103.214702-1-zhanjun.dong@intel.com

Metadata:
Author: Zhanjun Dong <zhanjun.dong@intel.com>
Author Date: Mon Nov 4 13:41:03 2024 -0800
Committer: John Harrison <John.C.Harrison@Intel.com>
Commit Date: Wed Nov 6 12:29:30 2024 -0800

Files Changed: 1
Lines Added: 4
Lines Removed: 0
Total Changes: 4
