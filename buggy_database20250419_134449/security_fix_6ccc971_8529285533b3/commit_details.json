{
  "hash": "6ccc971ee2c61a1ffb487e46bf6184f7df6aacfb",
  "hash_short": "6ccc971e",
  "subject": "KVM: arm64: nv: Add emulation for ERETAx instructions",
  "body": "FEAT_NV has the interesting property of relying on ERET being\ntrapped. An added complexity is that it also traps ERETAA and\nERETAB, meaning that the Pointer Authentication aspect of these\ninstruction must be emulated.\n\nAdd an emulation of Pointer Authentication, limited to ERETAx\n(always using SP_EL2 as the modifier and ELR_EL2 as the pointer),\nusing the Generic Authentication instructions.\n\nThe emulation, however small, is placed in its own compilation\nunit so that it can be avoided if the configuration doesn't\ninclude it (or the toolchan in not up to the task).\n\nReviewed-by: Joey Gouly <joey.gouly@arm.com>\nReviewed-by: Oliver Upton <oliver.upton@linux.dev>\nLink: https://lore.kernel.org/r/20240419102935.1935571-13-maz@kernel.org\nSigned-off-by: Marc Zyngier <maz@kernel.org>",
  "full_message": "KVM: arm64: nv: Add emulation for ERETAx instructions\n\nFEAT_NV has the interesting property of relying on ERET being\ntrapped. An added complexity is that it also traps ERETAA and\nERETAB, meaning that the Pointer Authentication aspect of these\ninstruction must be emulated.\n\nAdd an emulation of Pointer Authentication, limited to ERETAx\n(always using SP_EL2 as the modifier and ELR_EL2 as the pointer),\nusing the Generic Authentication instructions.\n\nThe emulation, however small, is placed in its own compilation\nunit so that it can be avoided if the configuration doesn't\ninclude it (or the toolchan in not up to the task).\n\nReviewed-by: Joey Gouly <joey.gouly@arm.com>\nReviewed-by: Oliver Upton <oliver.upton@linux.dev>\nLink: https://lore.kernel.org/r/20240419102935.1935571-13-maz@kernel.org\nSigned-off-by: Marc Zyngier <maz@kernel.org>",
  "author_name": "Marc Zyngier",
  "author_email": "maz@kernel.org",
  "author_date": "Fri Apr 19 11:29:32 2024 +0100",
  "author_date_iso": "2024-04-19T11:29:32+01:00",
  "committer_name": "Marc Zyngier",
  "committer_email": "maz@kernel.org",
  "committer_date": "Sat Apr 20 12:42:51 2024 +0100",
  "committer_date_iso": "2024-04-20T12:42:51+01:00",
  "files_changed": [
    "arch/arm64/include/asm/kvm_nested.h",
    "arch/arm64/include/asm/pgtable-hwdef.h",
    "arch/arm64/kvm/Makefile",
    "arch/arm64/kvm/pauth.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/arm64/include/asm/kvm_nested.h",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/pgtable-hwdef.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/pauth.c",
      "insertions": 196,
      "deletions": 0
    }
  ],
  "total_insertions": 210,
  "total_deletions": 0,
  "total_changes": 210,
  "parents": [
    "719f5206a8fd8336d23ccda6fe2a3287fbfb4c92"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/kvm_nested.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/pgtable-hwdef.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/pauth.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}