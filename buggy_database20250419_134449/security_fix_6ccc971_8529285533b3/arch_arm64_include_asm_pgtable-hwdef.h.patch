commit 6ccc971ee2c61a1ffb487e46bf6184f7df6aacfb
Author: Marc Zyngier <maz@kernel.org>
Date:   Fri Apr 19 11:29:32 2024 +0100

    KVM: arm64: nv: Add emulation for ERETAx instructions
    
    FEAT_NV has the interesting property of relying on ERET being
    trapped. An added complexity is that it also traps ERETAA and
    ERETAB, meaning that the Pointer Authentication aspect of these
    instruction must be emulated.
    
    Add an emulation of Pointer Authentication, limited to ERETAx
    (always using SP_EL2 as the modifier and ELR_EL2 as the pointer),
    using the Generic Authentication instructions.
    
    The emulation, however small, is placed in its own compilation
    unit so that it can be avoided if the configuration doesn't
    include it (or the toolchan in not up to the task).
    
    Reviewed-by: Joey Gouly <joey.gouly@arm.com>
    Reviewed-by: Oliver Upton <oliver.upton@linux.dev>
    Link: https://lore.kernel.org/r/20240419102935.1935571-13-maz@kernel.org
    Signed-off-by: Marc Zyngier <maz@kernel.org>

diff --git a/arch/arm64/include/asm/pgtable-hwdef.h b/arch/arm64/include/asm/pgtable-hwdef.h
index ef207a0d4f0d..9943ff0af4c9 100644
--- a/arch/arm64/include/asm/pgtable-hwdef.h
+++ b/arch/arm64/include/asm/pgtable-hwdef.h
@@ -297,6 +297,7 @@
 #define TCR_TBI1		(UL(1) << 38)
 #define TCR_HA			(UL(1) << 39)
 #define TCR_HD			(UL(1) << 40)
+#define TCR_TBID0		(UL(1) << 51)
 #define TCR_TBID1		(UL(1) << 52)
 #define TCR_NFD0		(UL(1) << 53)
 #define TCR_NFD1		(UL(1) << 54)