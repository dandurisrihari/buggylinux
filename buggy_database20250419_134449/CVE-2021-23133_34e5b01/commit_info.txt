Commit Hash: 34e5b01186858b36c4d7c87e1a025071e8e2401f
Subject: sctp: delay auto_asconf init until binding the first addr

CVE Identifiers:
- CVE-2021-23133

Full commit message:
sctp: delay auto_asconf init until binding the first addr

As Or Cohen described:

  If sctp_destroy_sock is called without sock_net(sk)->sctp.addr_wq_lock
  held and sp->do_auto_asconf is true, then an element is removed
  from the auto_asconf_splist without any proper locking.

  This can happen in the following functions:
  1. In sctp_accept, if sctp_sock_migrate fails.
  2. In inet_create or inet6_create, if there is a bpf program
     attached to BPF_CGROUP_INET_SOCK_CREATE which denies
     creation of the sctp socket.

This patch is to fix it by moving the auto_asconf init out of
sctp_init_sock(), by which inet_create()/inet6_create() won't
need to operate it in sctp_destroy_sock() when calling
sk_common_release().

It also makes more sense to do auto_asconf init while binding the
first addr, as auto_asconf actually requires an ANY addr bind,
see it in sctp_addr_wq_timeout_handler().

This addresses CVE-2021-23133.

Fixes: 610236587600 ("bpf: Add new cgroup attach type to enable sock modifications")
Reported-by: Or Cohen <orcohen@paloaltonetworks.com>
Signed-off-by: Xin Long <lucien.xin@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Metadata:
Author: Xin Long <lucien.xin@gmail.com>
Author Date: Mon May 3 05:11:42 2021 +0800
Committer: David S. Miller <davem@davemloft.net>
Commit Date: Mon May 3 13:36:21 2021 -0700

Files Changed: 1
Lines Added: 17
Lines Removed: 14
Total Changes: 31
