{
  "hash": "74afda4016a7437e6e425c3370e4b93b47be8ddf",
  "hash_short": "74afda40",
  "subject": "arm64: compile the kernel with ptrauth return address signing",
  "body": "Compile all functions with two ptrauth instructions: PACIASP in the\nprologue to sign the return address, and AUTIASP in the epilogue to\nauthenticate the return address (from the stack). If authentication\nfails, the return will cause an instruction abort to be taken, followed\nby an oops and killing the task.\n\nThis should help protect the kernel against attacks using\nreturn-oriented programming. As ptrauth protects the return address, it\ncan also serve as a replacement for CONFIG_STACKPROTECTOR, although note\nthat it does not protect other parts of the stack.\n\nThe new instructions are in the HINT encoding space, so on a system\nwithout ptrauth they execute as NOPs.\n\nCONFIG_ARM64_PTR_AUTH now not only enables ptrauth for userspace and KVM\nguests, but also automatically builds the kernel with ptrauth\ninstructions if the compiler supports it. If there is no compiler\nsupport, we do not warn that the kernel was built without ptrauth\ninstructions.\n\nGCC 7 and 8 support the -msign-return-address option, while GCC 9\ndeprecates that option and replaces it with -mbranch-protection. Support\nboth options.\n\nClang uses an external assembler hence this patch makes sure that the\ncorrect parameters (-march=armv8.3-a) are passed down to help it recognize\nthe ptrauth instructions.\n\nFtrace function tracer works properly with Ptrauth only when\npatchable-function-entry feature is present and is ensured by the\nKconfig dependency.\n\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Will Deacon <will@kernel.org>\nCc: Masahiro Yamada <yamada.masahiro@socionext.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Vincenzo Frascino <Vincenzo.Frascino@arm.com> # not co-dev parts\nCo-developed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>\nSigned-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>\nSigned-off-by: Kristina Martsenko <kristina.martsenko@arm.com>\n[Amit: Cover leaf function, comments, Ftrace Kconfig]\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "full_message": "arm64: compile the kernel with ptrauth return address signing\n\nCompile all functions with two ptrauth instructions: PACIASP in the\nprologue to sign the return address, and AUTIASP in the epilogue to\nauthenticate the return address (from the stack). If authentication\nfails, the return will cause an instruction abort to be taken, followed\nby an oops and killing the task.\n\nThis should help protect the kernel against attacks using\nreturn-oriented programming. As ptrauth protects the return address, it\ncan also serve as a replacement for CONFIG_STACKPROTECTOR, although note\nthat it does not protect other parts of the stack.\n\nThe new instructions are in the HINT encoding space, so on a system\nwithout ptrauth they execute as NOPs.\n\nCONFIG_ARM64_PTR_AUTH now not only enables ptrauth for userspace and KVM\nguests, but also automatically builds the kernel with ptrauth\ninstructions if the compiler supports it. If there is no compiler\nsupport, we do not warn that the kernel was built without ptrauth\ninstructions.\n\nGCC 7 and 8 support the -msign-return-address option, while GCC 9\ndeprecates that option and replaces it with -mbranch-protection. Support\nboth options.\n\nClang uses an external assembler hence this patch makes sure that the\ncorrect parameters (-march=armv8.3-a) are passed down to help it recognize\nthe ptrauth instructions.\n\nFtrace function tracer works properly with Ptrauth only when\npatchable-function-entry feature is present and is ensured by the\nKconfig dependency.\n\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Will Deacon <will@kernel.org>\nCc: Masahiro Yamada <yamada.masahiro@socionext.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Vincenzo Frascino <Vincenzo.Frascino@arm.com> # not co-dev parts\nCo-developed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>\nSigned-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>\nSigned-off-by: Kristina Martsenko <kristina.martsenko@arm.com>\n[Amit: Cover leaf function, comments, Ftrace Kconfig]\nSigned-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
  "author_name": "Kristina Martsenko",
  "author_email": "kristina.martsenko@arm.com",
  "author_date": "Fri Mar 13 14:35:03 2020 +0530",
  "author_date_iso": "2020-03-13T14:35:03+05:30",
  "committer_name": "Catalin Marinas",
  "committer_email": "catalin.marinas@arm.com",
  "committer_date": "Wed Mar 18 09:50:21 2020 +0000",
  "committer_date_iso": "2020-03-18T09:50:21+00:00",
  "files_changed": [
    "arch/arm64/Kconfig",
    "arch/arm64/Makefile"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "arch/arm64/Kconfig",
      "insertions": 23,
      "deletions": 1
    },
    {
      "file": "arch/arm64/Makefile",
      "insertions": 11,
      "deletions": 0
    }
  ],
  "total_insertions": 34,
  "total_deletions": 1,
  "total_changes": 35,
  "parents": [
    "c2d920bf1fffc3a61cb77db24464caf39496b32d"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.7-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}