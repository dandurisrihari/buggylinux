Commit Hash: c5e12ac3beb0dd3a718296b2d8af5528e9ab728e
Subject: net: mscc: ocelot: serialize access to the injection/extraction groups


Security Keywords:
- injection

Full commit message:
net: mscc: ocelot: serialize access to the injection/extraction groups

As explained by Horatiu Vultur in commit 603ead96582d ("net: sparx5: Add
spinlock for frame transmission from CPU") which is for a similar
hardware design, multiple CPUs can simultaneously perform injection
or extraction. There are only 2 register groups for injection and 2
for extraction, and the driver only uses one of each. So we'd better
serialize access using spin locks, otherwise frame corruption is
possible.

Note that unlike in sparx5, FDMA in ocelot does not have this issue
because struct ocelot_fdma_tx_ring already contains an xmit_lock.

I guess this is mostly a problem for NXP LS1028A, as that is dual core.
I don't think VSC7514 is. So I'm blaming the commit where LS1028A (aka
the felix DSA driver) started using register-based packet injection and
extraction.

Fixes: 0a6f17c6ae21 ("net: dsa: tag_ocelot_8021q: add support for PTP timestamping")
Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Metadata:
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Author Date: Thu Aug 15 03:07:04 2024 +0300
Committer: David S. Miller <davem@davemloft.net>
Commit Date: Fri Aug 16 09:59:32 2024 +0100

Files Changed: 4
Lines Added: 76
Lines Removed: 0
Total Changes: 76
