commit 10d5ea5a436da8d60cdb5845f454d595accdbce0
Author: Kees Cook <kees@kernel.org>
Date:   Mon Sep 26 19:29:23 2022 -0700

    wifi: nl80211: Split memcpy() of struct nl80211_wowlan_tcp_data_token flexible array
    
    To work around a misbehavior of the compiler's ability to see into
    composite flexible array structs (as detailed in the coming memcpy()
    hardening series[1]), split the memcpy() of the header and the payload
    so no false positive run-time overflow warning will be generated.
    
    [1] https://lore.kernel.org/linux-hardening/20220901065914.1417829-2-keescook@chromium.org/
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 8ff8b1c040f0..597c52236514 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -13265,7 +13265,9 @@ static int nl80211_parse_wowlan_tcp(struct cfg80211_registered_device *rdev,
 	       wake_mask_size);
 	if (tok) {
 		cfg->tokens_size = tokens_size;
-		memcpy(&cfg->payload_tok, tok, sizeof(*tok) + tokens_size);
+		cfg->payload_tok = *tok;
+		memcpy(cfg->payload_tok.token_stream, tok->token_stream,
+		       tokens_size);
 	}
 
 	trig->tcp = cfg;