commit 6c0029211382011af508273c4fc98a732f841d95
Merge: 16b3d0cf5bad f46ec84b5acb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Apr 28 14:27:12 2021 -0700

    Merge tag 'for-5.13/block-2021-04-27' of git://git.kernel.dk/linux-block
    
    Pull block updates from Jens Axboe:
     "Pretty quiet round this time, which is nice. In detail:
    
       - Series revamping bounce buffer support (Christoph)
    
       - Dead code removal (Christoph, Bart)
    
       - Partition iteration revamp, now using xarray (Christoph)
    
       - Passthrough request scheduler improvements (Lin)
    
       - Series of BFQ improvements (Paolo)
    
       - Fix ioprio task iteration (Peter)
    
       - Various little tweaks and fixes (Tejun, Saravanan, Bhaskar, Max,
         Nikolay)"
    
    * tag 'for-5.13/block-2021-04-27' of git://git.kernel.dk/linux-block: (41 commits)
      blk-iocost: don't ignore vrate_min on QD contention
      blk-mq: Fix spurious debugfs directory creation during initialization
      bfq/mq-deadline: remove redundant check for passthrough request
      blk-mq: bypass IO scheduler's limit_depth for passthrough request
      block: Remove an obsolete comment from sg_io()
      block: move bio_list_copy_data to pktcdvd
      block: remove zero_fill_bio_iter
      block: add queue_to_disk() to get gendisk from request_queue
      block: remove an incorrect check from blk_rq_append_bio
      block: initialize ret in bdev_disk_changed
      block: Fix sys_ioprio_set(.which=IOPRIO_WHO_PGRP) task iteration
      block: remove disk_part_iter
      block: simplify diskstats_show
      block: simplify show_partition
      block: simplify printk_all_partitions
      block: simplify partition_overlaps
      block: simplify partition removal
      block: take bd_mutex around delete_partitions in del_gendisk
      block: refactor blk_drop_partitions
      block: move more syncing and invalidation to delete_partition
      ...

diff --cc fs/block_dev.c
index 09d6f7229db9,363015fcffdb..2ef24273069d
--- a/fs/block_dev.c
+++ b/fs/block_dev.c
@@@ -1244,13 -1240,15 +1244,15 @@@ int bdev_disk_changed(struct block_devi
  
  	lockdep_assert_held(&bdev->bd_mutex);
  
 -	clear_bit(GD_NEED_PART_SCAN, &bdev->bd_disk->state);
 -
  rescan:
- 	ret = blk_drop_partitions(bdev);
- 	if (ret)
- 		return ret;
+ 	if (bdev->bd_part_count)
+ 		return -EBUSY;
+ 	sync_blockdev(bdev);
+ 	invalidate_bdev(bdev);
+ 	blk_drop_partitions(disk);
  
 +	clear_bit(GD_NEED_PART_SCAN, &disk->state);
 +
  	/*
  	 * Historically we only set the capacity to zero for devices that
  	 * support partitions (independ of actually having partitions created).