commit 152d32aa846835987966fd20ee1143b0e05036a0
Merge: 4f9701057a9c 3bf0fcd75434
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 1 10:14:08 2021 -0700

    Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm
    
    Pull kvm updates from Paolo Bonzini:
     "This is a large update by KVM standards, including AMD PSP (Platform
      Security Processor, aka "AMD Secure Technology") and ARM CoreSight
      (debug and trace) changes.
    
      ARM:
    
       - CoreSight: Add support for ETE and TRBE
    
       - Stage-2 isolation for the host kernel when running in protected
         mode
    
       - Guest SVE support when running in nVHE mode
    
       - Force W^X hypervisor mappings in nVHE mode
    
       - ITS save/restore for guests using direct injection with GICv4.1
    
       - nVHE panics now produce readable backtraces
    
       - Guest support for PTP using the ptp_kvm driver
    
       - Performance improvements in the S2 fault handler
    
      x86:
    
       - AMD PSP driver changes
    
       - Optimizations and cleanup of nested SVM code
    
       - AMD: Support for virtual SPEC_CTRL
    
       - Optimizations of the new MMU code: fast invalidation, zap under
         read lock, enable/disably dirty page logging under read lock
    
       - /dev/kvm API for AMD SEV live migration (guest API coming soon)
    
       - support SEV virtual machines sharing the same encryption context
    
       - support SGX in virtual machines
    
       - add a few more statistics
    
       - improved directed yield heuristics
    
       - Lots and lots of cleanups
    
      Generic:
    
       - Rework of MMU notifier interface, simplifying and optimizing the
         architecture-specific code
    
       - a handful of "Get rid of oprofile leftovers" patches
    
       - Some selftests improvements"
    
    * tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (379 commits)
      KVM: selftests: Speed up set_memory_region_test
      selftests: kvm: Fix the check of return value
      KVM: x86: Take advantage of kvm_arch_dy_has_pending_interrupt()
      KVM: SVM: Skip SEV cache flush if no ASIDs have been used
      KVM: SVM: Remove an unnecessary prototype declaration of sev_flush_asids()
      KVM: SVM: Drop redundant svm_sev_enabled() helper
      KVM: SVM: Move SEV VMCB tracking allocation to sev.c
      KVM: SVM: Explicitly check max SEV ASID during sev_hardware_setup()
      KVM: SVM: Unconditionally invoke sev_hardware_teardown()
      KVM: SVM: Enable SEV/SEV-ES functionality by default (when supported)
      KVM: SVM: Condition sev_enabled and sev_es_enabled on CONFIG_KVM_AMD_SEV=y
      KVM: SVM: Append "_enabled" to module-scoped SEV/SEV-ES control variables
      KVM: SEV: Mask CPUID[0x8000001F].eax according to supported features
      KVM: SVM: Move SEV module params/variables to sev.c
      KVM: SVM: Disable SEV/SEV-ES if NPT is disabled
      KVM: SVM: Free sev_asid_bitmap during init if SEV setup fails
      KVM: SVM: Zero out the VMCB array used to track SEV ASID association
      x86/sev: Drop redundant and potentially misleading 'sev_enabled'
      KVM: x86: Move reverse CPUID helpers to separate header file
      KVM: x86: Rename GPR accessors to make mode-aware variants the defaults
      ...

diff --cc arch/mips/include/asm/kvm_host.h
index 603ad562d101,d0944a75fc8d..fca4547d580f
--- a/arch/mips/include/asm/kvm_host.h
+++ b/arch/mips/include/asm/kvm_host.h
@@@ -822,15 -942,27 +815,10 @@@ bool kvm_mips_flush_gpa_pt(struct kvm *
  int kvm_mips_mkclean_gpa_pt(struct kvm *kvm, gfn_t start_gfn, gfn_t end_gfn);
  pgd_t *kvm_pgd_alloc(void);
  void kvm_mmu_free_memory_caches(struct kvm_vcpu *vcpu);
 -void kvm_trap_emul_invalidate_gva(struct kvm_vcpu *vcpu, unsigned long addr,
 -				  bool user);
 -void kvm_trap_emul_gva_lockless_begin(struct kvm_vcpu *vcpu);
 -void kvm_trap_emul_gva_lockless_end(struct kvm_vcpu *vcpu);
 -
 -enum kvm_mips_fault_result {
 -	KVM_MIPS_MAPPED = 0,
 -	KVM_MIPS_GVA,
 -	KVM_MIPS_GPA,
 -	KVM_MIPS_TLB,
 -	KVM_MIPS_TLBINV,
 -	KVM_MIPS_TLBMOD,
 -};
 -enum kvm_mips_fault_result kvm_trap_emul_gva_fault(struct kvm_vcpu *vcpu,
 -						   unsigned long gva,
 -						   bool write);
  
  #define KVM_ARCH_WANT_MMU_NOTIFIER
- int kvm_unmap_hva_range(struct kvm *kvm,
- 			unsigned long start, unsigned long end, unsigned flags);
- int kvm_set_spte_hva(struct kvm *kvm, unsigned long hva, pte_t pte);
- int kvm_age_hva(struct kvm *kvm, unsigned long start, unsigned long end);
- int kvm_test_age_hva(struct kvm *kvm, unsigned long hva);
  
  /* Emulation */
 -int kvm_get_inst(u32 *opc, struct kvm_vcpu *vcpu, u32 *out);
  enum emulation_result update_pc(struct kvm_vcpu *vcpu, u32 cause);
  int kvm_get_badinstr(u32 *opc, struct kvm_vcpu *vcpu, u32 *out);
  int kvm_get_badinstrp(u32 *opc, struct kvm_vcpu *vcpu, u32 *out);