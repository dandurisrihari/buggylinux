{
  "hash": "ea6789980fdaa610d7eb63602c746bf6ec70cd2b",
  "hash_short": "ea678998",
  "subject": "assoc_array: Fix a buggy node-splitting case",
  "body": "This fixes CVE-2017-12193.\n\nFix a case in the assoc_array implementation in which a new leaf is\nadded that needs to go into a node that happens to be full, where the\nexisting leaves in that node cluster together at that level to the\nexclusion of new leaf.\n\nWhat needs to happen is that the existing leaves get moved out to a new\nnode, N1, at level + 1 and the existing node needs replacing with one,\nN0, that has pointers to the new leaf and to N1.\n\nThe code that tries to do this gets this wrong in two ways:\n\n (1) The pointer that should've pointed from N0 to N1 is set to point\n     recursively to N0 instead.\n\n (2) The backpointer from N0 needs to be set correctly in the case N0 is\n     either the root node or reached through a shortcut.\n\nFix this by removing this path and using the split_node path instead,\nwhich achieves the same end, but in a more general way (thanks to Eric\nBiggers for spotting the redundancy).\n\nThe problem manifests itself as:\n\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000010\n  IP: assoc_array_apply_edit+0x59/0xe5\n\nFixes: 3cb989501c26 (\"Add a generic associative array implementation.\")\nReported-and-tested-by: WU Fan <u3536072@connect.hku.hk>\nSigned-off-by: David Howells <dhowells@redhat.com>\nCc: stable@vger.kernel.org [v3.13-rc1+]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "assoc_array: Fix a buggy node-splitting case\n\nThis fixes CVE-2017-12193.\n\nFix a case in the assoc_array implementation in which a new leaf is\nadded that needs to go into a node that happens to be full, where the\nexisting leaves in that node cluster together at that level to the\nexclusion of new leaf.\n\nWhat needs to happen is that the existing leaves get moved out to a new\nnode, N1, at level + 1 and the existing node needs replacing with one,\nN0, that has pointers to the new leaf and to N1.\n\nThe code that tries to do this gets this wrong in two ways:\n\n (1) The pointer that should've pointed from N0 to N1 is set to point\n     recursively to N0 instead.\n\n (2) The backpointer from N0 needs to be set correctly in the case N0 is\n     either the root node or reached through a shortcut.\n\nFix this by removing this path and using the split_node path instead,\nwhich achieves the same end, but in a more general way (thanks to Eric\nBiggers for spotting the redundancy).\n\nThe problem manifests itself as:\n\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000010\n  IP: assoc_array_apply_edit+0x59/0xe5\n\nFixes: 3cb989501c26 (\"Add a generic associative array implementation.\")\nReported-and-tested-by: WU Fan <u3536072@connect.hku.hk>\nSigned-off-by: David Howells <dhowells@redhat.com>\nCc: stable@vger.kernel.org [v3.13-rc1+]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "David Howells",
  "author_email": "dhowells@redhat.com",
  "author_date": "Wed Oct 11 23:32:27 2017 +0100",
  "author_date_iso": "2017-10-11T23:32:27+01:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Sat Oct 28 10:31:07 2017 -0700",
  "committer_date_iso": "2017-10-28T10:31:07-07:00",
  "files_changed": [
    "lib/assoc_array.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "lib/assoc_array.c",
      "insertions": 17,
      "deletions": 34
    }
  ],
  "total_insertions": 17,
  "total_deletions": 34,
  "total_changes": 51,
  "parents": [
    "781402340475144bb360e32bb7437fa4b84cadc3"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.14",
    "v4.14-rc7",
    "v4.14-rc8",
    "v4.15",
    "v4.15-rc1",
    "v4.15-rc2",
    "v4.15-rc3",
    "v4.15-rc4",
    "v4.15-rc5",
    "v4.15-rc6"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2017-12193"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "lib/assoc_array.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}