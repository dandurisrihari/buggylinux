{
  "hash": "9bc1f09f6fa76fdf31eb7d6a4a4df43574725f93",
  "hash_short": "9bc1f09f",
  "subject": "KVM: async_pf: avoid async pf injection when in guest mode",
  "body": "INFO: task gnome-terminal-:1734 blocked for more than 120 seconds.\n       Not tainted 4.12.0-rc4+ #8\n \"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n gnome-terminal- D    0  1734   1015 0x00000000\n Call Trace:\n  __schedule+0x3cd/0xb30\n  schedule+0x40/0x90\n  kvm_async_pf_task_wait+0x1cc/0x270\n  ? __vfs_read+0x37/0x150\n  ? prepare_to_swait+0x22/0x70\n  do_async_page_fault+0x77/0xb0\n  ? do_async_page_fault+0x77/0xb0\n  async_page_fault+0x28/0x30\n\nThis is triggered by running both win7 and win2016 on L1 KVM simultaneously,\nand then gives stress to memory on L1, I can observed this hang on L1 when\nat least ~70% swap area is occupied on L0.\n\nThis is due to async pf was injected to L2 which should be injected to L1,\nL2 guest starts receiving pagefault w/ bogus %cr2(apf token from the host\nactually), and L1 guest starts accumulating tasks stuck in D state in\nkvm_async_pf_task_wait() since missing PAGE_READY async_pfs.\n\nThis patch fixes the hang by doing async pf when executing L1 guest.\n\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Wanpeng Li <wanpeng.li@hotmail.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: async_pf: avoid async pf injection when in guest mode\n\n INFO: task gnome-terminal-:1734 blocked for more than 120 seconds.\n       Not tainted 4.12.0-rc4+ #8\n \"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n gnome-terminal- D    0  1734   1015 0x00000000\n Call Trace:\n  __schedule+0x3cd/0xb30\n  schedule+0x40/0x90\n  kvm_async_pf_task_wait+0x1cc/0x270\n  ? __vfs_read+0x37/0x150\n  ? prepare_to_swait+0x22/0x70\n  do_async_page_fault+0x77/0xb0\n  ? do_async_page_fault+0x77/0xb0\n  async_page_fault+0x28/0x30\n\nThis is triggered by running both win7 and win2016 on L1 KVM simultaneously,\nand then gives stress to memory on L1, I can observed this hang on L1 when\nat least ~70% swap area is occupied on L0.\n\nThis is due to async pf was injected to L2 which should be injected to L1,\nL2 guest starts receiving pagefault w/ bogus %cr2(apf token from the host\nactually), and L1 guest starts accumulating tasks stuck in D state in\nkvm_async_pf_task_wait() since missing PAGE_READY async_pfs.\n\nThis patch fixes the hang by doing async pf when executing L1 guest.\n\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Wanpeng Li <wanpeng.li@hotmail.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Wanpeng Li",
  "author_email": "wanpeng.li@hotmail.com",
  "author_date": "Thu Jun 8 20:13:40 2017 -0700",
  "author_date_iso": "2017-06-08T20:13:40-07:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Sun Jun 11 08:39:24 2017 +0200",
  "committer_date_iso": "2017-06-11T08:39:24+02:00",
  "files_changed": [
    "arch/x86/kvm/mmu.c",
    "arch/x86/kvm/mmu.h",
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/x86/kvm/mmu.c",
      "insertions": 5,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/mmu.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 1,
      "deletions": 2
    }
  ],
  "total_insertions": 7,
  "total_deletions": 4,
  "total_changes": 11,
  "parents": [
    "9e53932d888b7f32475db72f859f8f38cc2135fb"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.12",
    "v4.12-rc5",
    "v4.12-rc6",
    "v4.12-rc7",
    "v4.13",
    "v4.13-rc1",
    "v4.13-rc2",
    "v4.13-rc3",
    "v4.13-rc4",
    "v4.13-rc5"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/mmu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/mmu.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}