{
  "hash": "19cf4b7eefc3040192bccb10c322e4c831bb0eb0",
  "hash_short": "19cf4b7e",
  "subject": "KVM: x86: fix access code passed to gva_to_gpa",
  "body": "The PK bit of the error code is computed dynamically in permission_fault\nand therefore need not be passed to gva_to_gpa: only the access bits\n(fetch, user, write) need to be passed down.\n\nNot doing so causes a splat in the pku test:\n\n   WARNING: CPU: 25 PID: 5465 at arch/x86/kvm/mmu.h:197 paging64_walk_addr_generic+0x594/0x750 [kvm]\n   Hardware name: Intel Corporation WilsonCity/WilsonCity, BIOS WLYDCRB1.SYS.0014.D62.2001092233 01/09/2020\n   RIP: 0010:paging64_walk_addr_generic+0x594/0x750 [kvm]\n   Code: <0f> 0b e9 db fe ff ff 44 8b 43 04 4c 89 6c 24 30 8b 13 41 39 d0 89\n   RSP: 0018:ff53778fc623fb60 EFLAGS: 00010202\n   RAX: 0000000000000001 RBX: ff53778fc623fbf0 RCX: 0000000000000007\n   RDX: 0000000000000001 RSI: 0000000000000002 RDI: ff4501efba818000\n   RBP: 0000000000000020 R08: 0000000000000005 R09: 00000000004000e7\n   R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000007\n   R13: ff4501efba818388 R14: 10000000004000e7 R15: 0000000000000000\n   FS:  00007f2dcf31a700(0000) GS:ff4501f1c8040000(0000) knlGS:0000000000000000\n   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n   CR2: 0000000000000000 CR3: 0000001dea475005 CR4: 0000000000763ee0\n   DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n   DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n   PKRU: 55555554\n   Call Trace:\n    paging64_gva_to_gpa+0x3f/0xb0 [kvm]\n    kvm_fixup_and_inject_pf_error+0x48/0xa0 [kvm]\n    handle_exception_nmi+0x4fc/0x5b0 [kvm_intel]\n    kvm_arch_vcpu_ioctl_run+0x911/0x1c10 [kvm]\n    kvm_vcpu_ioctl+0x23e/0x5d0 [kvm]\n    ksys_ioctl+0x92/0xb0\n    __x64_sys_ioctl+0x16/0x20\n    do_syscall_64+0x3e/0xb0\n    entry_SYSCALL_64_after_hwframe+0x44/0xa9\n   ---[ end trace d17eb998aee991da ]---\n\nReported-by: Sean Christopherson <sean.j.christopherson@intel.com>\nFixes: 897861479c064 (\"KVM: x86: Add helper functions for illegal GPA checking and page fault injection\")\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: x86: fix access code passed to gva_to_gpa\n\nThe PK bit of the error code is computed dynamically in permission_fault\nand therefore need not be passed to gva_to_gpa: only the access bits\n(fetch, user, write) need to be passed down.\n\nNot doing so causes a splat in the pku test:\n\n   WARNING: CPU: 25 PID: 5465 at arch/x86/kvm/mmu.h:197 paging64_walk_addr_generic+0x594/0x750 [kvm]\n   Hardware name: Intel Corporation WilsonCity/WilsonCity, BIOS WLYDCRB1.SYS.0014.D62.2001092233 01/09/2020\n   RIP: 0010:paging64_walk_addr_generic+0x594/0x750 [kvm]\n   Code: <0f> 0b e9 db fe ff ff 44 8b 43 04 4c 89 6c 24 30 8b 13 41 39 d0 89\n   RSP: 0018:ff53778fc623fb60 EFLAGS: 00010202\n   RAX: 0000000000000001 RBX: ff53778fc623fbf0 RCX: 0000000000000007\n   RDX: 0000000000000001 RSI: 0000000000000002 RDI: ff4501efba818000\n   RBP: 0000000000000020 R08: 0000000000000005 R09: 00000000004000e7\n   R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000007\n   R13: ff4501efba818388 R14: 10000000004000e7 R15: 0000000000000000\n   FS:  00007f2dcf31a700(0000) GS:ff4501f1c8040000(0000) knlGS:0000000000000000\n   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n   CR2: 0000000000000000 CR3: 0000001dea475005 CR4: 0000000000763ee0\n   DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n   DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n   PKRU: 55555554\n   Call Trace:\n    paging64_gva_to_gpa+0x3f/0xb0 [kvm]\n    kvm_fixup_and_inject_pf_error+0x48/0xa0 [kvm]\n    handle_exception_nmi+0x4fc/0x5b0 [kvm_intel]\n    kvm_arch_vcpu_ioctl_run+0x911/0x1c10 [kvm]\n    kvm_vcpu_ioctl+0x23e/0x5d0 [kvm]\n    ksys_ioctl+0x92/0xb0\n    __x64_sys_ioctl+0x16/0x20\n    do_syscall_64+0x3e/0xb0\n    entry_SYSCALL_64_after_hwframe+0x44/0xa9\n   ---[ end trace d17eb998aee991da ]---\n\nReported-by: Sean Christopherson <sean.j.christopherson@intel.com>\nFixes: 897861479c064 (\"KVM: x86: Add helper functions for illegal GPA checking and page fault injection\")\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Paolo Bonzini",
  "author_email": "pbonzini@redhat.com",
  "author_date": "Mon Aug 17 13:53:04 2020 -0400",
  "author_date_iso": "2020-08-17T13:53:04-04:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Mon Aug 17 15:21:43 2020 -0400",
  "committer_date_iso": "2020-08-17T15:21:43-04:00",
  "files_changed": [
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 3,
      "deletions": 1
    }
  ],
  "total_insertions": 3,
  "total_deletions": 1,
  "total_changes": 4,
  "parents": [
    "98b0bf02738004829d7e26d6cb47b2e469aaba86"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}