{
  "hash": "a511e1af8b12f44c6e55786c463c9f093c214fb6",
  "hash_short": "a511e1af",
  "subject": "KEYS: Move the point of trust determination to __key_link()",
  "body": "Move the point at which a key is determined to be trustworthy to\n__key_link() so that we use the contents of the keyring being linked in to\nto determine whether the key being linked in is trusted or not.\n\nWhat is 'trusted' then becomes a matter of what's in the keyring.\n\nCurrently, the test is done when the key is parsed, but given that at that\npoint we can only sensibly refer to the contents of the system trusted\nkeyring, we can only use that as the basis for working out the\ntrustworthiness of a new key.\n\nWith this change, a trusted keyring is a set of keys that once the\ntrusted-only flag is set cannot be added to except by verification through\none of the contained keys.\n\nFurther, adding a key into a trusted keyring, whilst it might grant\ntrustworthiness in the context of that keyring, does not automatically\ngrant trustworthiness in the context of a second keyring to which it could\nbe secondarily linked.\n\nTo accomplish this, the authentication data associated with the key source\nmust now be retained.  For an X.509 cert, this means the contents of the\nAuthorityKeyIdentifier and the signature data.\n\n\nIf system keyrings are disabled then restrict_link_by_builtin_trusted()\nresolves to restrict_link_reject().  The integrity digital signature code\nstill works correctly with this as it was previously using\nKEY_FLAG_TRUSTED_ONLY, which doesn't permit anything to be added if there\nis no system keyring against which trust can be determined.\n\nSigned-off-by: David Howells <dhowells@redhat.com>",
  "full_message": "KEYS: Move the point of trust determination to __key_link()\n\nMove the point at which a key is determined to be trustworthy to\n__key_link() so that we use the contents of the keyring being linked in to\nto determine whether the key being linked in is trusted or not.\n\nWhat is 'trusted' then becomes a matter of what's in the keyring.\n\nCurrently, the test is done when the key is parsed, but given that at that\npoint we can only sensibly refer to the contents of the system trusted\nkeyring, we can only use that as the basis for working out the\ntrustworthiness of a new key.\n\nWith this change, a trusted keyring is a set of keys that once the\ntrusted-only flag is set cannot be added to except by verification through\none of the contained keys.\n\nFurther, adding a key into a trusted keyring, whilst it might grant\ntrustworthiness in the context of that keyring, does not automatically\ngrant trustworthiness in the context of a second keyring to which it could\nbe secondarily linked.\n\nTo accomplish this, the authentication data associated with the key source\nmust now be retained.  For an X.509 cert, this means the contents of the\nAuthorityKeyIdentifier and the signature data.\n\n\nIf system keyrings are disabled then restrict_link_by_builtin_trusted()\nresolves to restrict_link_reject().  The integrity digital signature code\nstill works correctly with this as it was previously using\nKEY_FLAG_TRUSTED_ONLY, which doesn't permit anything to be added if there\nis no system keyring against which trust can be determined.\n\nSigned-off-by: David Howells <dhowells@redhat.com>",
  "author_name": "David Howells",
  "author_email": "dhowells@redhat.com",
  "author_date": "Wed Apr 6 16:14:26 2016 +0100",
  "author_date_iso": "2016-04-06T16:14:26+01:00",
  "committer_name": "David Howells",
  "committer_email": "dhowells@redhat.com",
  "committer_date": "Mon Apr 11 22:43:43 2016 +0100",
  "committer_date_iso": "2016-04-11T22:43:43+01:00",
  "files_changed": [
    "certs/system_keyring.c",
    "crypto/asymmetric_keys/restrict.c",
    "crypto/asymmetric_keys/x509_parser.h",
    "crypto/asymmetric_keys/x509_public_key.c",
    "include/crypto/public_key.h",
    "include/keys/system_keyring.h",
    "kernel/module_signing.c",
    "security/integrity/digsig.c",
    "security/integrity/ima/ima_mok.c"
  ],
  "files_changed_count": 9,
  "stats": [
    {
      "file": "certs/system_keyring.c",
      "insertions": 17,
      "deletions": 3
    },
    {
      "file": "crypto/asymmetric_keys/restrict.c",
      "insertions": 32,
      "deletions": 30
    },
    {
      "file": "crypto/asymmetric_keys/x509_parser.h",
      "insertions": 0,
      "deletions": 6
    },
    {
      "file": "crypto/asymmetric_keys/x509_public_key.c",
      "insertions": 1,
      "deletions": 20
    },
    {
      "file": "include/crypto/public_key.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "include/keys/system_keyring.h",
      "insertions": 7,
      "deletions": 12
    },
    {
      "file": "kernel/module_signing.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "security/integrity/digsig.c",
      "insertions": 32,
      "deletions": 1
    },
    {
      "file": "security/integrity/ima/ima_mok.c",
      "insertions": 3,
      "deletions": 3
    }
  ],
  "total_insertions": 100,
  "total_deletions": 76,
  "total_changes": 176,
  "parents": [
    "99716b7cae8263e1c7e7c1987e95d8f67071ab3e"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "crypto/asymmetric_keys/restrict.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/asymmetric_keys/x509_parser.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/crypto/public_key.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/keys/system_keyring.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/integrity/digsig.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "certs/system_keyring.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/asymmetric_keys/x509_public_key.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/module_signing.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "security/integrity/ima/ima_mok.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}