{
  "hash": "7b9dc3f75fc8be046e76387a22a21f421ce55b53",
  "hash_short": "7b9dc3f7",
  "subject": "Merge tag 'pm-4.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm",
  "body": "Pull power management updates from Rafael Wysocki:\n \"Again, cpufreq gets more changes than the other parts this time (one\n  new driver, one old driver less, a bunch of enhancements of the\n  existing code, new CPU IDs, fixes, cleanups)\n\n  There also are some changes in cpuidle (idle injection rework, a\n  couple of new CPU IDs, online/offline rework in intel_idle, fixes and\n  cleanups), in the generic power domains framework (mostly related to\n  supporting power domains containing CPUs), and in the Operating\n  Performance Points (OPP) library (mostly related to supporting devices\n  with multiple voltage regulators)\n\n  In addition to that, the system sleep state selection interface is\n  modified to make it easier for distributions with unchanged user space\n  to support suspend-to-idle as the default system suspend method, some\n  issues are fixed in the PM core, the latency tolerance PM QoS\n  framework is improved a bit, the Intel RAPL power capping driver is\n  cleaned up and there are some fixes and cleanups in the devfreq\n  subsystem\n\n  Specifics:\n\n   - New cpufreq driver for Broadcom STB SoCs and a Device Tree binding\n     for it (Markus Mayer)\n\n   - Support for ARM Integrator/AP and Integrator/CP in the generic DT\n     cpufreq driver and elimination of the old Integrator cpufreq driver\n     (Linus Walleij)\n\n   - Support for the zx296718, r8a7743 and r8a7745, Socionext UniPhier,\n     and PXA SoCs in the the generic DT cpufreq driver (Baoyou Xie,\n     Geert Uytterhoeven, Masahiro Yamada, Robert Jarzmik)\n\n   - cpufreq core fix to eliminate races that may lead to using inactive\n     policy objects and related cleanups (Rafael Wysocki)\n\n   - cpufreq schedutil governor update to make it use SCHED_FIFO kernel\n     threads (instead of regular workqueues) for doing delayed work (to\n     reduce the response latency in some cases) and related cleanups\n     (Viresh Kumar)\n\n   - New cpufreq sysfs attribute for resetting statistics (Markus Mayer)\n\n   - cpufreq governors fixes and cleanups (Chen Yu, Stratos Karafotis,\n     Viresh Kumar)\n\n   - Support for using generic cpufreq governors in the intel_pstate\n     driver (Rafael Wysocki)\n\n   - Support for per-logical-CPU P-state limits and the EPP/EPB (Energy\n     Performance Preference/Energy Performance Bias) knobs in the\n     intel_pstate driver (Srinivas Pandruvada)\n\n   - New CPU ID for Knights Mill in intel_pstate (Piotr Luc)\n\n   - intel_pstate driver modification to use the P-state selection\n     algorithm based on CPU load on platforms with the system profile in\n     the ACPI tables set to \"mobile\" (Srinivas Pandruvada)\n\n   - intel_pstate driver cleanups (Arnd Bergmann, Rafael Wysocki,\n     Srinivas Pandruvada)\n\n   - cpufreq powernv driver updates including fast switching support\n     (for the schedutil governor), fixes and cleanus (Akshay Adiga,\n     Andrew Donnellan, Denis Kirjanov)\n\n   - acpi-cpufreq driver rework to switch it over to the new CPU\n     offline/online state machine (Sebastian Andrzej Siewior)\n\n   - Assorted cleanups in cpufreq drivers (Wei Yongjun, Prashanth\n     Prakash)\n\n   - Idle injection rework (to make it use the regular idle path instead\n     of a home-grown custom one) and related powerclamp thermal driver\n     updates (Peter Zijlstra, Jacob Pan, Petr Mladek, Sebastian Andrzej\n     Siewior)\n\n   - New CPU IDs for Atom Z34xx and Knights Mill in intel_idle (Andy\n     Shevchenko, Piotr Luc)\n\n   - intel_idle driver cleanups and switch over to using the new CPU\n     offline/online state machine (Anna-Maria Gleixner, Sebastian\n     Andrzej Siewior)\n\n   - cpuidle DT driver update to support suspend-to-idle properly\n     (Sudeep Holla)\n\n   - cpuidle core cleanups and misc updates (Daniel Lezcano, Pan Bian,\n     Rafael Wysocki)\n\n   - Preliminary support for power domains including CPUs in the generic\n     power domains (genpd) framework and related DT bindings (Lina Iyer)\n\n   - Assorted fixes and cleanups in the generic power domains (genpd)\n     framework (Colin Ian King, Dan Carpenter, Geert Uytterhoeven)\n\n   - Preliminary support for devices with multiple voltage regulators\n     and related fixes and cleanups in the Operating Performance Points\n     (OPP) library (Viresh Kumar, Masahiro Yamada, Stephen Boyd)\n\n   - System sleep state selection interface rework to make it easier to\n     support suspend-to-idle as the default system suspend method\n     (Rafael Wysocki)\n\n   - PM core fixes and cleanups, mostly related to the interactions\n     between the system suspend and runtime PM frameworks (Ulf Hansson,\n     Sahitya Tummala, Tony Lindgren)\n\n   - Latency tolerance PM QoS framework imorovements (Andrew Lutomirski)\n\n   - New Knights Mill CPU ID for the Intel RAPL power capping driver\n     (Piotr Luc)\n\n   - Intel RAPL power capping driver fixes, cleanups and switch over to\n     using the new CPU offline/online state machine (Jacob Pan, Thomas\n     Gleixner, Sebastian Andrzej Siewior)\n\n   - Fixes and cleanups in the exynos-ppmu, exynos-nocp, rk3399_dmc,\n     rockchip-dfi devfreq drivers and the devfreq core (Axel Lin,\n     Chanwoo Choi, Javier Martinez Canillas, MyungJoo Ham, Viresh Kumar)\n\n   - Fix for false-positive KASAN warnings during resume from ACPI S3\n     (suspend-to-RAM) on x86 (Josh Poimboeuf)\n\n   - Memory map verification during resume from hibernation on x86 to\n     ensure a consistent address space layout (Chen Yu)\n\n   - Wakeup sources debugging enhancement (Xing Wei)\n\n   - rockchip-io AVS driver cleanup (Shawn Lin)\"\n\n* tag 'pm-4.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (127 commits)\n  devfreq: rk3399_dmc: Don't use OPP structures outside of RCU locks\n  devfreq: rk3399_dmc: Remove dangling rcu_read_unlock()\n  devfreq: exynos: Don't use OPP structures outside of RCU locks\n  Documentation: intel_pstate: Document HWP energy/performance hints\n  cpufreq: intel_pstate: Support for energy performance hints with HWP\n  cpufreq: intel_pstate: Add locking around HWP requests\n  PM / sleep: Print active wakeup sources when blocking on wakeup_count reads\n  PM / core: Fix bug in the error handling of async suspend\n  PM / wakeirq: Fix dedicated wakeirq for drivers not using autosuspend\n  PM / Domains: Fix compatible for domain idle state\n  PM / OPP: Don't WARN on multiple calls to dev_pm_opp_set_regulators()\n  PM / OPP: Allow platform specific custom set_opp() callbacks\n  PM / OPP: Separate out _generic_set_opp()\n  PM / OPP: Add infrastructure to manage multiple regulators\n  PM / OPP: Pass struct dev_pm_opp_supply to _set_opp_voltage()\n  PM / OPP: Manage supply's voltage/current in a separate structure\n  PM / OPP: Don't use OPP structure outside of rcu protected section\n  PM / OPP: Reword binding supporting multiple regulators per device\n  PM / OPP: Fix incorrect cpu-supply property in binding\n  cpuidle: Add a kerneldoc comment to cpuidle_use_deepest_state()\n  ..",
  "full_message": "Merge tag 'pm-4.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull power management updates from Rafael Wysocki:\n \"Again, cpufreq gets more changes than the other parts this time (one\n  new driver, one old driver less, a bunch of enhancements of the\n  existing code, new CPU IDs, fixes, cleanups)\n\n  There also are some changes in cpuidle (idle injection rework, a\n  couple of new CPU IDs, online/offline rework in intel_idle, fixes and\n  cleanups), in the generic power domains framework (mostly related to\n  supporting power domains containing CPUs), and in the Operating\n  Performance Points (OPP) library (mostly related to supporting devices\n  with multiple voltage regulators)\n\n  In addition to that, the system sleep state selection interface is\n  modified to make it easier for distributions with unchanged user space\n  to support suspend-to-idle as the default system suspend method, some\n  issues are fixed in the PM core, the latency tolerance PM QoS\n  framework is improved a bit, the Intel RAPL power capping driver is\n  cleaned up and there are some fixes and cleanups in the devfreq\n  subsystem\n\n  Specifics:\n\n   - New cpufreq driver for Broadcom STB SoCs and a Device Tree binding\n     for it (Markus Mayer)\n\n   - Support for ARM Integrator/AP and Integrator/CP in the generic DT\n     cpufreq driver and elimination of the old Integrator cpufreq driver\n     (Linus Walleij)\n\n   - Support for the zx296718, r8a7743 and r8a7745, Socionext UniPhier,\n     and PXA SoCs in the the generic DT cpufreq driver (Baoyou Xie,\n     Geert Uytterhoeven, Masahiro Yamada, Robert Jarzmik)\n\n   - cpufreq core fix to eliminate races that may lead to using inactive\n     policy objects and related cleanups (Rafael Wysocki)\n\n   - cpufreq schedutil governor update to make it use SCHED_FIFO kernel\n     threads (instead of regular workqueues) for doing delayed work (to\n     reduce the response latency in some cases) and related cleanups\n     (Viresh Kumar)\n\n   - New cpufreq sysfs attribute for resetting statistics (Markus Mayer)\n\n   - cpufreq governors fixes and cleanups (Chen Yu, Stratos Karafotis,\n     Viresh Kumar)\n\n   - Support for using generic cpufreq governors in the intel_pstate\n     driver (Rafael Wysocki)\n\n   - Support for per-logical-CPU P-state limits and the EPP/EPB (Energy\n     Performance Preference/Energy Performance Bias) knobs in the\n     intel_pstate driver (Srinivas Pandruvada)\n\n   - New CPU ID for Knights Mill in intel_pstate (Piotr Luc)\n\n   - intel_pstate driver modification to use the P-state selection\n     algorithm based on CPU load on platforms with the system profile in\n     the ACPI tables set to \"mobile\" (Srinivas Pandruvada)\n\n   - intel_pstate driver cleanups (Arnd Bergmann, Rafael Wysocki,\n     Srinivas Pandruvada)\n\n   - cpufreq powernv driver updates including fast switching support\n     (for the schedutil governor), fixes and cleanus (Akshay Adiga,\n     Andrew Donnellan, Denis Kirjanov)\n\n   - acpi-cpufreq driver rework to switch it over to the new CPU\n     offline/online state machine (Sebastian Andrzej Siewior)\n\n   - Assorted cleanups in cpufreq drivers (Wei Yongjun, Prashanth\n     Prakash)\n\n   - Idle injection rework (to make it use the regular idle path instead\n     of a home-grown custom one) and related powerclamp thermal driver\n     updates (Peter Zijlstra, Jacob Pan, Petr Mladek, Sebastian Andrzej\n     Siewior)\n\n   - New CPU IDs for Atom Z34xx and Knights Mill in intel_idle (Andy\n     Shevchenko, Piotr Luc)\n\n   - intel_idle driver cleanups and switch over to using the new CPU\n     offline/online state machine (Anna-Maria Gleixner, Sebastian\n     Andrzej Siewior)\n\n   - cpuidle DT driver update to support suspend-to-idle properly\n     (Sudeep Holla)\n\n   - cpuidle core cleanups and misc updates (Daniel Lezcano, Pan Bian,\n     Rafael Wysocki)\n\n   - Preliminary support for power domains including CPUs in the generic\n     power domains (genpd) framework and related DT bindings (Lina Iyer)\n\n   - Assorted fixes and cleanups in the generic power domains (genpd)\n     framework (Colin Ian King, Dan Carpenter, Geert Uytterhoeven)\n\n   - Preliminary support for devices with multiple voltage regulators\n     and related fixes and cleanups in the Operating Performance Points\n     (OPP) library (Viresh Kumar, Masahiro Yamada, Stephen Boyd)\n\n   - System sleep state selection interface rework to make it easier to\n     support suspend-to-idle as the default system suspend method\n     (Rafael Wysocki)\n\n   - PM core fixes and cleanups, mostly related to the interactions\n     between the system suspend and runtime PM frameworks (Ulf Hansson,\n     Sahitya Tummala, Tony Lindgren)\n\n   - Latency tolerance PM QoS framework imorovements (Andrew Lutomirski)\n\n   - New Knights Mill CPU ID for the Intel RAPL power capping driver\n     (Piotr Luc)\n\n   - Intel RAPL power capping driver fixes, cleanups and switch over to\n     using the new CPU offline/online state machine (Jacob Pan, Thomas\n     Gleixner, Sebastian Andrzej Siewior)\n\n   - Fixes and cleanups in the exynos-ppmu, exynos-nocp, rk3399_dmc,\n     rockchip-dfi devfreq drivers and the devfreq core (Axel Lin,\n     Chanwoo Choi, Javier Martinez Canillas, MyungJoo Ham, Viresh Kumar)\n\n   - Fix for false-positive KASAN warnings during resume from ACPI S3\n     (suspend-to-RAM) on x86 (Josh Poimboeuf)\n\n   - Memory map verification during resume from hibernation on x86 to\n     ensure a consistent address space layout (Chen Yu)\n\n   - Wakeup sources debugging enhancement (Xing Wei)\n\n   - rockchip-io AVS driver cleanup (Shawn Lin)\"\n\n* tag 'pm-4.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (127 commits)\n  devfreq: rk3399_dmc: Don't use OPP structures outside of RCU locks\n  devfreq: rk3399_dmc: Remove dangling rcu_read_unlock()\n  devfreq: exynos: Don't use OPP structures outside of RCU locks\n  Documentation: intel_pstate: Document HWP energy/performance hints\n  cpufreq: intel_pstate: Support for energy performance hints with HWP\n  cpufreq: intel_pstate: Add locking around HWP requests\n  PM / sleep: Print active wakeup sources when blocking on wakeup_count reads\n  PM / core: Fix bug in the error handling of async suspend\n  PM / wakeirq: Fix dedicated wakeirq for drivers not using autosuspend\n  PM / Domains: Fix compatible for domain idle state\n  PM / OPP: Don't WARN on multiple calls to dev_pm_opp_set_regulators()\n  PM / OPP: Allow platform specific custom set_opp() callbacks\n  PM / OPP: Separate out _generic_set_opp()\n  PM / OPP: Add infrastructure to manage multiple regulators\n  PM / OPP: Pass struct dev_pm_opp_supply to _set_opp_voltage()\n  PM / OPP: Manage supply's voltage/current in a separate structure\n  PM / OPP: Don't use OPP structure outside of rcu protected section\n  PM / OPP: Reword binding supporting multiple regulators per device\n  PM / OPP: Fix incorrect cpu-supply property in binding\n  cpuidle: Add a kerneldoc comment to cpuidle_use_deepest_state()\n  ..",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Tue Dec 13 10:41:53 2016 -0800",
  "author_date_iso": "2016-12-13T10:41:53-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Tue Dec 13 10:41:53 2016 -0800",
  "committer_date_iso": "2016-12-13T10:41:53-08:00",
  "files_changed": [
    "Documentation/admin-guide/kernel-parameters.txt",
    "MAINTAINERS",
    "drivers/cpufreq/intel_pstate.c",
    "drivers/net/ethernet/smsc/smsc911x.c",
    "drivers/thermal/intel_powerclamp.c",
    "include/linux/cpu.h",
    "include/linux/sched.h",
    "kernel/fork.c",
    "kernel/sched/core.c"
  ],
  "files_changed_count": 9,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-power",
      "insertions": 25,
      "deletions": 20
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "insertions": 15,
      "deletions": 7
    },
    {
      "file": "Documentation/cpu-freq/cpufreq-stats.txt",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "Documentation/cpu-freq/intel-pstate.txt",
      "insertions": 49,
      "deletions": 5
    },
    {
      "file": "Documentation/devicetree/bindings/cpufreq/brcm,stb-avs-cpu-freq.txt",
      "insertions": 78,
      "deletions": 0
    },
    {
      "file": "Documentation/devicetree/bindings/opp/opp.txt",
      "insertions": 19,
      "deletions": 8
    },
    {
      "file": "Documentation/devicetree/bindings/power/domain-idle-state.txt",
      "insertions": 33,
      "deletions": 0
    },
    {
      "file": "Documentation/devicetree/bindings/power/power_domain.txt",
      "insertions": 43,
      "deletions": 0
    },
    {
      "file": "Documentation/power/devices.txt",
      "insertions": 13,
      "deletions": 1
    },
    {
      "file": "Documentation/power/states.txt",
      "insertions": 40,
      "deletions": 22
    },
    {
      "file": "MAINTAINERS",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "arch/arm/mach-imx/gpc.c",
      "insertions": 10,
      "deletions": 7
    },
    {
      "file": "arch/x86/kernel/acpi/wakeup_64.S",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "arch/x86/power/hibernate_64.c",
      "insertions": 92,
      "deletions": 2
    },
    {
      "file": "drivers/acpi/processor_perflib.c",
      "insertions": 32,
      "deletions": 23
    },
    {
      "file": "drivers/acpi/sleep.c",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "drivers/base/power/domain.c",
      "insertions": 301,
      "deletions": 62
    },
    {
      "file": "drivers/base/power/main.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/base/power/opp/core.c",
      "insertions": 397,
      "deletions": 124
    },
    {
      "file": "drivers/base/power/opp/debugfs.c",
      "insertions": 42,
      "deletions": 10
    },
    {
      "file": "drivers/base/power/opp/of.c",
      "insertions": 78,
      "deletions": 33
    },
    {
      "file": "drivers/base/power/opp/opp.h",
      "insertions": 12,
      "deletions": 11
    },
    {
      "file": "drivers/base/power/power.h",
      "insertions": 18,
      "deletions": 1
    },
    {
      "file": "drivers/base/power/qos.c",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "drivers/base/power/runtime.c",
      "insertions": 49,
      "deletions": 13
    },
    {
      "file": "drivers/base/power/sysfs.c",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "drivers/base/power/wakeirq.c",
      "insertions": 66,
      "deletions": 10
    },
    {
      "file": "drivers/base/power/wakeup.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "drivers/cpufreq/Kconfig.arm",
      "insertions": 21,
      "deletions": 8
    },
    {
      "file": "drivers/cpufreq/Makefile",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/cpufreq/acpi-cpufreq.c",
      "insertions": 48,
      "deletions": 69
    },
    {
      "file": "drivers/cpufreq/brcmstb-avs-cpufreq.c",
      "insertions": 1057,
      "deletions": 0
    },
    {
      "file": "drivers/cpufreq/cppc_cpufreq.c",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "drivers/cpufreq/cpufreq-dt-platdev.c",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "drivers/cpufreq/cpufreq-dt.c",
      "insertions": 8,
      "deletions": 4
    },
    {
      "file": "drivers/cpufreq/cpufreq.c",
      "insertions": 13,
      "deletions": 12
    },
    {
      "file": "drivers/cpufreq/cpufreq_conservative.c",
      "insertions": 31,
      "deletions": 15
    },
    {
      "file": "drivers/cpufreq/cpufreq_governor.c",
      "insertions": 20,
      "deletions": 10
    },
    {
      "file": "drivers/cpufreq/cpufreq_governor.h",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "drivers/cpufreq/cpufreq_ondemand.c",
      "insertions": 8,
      "deletions": 9
    },
    {
      "file": "drivers/cpufreq/cpufreq_stats.c",
      "insertions": 22,
      "deletions": 0
    },
    {
      "file": "drivers/cpufreq/integrator-cpufreq.c",
      "insertions": 0,
      "deletions": 239
    },
    {
      "file": "drivers/cpufreq/intel_pstate.c",
      "insertions": 707,
      "deletions": 119
    },
    {
      "file": "drivers/cpufreq/powernv-cpufreq.c",
      "insertions": 53,
      "deletions": 12
    },
    {
      "file": "drivers/cpuidle/cpuidle-powernv.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/cpuidle/cpuidle.c",
      "insertions": 18,
      "deletions": 1
    },
    {
      "file": "drivers/cpuidle/dt_idle_states.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "drivers/cpuidle/governor.c",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "drivers/cpuidle/governors/ladder.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/cpuidle/governors/menu.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/cpuidle/sysfs.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "drivers/devfreq/devfreq.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/devfreq/event/exynos-nocp.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/devfreq/event/exynos-ppmu.c",
      "insertions": 1,
      "deletions": 5
    },
    {
      "file": "drivers/devfreq/event/rockchip-dfi.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/devfreq/exynos-bus.c",
      "insertions": 14,
      "deletions": 15
    },
    {
      "file": "drivers/devfreq/rk3399_dmc.c",
      "insertions": 7,
      "deletions": 8
    },
    {
      "file": "drivers/idle/intel_idle.c",
      "insertions": 89,
      "deletions": 65
    },
    {
      "file": "drivers/net/ethernet/smsc/smsc911x.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "drivers/power/avs/rockchip-io-domain.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/powercap/intel_rapl.c",
      "insertions": 129,
      "deletions": 260
    },
    {
      "file": "drivers/thermal/intel_powerclamp.c",
      "insertions": 184,
      "deletions": 175
    },
    {
      "file": "include/acpi/processor.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "include/linux/cpu.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "include/linux/cpufreq.h",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "include/linux/cpuidle.h",
      "insertions": 6,
      "deletions": 3
    },
    {
      "file": "include/linux/pm_domain.h",
      "insertions": 24,
      "deletions": 4
    },
    {
      "file": "include/linux/pm_opp.h",
      "insertions": 67,
      "deletions": 5
    },
    {
      "file": "include/linux/pm_runtime.h",
      "insertions": 2,
      "deletions": 9
    },
    {
      "file": "include/linux/sched.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "include/linux/suspend.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "kernel/fork.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/power/main.c",
      "insertions": 85,
      "deletions": 3
    },
    {
      "file": "kernel/power/power.h",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "kernel/power/suspend.c",
      "insertions": 42,
      "deletions": 27
    },
    {
      "file": "kernel/sched/core.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "kernel/sched/cpufreq_schedutil.c",
      "insertions": 99,
      "deletions": 20
    },
    {
      "file": "kernel/sched/idle.c",
      "insertions": 109,
      "deletions": 66
    },
    {
      "file": "mm/kasan/kasan.c",
      "insertions": 8,
      "deletions": 1
    }
  ],
  "total_insertions": 4399,
  "total_deletions": 1549,
  "total_changes": 5948,
  "parents": [
    "36869cb93d36269f34800b3384ba7991060a69cf",
    "bbc17bb8a89b3eb31520abf3a9b362d5ee54f908"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/cpufreq/intel_pstate.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/ethernet/smsc/smsc911x.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/thermal/intel_powerclamp.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/cpu.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "MAINTAINERS",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/fork.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/sched.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/sched/core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}