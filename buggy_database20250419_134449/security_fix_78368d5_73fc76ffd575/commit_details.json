{
  "hash": "78368d578e9eab8dc9d42b9e9a2be78a98f4e9d9",
  "hash_short": "78368d57",
  "subject": "staging: lustre: race condition for check/use cfs_fail_val",
  "body": "There are some race conditions when check/use cfs_fail_val.\nFor example: when inject failure stub for LFSCK test as following:\n\n764   if (OBD_FAIL_CHECK(OBD_FAIL_LFSCK_DELAY2) &&\n765       cfs_fail_val > 0) {\n766           struct l_wait_info lwi;\n767\n768           lwi = LWI_TIMEOUT(cfs_time_seconds(cfs_fail_val),\n769                             NULL, NULL);\n770           l_wait_event(thread->t_ctl_waitq,\n771                        !thread_is_running(thread),\n772                        &lwi);\n773\n774           if (unlikely(!thread_is_running(thread))) {\n775                   CDEBUG(D_LFSCK, \"%s: scan dir exit for engine \"\n776                          \"stop, parent \"DFID\", cookie \"LPX64\"n\",\n777                          lfsck_lfsck2name(lfsck),\n778                          PFID(lfsck_dto2fid(dir)),\n779                          lfsck->li_cookie_dir);\n780                   RETURN(0);\n781           }\n782   }\n\nThe \"cfs_fail_val\" may be changed as zero by others after the check\nat the line 765 but before using it at the line 768. Then the LFSCK\nengine will fall into \"wait\" until someone run \"lfsck_stop\".\n\nSigned-off-by: Fan Yong <fan.yong@intel.com>\nIntel-bug-id: https://jira.hpdd.intel.com/browse/LU-6146\nReviewed-on: http://review.whamcloud.com/13481\nReviewed-by: Lai Siyao <lai.siyao@intel.com>\nReviewed-by: Andreas Dilger <andreas.dilger@intel.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
  "full_message": "staging: lustre: race condition for check/use cfs_fail_val\n\nThere are some race conditions when check/use cfs_fail_val.\nFor example: when inject failure stub for LFSCK test as following:\n\n764   if (OBD_FAIL_CHECK(OBD_FAIL_LFSCK_DELAY2) &&\n765       cfs_fail_val > 0) {\n766           struct l_wait_info lwi;\n767\n768           lwi = LWI_TIMEOUT(cfs_time_seconds(cfs_fail_val),\n769                             NULL, NULL);\n770           l_wait_event(thread->t_ctl_waitq,\n771                        !thread_is_running(thread),\n772                        &lwi);\n773\n774           if (unlikely(!thread_is_running(thread))) {\n775                   CDEBUG(D_LFSCK, \"%s: scan dir exit for engine \"\n776                          \"stop, parent \"DFID\", cookie \"LPX64\"n\",\n777                          lfsck_lfsck2name(lfsck),\n778                          PFID(lfsck_dto2fid(dir)),\n779                          lfsck->li_cookie_dir);\n780                   RETURN(0);\n781           }\n782   }\n\nThe \"cfs_fail_val\" may be changed as zero by others after the check\nat the line 765 but before using it at the line 768. Then the LFSCK\nengine will fall into \"wait\" until someone run \"lfsck_stop\".\n\nSigned-off-by: Fan Yong <fan.yong@intel.com>\nIntel-bug-id: https://jira.hpdd.intel.com/browse/LU-6146\nReviewed-on: http://review.whamcloud.com/13481\nReviewed-by: Lai Siyao <lai.siyao@intel.com>\nReviewed-by: Andreas Dilger <andreas.dilger@intel.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
  "author_name": "Fan Yong",
  "author_email": "fan.yong@intel.com",
  "author_date": "Wed Nov 4 13:40:04 2015 -0500",
  "author_date_iso": "2015-11-04T13:40:04-05:00",
  "committer_name": "Greg Kroah-Hartman",
  "committer_email": "gregkh@linuxfoundation.org",
  "committer_date": "Sun Nov 15 20:02:47 2015 -0800",
  "committer_date_iso": "2015-11-15T20:02:47-08:00",
  "files_changed": [
    "drivers/staging/lustre/lustre/libcfs/fail.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/staging/lustre/lustre/libcfs/fail.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "a0455471582117d31659618c02146804df527ff4"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/staging/lustre/lustre/libcfs/fail.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}