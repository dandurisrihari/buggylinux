{
  "hash": "3d27484eba9572ded0117acab7d2728e8916d58f",
  "hash_short": "3d27484e",
  "subject": "Merge git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf",
  "body": "Daniel Borkmann says:\n\n====================\npull-request: bpf 2018-03-21\n\nThe following pull-request contains BPF updates for your *net* tree.\n\nThe main changes are:\n\n1) Follow-up fix to the fault injection framework to prevent jump\n   optimization on the kprobe by installing a dummy post-handler,\n   from Masami.\n\n2) Drop bpf_perf_prog_read_value helper from tracepoint type programs\n   which was mistakenly added there and would otherwise crash due to\n   wrong input context, from Yonghong.\n\n3) Fix a crash in BPF fs when compiled with clang. Code appears to\n   be fine just that clang tries to overly aggressive optimize in\n   non C conform ways, therefore fix the kernel's Makefile to\n   generally prevent such issues, from Daniel.\n\n4) Skip unnecessary capability checks in bpf syscall, which is otherwise\n   triggering unnecessary security hooks on capability checking and\n   causing false alarms on unprivileged processes trying to access\n   CAP_SYS_ADMIN restricted infra, from Chenbo.\n\n5) Fix the test_bpf.ko module when CONFIG_BPF_JIT_ALWAYS_ON is set\n   with regards to a test case that is really just supposed to fail\n   on x8_64 JIT but not others, from Thadeu.\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "Merge git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf\n\nDaniel Borkmann says:\n\n====================\npull-request: bpf 2018-03-21\n\nThe following pull-request contains BPF updates for your *net* tree.\n\nThe main changes are:\n\n1) Follow-up fix to the fault injection framework to prevent jump\n   optimization on the kprobe by installing a dummy post-handler,\n   from Masami.\n\n2) Drop bpf_perf_prog_read_value helper from tracepoint type programs\n   which was mistakenly added there and would otherwise crash due to\n   wrong input context, from Yonghong.\n\n3) Fix a crash in BPF fs when compiled with clang. Code appears to\n   be fine just that clang tries to overly aggressive optimize in\n   non C conform ways, therefore fix the kernel's Makefile to\n   generally prevent such issues, from Daniel.\n\n4) Skip unnecessary capability checks in bpf syscall, which is otherwise\n   triggering unnecessary security hooks on capability checking and\n   causing false alarms on unprivileged processes trying to access\n   CAP_SYS_ADMIN restricted infra, from Chenbo.\n\n5) Fix the test_bpf.ko module when CONFIG_BPF_JIT_ALWAYS_ON is set\n   with regards to a test case that is really just supposed to fail\n   on x8_64 JIT but not others, from Thadeu.\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "David S. Miller",
  "author_email": "davem@davemloft.net",
  "author_date": "Wed Mar 21 12:09:04 2018 -0400",
  "author_date_iso": "2018-03-21T12:09:04-04:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Wed Mar 21 12:09:04 2018 -0400",
  "committer_date_iso": "2018-03-21T12:09:04-04:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "Makefile",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "kernel/bpf/syscall.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/fail_function.c",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "kernel/trace/bpf_trace.c",
      "insertions": 40,
      "deletions": 28
    },
    {
      "file": "lib/test_bpf.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 61,
  "total_deletions": 30,
  "total_changes": 91,
  "parents": [
    "5f2fb802eee1df0810b47ea251942fe3fd36589a",
    "87e0d4f0f37fb0c8c4aeeac46fff5e957738df79"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": []
}