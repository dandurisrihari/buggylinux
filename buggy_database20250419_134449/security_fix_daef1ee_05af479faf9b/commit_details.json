{
  "hash": "daef1ee3798b25e8464b8eb618eaa74b8f423ac7",
  "hash_short": "daef1ee3",
  "subject": "tipc: introduce encryption master key",
  "body": "In addition to the supported cluster & per-node encryption keys for the\nen/decryption of TIPC messages, we now introduce one option for user to\nset a cluster key as 'master key', which is simply a symmetric key like\nthe former but has a longer life cycle. It has two purposes:\n\n- Authentication of new member nodes in the cluster. New nodes, having\n  no knowledge of current session keys in the cluster will still be\n  able to join the cluster as long as they know the master key. This is\n  because all neighbor discovery (LINK_CONFIG) messages must be\n  encrypted with this key.\n\n- Encryption of session encryption keys during automatic exchange and\n  update of those.This is a feature we will introduce in a later commit\n  in this series.\n\nWe insert the new key into the currently unused slot 0 in the key array\nand start using it immediately once the user has set it.\nAfter joining, a node only knowing the master key should be fully\ncommunicable to existing nodes in the cluster, although those nodes may\nhave their own session keys activated (i.e. not the master one). To\nsupport this, we define a 'grace period', starting from the time a node\nitself reports having no RX keys, so the existing nodes will use the\nmaster key for encryption instead. The grace period can be extended but\nwill automatically stop after e.g. 5 seconds without a new report. This\nis also the basis for later key exchanging feature as the new node will\nbe impossible to decrypt anything without the support from master key.\n\nFor user to set a master key, we define a new netlink flag -\n'TIPC_NLA_NODE_KEY_MASTER', so it can be added to the current 'set key'\nnetlink command to specify the setting key to be a master key.\n\nAbove all, the traditional cluster/per-node key mechanism is guaranteed\nto work when user comes not to use this master key option. This is also\ncompatible to legacy nodes without the feature supported.\n\nEven this master key can be updated without any interruption of cluster\nconnectivity but is so is needed, this has to be coordinated and set by\nthe user.\n\nAcked-by: Jon Maloy <jmaloy@redhat.com>\nSigned-off-by: Tuong Lien <tuong.t.lien@dektech.com.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "tipc: introduce encryption master key\n\nIn addition to the supported cluster & per-node encryption keys for the\nen/decryption of TIPC messages, we now introduce one option for user to\nset a cluster key as 'master key', which is simply a symmetric key like\nthe former but has a longer life cycle. It has two purposes:\n\n- Authentication of new member nodes in the cluster. New nodes, having\n  no knowledge of current session keys in the cluster will still be\n  able to join the cluster as long as they know the master key. This is\n  because all neighbor discovery (LINK_CONFIG) messages must be\n  encrypted with this key.\n\n- Encryption of session encryption keys during automatic exchange and\n  update of those.This is a feature we will introduce in a later commit\n  in this series.\n\nWe insert the new key into the currently unused slot 0 in the key array\nand start using it immediately once the user has set it.\nAfter joining, a node only knowing the master key should be fully\ncommunicable to existing nodes in the cluster, although those nodes may\nhave their own session keys activated (i.e. not the master one). To\nsupport this, we define a 'grace period', starting from the time a node\nitself reports having no RX keys, so the existing nodes will use the\nmaster key for encryption instead. The grace period can be extended but\nwill automatically stop after e.g. 5 seconds without a new report. This\nis also the basis for later key exchanging feature as the new node will\nbe impossible to decrypt anything without the support from master key.\n\nFor user to set a master key, we define a new netlink flag -\n'TIPC_NLA_NODE_KEY_MASTER', so it can be added to the current 'set key'\nnetlink command to specify the setting key to be a master key.\n\nAbove all, the traditional cluster/per-node key mechanism is guaranteed\nto work when user comes not to use this master key option. This is also\ncompatible to legacy nodes without the feature supported.\n\nEven this master key can be updated without any interruption of cluster\nconnectivity but is so is needed, this has to be coordinated and set by\nthe user.\n\nAcked-by: Jon Maloy <jmaloy@redhat.com>\nSigned-off-by: Tuong Lien <tuong.t.lien@dektech.com.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Tuong Lien",
  "author_email": "tuong.t.lien@dektech.com.au",
  "author_date": "Fri Sep 18 08:17:27 2020 +0700",
  "author_date_iso": "2020-09-18T08:17:27+07:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Fri Sep 18 13:58:37 2020 -0700",
  "committer_date_iso": "2020-09-18T13:58:37-07:00",
  "files_changed": [
    "include/uapi/linux/tipc_netlink.h",
    "net/tipc/crypto.c",
    "net/tipc/crypto.h",
    "net/tipc/msg.h",
    "net/tipc/netlink.c",
    "net/tipc/node.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "include/uapi/linux/tipc_netlink.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/tipc/crypto.c",
      "insertions": 155,
      "deletions": 55
    },
    {
      "file": "net/tipc/crypto.h",
      "insertions": 11,
      "deletions": 4
    },
    {
      "file": "net/tipc/msg.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "net/tipc/netlink.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/tipc/node.c",
      "insertions": 4,
      "deletions": 2
    }
  ],
  "total_insertions": 175,
  "total_deletions": 62,
  "total_changes": 237,
  "parents": [
    "f779bf792284fed78fedee61b46df2d4652636d3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/tipc/netlink.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/tipc/msg.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/linux/tipc_netlink.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/tipc/crypto.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/tipc/node.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/tipc/crypto.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}