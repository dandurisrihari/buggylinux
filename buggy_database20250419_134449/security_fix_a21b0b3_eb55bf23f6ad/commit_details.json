{
  "hash": "a21b0b354d4ac39be691f51c53562e2c24443d9e",
  "hash_short": "a21b0b35",
  "subject": "perf: Introduce a flag to enable close-on-exec in perf_event_open()",
  "body": "Unlike recent modern userspace API such as:\n\n  epoll_create1 (EPOLL_CLOEXEC), eventfd (EFD_CLOEXEC),\n  fanotify_init (FAN_CLOEXEC), inotify_init1 (IN_CLOEXEC),\n  signalfd (SFD_CLOEXEC), timerfd_create (TFD_CLOEXEC),\n  or the venerable general purpose open (O_CLOEXEC),\n\nperf_event_open() syscall lack a flag to atomically set FD_CLOEXEC\n(eg. close-on-exec) flag on file descriptor it returns to userspace.\n\nThe present patch adds a PERF_FLAG_FD_CLOEXEC flag to allow\nperf_event_open() syscall to atomically set close-on-exec.\n\nHaving this flag will enable userspace to remove the file descriptor\nfrom the list of file descriptors being inherited across exec,\nwithout the need to call fcntl(fd, F_SETFD, FD_CLOEXEC) and the\nassociated race condition between the current thread and another\nthread calling fork(2) then execve(2).\n\nLinks:\n\n - Secure File Descriptor Handling (Ulrich Drepper, 2008)\n   http://udrepper.livejournal.com/20407.html\n\n - Excuse me son, but your code is leaking !!! (Dan Walsh, March 2012)\n   http://danwalsh.livejournal.com/53603.html\n\n - Notes in DMA buffer sharing: leak and security hole\n   http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/dma-buf-sharing.txt?id=v3.13-rc3#n428\n\nSigned-off-by: Yann Droneaud <ydroneaud@opteya.com>\nCc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Paul Mackerras <paulus@samba.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Peter Zijlstra <peterz@infradead.org>\nLink: http://lkml.kernel.org/r/8c03f54e1598b1727c19706f3af03f98685d9fe6.1388952061.git.ydroneaud@opteya.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "full_message": "perf: Introduce a flag to enable close-on-exec in perf_event_open()\n\nUnlike recent modern userspace API such as:\n\n  epoll_create1 (EPOLL_CLOEXEC), eventfd (EFD_CLOEXEC),\n  fanotify_init (FAN_CLOEXEC), inotify_init1 (IN_CLOEXEC),\n  signalfd (SFD_CLOEXEC), timerfd_create (TFD_CLOEXEC),\n  or the venerable general purpose open (O_CLOEXEC),\n\nperf_event_open() syscall lack a flag to atomically set FD_CLOEXEC\n(eg. close-on-exec) flag on file descriptor it returns to userspace.\n\nThe present patch adds a PERF_FLAG_FD_CLOEXEC flag to allow\nperf_event_open() syscall to atomically set close-on-exec.\n\nHaving this flag will enable userspace to remove the file descriptor\nfrom the list of file descriptors being inherited across exec,\nwithout the need to call fcntl(fd, F_SETFD, FD_CLOEXEC) and the\nassociated race condition between the current thread and another\nthread calling fork(2) then execve(2).\n\nLinks:\n\n - Secure File Descriptor Handling (Ulrich Drepper, 2008)\n   http://udrepper.livejournal.com/20407.html\n\n - Excuse me son, but your code is leaking !!! (Dan Walsh, March 2012)\n   http://danwalsh.livejournal.com/53603.html\n\n - Notes in DMA buffer sharing: leak and security hole\n   http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/dma-buf-sharing.txt?id=v3.13-rc3#n428\n\nSigned-off-by: Yann Droneaud <ydroneaud@opteya.com>\nCc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Paul Mackerras <paulus@samba.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Peter Zijlstra <peterz@infradead.org>\nLink: http://lkml.kernel.org/r/8c03f54e1598b1727c19706f3af03f98685d9fe6.1388952061.git.ydroneaud@opteya.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
  "author_name": "Yann Droneaud",
  "author_email": "ydroneaud@opteya.com",
  "author_date": "Sun Jan 5 21:36:33 2014 +0100",
  "author_date_iso": "2014-01-05T21:36:33+01:00",
  "committer_name": "Ingo Molnar",
  "committer_email": "mingo@kernel.org",
  "committer_date": "Sun Jan 12 10:16:59 2014 +0100",
  "committer_date_iso": "2014-01-12T10:16:59+01:00",
  "files_changed": [
    "include/uapi/linux/perf_event.h",
    "kernel/events/core.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "include/uapi/linux/perf_event.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "kernel/events/core.c",
      "insertions": 9,
      "deletions": 3
    }
  ],
  "total_insertions": 10,
  "total_deletions": 3,
  "total_changes": 13,
  "parents": [
    "f228c5b882602697a1adb50d61ff688b0df1eced"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.14",
    "v3.14-rc1",
    "v3.14-rc2",
    "v3.14-rc3",
    "v3.14-rc4",
    "v3.14-rc5",
    "v3.14-rc6",
    "v3.14-rc7",
    "v3.14-rc8",
    "v3.15"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security hole"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/uapi/linux/perf_event.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/events/core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}