commit 4b1b97f0d7cfd3e29ae72f380996b8359200fd86
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Feb 25 17:29:23 2025 +0000

    KVM: arm64: nv: Handle L2->L1 transition on interrupt injection
    
    An interrupt being delivered to L1 while running L2 must result
    in the correct exception being delivered to L1.
    
    This means that if, on entry to L2, we found ourselves with pending
    interrupts in the L1 distributor, we need to take immediate action.
    This is done by posting a request which will prevent the entry in
    L2, and deliver an IRQ exception to L1, forcing the switch.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20250225172930.1850838-10-maz@kernel.org
    Signed-off-by: Oliver Upton <oliver.upton@linux.dev>

diff --git a/arch/arm64/kvm/nested.c b/arch/arm64/kvm/nested.c
index 7c8f39070a50..722e61e410e2 100644
--- a/arch/arm64/kvm/nested.c
+++ b/arch/arm64/kvm/nested.c
@@ -1318,4 +1318,8 @@ void check_nested_vcpu_requests(struct kvm_vcpu *vcpu)
 		}
 		write_unlock(&vcpu->kvm->mmu_lock);
 	}
+
+	/* Must be last, as may switch context! */
+	if (kvm_check_request(KVM_REQ_GUEST_HYP_IRQ_PENDING, vcpu))
+		kvm_inject_nested_irq(vcpu);
 }