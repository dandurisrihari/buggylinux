commit adfde7ed0b301ef14c37efe3143a8b26849843f6
Author: Hannes Reinecke <hare@suse.de>
Date:   Tue Apr 30 15:19:27 2024 +0200

    nvme-fabrics: short-circuit reconnect retries
    
    Returning a nvme status from nvme_tcp_setup_ctrl() indicates that the
    association was established and we have received a status from the
    controller; consequently we should honour the DNR bit. If not any future
    reconnect attempts will just return the same error, so we can
    short-circuit the reconnect attempts and fail the connection directly.
    
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    [dwagner: - extended nvme_should_reconnect]
    Signed-off-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Keith Busch <kbusch@kernel.org>

diff --git a/drivers/nvme/host/fabrics.c b/drivers/nvme/host/fabrics.c
index f7eaf9580b4f..36d3e2ff27f3 100644
--- a/drivers/nvme/host/fabrics.c
+++ b/drivers/nvme/host/fabrics.c
@@ -559,8 +559,20 @@ int nvmf_connect_io_queue(struct nvme_ctrl *ctrl, u16 qid)
 }
 EXPORT_SYMBOL_GPL(nvmf_connect_io_queue);
 
-bool nvmf_should_reconnect(struct nvme_ctrl *ctrl)
+/*
+ * Evaluate the status information returned by the transport in order to decided
+ * if a reconnect attempt should be scheduled.
+ *
+ * Do not retry when:
+ *
+ * - the DNR bit is set and the specification states no further connect
+ *   attempts with the same set of paramenters should be attempted.
+ */
+bool nvmf_should_reconnect(struct nvme_ctrl *ctrl, int status)
 {
+	if (status > 0 && (status & NVME_SC_DNR))
+		return false;
+
 	if (ctrl->opts->max_reconnects == -1 ||
 	    ctrl->nr_reconnects < ctrl->opts->max_reconnects)
 		return true;