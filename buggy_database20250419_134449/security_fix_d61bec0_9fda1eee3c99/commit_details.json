{
  "hash": "d61bec08b904cf171835db98168f82bc338e92e4",
  "hash_short": "d61bec08",
  "subject": "btrfs: mark ordered extent and inode with error if we fail to finish",
  "body": "While doing error injection testing I saw that sometimes we'd get an\nabort that wouldn't stop the current transaction commit from completing.\nThis abort was coming from finish ordered IO, but at this point in the\ntransaction commit we should have gotten an error and stopped.\n\nIt turns out the abort came from finish ordered io while trying to write\nout the free space cache.  It occurred to me that any failure inside of\nfinish_ordered_io isn't actually raised to the person doing the writing,\nso we could have any number of failures in this path and think the\nordered extent completed successfully and the inode was fine.\n\nFix this by marking the ordered extent with BTRFS_ORDERED_IOERR, and\nmarking the mapping of the inode with mapping_set_error, so any callers\nthat simply call fdatawait will also get the error.\n\nWith this we're seeing the IO error on the free space inode when we fail\nto do the finish_ordered_io.\n\nCC: stable@vger.kernel.org # 4.19+\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "full_message": "btrfs: mark ordered extent and inode with error if we fail to finish\n\nWhile doing error injection testing I saw that sometimes we'd get an\nabort that wouldn't stop the current transaction commit from completing.\nThis abort was coming from finish ordered IO, but at this point in the\ntransaction commit we should have gotten an error and stopped.\n\nIt turns out the abort came from finish ordered io while trying to write\nout the free space cache.  It occurred to me that any failure inside of\nfinish_ordered_io isn't actually raised to the person doing the writing,\nso we could have any number of failures in this path and think the\nordered extent completed successfully and the inode was fine.\n\nFix this by marking the ordered extent with BTRFS_ORDERED_IOERR, and\nmarking the mapping of the inode with mapping_set_error, so any callers\nthat simply call fdatawait will also get the error.\n\nWith this we're seeing the IO error on the free space inode when we fail\nto do the finish_ordered_io.\n\nCC: stable@vger.kernel.org # 4.19+\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "author_name": "Josef Bacik",
  "author_email": "josef@toxicpanda.com",
  "author_date": "Wed May 19 09:38:27 2021 -0400",
  "author_date_iso": "2021-05-19T09:38:27-04:00",
  "committer_name": "David Sterba",
  "committer_email": "dsterba@suse.com",
  "committer_date": "Thu May 27 23:31:01 2021 +0200",
  "committer_date_iso": "2021-05-27T23:31:01+02:00",
  "files_changed": [
    "fs/btrfs/inode.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/btrfs/inode.c",
      "insertions": 12,
      "deletions": 0
    }
  ],
  "total_insertions": 12,
  "total_deletions": 0,
  "total_changes": 12,
  "parents": [
    "856bd270dc4db209c779ce1e9555c7641ffbc88e"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/inode.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}