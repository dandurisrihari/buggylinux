commit 2ce2983c24c11beaeb6ef6da93bf7228679bd08b
Author: Jiri Slaby (SUSE) <jirislaby@kernel.org>
Date:   Wed Aug 16 12:55:26 2023 +0200

    tty: tty_buffer: let tty_prepare_flip_string() return size_t
    
    The same as in the previous patch, tty_prepare_flip_string() accepts
    size_t as an size argument. It returns the same size (or less). It is
    unexpected that it returns a signed value and can confuse users to check
    for negative values.
    
    Instead, return the same size_t as accepted to make clear we return
    values >= 0, where zero in fact means failure.
    
    Signed-off-by: "Jiri Slaby (SUSE)" <jirislaby@kernel.org>
    Link: https://lore.kernel.org/r/20230816105530.3335-7-jirislaby@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/tty_flip.h b/include/linux/tty_flip.h
index 569747364ae5..efd03d9c11f8 100644
--- a/include/linux/tty_flip.h
+++ b/include/linux/tty_flip.h
@@ -13,7 +13,7 @@ int tty_buffer_request_room(struct tty_port *port, size_t size);
 size_t __tty_insert_flip_string_flags(struct tty_port *port, const u8 *chars,
 				      const u8 *flags, bool mutable_flags,
 				      size_t size);
-int tty_prepare_flip_string(struct tty_port *port, u8 **chars, size_t size);
+size_t tty_prepare_flip_string(struct tty_port *port, u8 **chars, size_t size);
 void tty_flip_buffer_push(struct tty_port *port);
 int __tty_insert_flip_char(struct tty_port *port, u8 ch, u8 flag);