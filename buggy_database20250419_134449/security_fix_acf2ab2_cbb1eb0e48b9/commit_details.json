{
  "hash": "acf2ab289970a0c1c1ec797dccdaacd194524d6b",
  "hash_short": "acf2ab28",
  "subject": "Merge branch kvm-arm64/vgic-sre-traps into kvmarm-master/next",
  "body": "* kvm-arm64/vgic-sre-traps:\n  : .\n  : Fix the multiple of cases where KVM/arm64 doesn't correctly\n  : handle the guest trying to use a GICv3 that isn't advertised.\n  :\n  : From the cover letter:\n  :\n  : \"It recently appeared that, when running on a GICv3-equipped platform\n  : (which is what non-ancient arm64 HW has), *not* configuring a GICv3\n  : for the guest could result in less than desirable outcomes.\n  :\n  : We have multiple issues to fix:\n  :\n  : - for registers that *always* trap (the SGI registers) or that *may*\n  :   trap (the SRE register), we need to check whether a GICv3 has been\n  :   instantiated before acting upon the trap.\n  :\n  : - for registers that only conditionally trap, we must actively trap\n  :   them even in the absence of a GICv3 being instantiated, and handle\n  :   those traps accordingly.\n  :\n  : - finally, ID registers must reflect the absence of a GICv3, so that\n  :   we are consistent.\n  :\n  : This series goes through all these requirements. The main complexity\n  : here is to apply a GICv3 configuration on the host in the absence of a\n  : GICv3 in the guest. This is pretty hackish, but I don't have a much\n  : better solution so far.\n  :\n  : As part of making wider use of of the trap bits, we fully define the\n  : trap routing as per the architecture, something that we eventually\n  : need for NV anyway.\"\n  : .\n  KVM: arm64: selftests: Cope with lack of GICv3 in set_id_regs\n  KVM: arm64: Add selftest checking how the absence of GICv3 is handled\n  KVM: arm64: Unify UNDEF injection helpers\n  KVM: arm64: Make most GICv3 accesses UNDEF if they trap\n  KVM: arm64: Honor guest requested traps in GICv3 emulation\n  KVM: arm64: Add trap routing information for ICH_HCR_EL2\n  KVM: arm64: Add ICH_HCR_EL2 to the vcpu state\n  KVM: arm64: Zero ID_AA64PFR0_EL1.GIC when no GICv3 is presented to the guest\n  KVM: arm64: Add helper for last ditch idreg adjustments\n  KVM: arm64: Force GICv3 trap activation when no irqchip is configured on VHE\n  KVM: arm64: Force SRE traps when SRE access is not enabled\n  KVM: arm64: Move GICv3 trap configuration to kvm_calculate_traps()\n\nSigned-off-by: Marc Zyngier <maz@kernel.org>",
  "full_message": "Merge branch kvm-arm64/vgic-sre-traps into kvmarm-master/next\n\n* kvm-arm64/vgic-sre-traps:\n  : .\n  : Fix the multiple of cases where KVM/arm64 doesn't correctly\n  : handle the guest trying to use a GICv3 that isn't advertised.\n  :\n  : From the cover letter:\n  :\n  : \"It recently appeared that, when running on a GICv3-equipped platform\n  : (which is what non-ancient arm64 HW has), *not* configuring a GICv3\n  : for the guest could result in less than desirable outcomes.\n  :\n  : We have multiple issues to fix:\n  :\n  : - for registers that *always* trap (the SGI registers) or that *may*\n  :   trap (the SRE register), we need to check whether a GICv3 has been\n  :   instantiated before acting upon the trap.\n  :\n  : - for registers that only conditionally trap, we must actively trap\n  :   them even in the absence of a GICv3 being instantiated, and handle\n  :   those traps accordingly.\n  :\n  : - finally, ID registers must reflect the absence of a GICv3, so that\n  :   we are consistent.\n  :\n  : This series goes through all these requirements. The main complexity\n  : here is to apply a GICv3 configuration on the host in the absence of a\n  : GICv3 in the guest. This is pretty hackish, but I don't have a much\n  : better solution so far.\n  :\n  : As part of making wider use of of the trap bits, we fully define the\n  : trap routing as per the architecture, something that we eventually\n  : need for NV anyway.\"\n  : .\n  KVM: arm64: selftests: Cope with lack of GICv3 in set_id_regs\n  KVM: arm64: Add selftest checking how the absence of GICv3 is handled\n  KVM: arm64: Unify UNDEF injection helpers\n  KVM: arm64: Make most GICv3 accesses UNDEF if they trap\n  KVM: arm64: Honor guest requested traps in GICv3 emulation\n  KVM: arm64: Add trap routing information for ICH_HCR_EL2\n  KVM: arm64: Add ICH_HCR_EL2 to the vcpu state\n  KVM: arm64: Zero ID_AA64PFR0_EL1.GIC when no GICv3 is presented to the guest\n  KVM: arm64: Add helper for last ditch idreg adjustments\n  KVM: arm64: Force GICv3 trap activation when no irqchip is configured on VHE\n  KVM: arm64: Force SRE traps when SRE access is not enabled\n  KVM: arm64: Move GICv3 trap configuration to kvm_calculate_traps()\n\nSigned-off-by: Marc Zyngier <maz@kernel.org>",
  "author_name": "Marc Zyngier",
  "author_email": "maz@kernel.org",
  "author_date": "Thu Sep 12 08:37:06 2024 +0100",
  "author_date_iso": "2024-09-12T08:37:06+01:00",
  "committer_name": "Marc Zyngier",
  "committer_email": "maz@kernel.org",
  "committer_date": "Thu Sep 12 08:37:06 2024 +0100",
  "committer_date_iso": "2024-09-12T08:37:06+01:00",
  "files_changed": [
    "arch/arm64/include/asm/kvm_host.h",
    "arch/arm64/kvm/emulate-nested.c",
    "arch/arm64/kvm/sys_regs.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/arm64/include/asm/kvm_host.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/arm.c",
      "insertions": 7,
      "deletions": 7
    },
    {
      "file": "arch/arm64/kvm/emulate-nested.c",
      "insertions": 66,
      "deletions": 5
    },
    {
      "file": "arch/arm64/kvm/hyp/vgic-v3-sr.c",
      "insertions": 91,
      "deletions": 6
    },
    {
      "file": "arch/arm64/kvm/nested.c",
      "insertions": 5,
      "deletions": 10
    },
    {
      "file": "arch/arm64/kvm/sys_regs.c",
      "insertions": 140,
      "deletions": 100
    },
    {
      "file": "arch/arm64/kvm/sys_regs.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/vgic/vgic-v3.c",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/vgic/vgic.c",
      "insertions": 10,
      "deletions": 4
    },
    {
      "file": "arch/arm64/kvm/vgic/vgic.h",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "tools/testing/selftests/kvm/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/aarch64/no-vgic-v3.c",
      "insertions": 175,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/aarch64/set_id_regs.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 522,
  "total_deletions": 135,
  "total_changes": 657,
  "parents": [
    "091258a0a0f894981e2dc7e35a1c709fc0257aa6",
    "4641c7ea88d1029500ff64c4d0a1df0584b1bfcc"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/emulate-nested.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/sys_regs.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}