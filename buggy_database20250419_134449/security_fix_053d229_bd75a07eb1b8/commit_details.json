{
  "hash": "053d2290c0307e3642e75e0185ddadf084dc36c1",
  "hash_short": "053d2290",
  "subject": "KVM: VMX: Exit to userspace if vCPU has injected exception and invalid state",
  "body": "Exit to userspace with an emulation error if KVM encounters an injected\nexception with invalid guest state, in addition to the existing check of\nbailing if there's a pending exception (KVM doesn't support emulating\nexceptions except when emulating real mode via vm86).\n\nIn theory, KVM should never get to such a situation as KVM is supposed to\nexit to userspace before injecting an exception with invalid guest state.\nBut in practice, userspace can intervene and manually inject an exception\nand/or stuff registers to force invalid guest state while a previously\ninjected exception is awaiting reinjection.\n\nFixes: fc4fad79fc3d (\"KVM: VMX: Reject KVM_RUN if emulation is required with pending exception\")\nReported-by: syzbot+cfafed3bb76d3e37581b@syzkaller.appspotmail.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220502221850.131873-1-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: VMX: Exit to userspace if vCPU has injected exception and invalid state\n\nExit to userspace with an emulation error if KVM encounters an injected\nexception with invalid guest state, in addition to the existing check of\nbailing if there's a pending exception (KVM doesn't support emulating\nexceptions except when emulating real mode via vm86).\n\nIn theory, KVM should never get to such a situation as KVM is supposed to\nexit to userspace before injecting an exception with invalid guest state.\nBut in practice, userspace can intervene and manually inject an exception\nand/or stuff registers to force invalid guest state while a previously\ninjected exception is awaiting reinjection.\n\nFixes: fc4fad79fc3d (\"KVM: VMX: Reject KVM_RUN if emulation is required with pending exception\")\nReported-by: syzbot+cfafed3bb76d3e37581b@syzkaller.appspotmail.com\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220502221850.131873-1-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Sean Christopherson",
  "author_email": "seanjc@google.com",
  "author_date": "Mon May 2 22:18:50 2022 +0000",
  "author_date_iso": "2022-05-02T22:18:50+00:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Fri May 6 13:08:06 2022 -0400",
  "committer_date_iso": "2022-05-06T13:08:06-04:00",
  "files_changed": [
    "arch/x86/kvm/vmx/vmx.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "0c2c7c069285374fc8feacddc0498f8ab7627117"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}