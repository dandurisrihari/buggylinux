commit d9570ee3bd1d4f20ce63485f5ef05663866fe6c0
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Fri Jan 12 16:53:10 2018 -0800

    kmemleak: allow to coexist with fault injection
    
    kmemleak does one slab allocation per user allocation.  So if slab fault
    injection is enabled to any degree, kmemleak instantly fails to allocate
    and turns itself off.  However, it's useful to use kmemleak with fault
    injection to find leaks on error paths.  On the other hand, checking
    kmemleak itself is not so useful because (1) it's a debugging tool and
    (2) it has a very regular allocation pattern (basically a single
    allocation site, so it either works or not).
    
    Turn off fault injection for kmemleak allocations.
    
    Link: http://lkml.kernel.org/r/20180109192243.19316-1-dvyukov@google.com
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/kmemleak.c b/mm/kmemleak.c
index d73c14294f3a..f656ca27f6c2 100644
--- a/mm/kmemleak.c
+++ b/mm/kmemleak.c
@@ -127,7 +127,7 @@
 /* GFP bitmask for kmemleak internal allocations */
 #define gfp_kmemleak_mask(gfp)	(((gfp) & (GFP_KERNEL | GFP_ATOMIC)) | \
 				 __GFP_NORETRY | __GFP_NOMEMALLOC | \
-				 __GFP_NOWARN)
+				 __GFP_NOWARN | __GFP_NOFAIL)
 
 /* scanning area inside a memory block */
 struct kmemleak_scan_area {