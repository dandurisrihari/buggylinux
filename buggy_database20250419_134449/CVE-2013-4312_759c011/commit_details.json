{
  "hash": "759c01142a5d0f364a462346168a56de28a80f52",
  "hash_short": "759c0114",
  "subject": "pipe: limit the per-user amount of pages allocated in pipes",
  "body": "On no-so-small systems, it is possible for a single process to cause an\nOOM condition by filling large pipes with data that are never read. A\ntypical process filling 4000 pipes with 1 MB of data will use 4 GB of\nmemory. On small systems it may be tricky to set the pipe max size to\nprevent this from happening.\n\nThis patch makes it possible to enforce a per-user soft limit above\nwhich new pipes will be limited to a single page, effectively limiting\nthem to 4 kB each, as well as a hard limit above which no new pipes may\nbe created for this user. This has the effect of protecting the system\nagainst memory abuse without hurting other users, and still allowing\npipes to work correctly though with less data at once.\n\nThe limit are controlled by two new sysctls : pipe-user-pages-soft, and\npipe-user-pages-hard. Both may be disabled by setting them to zero. The\ndefault soft limit allows the default number of FDs per process (1024)\nto create pipes of the default size (64kB), thus reaching a limit of 64MB\nbefore starting to create only smaller pipes. With 256 processes limited\nto 1024 FDs each, this results in 1024*64kB + (256*1024 - 1024) * 4kB =\n1084 MB of memory allocated for a user. The hard limit is disabled by\ndefault to avoid breaking existing applications that make intensive use\nof pipes (eg: for splicing).\n\nReported-by: socketpair@gmail.com\nReported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nMitigates: CVE-2013-4312 (Linux 2.0+)\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
  "full_message": "pipe: limit the per-user amount of pages allocated in pipes\n\nOn no-so-small systems, it is possible for a single process to cause an\nOOM condition by filling large pipes with data that are never read. A\ntypical process filling 4000 pipes with 1 MB of data will use 4 GB of\nmemory. On small systems it may be tricky to set the pipe max size to\nprevent this from happening.\n\nThis patch makes it possible to enforce a per-user soft limit above\nwhich new pipes will be limited to a single page, effectively limiting\nthem to 4 kB each, as well as a hard limit above which no new pipes may\nbe created for this user. This has the effect of protecting the system\nagainst memory abuse without hurting other users, and still allowing\npipes to work correctly though with less data at once.\n\nThe limit are controlled by two new sysctls : pipe-user-pages-soft, and\npipe-user-pages-hard. Both may be disabled by setting them to zero. The\ndefault soft limit allows the default number of FDs per process (1024)\nto create pipes of the default size (64kB), thus reaching a limit of 64MB\nbefore starting to create only smaller pipes. With 256 processes limited\nto 1024 FDs each, this results in 1024*64kB + (256*1024 - 1024) * 4kB =\n1084 MB of memory allocated for a user. The hard limit is disabled by\ndefault to avoid breaking existing applications that make intensive use\nof pipes (eg: for splicing).\n\nReported-by: socketpair@gmail.com\nReported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nMitigates: CVE-2013-4312 (Linux 2.0+)\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
  "author_name": "Willy Tarreau",
  "author_email": "w@1wt.eu",
  "author_date": "Mon Jan 18 16:36:09 2016 +0100",
  "author_date_iso": "2016-01-18T16:36:09+01:00",
  "committer_name": "Al Viro",
  "committer_email": "viro@zeniv.linux.org.uk",
  "committer_date": "Tue Jan 19 19:25:21 2016 -0500",
  "committer_date_iso": "2016-01-19T19:25:21-05:00",
  "files_changed": [
    "Documentation/sysctl/fs.txt",
    "fs/pipe.c",
    "include/linux/pipe_fs_i.h",
    "include/linux/sched.h",
    "kernel/sysctl.c"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "Documentation/sysctl/fs.txt",
      "insertions": 23,
      "deletions": 0
    },
    {
      "file": "fs/pipe.c",
      "insertions": 45,
      "deletions": 2
    },
    {
      "file": "include/linux/pipe_fs_i.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "include/linux/sched.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "kernel/sysctl.c",
      "insertions": 14,
      "deletions": 0
    }
  ],
  "total_insertions": 87,
  "total_deletions": 2,
  "total_changes": 89,
  "parents": [
    "558041d8d21b48287224dd0e32cf19563c77607c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2013-4312"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "Documentation/sysctl/fs.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/pipe.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/pipe_fs_i.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/sched.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/sysctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}