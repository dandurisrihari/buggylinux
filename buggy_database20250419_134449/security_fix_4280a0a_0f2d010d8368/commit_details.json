{
  "hash": "4280a0a70170f60df83ddb46eaee7bbbe88622d9",
  "hash_short": "4280a0a7",
  "subject": "scsi: message: fusion: Replace deprecated strncpy() with strscpy_pad()",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nSince all these structs are copied out to userspace let's keep them\nNUL-padded by using strscpy_pad() which guarantees NUL-termination of the\ndestination buffer while also providing the NUL-padding behavior that\nstrncpy() has.\n\nLet's also opt to use the more idiomatic strscpy() usage of: 'dest, src,\nsizeof(dest)' in cases where the compiler can determine the size of the\ndestination buffer. Do this for all cases of strscpy...() in this file.\n\nTo be abundantly sure we don't leak stack data out to user space let's also\nchange a strscpy() to strscpy_pad(). This strscpy() was introduced in\ncommit dbe37c71d124 (\"scsi: message: fusion: Replace all non-returning\nstrlcpy() with strscpy()\")\n\nNote that since we are creating these structs with a copy_from_user() and\nmodifying fields and then copying back out to the user it is probably OK\nnot to explicitly NUL-pad everything as any data leak is probably just data\nfrom the user themselves. If this is too eager, let's opt for strscpy()\nwhich is still in the spirit of removing deprecated strncpy() usage\ntreewide.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nCc: Kees Cook <keescook@chromium.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20230927-strncpy-drivers-message-fusion-mptctl-c-v1-1-bb2eddc1743c@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: message: fusion: Replace deprecated strncpy() with strscpy_pad()\n\nstrncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nSince all these structs are copied out to userspace let's keep them\nNUL-padded by using strscpy_pad() which guarantees NUL-termination of the\ndestination buffer while also providing the NUL-padding behavior that\nstrncpy() has.\n\nLet's also opt to use the more idiomatic strscpy() usage of: 'dest, src,\nsizeof(dest)' in cases where the compiler can determine the size of the\ndestination buffer. Do this for all cases of strscpy...() in this file.\n\nTo be abundantly sure we don't leak stack data out to user space let's also\nchange a strscpy() to strscpy_pad(). This strscpy() was introduced in\ncommit dbe37c71d124 (\"scsi: message: fusion: Replace all non-returning\nstrlcpy() with strscpy()\")\n\nNote that since we are creating these structs with a copy_from_user() and\nmodifying fields and then copying back out to the user it is probably OK\nnot to explicitly NUL-pad everything as any data leak is probably just data\nfrom the user themselves. If this is too eager, let's opt for strscpy()\nwhich is still in the spirit of removing deprecated strncpy() usage\ntreewide.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nCc: Kees Cook <keescook@chromium.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20230927-strncpy-drivers-message-fusion-mptctl-c-v1-1-bb2eddc1743c@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Wed Sep 27 04:06:09 2023 +0000",
  "author_date_iso": "2023-09-27T04:06:09+00:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Mon Oct 9 21:29:08 2023 -0400",
  "committer_date_iso": "2023-10-09T21:29:08-04:00",
  "files_changed": [
    "drivers/message/fusion/mptctl.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/message/fusion/mptctl.c",
      "insertions": 9,
      "deletions": 10
    }
  ],
  "total_insertions": 9,
  "total_deletions": 10,
  "total_changes": 19,
  "parents": [
    "971237b900c38f50e7865289a2aecb77dc7f09f3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/message/fusion/mptctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}