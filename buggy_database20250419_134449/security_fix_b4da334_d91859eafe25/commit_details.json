{
  "hash": "b4da3340eae2c3932144be3e81ccfd4e424d87b7",
  "hash_short": "b4da3340",
  "subject": "tracing/kprobe: bpf: Check error injectable event is on function entry",
  "body": "Check whether error injectable event is on function entry or not.\nCurrently it checks the event is ftrace-based kprobes or not,\nbut that is wrong. It should check if the event is on the entry\nof target function. Since error injection will override a function\nto just return with modified return value, that operation must\nbe done before the target function starts making stackframe.\n\nAs a side effect, bpf error injection is no need to depend on\nfunction-tracer. It can work with sw-breakpoint based kprobe\nevents too.\n\nSigned-off-by: Masami Hiramatsu <mhiramat@kernel.org>\nReviewed-by: Josef Bacik <jbacik@fb.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>",
  "full_message": "tracing/kprobe: bpf: Check error injectable event is on function entry\n\nCheck whether error injectable event is on function entry or not.\nCurrently it checks the event is ftrace-based kprobes or not,\nbut that is wrong. It should check if the event is on the entry\nof target function. Since error injection will override a function\nto just return with modified return value, that operation must\nbe done before the target function starts making stackframe.\n\nAs a side effect, bpf error injection is no need to depend on\nfunction-tracer. It can work with sw-breakpoint based kprobe\nevents too.\n\nSigned-off-by: Masami Hiramatsu <mhiramat@kernel.org>\nReviewed-by: Josef Bacik <jbacik@fb.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>",
  "author_name": "Masami Hiramatsu",
  "author_email": "mhiramat@kernel.org",
  "author_date": "Sat Jan 13 02:54:04 2018 +0900",
  "author_date_iso": "2018-01-13T02:54:04+09:00",
  "committer_name": "Alexei Starovoitov",
  "committer_email": "ast@kernel.org",
  "committer_date": "Fri Jan 12 17:33:37 2018 -0800",
  "committer_date_iso": "2018-01-12T17:33:37-08:00",
  "files_changed": [
    "arch/x86/include/asm/kprobes.h",
    "arch/x86/kernel/kprobes/core.c",
    "arch/x86/kernel/kprobes/ftrace.c",
    "kernel/trace/Kconfig",
    "kernel/trace/bpf_trace.c",
    "kernel/trace/trace_kprobe.c",
    "kernel/trace/trace_probe.h"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "arch/x86/include/asm/kprobes.h",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "arch/x86/kernel/kprobes/core.c",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "arch/x86/kernel/kprobes/ftrace.c",
      "insertions": 0,
      "deletions": 14
    },
    {
      "file": "kernel/trace/Kconfig",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "kernel/trace/bpf_trace.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "kernel/trace/trace_kprobe.c",
      "insertions": 6,
      "deletions": 3
    },
    {
      "file": "kernel/trace/trace_probe.h",
      "insertions": 6,
      "deletions": 6
    }
  ],
  "total_insertions": 31,
  "total_deletions": 32,
  "total_changes": 63,
  "parents": [
    "daaf24c634ab951cad3dcef28492001ef9c931d0"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc1",
    "v4.16-rc2",
    "v4.16-rc3",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/trace/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/kprobes/core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/kprobes.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kernel/kprobes/ftrace.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/trace/trace_probe.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/trace/bpf_trace.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/trace/trace_kprobe.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}