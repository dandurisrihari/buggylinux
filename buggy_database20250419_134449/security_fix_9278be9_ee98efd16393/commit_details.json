{
  "hash": "9278be92f22979a026a68206e226722138c9443d",
  "hash_short": "9278be92",
  "subject": "Merge tag 'io_uring-5.12-2021-03-12' of git://git.kernel.dk/linux-block",
  "body": "Pull io_uring fixes from Jens Axboe:\n \"Not quite as small this week as I had hoped, but at least this should\n  be the end of it. All the little known issues have been ironed out -\n  most of it little stuff, but cancelations being the bigger part. Only\n  minor tweaks and/or regular fixes expected beyond this point.\n\n   - Fix the creds tracking for async (io-wq and SQPOLL)\n\n   - Various SQPOLL fixes related to parking, sharing, forking, IOPOLL,\n     completions, and life times. Much simpler now.\n\n   - Make IO threads unfreezable by default, on account of a bug report\n     that had them spinning on resume. Honestly not quite sure why\n     thawing leaves us with a perpetual signal pending (causing the\n     spin), but for now make them unfreezable like there were in 5.11\n     and prior.\n\n   - Move personality_idr to xarray, solving a use-after-free related to\n     removing an entry from the iterator callback. Buffer idr needs the\n     same treatment.\n\n   - Re-org around and task vs context tracking, enabling the fixing of\n     cancelations, and then cancelation fixes on top.\n\n   - Various little bits of cleanups and hardening, and removal of now\n     dead parts\"\n\n* tag 'io_uring-5.12-2021-03-12' of git://git.kernel.dk/linux-block: (34 commits)\n  io_uring: fix OP_ASYNC_CANCEL across tasks\n  io_uring: cancel sqpoll via task_work\n  io_uring: prevent racy sqd->thread checks\n  io_uring: remove useless ->startup completion\n  io_uring: cancel deferred requests in try_cancel\n  io_uring: perform IOPOLL reaping if canceler is thread itself\n  io_uring: force creation of separate context for ATTACH_WQ and non-threads\n  io_uring: remove indirect ctx into sqo injection\n  io_uring: fix invalid ctx->sq_thread_idle\n  kernel: make IO threads unfreezable by default\n  io_uring: always wait for sqd exited when stopping SQPOLL thread\n  io_uring: remove unneeded variable 'ret'\n  io_uring: move all io_kiocb init early in io_init_req()\n  io-wq: fix ref leak for req in case of exit cancelations\n  io_uring: fix complete_post races for linked req\n  io_uring: add io_disarm_next() helper\n  io_uring: fix io_sq_offload_create error handling\n  io-wq: remove unused 'user' member of io_wq\n  io_uring: Convert personality_idr to XArray\n  io_uring: clean R_DISABLED startup mess\n  ...",
  "full_message": "Merge tag 'io_uring-5.12-2021-03-12' of git://git.kernel.dk/linux-block\n\nPull io_uring fixes from Jens Axboe:\n \"Not quite as small this week as I had hoped, but at least this should\n  be the end of it. All the little known issues have been ironed out -\n  most of it little stuff, but cancelations being the bigger part. Only\n  minor tweaks and/or regular fixes expected beyond this point.\n\n   - Fix the creds tracking for async (io-wq and SQPOLL)\n\n   - Various SQPOLL fixes related to parking, sharing, forking, IOPOLL,\n     completions, and life times. Much simpler now.\n\n   - Make IO threads unfreezable by default, on account of a bug report\n     that had them spinning on resume. Honestly not quite sure why\n     thawing leaves us with a perpetual signal pending (causing the\n     spin), but for now make them unfreezable like there were in 5.11\n     and prior.\n\n   - Move personality_idr to xarray, solving a use-after-free related to\n     removing an entry from the iterator callback. Buffer idr needs the\n     same treatment.\n\n   - Re-org around and task vs context tracking, enabling the fixing of\n     cancelations, and then cancelation fixes on top.\n\n   - Various little bits of cleanups and hardening, and removal of now\n     dead parts\"\n\n* tag 'io_uring-5.12-2021-03-12' of git://git.kernel.dk/linux-block: (34 commits)\n  io_uring: fix OP_ASYNC_CANCEL across tasks\n  io_uring: cancel sqpoll via task_work\n  io_uring: prevent racy sqd->thread checks\n  io_uring: remove useless ->startup completion\n  io_uring: cancel deferred requests in try_cancel\n  io_uring: perform IOPOLL reaping if canceler is thread itself\n  io_uring: force creation of separate context for ATTACH_WQ and non-threads\n  io_uring: remove indirect ctx into sqo injection\n  io_uring: fix invalid ctx->sq_thread_idle\n  kernel: make IO threads unfreezable by default\n  io_uring: always wait for sqd exited when stopping SQPOLL thread\n  io_uring: remove unneeded variable 'ret'\n  io_uring: move all io_kiocb init early in io_init_req()\n  io-wq: fix ref leak for req in case of exit cancelations\n  io_uring: fix complete_post races for linked req\n  io_uring: add io_disarm_next() helper\n  io_uring: fix io_sq_offload_create error handling\n  io-wq: remove unused 'user' member of io_wq\n  io_uring: Convert personality_idr to XArray\n  io_uring: clean R_DISABLED startup mess\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Fri Mar 12 13:13:57 2021 -0800",
  "author_date_iso": "2021-03-12T13:13:57-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Fri Mar 12 13:13:57 2021 -0800",
  "committer_date_iso": "2021-03-12T13:13:57-08:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "fs/io-wq.c",
      "insertions": 12,
      "deletions": 13
    },
    {
      "file": "fs/io-wq.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/io_uring.c",
      "insertions": 455,
      "deletions": 382
    },
    {
      "file": "include/linux/io_uring.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/fork.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 470,
  "total_deletions": 397,
  "total_changes": 867,
  "parents": [
    "261410082d01f2f2d4fcd19abee6b8e84f399c51",
    "58f99373834151e1ca7edc49bc5578d9d40db099"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening",
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": []
}