{
  "hash": "9beac4ee49286101e30a1de2fe58625f998bf77c",
  "hash_short": "9beac4ee",
  "subject": "wifi: airo: replace deprecated strncpy with strscpy_pad",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\n`extra` is clearly supposed to be NUL-terminated which is evident by the\nmanual NUL-byte assignment as well as its immediate usage with strlen().\n\nMoreover, let's NUL-pad since there is deliberate effort (48 instances)\nmade elsewhere to zero-out buffers in these getters and setters:\n6050 | memset(local->config.nodeName, 0, sizeof(local->config.nodeName));\n6130 | memset(local->config.rates, 0, 8);\n6139 | memset(local->config.rates, 0, 8);\n6414 | memset(key.key, 0, MAX_KEY_SIZE);\n6497 | memset(extra, 0, 16);\n(to be clear, strncpy also NUL-padded -- we are matching that behavior)\n\nConsidering the above, a suitable replacement is `strscpy_pad` due to\nthe fact that it guarantees both NUL-termination and NUL-padding on the\ndestination buffer.\n\nWe can also replace the hard-coded size of \"16\" to IW_ESSID_MAX_SIZE\nbecause this function is a wext handler.\n\nIn wext-core.c we have:\nstatic const struct iw_ioctl_description standard_ioctl[] = {\n...\n        [IW_IOCTL_IDX(SIOCGIWNICKN)] = {\n                .header_type    = IW_HEADER_TYPE_POINT,\n                .token_size     = 1,\n                .max_tokens     = IW_ESSID_MAX_SIZE,\n        },\n\nSo the buffer size is (strangely) IW_ESSID_MAX_SIZE\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Jeff Johnson <quic_jjohnson@quicinc.com>\nSigned-off-by: Kalle Valo <kvalo@kernel.org>\nLink: https://lore.kernel.org/r/20231026-strncpy-drivers-net-wireless-cisco-airo-c-v2-1-413427249e47@google.com",
  "full_message": "wifi: airo: replace deprecated strncpy with strscpy_pad\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\n`extra` is clearly supposed to be NUL-terminated which is evident by the\nmanual NUL-byte assignment as well as its immediate usage with strlen().\n\nMoreover, let's NUL-pad since there is deliberate effort (48 instances)\nmade elsewhere to zero-out buffers in these getters and setters:\n6050 | memset(local->config.nodeName, 0, sizeof(local->config.nodeName));\n6130 | memset(local->config.rates, 0, 8);\n6139 | memset(local->config.rates, 0, 8);\n6414 | memset(key.key, 0, MAX_KEY_SIZE);\n6497 | memset(extra, 0, 16);\n(to be clear, strncpy also NUL-padded -- we are matching that behavior)\n\nConsidering the above, a suitable replacement is `strscpy_pad` due to\nthe fact that it guarantees both NUL-termination and NUL-padding on the\ndestination buffer.\n\nWe can also replace the hard-coded size of \"16\" to IW_ESSID_MAX_SIZE\nbecause this function is a wext handler.\n\nIn wext-core.c we have:\nstatic const struct iw_ioctl_description standard_ioctl[] = {\n...\n        [IW_IOCTL_IDX(SIOCGIWNICKN)] = {\n                .header_type    = IW_HEADER_TYPE_POINT,\n                .token_size     = 1,\n                .max_tokens     = IW_ESSID_MAX_SIZE,\n        },\n\nSo the buffer size is (strangely) IW_ESSID_MAX_SIZE\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Jeff Johnson <quic_jjohnson@quicinc.com>\nSigned-off-by: Kalle Valo <kvalo@kernel.org>\nLink: https://lore.kernel.org/r/20231026-strncpy-drivers-net-wireless-cisco-airo-c-v2-1-413427249e47@google.com",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Thu Oct 26 23:19:18 2023 +0000",
  "author_date_iso": "2023-10-26T23:19:18+00:00",
  "committer_name": "Kalle Valo",
  "committer_email": "kvalo@kernel.org",
  "committer_date": "Mon Oct 30 19:24:39 2023 +0200",
  "committer_date_iso": "2023-10-30T19:24:39+02:00",
  "files_changed": [
    "drivers/net/wireless/cisco/airo.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/wireless/cisco/airo.c",
      "insertions": 1,
      "deletions": 2
    }
  ],
  "total_insertions": 1,
  "total_deletions": 2,
  "total_changes": 3,
  "parents": [
    "ebab2723d0bd47ea899d339d54e1c4ac459d18c3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/wireless/cisco/airo.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}