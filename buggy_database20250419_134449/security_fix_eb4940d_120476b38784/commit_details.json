{
  "hash": "eb4940d4adf590590a9d0c47e38d2799c2ff9670",
  "hash_short": "eb4940d4",
  "subject": "mm/slab: remove !CONFIG_TRACING variants of kmalloc_[node_]trace()",
  "body": "For !CONFIG_TRACING kernels, the kmalloc() implementation tries (in cases where\nthe allocation size is build-time constant) to save a function call, by\ninlining kmalloc_trace() to a kmem_cache_alloc() call.\n\nHowever since commit 6edf2576a6cc (\"mm/slub: enable debugging memory wasting of\nkmalloc\") this path now fails to pass the original request size to be\neventually recorded (for kmalloc caches with debugging enabled).\n\nWe could adjust the code to call __kmem_cache_alloc_node() as the\nCONFIG_TRACING variant, but that would as a result inline a call with 5\nparameters, bloating the kmalloc() call sites. The cost of extra function\ncall (to kmalloc_trace()) seems like a lesser evil.\n\nIt also appears that the !CONFIG_TRACING variant is incompatible with upcoming\nhardening efforts [1] so it's easier if we just remove it now. Kernels with no\ntracing are rare these days and the benefit is dubious anyway.\n\n[1] https://lore.kernel.org/linux-mm/20221101222520.never.109-kees@kernel.org/T/#m20ecf14390e406247bde0ea9cce368f469c539ed\n\nLink: https://lore.kernel.org/all/097d8fba-bd10-a312-24a3-a4068c4f424c@suse.cz/\nSuggested-by: Hyeonggon Yoo <42.hyeyoo@gmail.com>\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>",
  "full_message": "mm/slab: remove !CONFIG_TRACING variants of kmalloc_[node_]trace()\n\nFor !CONFIG_TRACING kernels, the kmalloc() implementation tries (in cases where\nthe allocation size is build-time constant) to save a function call, by\ninlining kmalloc_trace() to a kmem_cache_alloc() call.\n\nHowever since commit 6edf2576a6cc (\"mm/slub: enable debugging memory wasting of\nkmalloc\") this path now fails to pass the original request size to be\neventually recorded (for kmalloc caches with debugging enabled).\n\nWe could adjust the code to call __kmem_cache_alloc_node() as the\nCONFIG_TRACING variant, but that would as a result inline a call with 5\nparameters, bloating the kmalloc() call sites. The cost of extra function\ncall (to kmalloc_trace()) seems like a lesser evil.\n\nIt also appears that the !CONFIG_TRACING variant is incompatible with upcoming\nhardening efforts [1] so it's easier if we just remove it now. Kernels with no\ntracing are rare these days and the benefit is dubious anyway.\n\n[1] https://lore.kernel.org/linux-mm/20221101222520.never.109-kees@kernel.org/T/#m20ecf14390e406247bde0ea9cce368f469c539ed\n\nLink: https://lore.kernel.org/all/097d8fba-bd10-a312-24a3-a4068c4f424c@suse.cz/\nSuggested-by: Hyeonggon Yoo <42.hyeyoo@gmail.com>\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>",
  "author_name": "Vlastimil Babka",
  "author_email": "vbabka@suse.cz",
  "author_date": "Fri Nov 4 13:57:11 2022 +0100",
  "author_date_iso": "2022-11-04T13:57:11+01:00",
  "committer_name": "Vlastimil Babka",
  "committer_email": "vbabka@suse.cz",
  "committer_date": "Fri Nov 4 14:57:21 2022 +0100",
  "committer_date_iso": "2022-11-04T14:57:21+01:00",
  "files_changed": [
    "include/linux/slab.h",
    "mm/slab_common.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "include/linux/slab.h",
      "insertions": 0,
      "deletions": 23
    },
    {
      "file": "mm/slab_common.c",
      "insertions": 0,
      "deletions": 2
    }
  ],
  "total_insertions": 0,
  "total_deletions": 25,
  "total_changes": 25,
  "parents": [
    "a207620123f27e6f63bab13b46b20e03a3deec8d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/slab.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/slab_common.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}