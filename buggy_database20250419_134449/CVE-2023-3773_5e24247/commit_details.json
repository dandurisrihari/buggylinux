{
  "hash": "5e2424708da7207087934c5c75211e8584d553a0",
  "hash_short": "5e242470",
  "subject": "xfrm: add forgotten nla_policy for XFRMA_MTIMER_THRESH",
  "body": "The previous commit 4e484b3e969b (\"xfrm: rate limit SA mapping change\nmessage to user space\") added one additional attribute named\nXFRMA_MTIMER_THRESH and described its type at compat_policy\n(net/xfrm/xfrm_compat.c).\n\nHowever, the author forgot to also describe the nla_policy at\nxfrma_policy (net/xfrm/xfrm_user.c). Hence, this suppose NLA_U32 (4\nbytes) value can be faked as empty (0 bytes) by a malicious user, which\nleads to 4 bytes overflow read and heap information leak when parsing\nnlattrs.\n\nTo exploit this, one malicious user can spray the SLUB objects and then\nleverage this 4 bytes OOB read to leak the heap data into\nx->mapping_maxage (see xfrm_update_ae_params(...)), and leak it to\nuserspace via copy_to_user_state_extra(...).\n\nThe above bug is assigned CVE-2023-3773. To fix it, this commit just\ncompletes the nla_policy description for XFRMA_MTIMER_THRESH, which\nenforces the length check and avoids such OOB read.\n\nFixes: 4e484b3e969b (\"xfrm: rate limit SA mapping change message to user space\")\nSigned-off-by: Lin Ma <linma@zju.edu.cn>\nReviewed-by: Simon Horman <simon.horman@corigine.com>\nReviewed-by: Leon Romanovsky <leonro@nvidia.com>\nSigned-off-by: Steffen Klassert <steffen.klassert@secunet.com>",
  "full_message": "xfrm: add forgotten nla_policy for XFRMA_MTIMER_THRESH\n\nThe previous commit 4e484b3e969b (\"xfrm: rate limit SA mapping change\nmessage to user space\") added one additional attribute named\nXFRMA_MTIMER_THRESH and described its type at compat_policy\n(net/xfrm/xfrm_compat.c).\n\nHowever, the author forgot to also describe the nla_policy at\nxfrma_policy (net/xfrm/xfrm_user.c). Hence, this suppose NLA_U32 (4\nbytes) value can be faked as empty (0 bytes) by a malicious user, which\nleads to 4 bytes overflow read and heap information leak when parsing\nnlattrs.\n\nTo exploit this, one malicious user can spray the SLUB objects and then\nleverage this 4 bytes OOB read to leak the heap data into\nx->mapping_maxage (see xfrm_update_ae_params(...)), and leak it to\nuserspace via copy_to_user_state_extra(...).\n\nThe above bug is assigned CVE-2023-3773. To fix it, this commit just\ncompletes the nla_policy description for XFRMA_MTIMER_THRESH, which\nenforces the length check and avoids such OOB read.\n\nFixes: 4e484b3e969b (\"xfrm: rate limit SA mapping change message to user space\")\nSigned-off-by: Lin Ma <linma@zju.edu.cn>\nReviewed-by: Simon Horman <simon.horman@corigine.com>\nReviewed-by: Leon Romanovsky <leonro@nvidia.com>\nSigned-off-by: Steffen Klassert <steffen.klassert@secunet.com>",
  "author_name": "Lin Ma",
  "author_email": "linma@zju.edu.cn",
  "author_date": "Sun Jul 23 15:41:10 2023 +0800",
  "author_date_iso": "2023-07-23T15:41:10+08:00",
  "committer_name": "Steffen Klassert",
  "committer_email": "steffen.klassert@secunet.com",
  "committer_date": "Mon Jul 31 08:20:08 2023 +0200",
  "committer_date_iso": "2023-07-31T08:20:08+02:00",
  "files_changed": [
    "net/xfrm/xfrm_user.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/xfrm/xfrm_user.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 1,
  "total_deletions": 0,
  "total_changes": 1,
  "parents": [
    "00374d9b6d9f932802b55181be9831aa948e5b7c"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2023-3773"
    ],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "net/xfrm/xfrm_user.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}