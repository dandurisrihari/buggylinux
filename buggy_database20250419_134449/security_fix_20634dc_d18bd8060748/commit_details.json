{
  "hash": "20634dc361e1c5fe2dae380a7d0a21ca7f32c4f7",
  "hash_short": "20634dc3",
  "subject": "Merge branch 'pci/hotplug'",
  "body": "- Differentiate between pciehp surprise and safe removal (Lukas Wunner)\n\n  - Remove unnecessary pciehp includes (Lukas Wunner)\n\n  - Drop pciehp hotplug_slot_ops wrappers (Lukas Wunner)\n\n  - Tolerate PCIe Slot Presence Detect being hardwired to zero to\n    workaround broken hardware, e.g., the Wilocity switch/wireless device\n    (Lukas Wunner)\n\n  - Unify pciehp controller & slot structs (Lukas Wunner)\n\n  - Constify hotplug_slot_ops (Lukas Wunner)\n\n  - Drop hotplug_slot_info (Lukas Wunner)\n\n  - Embed hotplug_slot struct into users instead of allocating it\n    separately (Lukas Wunner)\n\n  - Initialize PCIe port service drivers directly instead of relying on\n    initcall ordering (Keith Busch)\n\n  - Restore PCI config state after a slot reset (Keith Busch)\n\n  - Save/restore DPC config state along with other PCI config state (Keith\n    Busch)\n\n  - Reference count devices during AER handling to avoid race issue with\n    concurrent hot removal (Keith Busch)\n\n  - If an Upstream Port reports ERR_FATAL, don't try to read the Port's\n    config space because it is probably unreachable (Keith Busch)\n\n  - During error handling, use slot-specific reset instead of secondary\n    bus reset to avoid link up/down issues on hotplug ports (Keith Busch)\n\n  - Restore previous AER/DPC handling that does not remove and re-enumerate\n    devices on ERR_FATAL (Keith Busch)\n\n  - Notify all drivers that may be affected by error recovery resets (Keith\n    Busch)\n\n  - Always generate error recovery uevents, even if a driver doesn't have\n    error callbacks (Keith Busch)\n\n  - Make PCIe link active reporting detection generic (Keith Busch)\n\n  - Support D3cold in PCIe hierarchies during system sleep and runtime,\n    including hotplug and Thunderbolt ports (Mika Westerberg)\n\n  - Handle hpmemsize/hpiosize kernel parameters uniformly, whether slots\n    are empty or occupied (Jon Derrick)\n\n  - Remove duplicated include from pci/pcie/err.c and unused variable from\n    cpqphp (YueHaibing)\n\n  - Remove driver pci_cleanup_aer_uncorrect_error_status() calls (Oza\n    Pawandeep)\n\n  - Uninline PCI bus accessors for better ftracing (Keith Busch)\n\n  - Remove unused AER Root Port .error_resume method (Keith Busch)\n\n  - Use kfifo in AER instead of a local version (Keith Busch)\n\n  - Use threaded IRQ in AER bottom half (Keith Busch)\n\n  - Use managed resources in AER core (Keith Busch)\n\n  - Reuse pcie_port_find_device() for AER injection (Keith Busch)\n\n  - Abstract AER interrupt handling to disconnect error injection (Keith\n    Busch)\n\n  - Refactor AER injection callbacks to simplify future improvments (Keith\n    Busch)\n\n* pci/hotplug:\n  PCI/AER: Refactor error injection fallbacks\n  PCI/AER: Abstract AER interrupt handling\n  PCI/AER: Reuse existing pcie_port_find_device() interface\n  PCI/AER: Use managed resource allocations\n  PCI/AER: Use threaded IRQ for bottom half\n  PCI/AER: Use kfifo_in_spinlocked() to insert locked elements\n  PCI/AER: Use kfifo for tracking events instead of reimplementing it\n  PCI/AER: Remove error source from AER struct aer_rpc\n  PCI/AER: Remove unused aer_error_resume()\n  PCI: Uninline PCI bus accessors for better ftracing\n  PCI/AER: Remove pci_cleanup_aer_uncorrect_error_status() calls\n  PCI: pnv_php: Use kmemdup()\n  PCI: cpqphp: Remove set but not used variable 'physical_slot'\n  PCI/ERR: Remove duplicated include from err.c\n  PCI: Equalize hotplug memory and io for occupied and empty slots\n  PCI / ACPI: Whitelist D3 for more PCIe hotplug ports\n  ACPI / property: Allow multiple property compatible _DSD entries\n  PCI/PME: Implement runtime PM callbacks\n  PCI: pciehp: Implement runtime PM callbacks\n  PCI/portdrv: Add runtime PM hooks for port service drivers\n  PCI/portdrv: Resume upon exit from system suspend if left runtime suspended\n  PCI: pciehp: Do not handle events if interrupts are masked\n  PCI: pciehp: Disable hotplug interrupt during suspend\n  PCI / ACPI: Enable wake automatically for power managed bridges\n  PCI: Do not skip power-managed bridges in pci_enable_wake()\n  PCI: Make link active reporting detection generic\n  PCI: Unify device inaccessible\n  PCI/ERR: Always report current recovery status for udev\n  PCI/ERR: Simplify broadcast callouts\n  PCI/ERR: Run error recovery callbacks for all affected devices\n  PCI/ERR: Handle fatal error recovery\n  PCI/ERR: Use slot reset if available\n  PCI/AER: Don't read upstream ports below fatal errors\n  PCI/AER: Take reference on error devices\n  PCI/DPC: Save and restore config state\n  PCI: portdrv: Restore PCI config state on slot reset\n  PCI: portdrv: Initialize service drivers directly\n  PCI: hotplug: Document TODOs\n  PCI: hotplug: Embed hotplug_slot\n  PCI: hotplug: Drop hotplug_slot_info\n  PCI: hotplug: Constify hotplug_slot_ops\n  PCI: pciehp: Reshuffle controller struct for clarity\n  PCI: pciehp: Rename controller struct members for clarity\n  PCI: pciehp: Unify controller and slot structs\n  PCI: pciehp: Tolerate Presence Detect hardwired to zero\n  PCI: pciehp: Drop hotplug_slot_ops wrappers\n  PCI: pciehp: Drop unnecessary includes\n  PCI: pciehp: Differentiate between surprise and safe removal\n  PCI: Simplify disconnected marking",
  "full_message": "Merge branch 'pci/hotplug'\n\n  - Differentiate between pciehp surprise and safe removal (Lukas Wunner)\n\n  - Remove unnecessary pciehp includes (Lukas Wunner)\n\n  - Drop pciehp hotplug_slot_ops wrappers (Lukas Wunner)\n\n  - Tolerate PCIe Slot Presence Detect being hardwired to zero to\n    workaround broken hardware, e.g., the Wilocity switch/wireless device\n    (Lukas Wunner)\n\n  - Unify pciehp controller & slot structs (Lukas Wunner)\n\n  - Constify hotplug_slot_ops (Lukas Wunner)\n\n  - Drop hotplug_slot_info (Lukas Wunner)\n\n  - Embed hotplug_slot struct into users instead of allocating it\n    separately (Lukas Wunner)\n\n  - Initialize PCIe port service drivers directly instead of relying on\n    initcall ordering (Keith Busch)\n\n  - Restore PCI config state after a slot reset (Keith Busch)\n\n  - Save/restore DPC config state along with other PCI config state (Keith\n    Busch)\n\n  - Reference count devices during AER handling to avoid race issue with\n    concurrent hot removal (Keith Busch)\n\n  - If an Upstream Port reports ERR_FATAL, don't try to read the Port's\n    config space because it is probably unreachable (Keith Busch)\n\n  - During error handling, use slot-specific reset instead of secondary\n    bus reset to avoid link up/down issues on hotplug ports (Keith Busch)\n\n  - Restore previous AER/DPC handling that does not remove and re-enumerate\n    devices on ERR_FATAL (Keith Busch)\n\n  - Notify all drivers that may be affected by error recovery resets (Keith\n    Busch)\n\n  - Always generate error recovery uevents, even if a driver doesn't have\n    error callbacks (Keith Busch)\n\n  - Make PCIe link active reporting detection generic (Keith Busch)\n\n  - Support D3cold in PCIe hierarchies during system sleep and runtime,\n    including hotplug and Thunderbolt ports (Mika Westerberg)\n\n  - Handle hpmemsize/hpiosize kernel parameters uniformly, whether slots\n    are empty or occupied (Jon Derrick)\n\n  - Remove duplicated include from pci/pcie/err.c and unused variable from\n    cpqphp (YueHaibing)\n\n  - Remove driver pci_cleanup_aer_uncorrect_error_status() calls (Oza\n    Pawandeep)\n\n  - Uninline PCI bus accessors for better ftracing (Keith Busch)\n\n  - Remove unused AER Root Port .error_resume method (Keith Busch)\n\n  - Use kfifo in AER instead of a local version (Keith Busch)\n\n  - Use threaded IRQ in AER bottom half (Keith Busch)\n\n  - Use managed resources in AER core (Keith Busch)\n\n  - Reuse pcie_port_find_device() for AER injection (Keith Busch)\n\n  - Abstract AER interrupt handling to disconnect error injection (Keith\n    Busch)\n\n  - Refactor AER injection callbacks to simplify future improvments (Keith\n    Busch)\n\n* pci/hotplug:\n  PCI/AER: Refactor error injection fallbacks\n  PCI/AER: Abstract AER interrupt handling\n  PCI/AER: Reuse existing pcie_port_find_device() interface\n  PCI/AER: Use managed resource allocations\n  PCI/AER: Use threaded IRQ for bottom half\n  PCI/AER: Use kfifo_in_spinlocked() to insert locked elements\n  PCI/AER: Use kfifo for tracking events instead of reimplementing it\n  PCI/AER: Remove error source from AER struct aer_rpc\n  PCI/AER: Remove unused aer_error_resume()\n  PCI: Uninline PCI bus accessors for better ftracing\n  PCI/AER: Remove pci_cleanup_aer_uncorrect_error_status() calls\n  PCI: pnv_php: Use kmemdup()\n  PCI: cpqphp: Remove set but not used variable 'physical_slot'\n  PCI/ERR: Remove duplicated include from err.c\n  PCI: Equalize hotplug memory and io for occupied and empty slots\n  PCI / ACPI: Whitelist D3 for more PCIe hotplug ports\n  ACPI / property: Allow multiple property compatible _DSD entries\n  PCI/PME: Implement runtime PM callbacks\n  PCI: pciehp: Implement runtime PM callbacks\n  PCI/portdrv: Add runtime PM hooks for port service drivers\n  PCI/portdrv: Resume upon exit from system suspend if left runtime suspended\n  PCI: pciehp: Do not handle events if interrupts are masked\n  PCI: pciehp: Disable hotplug interrupt during suspend\n  PCI / ACPI: Enable wake automatically for power managed bridges\n  PCI: Do not skip power-managed bridges in pci_enable_wake()\n  PCI: Make link active reporting detection generic\n  PCI: Unify device inaccessible\n  PCI/ERR: Always report current recovery status for udev\n  PCI/ERR: Simplify broadcast callouts\n  PCI/ERR: Run error recovery callbacks for all affected devices\n  PCI/ERR: Handle fatal error recovery\n  PCI/ERR: Use slot reset if available\n  PCI/AER: Don't read upstream ports below fatal errors\n  PCI/AER: Take reference on error devices\n  PCI/DPC: Save and restore config state\n  PCI: portdrv: Restore PCI config state on slot reset\n  PCI: portdrv: Initialize service drivers directly\n  PCI: hotplug: Document TODOs\n  PCI: hotplug: Embed hotplug_slot\n  PCI: hotplug: Drop hotplug_slot_info\n  PCI: hotplug: Constify hotplug_slot_ops\n  PCI: pciehp: Reshuffle controller struct for clarity\n  PCI: pciehp: Rename controller struct members for clarity\n  PCI: pciehp: Unify controller and slot structs\n  PCI: pciehp: Tolerate Presence Detect hardwired to zero\n  PCI: pciehp: Drop hotplug_slot_ops wrappers\n  PCI: pciehp: Drop unnecessary includes\n  PCI: pciehp: Differentiate between surprise and safe removal\n  PCI: Simplify disconnected marking",
  "author_name": "Bjorn Helgaas",
  "author_email": "bhelgaas@google.com",
  "author_date": "Sat Oct 20 11:45:29 2018 -0500",
  "author_date_iso": "2018-10-20T11:45:29-05:00",
  "committer_name": "Bjorn Helgaas",
  "committer_email": "bhelgaas@google.com",
  "committer_date": "Sat Oct 20 11:45:29 2018 -0500",
  "committer_date_iso": "2018-10-20T11:45:29-05:00",
  "files_changed": [
    "drivers/pci/pci-acpi.c",
    "drivers/pci/pci.c",
    "include/linux/pci.h"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "Documentation/PCI/pci-error-recovery.txt",
      "insertions": 10,
      "deletions": 25
    },
    {
      "file": "arch/powerpc/include/asm/pnv-pci.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/property.c",
      "insertions": 71,
      "deletions": 26
    },
    {
      "file": "drivers/acpi/x86/apple.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/crypto/qat/qat_common/adf_aer.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/dma/ioat/init.c",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "drivers/gpio/gpiolib-acpi.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/infiniband/hw/hfi1/pcie.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/infiniband/hw/qib/qib_pcie.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/net/ethernet/atheros/alx/main.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/net/ethernet/broadcom/bnx2.c",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c",
      "insertions": 0,
      "deletions": 8
    },
    {
      "file": "drivers/net/ethernet/broadcom/bnxt/bnxt.c",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/net/ethernet/emulex/benet/be_main.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/net/ethernet/intel/e1000e/netdev.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/net/ethernet/intel/fm10k/fm10k_pci.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/net/ethernet/intel/i40e/i40e_main.c",
      "insertions": 0,
      "deletions": 9
    },
    {
      "file": "drivers/net/ethernet/intel/igb/igb_main.c",
      "insertions": 0,
      "deletions": 9
    },
    {
      "file": "drivers/net/ethernet/intel/ixgbe/ixgbe_main.c",
      "insertions": 0,
      "deletions": 10
    },
    {
      "file": "drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c",
      "insertions": 0,
      "deletions": 6
    },
    {
      "file": "drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/net/ethernet/sfc/efx.c",
      "insertions": 0,
      "deletions": 8
    },
    {
      "file": "drivers/net/ethernet/sfc/falcon/efx.c",
      "insertions": 0,
      "deletions": 8
    },
    {
      "file": "drivers/nvme/host/pci.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/pci/access.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "drivers/pci/hotplug/TODO",
      "insertions": 74,
      "deletions": 0
    },
    {
      "file": "drivers/pci/hotplug/acpiphp.h",
      "insertions": 7,
      "deletions": 3
    },
    {
      "file": "drivers/pci/hotplug/acpiphp_core.c",
      "insertions": 11,
      "deletions": 25
    },
    {
      "file": "drivers/pci/hotplug/acpiphp_ibm.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/pci/hotplug/cpci_hotplug.h",
      "insertions": 9,
      "deletions": 2
    },
    {
      "file": "drivers/pci/hotplug/cpci_hotplug_core.c",
      "insertions": 24,
      "deletions": 81
    },
    {
      "file": "drivers/pci/hotplug/cpci_hotplug_pci.c",
      "insertions": 2,
      "deletions": 4
    },
    {
      "file": "drivers/pci/hotplug/cpqphp.h",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "drivers/pci/hotplug/cpqphp_core.c",
      "insertions": 13,
      "deletions": 48
    },
    {
      "file": "drivers/pci/hotplug/cpqphp_ctrl.c",
      "insertions": 1,
      "deletions": 30
    },
    {
      "file": "drivers/pci/hotplug/ibmphp.h",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "drivers/pci/hotplug/ibmphp_core.c",
      "insertions": 42,
      "deletions": 79
    },
    {
      "file": "drivers/pci/hotplug/ibmphp_ebda.c",
      "insertions": 10,
      "deletions": 60
    },
    {
      "file": "drivers/pci/hotplug/pci_hotplug_core.c",
      "insertions": 15,
      "deletions": 38
    },
    {
      "file": "drivers/pci/hotplug/pciehp.h",
      "insertions": 66,
      "deletions": 67
    },
    {
      "file": "drivers/pci/hotplug/pciehp_core.c",
      "insertions": 71,
      "deletions": 97
    },
    {
      "file": "drivers/pci/hotplug/pciehp_ctrl.c",
      "insertions": 123,
      "deletions": 140
    },
    {
      "file": "drivers/pci/hotplug/pciehp_hpc.c",
      "insertions": 74,
      "deletions": 110
    },
    {
      "file": "drivers/pci/hotplug/pciehp_pci.c",
      "insertions": 26,
      "deletions": 15
    },
    {
      "file": "drivers/pci/hotplug/pnv_php.c",
      "insertions": 24,
      "deletions": 14
    },
    {
      "file": "drivers/pci/hotplug/rpaphp.h",
      "insertions": 8,
      "deletions": 2
    },
    {
      "file": "drivers/pci/hotplug/rpaphp_core.c",
      "insertions": 10,
      "deletions": 10
    },
    {
      "file": "drivers/pci/hotplug/rpaphp_pci.c",
      "insertions": 2,
      "deletions": 9
    },
    {
      "file": "drivers/pci/hotplug/rpaphp_slot.c",
      "insertions": 4,
      "deletions": 18
    },
    {
      "file": "drivers/pci/hotplug/s390_pci_hpc.c",
      "insertions": 13,
      "deletions": 31
    },
    {
      "file": "drivers/pci/hotplug/sgi_hotplug.c",
      "insertions": 23,
      "deletions": 40
    },
    {
      "file": "drivers/pci/hotplug/shpchp.h",
      "insertions": 5,
      "deletions": 3
    },
    {
      "file": "drivers/pci/hotplug/shpchp_core.c",
      "insertions": 14,
      "deletions": 34
    },
    {
      "file": "drivers/pci/hotplug/shpchp_ctrl.c",
      "insertions": 5,
      "deletions": 16
    },
    {
      "file": "drivers/pci/pci-acpi.c",
      "insertions": 56,
      "deletions": 1
    },
    {
      "file": "drivers/pci/pci.c",
      "insertions": 83,
      "deletions": 11
    },
    {
      "file": "drivers/pci/pci.h",
      "insertions": 70,
      "deletions": 7
    },
    {
      "file": "drivers/pci/pcie/aer.c",
      "insertions": 60,
      "deletions": 179
    },
    {
      "file": "drivers/pci/pcie/aer_inject.c",
      "insertions": 46,
      "deletions": 50
    },
    {
      "file": "drivers/pci/pcie/dpc.c",
      "insertions": 61,
      "deletions": 11
    },
    {
      "file": "drivers/pci/pcie/err.c",
      "insertions": 68,
      "deletions": 213
    },
    {
      "file": "drivers/pci/pcie/pme.c",
      "insertions": 28,
      "deletions": 2
    },
    {
      "file": "drivers/pci/pcie/portdrv.h",
      "insertions": 28,
      "deletions": 4
    },
    {
      "file": "drivers/pci/pcie/portdrv_core.c",
      "insertions": 21,
      "deletions": 0
    },
    {
      "file": "drivers/pci/pcie/portdrv_pci.c",
      "insertions": 23,
      "deletions": 8
    },
    {
      "file": "drivers/pci/probe.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/pci/setup-bus.c",
      "insertions": 15,
      "deletions": 13
    },
    {
      "file": "drivers/pci/slot.c",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "drivers/platform/x86/asus-wmi.c",
      "insertions": 10,
      "deletions": 29
    },
    {
      "file": "drivers/platform/x86/eeepc-laptop.c",
      "insertions": 13,
      "deletions": 30
    },
    {
      "file": "drivers/scsi/aacraid/linit.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/scsi/be2iscsi/be_main.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/scsi/bfa/bfad.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/scsi/csiostor/csio_init.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/scsi/lpfc/lpfc_init.c",
      "insertions": 0,
      "deletions": 8
    },
    {
      "file": "drivers/scsi/mpt3sas/mpt3sas_scsih.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/scsi/qla2xxx/qla_os.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/scsi/qla4xxx/ql4_os.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "include/acpi/acpi_bus.h",
      "insertions": 7,
      "deletions": 1
    },
    {
      "file": "include/linux/acpi.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "include/linux/pci.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/pci_hotplug.h",
      "insertions": 5,
      "deletions": 38
    }
  ],
  "total_insertions": 1383,
  "total_deletions": 1747,
  "total_changes": 3130,
  "parents": [
    "de468b755464426c276df2daf1e54bcd64186020",
    "e51cd9ce5dd3b10f9e67a30a4dc00fc1fa80c673"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.20",
    "v4.20-rc1",
    "v4.20-rc2",
    "v4.20-rc3",
    "v4.20-rc4",
    "v4.20-rc5",
    "v4.20-rc6",
    "v4.20-rc7",
    "v5.0",
    "v5.0-rc1"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/pci/pci-acpi.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/pci/pci.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/pci.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}