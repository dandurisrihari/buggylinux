{
  "hash": "73ac5d6a2b6ac3ae8d1e1818f3e9946f97489bc9",
  "hash_short": "73ac5d6a",
  "subject": "arm/syscalls: Check address limit on user-mode return",
  "body": "Ensure the address limit is a user-mode segment before returning to\nuser-mode. Otherwise a process can corrupt kernel-mode memory and\nelevate privileges [1].\n\nThe set_fs function sets the TIF_SETFS flag to force a slow path on\nreturn. In the slow path, the address limit is checked to be USER_DS if\nneeded.\n\nThe TIF_SETFS flag is added to _TIF_WORK_MASK shifting _TIF_SYSCALL_WORK\nfor arm instruction immediate support. The global work mask is too big\nto used on a single instruction so adapt ret_fast_syscall.\n\n[1] https://bugs.chromium.org/p/project-zero/issues/detail?id=990\n\nSigned-off-by: Thomas Garnier <thgarnie@google.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: kernel-hardening@lists.openwall.com\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Will Deacon <will.deacon@arm.com>\nCc: David Howells <dhowells@redhat.com>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: Miroslav Benes <mbenes@suse.cz>\nCc: Chris Metcalf <cmetcalf@mellanox.com>\nCc: Pratyush Anand <panand@redhat.com>\nCc: Russell King <linux@armlinux.org.uk>\nCc: Petr Mladek <pmladek@suse.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Kees Cook <keescook@chromium.org>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nCc: linux-arm-kernel@lists.infradead.org\nCc: Will Drewry <wad@chromium.org>\nCc: linux-api@vger.kernel.org\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nLink: http://lkml.kernel.org/r/20170615011203.144108-2-thgarnie@google.com",
  "full_message": "arm/syscalls: Check address limit on user-mode return\n\nEnsure the address limit is a user-mode segment before returning to\nuser-mode. Otherwise a process can corrupt kernel-mode memory and\nelevate privileges [1].\n\nThe set_fs function sets the TIF_SETFS flag to force a slow path on\nreturn. In the slow path, the address limit is checked to be USER_DS if\nneeded.\n\nThe TIF_SETFS flag is added to _TIF_WORK_MASK shifting _TIF_SYSCALL_WORK\nfor arm instruction immediate support. The global work mask is too big\nto used on a single instruction so adapt ret_fast_syscall.\n\n[1] https://bugs.chromium.org/p/project-zero/issues/detail?id=990\n\nSigned-off-by: Thomas Garnier <thgarnie@google.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: kernel-hardening@lists.openwall.com\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Will Deacon <will.deacon@arm.com>\nCc: David Howells <dhowells@redhat.com>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: Miroslav Benes <mbenes@suse.cz>\nCc: Chris Metcalf <cmetcalf@mellanox.com>\nCc: Pratyush Anand <panand@redhat.com>\nCc: Russell King <linux@armlinux.org.uk>\nCc: Petr Mladek <pmladek@suse.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Kees Cook <keescook@chromium.org>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nCc: linux-arm-kernel@lists.infradead.org\nCc: Will Drewry <wad@chromium.org>\nCc: linux-api@vger.kernel.org\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nLink: http://lkml.kernel.org/r/20170615011203.144108-2-thgarnie@google.com",
  "author_name": "Thomas Garnier",
  "author_email": "thgarnie@google.com",
  "author_date": "Wed Jun 14 18:12:02 2017 -0700",
  "author_date_iso": "2017-06-14T18:12:02-07:00",
  "committer_name": "Thomas Gleixner",
  "committer_email": "tglx@linutronix.de",
  "committer_date": "Sat Jul 8 14:05:33 2017 +0200",
  "committer_date_iso": "2017-07-08T14:05:33+02:00",
  "files_changed": [
    "arch/arm/include/asm/thread_info.h",
    "arch/arm/include/asm/uaccess.h",
    "arch/arm/kernel/entry-common.S",
    "arch/arm/kernel/signal.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "arch/arm/include/asm/thread_info.h",
      "insertions": 9,
      "deletions": 6
    },
    {
      "file": "arch/arm/include/asm/uaccess.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/arm/kernel/entry-common.S",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "arch/arm/kernel/signal.c",
      "insertions": 5,
      "deletions": 0
    }
  ],
  "total_insertions": 23,
  "total_deletions": 8,
  "total_changes": 31,
  "parents": [
    "5ea0727b163cb5575e36397a12eade68a1f35f24"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.14",
    "v4.14-rc1",
    "v4.14-rc2",
    "v4.14-rc3",
    "v4.14-rc4",
    "v4.14-rc5",
    "v4.14-rc6",
    "v4.14-rc7",
    "v4.14-rc8",
    "v4.15"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm/include/asm/thread_info.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/include/asm/uaccess.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/kernel/entry-common.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm/kernel/signal.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}