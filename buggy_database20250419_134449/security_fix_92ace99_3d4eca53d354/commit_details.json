{
  "hash": "92ace9991da08827e809c2d120108a96a281e7fc",
  "hash_short": "92ace999",
  "subject": "add infrastructure for tagging functions as error injectable",
  "body": "Using BPF we can override kprob'ed functions and return arbitrary\nvalues.  Obviously this can be a bit unsafe, so make this feature opt-in\nfor functions.  Simply tag a function with KPROBE_ERROR_INJECT_SYMBOL in\norder to give BPF access to that function for error injection purposes.\n\nSigned-off-by: Josef Bacik <jbacik@fb.com>\nAcked-by: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>",
  "full_message": "add infrastructure for tagging functions as error injectable\n\nUsing BPF we can override kprob'ed functions and return arbitrary\nvalues.  Obviously this can be a bit unsafe, so make this feature opt-in\nfor functions.  Simply tag a function with KPROBE_ERROR_INJECT_SYMBOL in\norder to give BPF access to that function for error injection purposes.\n\nSigned-off-by: Josef Bacik <jbacik@fb.com>\nAcked-by: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>",
  "author_name": "Josef Bacik",
  "author_email": "jbacik@fb.com",
  "author_date": "Mon Dec 11 11:36:46 2017 -0500",
  "author_date_iso": "2017-12-11T11:36:46-05:00",
  "committer_name": "Alexei Starovoitov",
  "committer_email": "ast@kernel.org",
  "committer_date": "Tue Dec 12 08:56:26 2017 -0800",
  "committer_date_iso": "2017-12-12T08:56:26-08:00",
  "files_changed": [
    "include/asm-generic/vmlinux.lds.h",
    "include/linux/bpf.h",
    "include/linux/kprobes.h",
    "include/linux/module.h",
    "kernel/kprobes.c",
    "kernel/module.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "include/asm-generic/vmlinux.lds.h",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "include/linux/bpf.h",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "include/linux/kprobes.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/module.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "kernel/kprobes.c",
      "insertions": 163,
      "deletions": 0
    },
    {
      "file": "kernel/module.c",
      "insertions": 5,
      "deletions": 1
    }
  ],
  "total_insertions": 195,
  "total_deletions": 1,
  "total_changes": 196,
  "parents": [
    "a23967c181cae80becb451b38ff2a1e01c05c37b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc1",
    "v4.16-rc2",
    "v4.16-rc3",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/asm-generic/vmlinux.lds.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/module.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/bpf.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/kprobes.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/module.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/kprobes.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}