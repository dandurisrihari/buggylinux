{
  "hash": "610d086d6df0b15c3732a7b4a5b0f1c3e1b84d4c",
  "hash_short": "610d086d",
  "subject": "mac80211: fix EAPoL rekey fail in 802.3 rx path",
  "body": "mac80211 set capability NL80211_EXT_FEATURE_CONTROL_PORT_OVER_NL80211\nto upper layer by default. That means we should pass EAPoL packets through\nnl80211 path only, and should not send the EAPoL skb to netdevice diretly.\nAt the meanwhile, wpa_supplicant would not register sock to listen EAPoL\nskb on the netdevice.\n\nHowever, there is no control_port_protocol handler in mac80211 for 802.3 RX\npackets, mac80211 driver would pass up the EAPoL rekey frame to netdevice\nand wpa_supplicant would be never interactive with this kind of packets,\nif SUPPORTS_RX_DECAP_OFFLOAD is enabled. This causes STA always rekey fail\nif EAPoL frame go through 802.3 path.\n\nTo avoid this problem, align the same process as 802.11 type to handle\nthis frame before put it into network stack.\n\nThis also addresses a potential security issue in 802.3 RX mode that was\npreviously fixed in commit a8c4d76a8dd4 (\"mac80211: do not accept/forward\ninvalid EAPOL frames\").\n\nCc: stable@vger.kernel.org # 5.12+\nFixes: 80a915ec4427 (\"mac80211: add rx decapsulation offload support\")\nSigned-off-by: Deren Wu <deren.wu@mediatek.com>\nLink: https://lore.kernel.org/r/6889c9fced5859ebb088564035f84fd0fa792a49.1644680751.git.deren.wu@mediatek.com\n[fix typos, update comment and add note about security issue]\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "full_message": "mac80211: fix EAPoL rekey fail in 802.3 rx path\n\nmac80211 set capability NL80211_EXT_FEATURE_CONTROL_PORT_OVER_NL80211\nto upper layer by default. That means we should pass EAPoL packets through\nnl80211 path only, and should not send the EAPoL skb to netdevice diretly.\nAt the meanwhile, wpa_supplicant would not register sock to listen EAPoL\nskb on the netdevice.\n\nHowever, there is no control_port_protocol handler in mac80211 for 802.3 RX\npackets, mac80211 driver would pass up the EAPoL rekey frame to netdevice\nand wpa_supplicant would be never interactive with this kind of packets,\nif SUPPORTS_RX_DECAP_OFFLOAD is enabled. This causes STA always rekey fail\nif EAPoL frame go through 802.3 path.\n\nTo avoid this problem, align the same process as 802.11 type to handle\nthis frame before put it into network stack.\n\nThis also addresses a potential security issue in 802.3 RX mode that was\npreviously fixed in commit a8c4d76a8dd4 (\"mac80211: do not accept/forward\ninvalid EAPOL frames\").\n\nCc: stable@vger.kernel.org # 5.12+\nFixes: 80a915ec4427 (\"mac80211: add rx decapsulation offload support\")\nSigned-off-by: Deren Wu <deren.wu@mediatek.com>\nLink: https://lore.kernel.org/r/6889c9fced5859ebb088564035f84fd0fa792a49.1644680751.git.deren.wu@mediatek.com\n[fix typos, update comment and add note about security issue]\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "author_name": "Deren Wu",
  "author_email": "deren.wu@mediatek.com",
  "author_date": "Sun Feb 13 00:20:15 2022 +0800",
  "author_date_iso": "2022-02-13T00:20:15+08:00",
  "committer_name": "Johannes Berg",
  "committer_email": "johannes.berg@intel.com",
  "committer_date": "Wed Feb 16 15:25:02 2022 +0100",
  "committer_date_iso": "2022-02-16T15:25:02+01:00",
  "files_changed": [
    "net/mac80211/rx.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/mac80211/rx.c",
      "insertions": 3,
      "deletions": 7
    }
  ],
  "total_insertions": 3,
  "total_deletions": 7,
  "total_changes": 10,
  "parents": [
    "bf8e59fd315f304eb538546e35de6dc603e4709f"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/mac80211/rx.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}