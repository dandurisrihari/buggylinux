{
  "hash": "5330367fa300742a97e20e953b1f77f48392faae",
  "hash_short": "5330367f",
  "subject": "powerpc/hugetlb: Handle mmap_min_addr correctly in get_unmapped_area callback",
  "body": "After we ALIGN up the address we need to make sure we didn't overflow\nand resulted in zero address. In that case, we need to make sure that\nthe returned address is greater than mmap_min_addr.\n\nThis fixes selftest va_128TBswitch --run-hugetlb reporting failures when\nrun as non root user for\n\nmmap(-1, MAP_HUGETLB)\n\nThe bug is that a non-root user requesting address -1 will be given address 0\nwhich will then fail, whereas they should have been given something else that\nwould have succeeded.\n\nWe also avoid the first mmap(-1, MAP_HUGETLB) returning NULL address as mmap address\nwith this change. So we think this is not a security issue, because it only affects\nwhether we choose an address below mmap_min_addr, not whether we\nactually allow that address to be mapped. ie. there are existing capability\nchecks to prevent a user mapping below mmap_min_addr and those will still be\nhonoured even without this fix.\n\nFixes: 484837601d4d (\"powerpc/mm: Add radix support for hugetlb\")\nReviewed-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>\nSigned-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "full_message": "powerpc/hugetlb: Handle mmap_min_addr correctly in get_unmapped_area callback\n\nAfter we ALIGN up the address we need to make sure we didn't overflow\nand resulted in zero address. In that case, we need to make sure that\nthe returned address is greater than mmap_min_addr.\n\nThis fixes selftest va_128TBswitch --run-hugetlb reporting failures when\nrun as non root user for\n\nmmap(-1, MAP_HUGETLB)\n\nThe bug is that a non-root user requesting address -1 will be given address 0\nwhich will then fail, whereas they should have been given something else that\nwould have succeeded.\n\nWe also avoid the first mmap(-1, MAP_HUGETLB) returning NULL address as mmap address\nwith this change. So we think this is not a security issue, because it only affects\nwhether we choose an address below mmap_min_addr, not whether we\nactually allow that address to be mapped. ie. there are existing capability\nchecks to prevent a user mapping below mmap_min_addr and those will still be\nhonoured even without this fix.\n\nFixes: 484837601d4d (\"powerpc/mm: Add radix support for hugetlb\")\nReviewed-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>\nSigned-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "author_name": "Aneesh Kumar K.V",
  "author_email": "aneesh.kumar@linux.ibm.com",
  "author_date": "Tue Feb 26 10:09:34 2019 +0530",
  "author_date_iso": "2019-02-26T10:09:34+05:30",
  "committer_name": "Michael Ellerman",
  "committer_email": "mpe@ellerman.id.au",
  "committer_date": "Tue Feb 26 16:26:28 2019 +1100",
  "committer_date_iso": "2019-02-26T16:26:28+11:00",
  "files_changed": [
    "arch/powerpc/mm/hugetlbpage-radix.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/powerpc/mm/hugetlbpage-radix.c",
      "insertions": 3,
      "deletions": 2
    }
  ],
  "total_insertions": 3,
  "total_deletions": 2,
  "total_changes": 5,
  "parents": [
    "6cd96c5b684d9d6873e2bcbf17c43b32f3de80ef"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.1",
    "v5.1-rc1",
    "v5.1-rc2",
    "v5.1-rc3",
    "v5.1-rc4",
    "v5.1-rc5",
    "v5.1-rc6",
    "v5.1-rc7",
    "v5.2",
    "v5.2-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/powerpc/mm/hugetlbpage-radix.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}