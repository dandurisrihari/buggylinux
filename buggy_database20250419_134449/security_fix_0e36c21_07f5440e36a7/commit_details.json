{
  "hash": "0e36c21d7640ddbfa9233c692db905e0848c6f44",
  "hash_short": "0e36c21d",
  "subject": "Merge branch mana-ib-flex of git://git.kernel.org/pub/scm/linux/kernel/git/rdma/rdma.git",
  "body": "Erick Archer says:\n\n====================\nmana: Add flex array to struct mana_cfg_rx_steer_req_v2 (part)\n\nThe \"struct mana_cfg_rx_steer_req_v2\" uses a dynamically sized set of\ntrailing elements. Specifically, it uses a \"mana_handle_t\" array. So,\nuse the preferred way in the kernel declaring a flexible array [1].\n\nAt the same time, prepare for the coming implementation by GCC and Clang\nof the __counted_by attribute. Flexible array members annotated with\n__counted_by can have their accesses bounds-checked at run-time via\nCONFIG_UBSAN_BOUNDS (for array indexing) and CONFIG_FORTIFY_SOURCE (for\nstrcpy/memcpy-family functions).\n\nAlso, avoid the open-coded arithmetic in the memory allocator functions\n[2] using the \"struct_size\" macro.\n\nMoreover, use the \"offsetof\" helper to get the indirect table offset\ninstead of the \"sizeof\" operator and avoid the open-coded arithmetic in\npointers using the new flex member. This new structure member also allow\nus to remove the \"req_indir_tab\" variable since it is no longer needed.\n\nNow, it is also possible to use the \"flex_array_size\" helper to compute\nthe size of these trailing elements in the \"memcpy\" function.\n\nSpecifically, the first commit adds the flex member and the patches 2 and\n3 refactor the consumers of the \"struct mana_cfg_rx_steer_req_v2\".\n\nThis code was detected with the help of Coccinelle, and audited and\nmodified manually. The Coccinelle script used to detect this code pattern\nis the following:\n\nvirtual report\n\n@rule1@\ntype t1;\ntype t2;\nidentifier i0;\nidentifier i1;\nidentifier i2;\nidentifier ALLOC =~ \"kmalloc|kzalloc|kmalloc_node|kzalloc_node|vmalloc|vzalloc|kvmalloc|kvzalloc\";\nposition p1;\n@@\n\ni0 = sizeof(t1) + sizeof(t2) * i1;\n...\ni2 = ALLOC@p1(..., i0, ...);\n\n@script:python depends on report@\np1 << rule1.p1;\n@@\n\nmsg = \"WARNING: verify allocation on line %s\" % (p1[0].line)\ncoccilib.report.print_report(p1[0],msg)\n\nLink: https://www.kernel.org/doc/html/next/process/deprecated.html#zero-length-and-one-element-arrays [1]\nLink: https://www.kernel.org/doc/html/next/process/deprecated.html#open-coded-arithmetic-in-allocator-arguments [2]\n\nv1: https://lore.kernel.org/linux-hardening/AS8PR02MB7237974EF1B9BAFA618166C38B382@AS8PR02MB7237.eurprd02.prod.outlook.com/\nv2: https://lore.kernel.org/linux-hardening/AS8PR02MB723729C5A63F24C312FC9CD18B3F2@AS8PR02MB7237.eurprd02.prod.outlook.com/\n====================\n\nLink: https://lore.kernel.org/r/AS8PR02MB72374BD1B23728F2E3C3B1A18B022@AS8PR02MB7237.eurprd02.prod.outlook.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "Merge branch mana-ib-flex of git://git.kernel.org/pub/scm/linux/kernel/git/rdma/rdma.git\n\nErick Archer says:\n\n====================\nmana: Add flex array to struct mana_cfg_rx_steer_req_v2 (part)\n\nThe \"struct mana_cfg_rx_steer_req_v2\" uses a dynamically sized set of\ntrailing elements. Specifically, it uses a \"mana_handle_t\" array. So,\nuse the preferred way in the kernel declaring a flexible array [1].\n\nAt the same time, prepare for the coming implementation by GCC and Clang\nof the __counted_by attribute. Flexible array members annotated with\n__counted_by can have their accesses bounds-checked at run-time via\nCONFIG_UBSAN_BOUNDS (for array indexing) and CONFIG_FORTIFY_SOURCE (for\nstrcpy/memcpy-family functions).\n\nAlso, avoid the open-coded arithmetic in the memory allocator functions\n[2] using the \"struct_size\" macro.\n\nMoreover, use the \"offsetof\" helper to get the indirect table offset\ninstead of the \"sizeof\" operator and avoid the open-coded arithmetic in\npointers using the new flex member. This new structure member also allow\nus to remove the \"req_indir_tab\" variable since it is no longer needed.\n\nNow, it is also possible to use the \"flex_array_size\" helper to compute\nthe size of these trailing elements in the \"memcpy\" function.\n\nSpecifically, the first commit adds the flex member and the patches 2 and\n3 refactor the consumers of the \"struct mana_cfg_rx_steer_req_v2\".\n\nThis code was detected with the help of Coccinelle, and audited and\nmodified manually. The Coccinelle script used to detect this code pattern\nis the following:\n\nvirtual report\n\n@rule1@\ntype t1;\ntype t2;\nidentifier i0;\nidentifier i1;\nidentifier i2;\nidentifier ALLOC =~ \"kmalloc|kzalloc|kmalloc_node|kzalloc_node|vmalloc|vzalloc|kvmalloc|kvzalloc\";\nposition p1;\n@@\n\ni0 = sizeof(t1) + sizeof(t2) * i1;\n...\ni2 = ALLOC@p1(..., i0, ...);\n\n@script:python depends on report@\np1 << rule1.p1;\n@@\n\nmsg = \"WARNING: verify allocation on line %s\" % (p1[0].line)\ncoccilib.report.print_report(p1[0],msg)\n\nLink: https://www.kernel.org/doc/html/next/process/deprecated.html#zero-length-and-one-element-arrays [1]\nLink: https://www.kernel.org/doc/html/next/process/deprecated.html#open-coded-arithmetic-in-allocator-arguments [2]\n\nv1: https://lore.kernel.org/linux-hardening/AS8PR02MB7237974EF1B9BAFA618166C38B382@AS8PR02MB7237.eurprd02.prod.outlook.com/\nv2: https://lore.kernel.org/linux-hardening/AS8PR02MB723729C5A63F24C312FC9CD18B3F2@AS8PR02MB7237.eurprd02.prod.outlook.com/\n====================\n\nLink: https://lore.kernel.org/r/AS8PR02MB72374BD1B23728F2E3C3B1A18B022@AS8PR02MB7237.eurprd02.prod.outlook.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Jakub Kicinski",
  "author_email": "kuba@kernel.org",
  "author_date": "Wed Apr 10 18:04:24 2024 -0700",
  "author_date_iso": "2024-04-10T18:04:24-07:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Thu Apr 11 07:38:28 2024 -0700",
  "committer_date_iso": "2024-04-11T07:38:28-07:00",
  "files_changed": [
    "drivers/net/ethernet/microsoft/mana/mana_en.c",
    "include/net/mana/mana.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/infiniband/hw/mana/qp.c",
      "insertions": 5,
      "deletions": 7
    },
    {
      "file": "drivers/net/ethernet/microsoft/mana/mana_en.c",
      "insertions": 6,
      "deletions": 8
    },
    {
      "file": "include/net/mana/mana.h",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 12,
  "total_deletions": 15,
  "total_changes": 27,
  "parents": [
    "872c00cc2b4beaf521d57a5fb036b719ea908ea1",
    "a68292eb431619a5f8db9d4868346837c5606424"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/ethernet/microsoft/mana/mana_en.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/net/mana/mana.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}