{
  "hash": "4ed28639519c7bad5f518e70b3284c6e0763e650",
  "hash_short": "4ed28639",
  "subject": "fs, elf: drop MAP_FIXED usage from elf_map",
  "body": "Both load_elf_interp and load_elf_binary rely on elf_map to map segments\non a controlled address and they use MAP_FIXED to enforce that.  This is\nhowever dangerous thing prone to silent data corruption which can be\neven exploitable.\n\nLet's take CVE-2017-1000253 as an example.  At the time (before commit\neab09532d400: \"binfmt_elf: use ELF_ET_DYN_BASE only for PIE\")\nELF_ET_DYN_BASE was at TASK_SIZE / 3 * 2 which is not that far away from\nthe stack top on 32b (legacy) memory layout (only 1GB away).  Therefore\nwe could end up mapping over the existing stack with some luck.\n\nThe issue has been fixed since then (a87938b2e246: \"fs/binfmt_elf.c: fix\nbug in loading of PIE binaries\"), ELF_ET_DYN_BASE moved moved much\nfurther from the stack (eab09532d400 and later by c715b72c1ba4: \"mm:\nrevert x86_64 and arm64 ELF_ET_DYN_BASE base changes\") and excessive\nstack consumption early during execve fully stopped by da029c11e6b1\n(\"exec: Limit arg stack to at most 75% of _STK_LIM\").  So we should be\nsafe and any attack should be impractical.  On the other hand this is\njust too subtle assumption so it can break quite easily and hard to\nspot.\n\nI believe that the MAP_FIXED usage in load_elf_binary (et. al) is still\nfundamentally dangerous.  Moreover it shouldn't be even needed.  We are\nat the early process stage and so there shouldn't be unrelated mappings\n(except for stack and loader) existing so mmap for a given address should\nsucceed even without MAP_FIXED.  Something is terribly wrong if this is\nnot the case and we should rather fail than silently corrupt the\nunderlying mapping.\n\nAddress this issue by changing MAP_FIXED to the newly added\nMAP_FIXED_NOREPLACE.  This will mean that mmap will fail if there is an\nexisting mapping clashing with the requested one without clobbering it.\n\n[mhocko@suse.com: fix build]\n[akpm@linux-foundation.org: coding-style fixes]\n[avagin@openvz.org: don't use the same value for MAP_FIXED_NOREPLACE and MAP_SYNC]\n  Link: http://lkml.kernel.org/r/20171218184916.24445-1-avagin@openvz.org\nLink: http://lkml.kernel.org/r/20171213092550.2774-3-mhocko@kernel.org\nSigned-off-by: Michal Hocko <mhocko@suse.com>\nSigned-off-by: Andrei Vagin <avagin@openvz.org>\nSigned-off-by: Michal Hocko <mhocko@suse.com>\nReviewed-by: Khalid Aziz <khalid.aziz@oracle.com>\nAcked-by: Michael Ellerman <mpe@ellerman.id.au>\nAcked-by: Kees Cook <keescook@chromium.org>\nCc: Abdul Haleem <abdhalee@linux.vnet.ibm.com>\nCc: Joel Stanley <joel@jms.id.au>\nCc: Anshuman Khandual <khandual@linux.vnet.ibm.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "fs, elf: drop MAP_FIXED usage from elf_map\n\nBoth load_elf_interp and load_elf_binary rely on elf_map to map segments\non a controlled address and they use MAP_FIXED to enforce that.  This is\nhowever dangerous thing prone to silent data corruption which can be\neven exploitable.\n\nLet's take CVE-2017-1000253 as an example.  At the time (before commit\neab09532d400: \"binfmt_elf: use ELF_ET_DYN_BASE only for PIE\")\nELF_ET_DYN_BASE was at TASK_SIZE / 3 * 2 which is not that far away from\nthe stack top on 32b (legacy) memory layout (only 1GB away).  Therefore\nwe could end up mapping over the existing stack with some luck.\n\nThe issue has been fixed since then (a87938b2e246: \"fs/binfmt_elf.c: fix\nbug in loading of PIE binaries\"), ELF_ET_DYN_BASE moved moved much\nfurther from the stack (eab09532d400 and later by c715b72c1ba4: \"mm:\nrevert x86_64 and arm64 ELF_ET_DYN_BASE base changes\") and excessive\nstack consumption early during execve fully stopped by da029c11e6b1\n(\"exec: Limit arg stack to at most 75% of _STK_LIM\").  So we should be\nsafe and any attack should be impractical.  On the other hand this is\njust too subtle assumption so it can break quite easily and hard to\nspot.\n\nI believe that the MAP_FIXED usage in load_elf_binary (et. al) is still\nfundamentally dangerous.  Moreover it shouldn't be even needed.  We are\nat the early process stage and so there shouldn't be unrelated mappings\n(except for stack and loader) existing so mmap for a given address should\nsucceed even without MAP_FIXED.  Something is terribly wrong if this is\nnot the case and we should rather fail than silently corrupt the\nunderlying mapping.\n\nAddress this issue by changing MAP_FIXED to the newly added\nMAP_FIXED_NOREPLACE.  This will mean that mmap will fail if there is an\nexisting mapping clashing with the requested one without clobbering it.\n\n[mhocko@suse.com: fix build]\n[akpm@linux-foundation.org: coding-style fixes]\n[avagin@openvz.org: don't use the same value for MAP_FIXED_NOREPLACE and MAP_SYNC]\n  Link: http://lkml.kernel.org/r/20171218184916.24445-1-avagin@openvz.org\nLink: http://lkml.kernel.org/r/20171213092550.2774-3-mhocko@kernel.org\nSigned-off-by: Michal Hocko <mhocko@suse.com>\nSigned-off-by: Andrei Vagin <avagin@openvz.org>\nSigned-off-by: Michal Hocko <mhocko@suse.com>\nReviewed-by: Khalid Aziz <khalid.aziz@oracle.com>\nAcked-by: Michael Ellerman <mpe@ellerman.id.au>\nAcked-by: Kees Cook <keescook@chromium.org>\nCc: Abdul Haleem <abdhalee@linux.vnet.ibm.com>\nCc: Joel Stanley <joel@jms.id.au>\nCc: Anshuman Khandual <khandual@linux.vnet.ibm.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Michal Hocko",
  "author_email": "mhocko@suse.com",
  "author_date": "Tue Apr 10 16:36:01 2018 -0700",
  "author_date_iso": "2018-04-10T16:36:01-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Apr 11 10:28:38 2018 -0700",
  "committer_date_iso": "2018-04-11T10:28:38-07:00",
  "files_changed": [
    "fs/binfmt_elf.c",
    "include/uapi/asm-generic/mman-common.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "fs/binfmt_elf.c",
      "insertions": 9,
      "deletions": 4
    },
    {
      "file": "include/uapi/asm-generic/mman-common.h",
      "insertions": 3,
      "deletions": 1
    }
  ],
  "total_insertions": 12,
  "total_deletions": 5,
  "total_changes": 17,
  "parents": [
    "a4ff8e8620d3f4f50ac4b41e8067b7d395056843"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7",
    "v4.18",
    "v4.18-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2017-1000253"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "fs/binfmt_elf.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/asm-generic/mman-common.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}