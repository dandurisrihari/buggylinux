commit 7ce7e984ab2b218d6e92d5165629022fe2daf9ee
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Mon Jan 10 03:15:27 2022 +0900

    kbuild: rename cmd_{bzip2,lzma,lzo,lz4,xzkern,zstd22}
    
    GZIP-compressed files end with 4 byte data that represents the size
    of the original input. The decompressors (the self-extracting kernel)
    exploit it to know the vmlinux size beforehand. To mimic the GZIP's
    trailer, Kbuild provides cmd_{bzip2,lzma,lzo,lz4,xzkern,zstd22}.
    Unfortunately these macros are used everywhere despite the appended
    size data is only useful for the decompressors.
    
    There is no guarantee that such hand-crafted trailers are safely ignored.
    In fact, the kernel refuses compressed initramdfs with the garbage data.
    That is why usr/Makefile overrides size_append to make it no-op.
    
    To limit the use of such broken compressed files, this commit renames
    the existing macros as follows:
    
      cmd_bzip2   --> cmd_bzip2_with_size
      cmd_lzma    --> cmd_lzma_with_size
      cmd_lzo     --> cmd_lzo_with_size
      cmd_lz4     --> cmd_lz4_with_size
      cmd_xzkern  --> cmd_xzkern_with_size
      cmd_zstd22  --> cmd_zstd22_with_size
    
    To keep the decompressors working, I updated the following Makefiles
    accordingly:
    
      arch/arm/boot/compressed/Makefile
      arch/h8300/boot/compressed/Makefile
      arch/mips/boot/compressed/Makefile
      arch/parisc/boot/compressed/Makefile
      arch/s390/boot/compressed/Makefile
      arch/sh/boot/compressed/Makefile
      arch/x86/boot/compressed/Makefile
    
    I reused the current macro names for the normal usecases; they produce
    the compressed data in the proper format.
    
    I did not touch the following:
    
      arch/arc/boot/Makefile
      arch/arm64/boot/Makefile
      arch/csky/boot/Makefile
      arch/mips/boot/Makefile
      arch/riscv/boot/Makefile
      arch/sh/boot/Makefile
      kernel/Makefile
    
    This means those Makefiles will stop appending the size data.
    
    I dropped the 'override size_append' hack from usr/Makefile.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Reviewed-by: Nicolas Schier <n.schier@avm.de>

diff --git a/arch/parisc/boot/compressed/Makefile b/arch/parisc/boot/compressed/Makefile
index bf4f2891d0b7..2640f72d69ce 100644
--- a/arch/parisc/boot/compressed/Makefile
+++ b/arch/parisc/boot/compressed/Makefile
@@ -70,15 +70,15 @@ suffix-$(CONFIG_KERNEL_XZ)  := xz
 $(obj)/vmlinux.bin.gz: $(vmlinux.bin.all-y) FORCE
 	$(call if_changed,gzip)
 $(obj)/vmlinux.bin.bz2: $(vmlinux.bin.all-y) FORCE
-	$(call if_changed,bzip2)
+	$(call if_changed,bzip2_with_size)
 $(obj)/vmlinux.bin.lz4: $(vmlinux.bin.all-y) FORCE
-	$(call if_changed,lz4)
+	$(call if_changed,lz4_with_size)
 $(obj)/vmlinux.bin.lzma: $(vmlinux.bin.all-y) FORCE
-	$(call if_changed,lzma)
+	$(call if_changed,lzma_with_size)
 $(obj)/vmlinux.bin.lzo: $(vmlinux.bin.all-y) FORCE
-	$(call if_changed,lzo)
+	$(call if_changed,lzo_with_size)
 $(obj)/vmlinux.bin.xz: $(vmlinux.bin.all-y) FORCE
-	$(call if_changed,xzkern)
+	$(call if_changed,xzkern_with_size)
 
 LDFLAGS_piggy.o := -r --format binary --oformat $(LD_BFD) -T
 $(obj)/piggy.o: $(obj)/vmlinux.scr $(obj)/vmlinux.bin.$(suffix-y) FORCE