commit 75b3d5dc0846cfa54ea52d7d84215b761ecbf569
Author: Justin Stitt <justinstitt@google.com>
Date:   Wed Sep 13 01:10:24 2023 +0000

    dax: refactor deprecated strncpy
    
    `strncpy` is deprecated for use on NUL-terminated destination strings [1].
    
    We should prefer more robust and less ambiguous string interfaces.
    
    `dax_id->dev_name` is expected to be NUL-terminated and has been zero-allocated.
    
    A suitable replacement is `strscpy` [2] due to the fact that it
    guarantees NUL-termination on the destination buffer. Moreover, due to
    `dax_id` being zero-allocated the padding behavior of `strncpy` is not
    needed and a simple 1:1 replacement of strncpy -> strscpy should
    suffice.
    
    Link: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]
    Link: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]
    Link: https://github.com/KSPP/linux/issues/90
    Cc: linux-hardening@vger.kernel.org
    Signed-off-by: Justin Stitt <justinstitt@google.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Ira Weiny <ira.weiny@intel.com>

diff --git a/drivers/dax/bus.c b/drivers/dax/bus.c
index 0ee96e6fc426..1659b787b65f 100644
--- a/drivers/dax/bus.c
+++ b/drivers/dax/bus.c
@@ -103,7 +103,7 @@ static ssize_t do_id_store(struct device_driver *drv, const char *buf,
 		if (action == ID_ADD) {
 			dax_id = kzalloc(sizeof(*dax_id), GFP_KERNEL);
 			if (dax_id) {
-				strncpy(dax_id->dev_name, buf, DAX_NAME_LEN);
+				strscpy(dax_id->dev_name, buf, DAX_NAME_LEN);
 				list_add(&dax_id->list, &dax_drv->ids);
 			} else
 				rc = -ENOMEM;