commit 09d56393c1d8d55fc8589a15cb7f4a5f1d40a0f2
Author: Ramalingam C <ramalingam.c@intel.com>
Date:   Sat Feb 16 23:06:52 2019 +0530

    drm/i915: hdcp1.4 CP_IRQ handling and SW encryption tracking
    
    "hdcp_encrypted" flag is defined to denote the HDCP1.4 encryption status.
    This SW tracking is used to determine the need for real hdcp1.4 disable
    and hdcp_check_link upon CP_IRQ.
    
    On CP_IRQ we filter the CP_IRQ related to the states like Link failure
    and reauthentication req etc and handle them in hdcp_check_link.
    CP_IRQ corresponding to the authentication msg availability are ignored.
    
    WARN_ON is added for the abrupt stop of HDCP encryption of a port.
    
    v2:
      bool is used in struct for the cleaner coding. [Daniel]
      check_link work_fn is scheduled for cp_irq handling [Daniel]
    v3:
      rebased.
    
    Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Uma Shankar <uma.shankar@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/1550338640-17470-6-git-send-email-ramalingam.c@intel.com

diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index cf709835fb9a..9f73a4239574 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -4780,7 +4780,7 @@ static void intel_dp_check_service_irq(struct intel_dp *intel_dp)
 		intel_dp_handle_test_request(intel_dp);
 
 	if (val & DP_CP_IRQ)
-		intel_hdcp_check_link(intel_dp->attached_connector);
+		intel_hdcp_handle_cp_irq(intel_dp->attached_connector);
 
 	if (val & DP_SINK_SPECIFIC_IRQ)
 		DRM_DEBUG_DRIVER("Sink specific irq unhandled\n");