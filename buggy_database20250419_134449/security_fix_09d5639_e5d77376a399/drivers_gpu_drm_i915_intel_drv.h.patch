commit 09d56393c1d8d55fc8589a15cb7f4a5f1d40a0f2
Author: Ramalingam C <ramalingam.c@intel.com>
Date:   Sat Feb 16 23:06:52 2019 +0530

    drm/i915: hdcp1.4 CP_IRQ handling and SW encryption tracking
    
    "hdcp_encrypted" flag is defined to denote the HDCP1.4 encryption status.
    This SW tracking is used to determine the need for real hdcp1.4 disable
    and hdcp_check_link upon CP_IRQ.
    
    On CP_IRQ we filter the CP_IRQ related to the states like Link failure
    and reauthentication req etc and handle them in hdcp_check_link.
    CP_IRQ corresponding to the authentication msg availability are ignored.
    
    WARN_ON is added for the abrupt stop of HDCP encryption of a port.
    
    v2:
      bool is used in struct for the cleaner coding. [Daniel]
      check_link work_fn is scheduled for cp_irq handling [Daniel]
    v3:
      rebased.
    
    Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Uma Shankar <uma.shankar@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/1550338640-17470-6-git-send-email-ramalingam.c@intel.com

diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 54ea4b5b2073..aaddde44b270 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -409,6 +409,9 @@ struct intel_hdcp {
 	struct delayed_work check_work;
 	struct work_struct prop_work;
 
+	/* HDCP1.4 Encryption status */
+	bool hdcp_encrypted;
+
 	/* HDCP2.2 related definitions */
 	/* Flag indicates whether this connector supports HDCP2.2 or not. */
 	bool hdcp2_supported;
@@ -2090,12 +2093,12 @@ int intel_hdcp_init(struct intel_connector *connector,
 		    const struct intel_hdcp_shim *hdcp_shim);
 int intel_hdcp_enable(struct intel_connector *connector);
 int intel_hdcp_disable(struct intel_connector *connector);
-int intel_hdcp_check_link(struct intel_connector *connector);
 bool is_hdcp_supported(struct drm_i915_private *dev_priv, enum port port);
 bool intel_hdcp_capable(struct intel_connector *connector);
 void intel_hdcp_component_init(struct drm_i915_private *dev_priv);
 void intel_hdcp_component_fini(struct drm_i915_private *dev_priv);
 void intel_hdcp_cleanup(struct intel_connector *connector);
+void intel_hdcp_handle_cp_irq(struct intel_connector *connector);
 
 /* intel_psr.c */
 #define CAN_PSR(dev_priv) (HAS_PSR(dev_priv) && dev_priv->psr.sink_support)