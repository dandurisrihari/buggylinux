commit 9055aac76589c73fce8edc6abba9d214a4e983f2
Author: Ramalingam C <ramalingam.c@intel.com>
Date:   Sat Feb 16 23:06:51 2019 +0530

    drm/i915: MEI interface implementation
    
    Defining the mei-i915 interface functions and initialization of
    the interface.
    
    v2:
      Adjust to the new interface changes. [Tomas]
      Added further debug logs for the failures at MEI i/f.
      port in hdcp_port data is equipped to handle -ve values.
    v3:
      mei comp is matched for global i915 comp master. [Daniel]
      In hdcp_shim hdcp_protocol() is replaced with const variable. [Daniel]
      mei wrappers are adjusted as per the i/f change [Daniel]
    v4:
      port initialization is done only at hdcp2_init only [Danvet]
    v5:
      I915 registers a subcomponent to be matched with mei_hdcp [Daniel]
    v6:
      HDCP_disable for all connectors incase of comp_unbind.
      Tear down HDCP comp interface at i915_unload [Daniel]
    v7:
      Component init and fini are moved out of connector ops [Daniel]
      hdcp_disable is not called from unbind. [Daniel]
    v8:
      subcomponent name is dropped as it is already merged.
    
    Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> [v11]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/1550338640-17470-5-git-send-email-ramalingam.c@intel.com

diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 56918161435d..54ea4b5b2073 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -41,6 +41,7 @@
 #include <drm/drm_rect.h>
 #include <drm/drm_vblank.h>
 #include <drm/drm_atomic.h>
+#include <drm/i915_mei_hdcp_interface.h>
 #include <media/cec-notifier.h>
 
 struct drm_printer;
@@ -395,6 +396,9 @@ struct intel_hdcp_shim {
 	/* Detects panel's hdcp capability. This is optional for HDMI. */
 	int (*hdcp_capable)(struct intel_digital_port *intel_dig_port,
 			    bool *hdcp_capable);
+
+	/* HDCP adaptation(DP/HDMI) required on the port */
+	enum hdcp_wired_protocol protocol;
 };
 
 struct intel_hdcp {
@@ -415,6 +419,7 @@ struct intel_hdcp {
 	 * content can flow only through a link protected by HDCP2.2.
 	 */
 	u8 content_type;
+	struct hdcp_port_data port_data;
 };
 
 struct intel_connector {
@@ -2088,6 +2093,9 @@ int intel_hdcp_disable(struct intel_connector *connector);
 int intel_hdcp_check_link(struct intel_connector *connector);
 bool is_hdcp_supported(struct drm_i915_private *dev_priv, enum port port);
 bool intel_hdcp_capable(struct intel_connector *connector);
+void intel_hdcp_component_init(struct drm_i915_private *dev_priv);
+void intel_hdcp_component_fini(struct drm_i915_private *dev_priv);
+void intel_hdcp_cleanup(struct intel_connector *connector);
 
 /* intel_psr.c */
 #define CAN_PSR(dev_priv) (HAS_PSR(dev_priv) && dev_priv->psr.sink_support)