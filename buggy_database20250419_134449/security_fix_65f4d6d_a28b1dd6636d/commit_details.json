{
  "hash": "65f4d6d0f80b3c55830ec5735194703fa2909ba1",
  "hash_short": "65f4d6d0",
  "subject": "Merge branch 'x86-pti-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip",
  "body": "Pull x86 pti fixes from Thomas Gleixner:\n \"A set of updates for the x86/pti related code:\n\n   - Preserve r8-r11 in int $0x80. r8-r11 need to be preserved, but the\n     int$80 entry code removed that quite some time ago. Make it correct\n     again.\n\n   - A set of fixes for the Global Bit work which went into 4.17 and\n     caused a bunch of interesting regressions:\n\n      - Triggering a BUG in the page attribute code due to a missing\n        check for early boot stage\n\n      - Warnings in the page attribute code about holes in the kernel\n        text mapping which are caused by the freeing of the init code.\n        Handle such holes gracefully.\n\n      - Reduce the amount of kernel memory which is set global to the\n        actual text and do not incidentally overlap with data.\n\n      - Disable the global bit when RANDSTRUCT is enabled as it\n        partially defeats the hardening.\n\n      - Make the page protection setup correct for vma->page_prot\n        population again. The adjustment of the protections fell through\n        the crack during the Global bit rework and triggers warnings on\n        machines which do not support certain features, e.g. NX\"\n\n* 'x86-pti-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/entry/64/compat: Preserve r8-r11 in int $0x80\n  x86/pti: Filter at vma->vm_page_prot population\n  x86/pti: Disallow global kernel text with RANDSTRUCT\n  x86/pti: Reduce amount of kernel text allowed to be Global\n  x86/pti: Fix boot warning from Global-bit setting\n  x86/pti: Fix boot problems from Global-bit setting",
  "full_message": "Merge branch 'x86-pti-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 pti fixes from Thomas Gleixner:\n \"A set of updates for the x86/pti related code:\n\n   - Preserve r8-r11 in int $0x80. r8-r11 need to be preserved, but the\n     int$80 entry code removed that quite some time ago. Make it correct\n     again.\n\n   - A set of fixes for the Global Bit work which went into 4.17 and\n     caused a bunch of interesting regressions:\n\n      - Triggering a BUG in the page attribute code due to a missing\n        check for early boot stage\n\n      - Warnings in the page attribute code about holes in the kernel\n        text mapping which are caused by the freeing of the init code.\n        Handle such holes gracefully.\n\n      - Reduce the amount of kernel memory which is set global to the\n        actual text and do not incidentally overlap with data.\n\n      - Disable the global bit when RANDSTRUCT is enabled as it\n        partially defeats the hardening.\n\n      - Make the page protection setup correct for vma->page_prot\n        population again. The adjustment of the protections fell through\n        the crack during the Global bit rework and triggers warnings on\n        machines which do not support certain features, e.g. NX\"\n\n* 'x86-pti-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/entry/64/compat: Preserve r8-r11 in int $0x80\n  x86/pti: Filter at vma->vm_page_prot population\n  x86/pti: Disallow global kernel text with RANDSTRUCT\n  x86/pti: Reduce amount of kernel text allowed to be Global\n  x86/pti: Fix boot warning from Global-bit setting\n  x86/pti: Fix boot problems from Global-bit setting",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Sun Apr 29 09:36:22 2018 -0700",
  "author_date_iso": "2018-04-29T09:36:22-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Sun Apr 29 09:36:22 2018 -0700",
  "committer_date_iso": "2018-04-29T09:36:22-07:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "arch/x86/Kconfig",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/x86/entry/entry_64_compat.S",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "arch/x86/include/asm/pgtable.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/x86/mm/pageattr.c",
      "insertions": 32,
      "deletions": 12
    },
    {
      "file": "arch/x86/mm/pti.c",
      "insertions": 23,
      "deletions": 3
    },
    {
      "file": "mm/mmap.c",
      "insertions": 10,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/x86/test_syscall_vdso.c",
      "insertions": 21,
      "deletions": 14
    }
  ],
  "total_insertions": 99,
  "total_deletions": 34,
  "total_changes": 133,
  "parents": [
    "810fb07a9b504ac22b95899cf8b39d25a5f3e5c5",
    "8bb2610bc4967f19672444a7b0407367f1540028"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.17",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7",
    "v4.18",
    "v4.18-rc1",
    "v4.18-rc2",
    "v4.18-rc3"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": []
}