{
  "hash": "9e7fef9521e73ca8afd7da9e58c14654b02dfad8",
  "hash_short": "9e7fef95",
  "subject": "net: vmxnet3: fix possible use-after-free bugs in vmxnet3_rq_alloc_rx_buf()",
  "body": "In vmxnet3_rq_alloc_rx_buf(), when dma_map_single() fails, rbi->skb is\nfreed immediately. Similarly, in another branch, when dma_map_page() fails,\nrbi->page is also freed. In the two cases, vmxnet3_rq_alloc_rx_buf()\nreturns an error to its callers vmxnet3_rq_init() -> vmxnet3_rq_init_all()\n-> vmxnet3_activate_dev(). Then vmxnet3_activate_dev() calls\nvmxnet3_rq_cleanup_all() in error handling code, and rbi->skb or rbi->page\nare freed again in vmxnet3_rq_cleanup_all(), causing use-after-free bugs.\n\nTo fix these possible bugs, rbi->skb and rbi->page should be cleared after\nthey are freed.\n\nThe error log in our fault-injection testing is shown as follows:\n\n[   14.319016] BUG: KASAN: use-after-free in consume_skb+0x2f/0x150\n...\n[   14.321586] Call Trace:\n...\n[   14.325357]  consume_skb+0x2f/0x150\n[   14.325671]  vmxnet3_rq_cleanup_all+0x33a/0x4e0 [vmxnet3]\n[   14.326150]  vmxnet3_activate_dev+0xb9d/0x2ca0 [vmxnet3]\n[   14.326616]  vmxnet3_open+0x387/0x470 [vmxnet3]\n...\n[   14.361675] Allocated by task 351:\n...\n[   14.362688]  __netdev_alloc_skb+0x1b3/0x6f0\n[   14.362960]  vmxnet3_rq_alloc_rx_buf+0x1b0/0x8d0 [vmxnet3]\n[   14.363317]  vmxnet3_activate_dev+0x3e3/0x2ca0 [vmxnet3]\n[   14.363661]  vmxnet3_open+0x387/0x470 [vmxnet3]\n...\n[   14.367309]\n[   14.367412] Freed by task 351:\n...\n[   14.368932]  __dev_kfree_skb_any+0xd2/0xe0\n[   14.369193]  vmxnet3_rq_alloc_rx_buf+0x71e/0x8d0 [vmxnet3]\n[   14.369544]  vmxnet3_activate_dev+0x3e3/0x2ca0 [vmxnet3]\n[   14.369883]  vmxnet3_open+0x387/0x470 [vmxnet3]\n[   14.370174]  __dev_open+0x28a/0x420\n[   14.370399]  __dev_change_flags+0x192/0x590\n[   14.370667]  dev_change_flags+0x7a/0x180\n[   14.370919]  do_setlink+0xb28/0x3570\n[   14.371150]  rtnl_newlink+0x1160/0x1740\n[   14.371399]  rtnetlink_rcv_msg+0x5bf/0xa50\n[   14.371661]  netlink_rcv_skb+0x1cd/0x3e0\n[   14.371913]  netlink_unicast+0x5dc/0x840\n[   14.372169]  netlink_sendmsg+0x856/0xc40\n[   14.372420]  ____sys_sendmsg+0x8a7/0x8d0\n[   14.372673]  __sys_sendmsg+0x1c2/0x270\n[   14.372914]  do_syscall_64+0x41/0x90\n[   14.373145]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n...\n\nFixes: 5738a09d58d5a (\"vmxnet3: fix checks for dma mapping errors\")\nReported-by: TOTE Robot <oslab@tsinghua.edu.cn>\nSigned-off-by: Zixuan Fu <r33s3n6@gmail.com>\nLink: https://lore.kernel.org/r/20220514050656.2636588-1-r33s3n6@gmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "full_message": "net: vmxnet3: fix possible use-after-free bugs in vmxnet3_rq_alloc_rx_buf()\n\nIn vmxnet3_rq_alloc_rx_buf(), when dma_map_single() fails, rbi->skb is\nfreed immediately. Similarly, in another branch, when dma_map_page() fails,\nrbi->page is also freed. In the two cases, vmxnet3_rq_alloc_rx_buf()\nreturns an error to its callers vmxnet3_rq_init() -> vmxnet3_rq_init_all()\n-> vmxnet3_activate_dev(). Then vmxnet3_activate_dev() calls\nvmxnet3_rq_cleanup_all() in error handling code, and rbi->skb or rbi->page\nare freed again in vmxnet3_rq_cleanup_all(), causing use-after-free bugs.\n\nTo fix these possible bugs, rbi->skb and rbi->page should be cleared after\nthey are freed.\n\nThe error log in our fault-injection testing is shown as follows:\n\n[   14.319016] BUG: KASAN: use-after-free in consume_skb+0x2f/0x150\n...\n[   14.321586] Call Trace:\n...\n[   14.325357]  consume_skb+0x2f/0x150\n[   14.325671]  vmxnet3_rq_cleanup_all+0x33a/0x4e0 [vmxnet3]\n[   14.326150]  vmxnet3_activate_dev+0xb9d/0x2ca0 [vmxnet3]\n[   14.326616]  vmxnet3_open+0x387/0x470 [vmxnet3]\n...\n[   14.361675] Allocated by task 351:\n...\n[   14.362688]  __netdev_alloc_skb+0x1b3/0x6f0\n[   14.362960]  vmxnet3_rq_alloc_rx_buf+0x1b0/0x8d0 [vmxnet3]\n[   14.363317]  vmxnet3_activate_dev+0x3e3/0x2ca0 [vmxnet3]\n[   14.363661]  vmxnet3_open+0x387/0x470 [vmxnet3]\n...\n[   14.367309]\n[   14.367412] Freed by task 351:\n...\n[   14.368932]  __dev_kfree_skb_any+0xd2/0xe0\n[   14.369193]  vmxnet3_rq_alloc_rx_buf+0x71e/0x8d0 [vmxnet3]\n[   14.369544]  vmxnet3_activate_dev+0x3e3/0x2ca0 [vmxnet3]\n[   14.369883]  vmxnet3_open+0x387/0x470 [vmxnet3]\n[   14.370174]  __dev_open+0x28a/0x420\n[   14.370399]  __dev_change_flags+0x192/0x590\n[   14.370667]  dev_change_flags+0x7a/0x180\n[   14.370919]  do_setlink+0xb28/0x3570\n[   14.371150]  rtnl_newlink+0x1160/0x1740\n[   14.371399]  rtnetlink_rcv_msg+0x5bf/0xa50\n[   14.371661]  netlink_rcv_skb+0x1cd/0x3e0\n[   14.371913]  netlink_unicast+0x5dc/0x840\n[   14.372169]  netlink_sendmsg+0x856/0xc40\n[   14.372420]  ____sys_sendmsg+0x8a7/0x8d0\n[   14.372673]  __sys_sendmsg+0x1c2/0x270\n[   14.372914]  do_syscall_64+0x41/0x90\n[   14.373145]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n...\n\nFixes: 5738a09d58d5a (\"vmxnet3: fix checks for dma mapping errors\")\nReported-by: TOTE Robot <oslab@tsinghua.edu.cn>\nSigned-off-by: Zixuan Fu <r33s3n6@gmail.com>\nLink: https://lore.kernel.org/r/20220514050656.2636588-1-r33s3n6@gmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "author_name": "Zixuan Fu",
  "author_email": "r33s3n6@gmail.com",
  "author_date": "Sat May 14 13:06:56 2022 +0800",
  "author_date_iso": "2022-05-14T13:06:56+08:00",
  "committer_name": "Paolo Abeni",
  "committer_email": "pabeni@redhat.com",
  "committer_date": "Tue May 17 12:02:27 2022 +0200",
  "committer_date_iso": "2022-05-17T12:02:27+02:00",
  "files_changed": [
    "drivers/net/vmxnet3/vmxnet3_drv.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/vmxnet3/vmxnet3_drv.c",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 2,
  "total_deletions": 0,
  "total_changes": 2,
  "parents": [
    "4d33ab08c0af140752a46f227a6bf97dab1e17b4"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/vmxnet3/vmxnet3_drv.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}