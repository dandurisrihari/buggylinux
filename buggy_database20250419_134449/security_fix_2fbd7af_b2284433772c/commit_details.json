{
  "hash": "2fbd7af5af8665d18bcefae3e9700be07e22b681",
  "hash_short": "2fbd7af5",
  "subject": "x86/syscall: Sanitize syscall table de-references under speculation",
  "body": "The syscall table base is a user controlled function pointer in kernel\nspace. Use array_index_nospec() to prevent any out of bounds speculation.\n\nWhile retpoline prevents speculating into a userspace directed target it\ndoes not stop the pointer de-reference, the concern is leaking memory\nrelative to the syscall table base, by observing instruction cache\nbehavior.\n\nReported-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dan Williams <dan.j.williams@intel.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: linux-arch@vger.kernel.org\nCc: kernel-hardening@lists.openwall.com\nCc: gregkh@linuxfoundation.org\nCc: Andy Lutomirski <luto@kernel.org>\nCc: alan@linux.intel.com\nLink: https://lkml.kernel.org/r/151727417984.33451.1216731042505722161.stgit@dwillia2-desk3.amr.corp.intel.com",
  "full_message": "x86/syscall: Sanitize syscall table de-references under speculation\n\nThe syscall table base is a user controlled function pointer in kernel\nspace. Use array_index_nospec() to prevent any out of bounds speculation.\n\nWhile retpoline prevents speculating into a userspace directed target it\ndoes not stop the pointer de-reference, the concern is leaking memory\nrelative to the syscall table base, by observing instruction cache\nbehavior.\n\nReported-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Dan Williams <dan.j.williams@intel.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: linux-arch@vger.kernel.org\nCc: kernel-hardening@lists.openwall.com\nCc: gregkh@linuxfoundation.org\nCc: Andy Lutomirski <luto@kernel.org>\nCc: alan@linux.intel.com\nLink: https://lkml.kernel.org/r/151727417984.33451.1216731042505722161.stgit@dwillia2-desk3.amr.corp.intel.com",
  "author_name": "Dan Williams",
  "author_email": "dan.j.williams@intel.com",
  "author_date": "Mon Jan 29 17:02:59 2018 -0800",
  "author_date_iso": "2018-01-29T17:02:59-08:00",
  "committer_name": "Thomas Gleixner",
  "committer_email": "tglx@linutronix.de",
  "committer_date": "Tue Jan 30 21:54:31 2018 +0100",
  "committer_date_iso": "2018-01-30T21:54:31+01:00",
  "files_changed": [
    "arch/x86/entry/common.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/entry/common.c",
      "insertions": 4,
      "deletions": 1
    }
  ],
  "total_insertions": 4,
  "total_deletions": 1,
  "total_changes": 5,
  "parents": [
    "c7f631cb07e7da06ac1d231ca178452339e32a94"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc1",
    "v4.16-rc2",
    "v4.16-rc3",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening",
      "Sanitize"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/entry/common.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}