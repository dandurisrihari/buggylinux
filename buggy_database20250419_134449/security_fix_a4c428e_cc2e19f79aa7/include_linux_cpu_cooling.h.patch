commit a4c428e523490bf53e9c4ba2d809130c58c06ac7
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Dec 19 23:53:16 2019 +0100

    thermal/drivers/cpu_cooling: Introduce the cpu idle cooling driver
    
    The cpu idle cooling device offers a new method to cool down a CPU by
    injecting idle cycles at runtime.
    
    It has some similarities with the intel power clamp driver but it is
    actually designed to be more generic and relying on the idle injection
    powercap framework.
    
    The idle injection duration is fixed while the running duration is
    variable. That allows to have control on the device reactivity for the
    user experience.
    
    An idle state powering down the CPU or the cluster will allow to drop
    the static leakage, thus restoring the heat capacity of the SoC. It
    can be set with a trip point between the hot and the critical points,
    giving the opportunity to prevent a hard reset of the system when the
    cpufreq cooling fails to cool down the CPU.
    
    With more sophisticated boards having a per core sensor, the idle
    cooling device allows to cool down a single core without throttling
    the compute capacity of several cpus belonging to the same clock line,
    so it could be used in collaboration with the cpufreq cooling device.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Link: https://lore.kernel.org/r/20191219225317.17158-2-daniel.lezcano@linaro.org

diff --git a/include/linux/cpu_cooling.h b/include/linux/cpu_cooling.h
index 3cdd85f987d7..65501d8f9778 100644
--- a/include/linux/cpu_cooling.h
+++ b/include/linux/cpu_cooling.h
@@ -60,4 +60,22 @@ of_cpufreq_cooling_register(struct cpufreq_policy *policy)
 }
 #endif /* CONFIG_CPU_FREQ_THERMAL */
 
+struct cpuidle_driver;
+
+#ifdef CONFIG_CPU_IDLE_THERMAL
+int cpuidle_cooling_register(struct cpuidle_driver *drv);
+int cpuidle_of_cooling_register(struct device_node *np,
+				struct cpuidle_driver *drv);
+#else /* CONFIG_CPU_IDLE_THERMAL */
+static inline int cpuidle_cooling_register(struct cpuidle_driver *drv)
+{
+	return 0;
+}
+static inline int cpuidle_of_cooling_register(struct device_node *np,
+					      struct cpuidle_driver *drv)
+{
+	return 0;
+}
+#endif /* CONFIG_CPU_IDLE_THERMAL */
+
 #endif /* __CPU_COOLING_H__ */