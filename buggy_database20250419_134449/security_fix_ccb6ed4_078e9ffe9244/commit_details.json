{
  "hash": "ccb6ed426f10ac4f742efa7d897c266aa10ac64a",
  "hash_short": "ccb6ed42",
  "subject": "net: mscc: ocelot: add port mirroring support using tc-matchall",
  "body": "Ocelot switches perform port-based ingress mirroring if\nANA:PORT:PORT_CFG field SRC_MIRROR_ENA is set, and egress mirroring if\nthe port is in ANA:ANA:EMIRRORPORTS.\n\nBoth ingress-mirrored and egress-mirrored frames are copied to the port\nmask from ANA:ANA:MIRRORPORTS.\n\nSo the choice of limiting to a single mirror port via ocelot_mirror_get()\nand ocelot_mirror_put() may seem bizarre, but the hardware model doesn't\nmap very well to the user space model. If the user wants to mirror the\ningress of swp1 towards swp2 and the ingress of swp3 towards swp4, we'd\nhave to program ANA:ANA:MIRRORPORTS with BIT(2) | BIT(4), and that would\nmake swp1 be mirrored towards swp4 too, and swp3 towards swp2. But there\nare no tc-matchall rules to describe those actions.\n\nNow, we could offload a matchall rule with multiple mirred actions, one\nper desired mirror port, and force the user to stick to the multi-action\nrule format for subsequent matchall filters. But both DSA and ocelot\nhave the flow_offload_has_one_action() check for the matchall offload,\nplus the fact that it will get cumbersome to cross-check matchall\nmirrors with flower mirrors (which will be added in the next patch).\n\nAs a result, we limit the configuration to a single mirror port, with\nthe possibility of lifting the restriction in the future.\n\nFrames injected from the CPU don't get egress-mirrored, since they are\nsent with the BYPASS bit in the injection frame header, and this\nbypasses the analyzer module (effectively also the mirroring logic).\nI don't know what to do/say about this.\n\nFunctionality was tested with:\n\ntc qdisc add dev swp3 clsact\ntc filter add dev swp3 ingress \\\n\tmatchall skip_sw \\\n\taction mirred egress mirror dev swp1\n\nand pinging through swp3, while seeing that the ICMP replies are\nmirrored towards swp1.\n\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "net: mscc: ocelot: add port mirroring support using tc-matchall\n\nOcelot switches perform port-based ingress mirroring if\nANA:PORT:PORT_CFG field SRC_MIRROR_ENA is set, and egress mirroring if\nthe port is in ANA:ANA:EMIRRORPORTS.\n\nBoth ingress-mirrored and egress-mirrored frames are copied to the port\nmask from ANA:ANA:MIRRORPORTS.\n\nSo the choice of limiting to a single mirror port via ocelot_mirror_get()\nand ocelot_mirror_put() may seem bizarre, but the hardware model doesn't\nmap very well to the user space model. If the user wants to mirror the\ningress of swp1 towards swp2 and the ingress of swp3 towards swp4, we'd\nhave to program ANA:ANA:MIRRORPORTS with BIT(2) | BIT(4), and that would\nmake swp1 be mirrored towards swp4 too, and swp3 towards swp2. But there\nare no tc-matchall rules to describe those actions.\n\nNow, we could offload a matchall rule with multiple mirred actions, one\nper desired mirror port, and force the user to stick to the multi-action\nrule format for subsequent matchall filters. But both DSA and ocelot\nhave the flow_offload_has_one_action() check for the matchall offload,\nplus the fact that it will get cumbersome to cross-check matchall\nmirrors with flower mirrors (which will be added in the next patch).\n\nAs a result, we limit the configuration to a single mirror port, with\nthe possibility of lifting the restriction in the future.\n\nFrames injected from the CPU don't get egress-mirrored, since they are\nsent with the BYPASS bit in the injection frame header, and this\nbypasses the analyzer module (effectively also the mirroring logic).\nI don't know what to do/say about this.\n\nFunctionality was tested with:\n\ntc qdisc add dev swp3 clsact\ntc filter add dev swp3 ingress \\\n\tmatchall skip_sw \\\n\taction mirred egress mirror dev swp1\n\nand pinging through swp3, while seeing that the ICMP replies are\nmirrored towards swp1.\n\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Vladimir Oltean",
  "author_email": "vladimir.oltean@nxp.com",
  "author_date": "Wed Mar 16 22:41:40 2022 +0200",
  "author_date_iso": "2022-03-16T22:41:40+02:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Thu Mar 17 17:42:46 2022 -0700",
  "committer_date_iso": "2022-03-17T17:42:46-07:00",
  "files_changed": [
    "drivers/net/ethernet/mscc/ocelot.c",
    "drivers/net/ethernet/mscc/ocelot.h",
    "drivers/net/ethernet/mscc/ocelot_net.c",
    "include/soc/mscc/ocelot.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "drivers/net/ethernet/mscc/ocelot.c",
      "insertions": 76,
      "deletions": 0
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot_net.c",
      "insertions": 72,
      "deletions": 1
    },
    {
      "file": "include/soc/mscc/ocelot.h",
      "insertions": 9,
      "deletions": 0
    }
  ],
  "total_insertions": 159,
  "total_deletions": 2,
  "total_changes": 161,
  "parents": [
    "4fa72108029c090d581fdb2d7ce267ef6cb8acdd"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection",
      "BYPASS"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/ethernet/mscc/ocelot.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/net/ethernet/mscc/ocelot_net.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/soc/mscc/ocelot.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}