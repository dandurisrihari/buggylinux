commit 2a5f091ce1c9222fc9f98374d92db9539e6004ae
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Feb 9 14:07:52 2024 -0800

    KVM: x86: Open code all direct reads to guest DR6 and DR7
    
    Bite the bullet, and open code all direct reads of DR6 and DR7.  KVM
    currently has a mix of open coded accesses and calls to kvm_get_dr(),
    which is confusing and ugly because there's no rhyme or reason as to why
    any particular chunk of code uses kvm_get_dr().
    
    The obvious alternative is to force all accesses through kvm_get_dr(),
    but it's not at all clear that doing so would be a net positive, e.g. even
    if KVM ends up wanting/needing to force all reads through a common helper,
    e.g. to play caching games, the cost of reverting this change is likely
    lower than the ongoing cost of maintaining weird, arbitrary code.
    
    No functional change intended.
    
    Cc: Mathias Krause <minipli@grsecurity.net>
    Reviewed-by: Mathias Krause <minipli@grsecurity.net>
    Link: https://lore.kernel.org/r/20240209220752.388160-3-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index b195eb21639c..f97e443ce853 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -5514,7 +5514,7 @@ static void kvm_vcpu_ioctl_x86_get_debugregs(struct kvm_vcpu *vcpu,
 	for (i = 0; i < ARRAY_SIZE(vcpu->arch.db); i++)
 		dbgregs->db[i] = vcpu->arch.db[i];
 
-	dbgregs->dr6 = kvm_get_dr(vcpu, 6);
+	dbgregs->dr6 = vcpu->arch.dr6;
 	dbgregs->dr7 = vcpu->arch.dr7;
 }