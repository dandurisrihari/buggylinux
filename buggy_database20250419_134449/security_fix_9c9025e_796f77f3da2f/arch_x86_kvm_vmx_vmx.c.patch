commit 9c9025ea003a03f967affd690f39b4ef3452c0f5
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jan 9 17:27:00 2024 -0800

    KVM: x86: Plumb "force_immediate_exit" into kvm_entry() tracepoint
    
    Annotate the kvm_entry() tracepoint with "immediate exit" when KVM is
    forcing a VM-Exit immediately after VM-Enter, e.g. when KVM wants to
    inject an event but needs to first complete some other operation.
    Knowing that KVM is (or isn't) forcing an exit is useful information when
    debugging issues related to event injection.
    
    Suggested-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20240110012705.506918-2-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>

diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index aa47433d0c9b..e3653d11f001 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -7265,7 +7265,7 @@ static noinstr void vmx_vcpu_enter_exit(struct kvm_vcpu *vcpu,
 	guest_state_exit_irqoff();
 }
 
-static fastpath_t vmx_vcpu_run(struct kvm_vcpu *vcpu)
+static fastpath_t vmx_vcpu_run(struct kvm_vcpu *vcpu, bool force_immediate_exit)
 {
 	struct vcpu_vmx *vmx = to_vmx(vcpu);
 	unsigned long cr3, cr4;
@@ -7292,7 +7292,7 @@ static fastpath_t vmx_vcpu_run(struct kvm_vcpu *vcpu)
 		return EXIT_FASTPATH_NONE;
 	}
 
-	trace_kvm_entry(vcpu);
+	trace_kvm_entry(vcpu, force_immediate_exit);
 
 	if (vmx->ple_window_dirty) {
 		vmx->ple_window_dirty = false;