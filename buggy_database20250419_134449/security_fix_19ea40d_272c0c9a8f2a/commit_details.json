{
  "hash": "19ea40dddf1833db868533958ca066f368862211",
  "hash_short": "19ea40dd",
  "subject": "btrfs: unlock newly allocated extent buffer after error",
  "body": "[BUG]\nThere is a bug report that injected ENOMEM error could leave a tree\nblock locked while we return to user-space:\n\n  BTRFS info (device loop0): enabling ssd optimizations\n  FAULT_INJECTION: forcing a failure.\n  name failslab, interval 1, probability 0, space 0, times 0\n  CPU: 0 PID: 7579 Comm: syz-executor Not tainted 5.15.0-rc1 #16\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n  rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014\n  Call Trace:\n   __dump_stack lib/dump_stack.c:88 [inline]\n   dump_stack_lvl+0x8d/0xcf lib/dump_stack.c:106\n   fail_dump lib/fault-inject.c:52 [inline]\n   should_fail+0x13c/0x160 lib/fault-inject.c:146\n   should_failslab+0x5/0x10 mm/slab_common.c:1328\n   slab_pre_alloc_hook.constprop.99+0x4e/0xc0 mm/slab.h:494\n   slab_alloc_node mm/slub.c:3120 [inline]\n   slab_alloc mm/slub.c:3214 [inline]\n   kmem_cache_alloc+0x44/0x280 mm/slub.c:3219\n   btrfs_alloc_delayed_extent_op fs/btrfs/delayed-ref.h:299 [inline]\n   btrfs_alloc_tree_block+0x38c/0x670 fs/btrfs/extent-tree.c:4833\n   __btrfs_cow_block+0x16f/0x7d0 fs/btrfs/ctree.c:415\n   btrfs_cow_block+0x12a/0x300 fs/btrfs/ctree.c:570\n   btrfs_search_slot+0x6b0/0xee0 fs/btrfs/ctree.c:1768\n   btrfs_insert_empty_items+0x80/0xf0 fs/btrfs/ctree.c:3905\n   btrfs_new_inode+0x311/0xa60 fs/btrfs/inode.c:6530\n   btrfs_create+0x12b/0x270 fs/btrfs/inode.c:6783\n   lookup_open+0x660/0x780 fs/namei.c:3282\n   open_last_lookups fs/namei.c:3352 [inline]\n   path_openat+0x465/0xe20 fs/namei.c:3557\n   do_filp_open+0xe3/0x170 fs/namei.c:3588\n   do_sys_openat2+0x357/0x4a0 fs/open.c:1200\n   do_sys_open+0x87/0xd0 fs/open.c:1216\n   do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n   do_syscall_64+0x34/0xb0 arch/x86/entry/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n  RIP: 0033:0x46ae99\n  Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48\n  89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d\n  01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\n  RSP: 002b:00007f46711b9c48 EFLAGS: 00000246 ORIG_RAX: 0000000000000055\n  RAX: ffffffffffffffda RBX: 000000000078c0a0 RCX: 000000000046ae99\n  RDX: 0000000000000000 RSI: 00000000000000a1 RDI: 0000000020005800\n  RBP: 00007f46711b9c80 R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000017\n  R13: 0000000000000000 R14: 000000000078c0a0 R15: 00007ffc129da6e0\n\n  ================================================\n  WARNING: lock held when returning to user space!\n  5.15.0-rc1 #16 Not tainted\n  ------------------------------------------------\n  syz-executor/7579 is leaving the kernel with locks still held!\n  1 lock held by syz-executor/7579:\n   #0: ffff888104b73da8 (btrfs-tree-01/1){+.+.}-{3:3}, at:\n  __btrfs_tree_lock+0x2e/0x1a0 fs/btrfs/locking.c:112\n\n[CAUSE]\nIn btrfs_alloc_tree_block(), after btrfs_init_new_buffer(), the new\nextent buffer @buf is locked, but if later operations like adding\ndelayed tree ref fail, we just free @buf without unlocking it,\nresulting above warning.\n\n[FIX]\nUnlock @buf in out_free_buf: label.\n\nReported-by: Hao Sun <sunhao.th@gmail.com>\nLink: https://lore.kernel.org/linux-btrfs/CACkBjsZ9O6Zr0KK1yGn=1rQi6Crh1yeCRdTSBxx9R99L4xdn-Q@mail.gmail.com/\nCC: stable@vger.kernel.org # 5.4+\nSigned-off-by: Qu Wenruo <wqu@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "full_message": "btrfs: unlock newly allocated extent buffer after error\n\n[BUG]\nThere is a bug report that injected ENOMEM error could leave a tree\nblock locked while we return to user-space:\n\n  BTRFS info (device loop0): enabling ssd optimizations\n  FAULT_INJECTION: forcing a failure.\n  name failslab, interval 1, probability 0, space 0, times 0\n  CPU: 0 PID: 7579 Comm: syz-executor Not tainted 5.15.0-rc1 #16\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n  rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014\n  Call Trace:\n   __dump_stack lib/dump_stack.c:88 [inline]\n   dump_stack_lvl+0x8d/0xcf lib/dump_stack.c:106\n   fail_dump lib/fault-inject.c:52 [inline]\n   should_fail+0x13c/0x160 lib/fault-inject.c:146\n   should_failslab+0x5/0x10 mm/slab_common.c:1328\n   slab_pre_alloc_hook.constprop.99+0x4e/0xc0 mm/slab.h:494\n   slab_alloc_node mm/slub.c:3120 [inline]\n   slab_alloc mm/slub.c:3214 [inline]\n   kmem_cache_alloc+0x44/0x280 mm/slub.c:3219\n   btrfs_alloc_delayed_extent_op fs/btrfs/delayed-ref.h:299 [inline]\n   btrfs_alloc_tree_block+0x38c/0x670 fs/btrfs/extent-tree.c:4833\n   __btrfs_cow_block+0x16f/0x7d0 fs/btrfs/ctree.c:415\n   btrfs_cow_block+0x12a/0x300 fs/btrfs/ctree.c:570\n   btrfs_search_slot+0x6b0/0xee0 fs/btrfs/ctree.c:1768\n   btrfs_insert_empty_items+0x80/0xf0 fs/btrfs/ctree.c:3905\n   btrfs_new_inode+0x311/0xa60 fs/btrfs/inode.c:6530\n   btrfs_create+0x12b/0x270 fs/btrfs/inode.c:6783\n   lookup_open+0x660/0x780 fs/namei.c:3282\n   open_last_lookups fs/namei.c:3352 [inline]\n   path_openat+0x465/0xe20 fs/namei.c:3557\n   do_filp_open+0xe3/0x170 fs/namei.c:3588\n   do_sys_openat2+0x357/0x4a0 fs/open.c:1200\n   do_sys_open+0x87/0xd0 fs/open.c:1216\n   do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n   do_syscall_64+0x34/0xb0 arch/x86/entry/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n  RIP: 0033:0x46ae99\n  Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48\n  89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d\n  01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\n  RSP: 002b:00007f46711b9c48 EFLAGS: 00000246 ORIG_RAX: 0000000000000055\n  RAX: ffffffffffffffda RBX: 000000000078c0a0 RCX: 000000000046ae99\n  RDX: 0000000000000000 RSI: 00000000000000a1 RDI: 0000000020005800\n  RBP: 00007f46711b9c80 R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000017\n  R13: 0000000000000000 R14: 000000000078c0a0 R15: 00007ffc129da6e0\n\n  ================================================\n  WARNING: lock held when returning to user space!\n  5.15.0-rc1 #16 Not tainted\n  ------------------------------------------------\n  syz-executor/7579 is leaving the kernel with locks still held!\n  1 lock held by syz-executor/7579:\n   #0: ffff888104b73da8 (btrfs-tree-01/1){+.+.}-{3:3}, at:\n  __btrfs_tree_lock+0x2e/0x1a0 fs/btrfs/locking.c:112\n\n[CAUSE]\nIn btrfs_alloc_tree_block(), after btrfs_init_new_buffer(), the new\nextent buffer @buf is locked, but if later operations like adding\ndelayed tree ref fail, we just free @buf without unlocking it,\nresulting above warning.\n\n[FIX]\nUnlock @buf in out_free_buf: label.\n\nReported-by: Hao Sun <sunhao.th@gmail.com>\nLink: https://lore.kernel.org/linux-btrfs/CACkBjsZ9O6Zr0KK1yGn=1rQi6Crh1yeCRdTSBxx9R99L4xdn-Q@mail.gmail.com/\nCC: stable@vger.kernel.org # 5.4+\nSigned-off-by: Qu Wenruo <wqu@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "author_name": "Qu Wenruo",
  "author_email": "wqu@suse.com",
  "author_date": "Tue Sep 14 14:57:59 2021 +0800",
  "author_date_iso": "2021-09-14T14:57:59+08:00",
  "committer_name": "David Sterba",
  "committer_email": "dsterba@suse.com",
  "committer_date": "Thu Oct 7 22:04:20 2021 +0200",
  "committer_date_iso": "2021-10-07T22:04:20+02:00",
  "files_changed": [
    "fs/btrfs/extent-tree.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/btrfs/extent-tree.c",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 1,
  "total_deletions": 0,
  "total_changes": 1,
  "parents": [
    "0619b7901473c380abc05d45cf9c70bee0707db3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/extent-tree.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}