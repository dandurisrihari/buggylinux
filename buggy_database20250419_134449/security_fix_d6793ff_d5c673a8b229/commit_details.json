{
  "hash": "d6793ff974e07e4eea151d1f0805e92d042825a1",
  "hash_short": "d6793ff9",
  "subject": "crypto: ecdsa - Move X9.62 signature decoding into template",
  "body": "Unlike the rsa driver, which separates signature decoding and\nsignature verification into two steps, the ecdsa driver does both in one.\n\nThis restricts users to the one signature format currently supported\n(X9.62) and prevents addition of others such as P1363, which is needed\nby the forthcoming SPDM library (Security Protocol and Data Model) for\nPCI device authentication.\n\nPer Herbert's suggestion, change ecdsa to use a \"raw\" signature encoding\nand then implement X9.62 and P1363 as templates which convert their\nrespective encodings to the raw one.  One may then specify\n\"x962(ecdsa-nist-XXX)\" or \"p1363(ecdsa-nist-XXX)\" to pick the encoding.\n\nThe present commit moves X9.62 decoding to a template.  A separate\ncommit is going to introduce another template for P1363 decoding.\n\nThe ecdsa driver internally represents a signature as two u64 arrays of\nsize ECC_MAX_BYTES.  This appears to be the most natural choice for the\nraw format as it can directly be used for verification without having to\nfurther decode signature data or copy it around.\n\nRepurpose all the existing test vectors for \"x962(ecdsa-nist-XXX)\" and\ncreate a duplicate of them to test the raw encoding.\n\nLink: https://lore.kernel.org/all/ZoHXyGwRzVvYkcTP@gondor.apana.org.au/\nSigned-off-by: Lukas Wunner <lukas@wunner.de>\nTested-by: Stefan Berger <stefanb@linux.ibm.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "full_message": "crypto: ecdsa - Move X9.62 signature decoding into template\n\nUnlike the rsa driver, which separates signature decoding and\nsignature verification into two steps, the ecdsa driver does both in one.\n\nThis restricts users to the one signature format currently supported\n(X9.62) and prevents addition of others such as P1363, which is needed\nby the forthcoming SPDM library (Security Protocol and Data Model) for\nPCI device authentication.\n\nPer Herbert's suggestion, change ecdsa to use a \"raw\" signature encoding\nand then implement X9.62 and P1363 as templates which convert their\nrespective encodings to the raw one.  One may then specify\n\"x962(ecdsa-nist-XXX)\" or \"p1363(ecdsa-nist-XXX)\" to pick the encoding.\n\nThe present commit moves X9.62 decoding to a template.  A separate\ncommit is going to introduce another template for P1363 decoding.\n\nThe ecdsa driver internally represents a signature as two u64 arrays of\nsize ECC_MAX_BYTES.  This appears to be the most natural choice for the\nraw format as it can directly be used for verification without having to\nfurther decode signature data or copy it around.\n\nRepurpose all the existing test vectors for \"x962(ecdsa-nist-XXX)\" and\ncreate a duplicate of them to test the raw encoding.\n\nLink: https://lore.kernel.org/all/ZoHXyGwRzVvYkcTP@gondor.apana.org.au/\nSigned-off-by: Lukas Wunner <lukas@wunner.de>\nTested-by: Stefan Berger <stefanb@linux.ibm.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
  "author_name": "Lukas Wunner",
  "author_email": "lukas@wunner.de",
  "author_date": "Tue Sep 10 16:30:25 2024 +0200",
  "author_date_iso": "2024-09-10T16:30:25+02:00",
  "committer_name": "Herbert Xu",
  "committer_email": "herbert@gondor.apana.org.au",
  "committer_date": "Sat Oct 5 13:22:04 2024 +0800",
  "committer_date_iso": "2024-10-05T13:22:04+08:00",
  "files_changed": [
    "crypto/Makefile",
    "crypto/asymmetric_keys/public_key.c",
    "crypto/ecdsa-x962.c",
    "crypto/ecdsa.c",
    "crypto/testmgr.c",
    "crypto/testmgr.h",
    "include/crypto/internal/ecc.h"
  ],
  "files_changed_count": 7,
  "stats": [
    {
      "file": "crypto/Makefile",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "crypto/asymmetric_keys/public_key.c",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "crypto/ecdsa-x962.c",
      "insertions": 201,
      "deletions": 0
    },
    {
      "file": "crypto/ecdsa.c",
      "insertions": 13,
      "deletions": 66
    },
    {
      "file": "crypto/testmgr.c",
      "insertions": 27,
      "deletions": 0
    },
    {
      "file": "crypto/testmgr.h",
      "insertions": 696,
      "deletions": 3
    },
    {
      "file": "include/crypto/internal/ecc.h",
      "insertions": 13,
      "deletions": 0
    }
  ],
  "total_insertions": 955,
  "total_deletions": 70,
  "total_changes": 1025,
  "parents": [
    "3b0565c703503f832d6cd7ba805aafa3b330cb9d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "crypto/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/ecdsa-x962.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/asymmetric_keys/public_key.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/ecdsa.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/crypto/internal/ecc.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/testmgr.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "crypto/testmgr.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}