{
  "hash": "71dfda58aaaf4bf6b1bc59f9d8afa635fa1337d4",
  "hash_short": "71dfda58",
  "subject": "net: Add device Rx page allocation function",
  "body": "This patch implements __dev_alloc_pages and __dev_alloc_page.  These are\nmeant to replace the __skb_alloc_pages and __skb_alloc_page functions.  The\nreason for doing this is that it occurred to me that __skb_alloc_page is\nsupposed to be passed an sk_buff pointer, but it is NULL in all cases where\nit is used.  Worse is that in the case of ixgbe it is passed NULL via the\nsk_buff pointer in the rx_buffer info structure which means the compiler is\nnot correctly stripping it out.\n\nThe naming for these functions is based on dev_alloc_skb and __dev_alloc_skb.\nThere was originally a netdev_alloc_page, however that was passed a\nnet_device pointer and this function is not so I thought it best to follow\nthat naming scheme since that is the same difference between dev_alloc_skb\nand netdev_alloc_skb.\n\nIn the case of anything greater than order 0 it is assumed that we want a\ncompound page so __GFP_COMP is set for all allocations as we expect a\ncompound page when assigning a page frag.\n\nThe other change in this patch is to exploit the behaviors of the page\nallocator in how it handles flags.  So for example we can always set\n__GFP_COMP and __GFP_MEMALLOC since they are ignored if they are not\napplicable or are overridden by another flag.\n\nSigned-off-by: Alexander Duyck <alexander.h.duyck@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "net: Add device Rx page allocation function\n\nThis patch implements __dev_alloc_pages and __dev_alloc_page.  These are\nmeant to replace the __skb_alloc_pages and __skb_alloc_page functions.  The\nreason for doing this is that it occurred to me that __skb_alloc_page is\nsupposed to be passed an sk_buff pointer, but it is NULL in all cases where\nit is used.  Worse is that in the case of ixgbe it is passed NULL via the\nsk_buff pointer in the rx_buffer info structure which means the compiler is\nnot correctly stripping it out.\n\nThe naming for these functions is based on dev_alloc_skb and __dev_alloc_skb.\nThere was originally a netdev_alloc_page, however that was passed a\nnet_device pointer and this function is not so I thought it best to follow\nthat naming scheme since that is the same difference between dev_alloc_skb\nand netdev_alloc_skb.\n\nIn the case of anything greater than order 0 it is assumed that we want a\ncompound page so __GFP_COMP is set for all allocations as we expect a\ncompound page when assigning a page frag.\n\nThe other change in this patch is to exploit the behaviors of the page\nallocator in how it handles flags.  So for example we can always set\n__GFP_COMP and __GFP_MEMALLOC since they are ignored if they are not\napplicable or are overridden by another flag.\n\nSigned-off-by: Alexander Duyck <alexander.h.duyck@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Alexander Duyck",
  "author_email": "alexander.h.duyck@redhat.com",
  "author_date": "Tue Nov 11 09:26:34 2014 -0800",
  "author_date_iso": "2014-11-11T09:26:34-08:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Wed Nov 12 00:00:13 2014 -0500",
  "committer_date_iso": "2014-11-12T00:00:13-05:00",
  "files_changed": [
    "include/linux/skbuff.h"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "include/linux/skbuff.h",
      "insertions": 48,
      "deletions": 0
    }
  ],
  "total_insertions": 48,
  "total_deletions": 0,
  "total_changes": 48,
  "parents": [
    "6c91023dc35c88d5e6aebe4bfe6f1ed5ec2b84be"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.19",
    "v3.19-rc1",
    "v3.19-rc2",
    "v3.19-rc3",
    "v3.19-rc4",
    "v3.19-rc5",
    "v3.19-rc6",
    "v3.19-rc7",
    "v4.0",
    "v4.0-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/skbuff.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}