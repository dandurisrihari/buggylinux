Commit Hash: 786235eeba0e1e85e5cbbb9f97d1087ad03dfa21
Subject: kthread: make kthread_create() killable

CVE Identifiers:
- CVE-2012-4398
- CVE-2012-4398

Full commit message:
kthread: make kthread_create() killable

Any user process callers of wait_for_completion() except global init
process might be chosen by the OOM killer while waiting for completion()
call by some other process which does memory allocation.  See
CVE-2012-4398 "kernel: request_module() OOM local DoS" can happen.

When such users are chosen by the OOM killer when they are waiting for
completion() in TASK_UNINTERRUPTIBLE, the system will be kept stressed
due to memory starvation because the OOM killer cannot kill such users.

kthread_create() is one of such users and this patch fixes the problem
for kthreadd by making kthread_create() killable - the same approach
used for fixing CVE-2012-4398.

Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Cc: Oleg Nesterov <oleg@redhat.com>
Acked-by: David Rientjes <rientjes@google.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Metadata:
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Author Date: Tue Nov 12 15:06:45 2013 -0800
Committer: Linus Torvalds <torvalds@linux-foundation.org>
Commit Date: Wed Nov 13 12:08:59 2013 +0900

Files Changed: 1
Lines Added: 55
Lines Removed: 18
Total Changes: 73
