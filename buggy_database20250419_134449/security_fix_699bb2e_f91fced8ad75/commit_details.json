{
  "hash": "699bb2e0c6f3796549dabac329501df7ffd99439",
  "hash_short": "699bb2e0",
  "subject": "KVM: arm64: Move vcpu PC/Exception flags to the input flag set",
  "body": "The PC update flags (which also deal with exception injection)\nis one of the most complicated use of the flag we have. Make it\nmore fool prof by:\n\n- moving it over to the new accessors and assign it to the\n  input flag set\n\n- turn the combination of generic ELx flags with another flag\n  indicating the target EL itself into an explicit set of\n  flags for each EL and vector combination\n\n- add a new accessor to pend the exception\n\nThis is otherwise a pretty straightformward conversion.\n\nReviewed-by: Fuad Tabba <tabba@google.com>\nReviewed-by: Reiji Watanabe <reijiw@google.com>\nSigned-off-by: Marc Zyngier <maz@kernel.org>",
  "full_message": "KVM: arm64: Move vcpu PC/Exception flags to the input flag set\n\nThe PC update flags (which also deal with exception injection)\nis one of the most complicated use of the flag we have. Make it\nmore fool prof by:\n\n- moving it over to the new accessors and assign it to the\n  input flag set\n\n- turn the combination of generic ELx flags with another flag\n  indicating the target EL itself into an explicit set of\n  flags for each EL and vector combination\n\n- add a new accessor to pend the exception\n\nThis is otherwise a pretty straightformward conversion.\n\nReviewed-by: Fuad Tabba <tabba@google.com>\nReviewed-by: Reiji Watanabe <reijiw@google.com>\nSigned-off-by: Marc Zyngier <maz@kernel.org>",
  "author_name": "Marc Zyngier",
  "author_email": "maz@kernel.org",
  "author_date": "Sat May 28 12:38:18 2022 +0100",
  "author_date_iso": "2022-05-28T12:38:18+01:00",
  "committer_name": "Marc Zyngier",
  "committer_email": "maz@kernel.org",
  "committer_date": "Fri Jun 10 09:54:34 2022 +0100",
  "committer_date_iso": "2022-06-10T09:54:34+01:00",
  "files_changed": [
    "arch/arm64/include/asm/kvm_emulate.h",
    "arch/arm64/include/asm/kvm_host.h",
    "arch/arm64/kvm/arm.c",
    "arch/arm64/kvm/hyp/exception.c",
    "arch/arm64/kvm/hyp/nvhe/sys_regs.c",
    "arch/arm64/kvm/inject_fault.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "arch/arm64/include/asm/kvm_emulate.h",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/kvm_host.h",
      "insertions": 34,
      "deletions": 24
    },
    {
      "file": "arch/arm64/kvm/arm.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kvm/hyp/exception.c",
      "insertions": 11,
      "deletions": 12
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/sys_regs.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kvm/inject_fault.c",
      "insertions": 5,
      "deletions": 12
    }
  ],
  "total_insertions": 61,
  "total_deletions": 54,
  "total_changes": 115,
  "parents": [
    "4c0680d394d8a77868049931101e4a59372346b5"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/kvm_emulate.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/sys_regs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/hyp/exception.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/kvm_host.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/inject_fault.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/arm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}