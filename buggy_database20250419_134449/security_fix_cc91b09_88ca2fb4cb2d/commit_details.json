{
  "hash": "cc91b09b9ef8f8a9f29b4fdff5f65ab5700872e2",
  "hash_short": "cc91b09b",
  "subject": "Merge branch 'seg6-fix-skb-checksum-for-srh-encapsulation-insertion'",
  "body": "Andrea Mayer says:\n\n====================\nseg6: fix skb checksum for SRH encapsulation/insertion\n\nThe Linux kernel supports Segment Routing Header (SRH)\nencapsulation/insertion operations by providing the capability to: i)\nencapsulate a packet in an outer IPv6 header with a specified SRH; ii)\ninsert a specified SRH directly after the IPv6 header of the packet.\nNote that the insertion operation is also referred to as 'injection'.\n\nThe two operations are respectively supported by seg6_do_srh_encap() and\nseg6_do_srh_inline(), which operate on the skb associated to the packet as\nneeded (e.g. adding the necessary headers and initializing them, while\ntaking care to recalculate the skb checksum).\n\nseg6_do_srh_encap() and seg6_do_srh_inline() do not initialize the payload\nlength of the IPv6 header, which is carried out by the caller functions.\nHowever, this approach causes the corruption of the skb checksum which\nneeds to be updated only after initialization of headers is completed\n(thanks to Paolo Abeni for detecting this issue).\n\nThe patchset fixes the skb checksum corruption by moving the IPv6 header\npayload length initialization from the callers of seg6_do_srh_encap() and\nseg6_do_srh_inline() directly into these functions.\n\nThis patchset is organized as follows:\n - patch 1/3, seg6: fix skb checksum evaluation in SRH\n   encapsulation/insertion;\n    (* SRH encapsulation/insertion available since v4.10)\n\n - patch 2/3, seg6: fix skb checksum in SRv6 End.B6 and End.B6.Encaps\n   behaviors;\n    (* SRv6 End.B6 and End.B6.Encaps behaviors available since v4.14)\n\n - patch 3/3, seg6: bpf: fix skb checksum in bpf_push_seg6_encap();\n    (* bpf IPv6 Segment Routing helpers available since v4.18)\n\n====================\n\nLink: https://lore.kernel.org/r/20220712175837.16267-1-andrea.mayer@uniroma2.it\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "full_message": "Merge branch 'seg6-fix-skb-checksum-for-srh-encapsulation-insertion'\n\nAndrea Mayer says:\n\n====================\nseg6: fix skb checksum for SRH encapsulation/insertion\n\nThe Linux kernel supports Segment Routing Header (SRH)\nencapsulation/insertion operations by providing the capability to: i)\nencapsulate a packet in an outer IPv6 header with a specified SRH; ii)\ninsert a specified SRH directly after the IPv6 header of the packet.\nNote that the insertion operation is also referred to as 'injection'.\n\nThe two operations are respectively supported by seg6_do_srh_encap() and\nseg6_do_srh_inline(), which operate on the skb associated to the packet as\nneeded (e.g. adding the necessary headers and initializing them, while\ntaking care to recalculate the skb checksum).\n\nseg6_do_srh_encap() and seg6_do_srh_inline() do not initialize the payload\nlength of the IPv6 header, which is carried out by the caller functions.\nHowever, this approach causes the corruption of the skb checksum which\nneeds to be updated only after initialization of headers is completed\n(thanks to Paolo Abeni for detecting this issue).\n\nThe patchset fixes the skb checksum corruption by moving the IPv6 header\npayload length initialization from the callers of seg6_do_srh_encap() and\nseg6_do_srh_inline() directly into these functions.\n\nThis patchset is organized as follows:\n - patch 1/3, seg6: fix skb checksum evaluation in SRH\n   encapsulation/insertion;\n    (* SRH encapsulation/insertion available since v4.10)\n\n - patch 2/3, seg6: fix skb checksum in SRv6 End.B6 and End.B6.Encaps\n   behaviors;\n    (* SRv6 End.B6 and End.B6.Encaps behaviors available since v4.14)\n\n - patch 3/3, seg6: bpf: fix skb checksum in bpf_push_seg6_encap();\n    (* bpf IPv6 Segment Routing helpers available since v4.18)\n\n====================\n\nLink: https://lore.kernel.org/r/20220712175837.16267-1-andrea.mayer@uniroma2.it\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "author_name": "Paolo Abeni",
  "author_email": "pabeni@redhat.com",
  "author_date": "Thu Jul 14 10:15:15 2022 +0200",
  "author_date_iso": "2022-07-14T10:15:15+02:00",
  "committer_name": "Paolo Abeni",
  "committer_email": "pabeni@redhat.com",
  "committer_date": "Thu Jul 14 10:15:16 2022 +0200",
  "committer_date_iso": "2022-07-14T10:15:16+02:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "net/core/filter.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "net/ipv6/seg6_iptunnel.c",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "net/ipv6/seg6_local.c",
      "insertions": 0,
      "deletions": 2
    }
  ],
  "total_insertions": 4,
  "total_deletions": 4,
  "total_changes": 8,
  "parents": [
    "f46a5a9c679f495c555b7842807db5e886a9e650",
    "4889fbd98deaf243c3baadc54e296d71c6af1eb0"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": []
}