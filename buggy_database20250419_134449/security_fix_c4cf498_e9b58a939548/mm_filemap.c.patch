commit c4cf498dc0241fa2d758dba177634268446afb06
Merge: 9ff9b0d392ea 4d0e9df5e43d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Oct 16 11:31:55 2020 -0700

    Merge branch 'akpm' (patches from Andrew)
    
    Merge more updates from Andrew Morton:
     "155 patches.
    
      Subsystems affected by this patch series: mm (dax, debug, thp,
      readahead, page-poison, util, memory-hotplug, zram, cleanups), misc,
      core-kernel, get_maintainer, MAINTAINERS, lib, bitops, checkpatch,
      binfmt, ramfs, autofs, nilfs, rapidio, panic, relay, kgdb, ubsan,
      romfs, and fault-injection"
    
    * emailed patches from Andrew Morton <akpm@linux-foundation.org>: (155 commits)
      lib, uaccess: add failure injection to usercopy functions
      lib, include/linux: add usercopy failure capability
      ROMFS: support inode blocks calculation
      ubsan: introduce CONFIG_UBSAN_LOCAL_BOUNDS for Clang
      sched.h: drop in_ubsan field when UBSAN is in trap mode
      scripts/gdb/tasks: add headers and improve spacing format
      scripts/gdb/proc: add struct mount & struct super_block addr in lx-mounts command
      kernel/relay.c: drop unneeded initialization
      panic: dump registers on panic_on_warn
      rapidio: fix the missed put_device() for rio_mport_add_riodev
      rapidio: fix error handling path
      nilfs2: fix some kernel-doc warnings for nilfs2
      autofs: harden ioctl table
      ramfs: fix nommu mmap with gaps in the page cache
      mm: remove the now-unnecessary mmget_still_valid() hack
      mm/gup: take mmap_lock in get_dump_page()
      binfmt_elf, binfmt_elf_fdpic: use a VMA list snapshot
      coredump: rework elf/elf_fdpic vma_dump_size() into common helper
      coredump: refactor page range dumping into common helper
      coredump: let dump_emit() bail out on short writes
      ...

diff --cc mm/filemap.c
index e3b8987153e6,45e564a20f8e..1a6beaf69f49
--- a/mm/filemap.c
+++ b/mm/filemap.c
@@@ -827,10 -827,10 +827,10 @@@ int replace_page_cache_page(struct pag
  }
  EXPORT_SYMBOL_GPL(replace_page_cache_page);
  
 -static int __add_to_page_cache_locked(struct page *page,
 -				      struct address_space *mapping,
 -				      pgoff_t offset, gfp_t gfp,
 -				      void **shadowp)
 +noinline int __add_to_page_cache_locked(struct page *page,
 +					struct address_space *mapping,
- 					pgoff_t offset, gfp_t gfp_mask,
++					pgoff_t offset, gfp_t gfp,
 +					void **shadowp)
  {
  	XA_STATE(xas, &mapping->i_pages, offset);
  	int huge = PageHuge(page);