{
  "hash": "acd26bcf362708594ea081ef55140e37d0854ed2",
  "hash_short": "acd26bcf",
  "subject": "genirq: Provide interrupt injection mechanism",
  "body": "Error injection mechanisms need a half ways safe way to inject interrupts as\ninvoking generic_handle_irq() or the actual device interrupt handler\ndirectly from e.g. a debugfs write is not guaranteed to be safe.\n\nOn x86 generic_handle_irq() is unsafe due to the hardware trainwreck which\nis the base of x86 interrupt delivery and affinity management.\n\nMove the irq debugfs injection code into a separate function which can be\nused by error injection code as well.\n\nThe implementation prevents at least that state is corrupted, but it cannot\nclose a very tiny race window on x86 which might result in a stale and not\nserviced device interrupt under very unlikely circumstances.\n\nThis is explicitly for debugging and testing and not for production use or\nabuse in random driver code.\n\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nTested-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>\nReviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>\nAcked-by: Marc Zyngier <maz@kernel.org>\nLink: https://lkml.kernel.org/r/20200306130623.990928309@linutronix.de",
  "full_message": "genirq: Provide interrupt injection mechanism\n\nError injection mechanisms need a half ways safe way to inject interrupts as\ninvoking generic_handle_irq() or the actual device interrupt handler\ndirectly from e.g. a debugfs write is not guaranteed to be safe.\n\nOn x86 generic_handle_irq() is unsafe due to the hardware trainwreck which\nis the base of x86 interrupt delivery and affinity management.\n\nMove the irq debugfs injection code into a separate function which can be\nused by error injection code as well.\n\nThe implementation prevents at least that state is corrupted, but it cannot\nclose a very tiny race window on x86 which might result in a stale and not\nserviced device interrupt under very unlikely circumstances.\n\nThis is explicitly for debugging and testing and not for production use or\nabuse in random driver code.\n\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nTested-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>\nReviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>\nAcked-by: Marc Zyngier <maz@kernel.org>\nLink: https://lkml.kernel.org/r/20200306130623.990928309@linutronix.de",
  "author_name": "Thomas Gleixner",
  "author_email": "tglx@linutronix.de",
  "author_date": "Fri Mar 6 14:03:47 2020 +0100",
  "author_date_iso": "2020-03-06T14:03:47+01:00",
  "committer_name": "Thomas Gleixner",
  "committer_email": "tglx@linutronix.de",
  "committer_date": "Sun Mar 8 11:06:42 2020 +0100",
  "committer_date_iso": "2020-03-08T11:06:42+01:00",
  "files_changed": [
    "include/linux/interrupt.h",
    "kernel/irq/Kconfig",
    "kernel/irq/chip.c",
    "kernel/irq/debugfs.c",
    "kernel/irq/internals.h",
    "kernel/irq/resend.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "include/linux/interrupt.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "kernel/irq/Kconfig",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "kernel/irq/chip.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/irq/debugfs.c",
      "insertions": 1,
      "deletions": 33
    },
    {
      "file": "kernel/irq/internals.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/irq/resend.c",
      "insertions": 51,
      "deletions": 2
    }
  ],
  "total_insertions": 61,
  "total_deletions": 37,
  "total_changes": 98,
  "parents": [
    "da90921acc62c71d27729ae211ccfda5370bf75b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.7-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "include/linux/interrupt.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/irq/chip.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/irq/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/irq/debugfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/irq/resend.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/irq/internals.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}