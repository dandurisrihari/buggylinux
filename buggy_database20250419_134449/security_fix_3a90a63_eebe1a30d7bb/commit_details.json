{
  "hash": "3a90a63d02b8b7e8348d7549f55d24e1bb3a293f",
  "hash_short": "3a90a63d",
  "subject": "scsi: scsi_debug: every_nth triggered error injection",
  "body": "This patch simplifies, or at least makes more consistent, the way setting\nthe every_nth parameter injects errors. Here is a list of 'opts' flags and\nin which cases they inject errors when abs(every_nth)%command_count == 0 is\nreached:\n\n  - OPT_RECOVERED_ERR: issued on READ(*)s, WRITE(*)s and\n                       WRITE_SCATTEREDs\n  - OPT_DIF_ERR:       issued on READ(*)s, WRITE(*)s and\n                       WRITE_SCATTEREDs\n  - OPT_DIX_ERR:       issued on READ(*)s, WRITE(*)s and\n                       WRITE_SCATTEREDs\n  - OPT_SHORT_TRANSFER: issued on READ(*)s\n  - OPT_TRANSPORT_ERR: issued on all commands\n  - OPT_CMD_ABORT:     issued on all commands\n\nThe other uses of every_nth were not modified.\n\nPreviously if, for example, OPT_SHORT_TRANSFER was armed then if\n(abs(every_nth) % command_count == 0) occurred during a command that was\n_not_ a READ, then no error injection occurred. This behaviour puzzled\nseveral testers. Now a global \"inject_pending\" flag is set and the _next_\nREAD will get hit and that flag is cleared. OPT_RECOVERED_ERR, OPT_DIF_ERR\nand OPT_DIX_ERR have similar behaviour. A downside of this is that there\nmight be a hang-over pending injection that gets triggered by a following\ntest.\n\nAlso expand the every_nth runtime parameter so that it can take hex value\n(i.e. with a leading '0x') as well as a decimal value. Now both the 'opts'\nand the 'every_nth' runtime parameters can take hexadecimal values.\n\nLink: https://lore.kernel.org/r/20200712182927.72044-2-dgilbert@interlog.com\nSigned-off-by: Douglas Gilbert <dgilbert@interlog.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: scsi_debug: every_nth triggered error injection\n\nThis patch simplifies, or at least makes more consistent, the way setting\nthe every_nth parameter injects errors. Here is a list of 'opts' flags and\nin which cases they inject errors when abs(every_nth)%command_count == 0 is\nreached:\n\n  - OPT_RECOVERED_ERR: issued on READ(*)s, WRITE(*)s and\n                       WRITE_SCATTEREDs\n  - OPT_DIF_ERR:       issued on READ(*)s, WRITE(*)s and\n                       WRITE_SCATTEREDs\n  - OPT_DIX_ERR:       issued on READ(*)s, WRITE(*)s and\n                       WRITE_SCATTEREDs\n  - OPT_SHORT_TRANSFER: issued on READ(*)s\n  - OPT_TRANSPORT_ERR: issued on all commands\n  - OPT_CMD_ABORT:     issued on all commands\n\nThe other uses of every_nth were not modified.\n\nPreviously if, for example, OPT_SHORT_TRANSFER was armed then if\n(abs(every_nth) % command_count == 0) occurred during a command that was\n_not_ a READ, then no error injection occurred. This behaviour puzzled\nseveral testers. Now a global \"inject_pending\" flag is set and the _next_\nREAD will get hit and that flag is cleared. OPT_RECOVERED_ERR, OPT_DIF_ERR\nand OPT_DIX_ERR have similar behaviour. A downside of this is that there\nmight be a hang-over pending injection that gets triggered by a following\ntest.\n\nAlso expand the every_nth runtime parameter so that it can take hex value\n(i.e. with a leading '0x') as well as a decimal value. Now both the 'opts'\nand the 'every_nth' runtime parameters can take hexadecimal values.\n\nLink: https://lore.kernel.org/r/20200712182927.72044-2-dgilbert@interlog.com\nSigned-off-by: Douglas Gilbert <dgilbert@interlog.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Douglas Gilbert",
  "author_email": "dgilbert@interlog.com",
  "author_date": "Sun Jul 12 14:29:26 2020 -0400",
  "author_date_iso": "2020-07-12T14:29:26-04:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Mon Jul 13 23:49:46 2020 -0400",
  "committer_date_iso": "2020-07-13T23:49:46-04:00",
  "files_changed": [
    "drivers/scsi/scsi_debug.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/scsi_debug.c",
      "insertions": 101,
      "deletions": 130
    }
  ],
  "total_insertions": 101,
  "total_deletions": 130,
  "total_changes": 231,
  "parents": [
    "c10fa55f5e7ad3638237dd66fcb28a7225acdff8"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/scsi_debug.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}