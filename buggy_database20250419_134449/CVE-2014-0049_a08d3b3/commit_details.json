{
  "hash": "a08d3b3b99efd509133946056531cdf8f3a0c09b",
  "hash_short": "a08d3b3b",
  "subject": "kvm: x86: fix emulator buffer overflow (CVE-2014-0049)",
  "body": "The problem occurs when the guest performs a pusha with the stack\naddress pointing to an mmio address (or an invalid guest physical\naddress) to start with, but then extending into an ordinary guest\nphysical address.  When doing repeated emulated pushes\nemulator_read_write sets mmio_needed to 1 on the first one.  On a\nlater push when the stack points to regular memory,\nmmio_nr_fragments is set to 0, but mmio_is_needed is not set to 0.\n\nAs a result, KVM exits to userspace, and then returns to\ncomplete_emulated_mmio.  In complete_emulated_mmio\nvcpu->mmio_cur_fragment is incremented.  The termination condition of\nvcpu->mmio_cur_fragment == vcpu->mmio_nr_fragments is never achieved.\nThe code bounces back and fourth to userspace incrementing\nmmio_cur_fragment past it's buffer.  If the guest does nothing else it\neventually leads to a a crash on a memcpy from invalid memory address.\n\nHowever if a guest code can cause the vm to be destroyed in another\nvcpu with excellent timing, then kvm_clear_async_pf_completion_queue\ncan be used by the guest to control the data that's pointed to by the\ncall to cancel_work_item, which can be used to gain execution.\n\nFixes: f78146b0f9230765c6315b2e14f56112513389ad\nSigned-off-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org (3.5+)\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "kvm: x86: fix emulator buffer overflow (CVE-2014-0049)\n\nThe problem occurs when the guest performs a pusha with the stack\naddress pointing to an mmio address (or an invalid guest physical\naddress) to start with, but then extending into an ordinary guest\nphysical address.  When doing repeated emulated pushes\nemulator_read_write sets mmio_needed to 1 on the first one.  On a\nlater push when the stack points to regular memory,\nmmio_nr_fragments is set to 0, but mmio_is_needed is not set to 0.\n\nAs a result, KVM exits to userspace, and then returns to\ncomplete_emulated_mmio.  In complete_emulated_mmio\nvcpu->mmio_cur_fragment is incremented.  The termination condition of\nvcpu->mmio_cur_fragment == vcpu->mmio_nr_fragments is never achieved.\nThe code bounces back and fourth to userspace incrementing\nmmio_cur_fragment past it's buffer.  If the guest does nothing else it\neventually leads to a a crash on a memcpy from invalid memory address.\n\nHowever if a guest code can cause the vm to be destroyed in another\nvcpu with excellent timing, then kvm_clear_async_pf_completion_queue\ncan be used by the guest to control the data that's pointed to by the\ncall to cancel_work_item, which can be used to gain execution.\n\nFixes: f78146b0f9230765c6315b2e14f56112513389ad\nSigned-off-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org (3.5+)\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "Andrew Honig",
  "author_email": "ahonig@google.com",
  "author_date": "Thu Feb 27 19:35:14 2014 +0100",
  "author_date_iso": "2014-02-27T19:35:14+01:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Thu Feb 27 19:35:22 2014 +0100",
  "committer_date_iso": "2014-02-27T19:35:22+01:00",
  "files_changed": [
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "b20c9f29c5c25921c6ad18b50d4b61e6d181c3cc"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.14",
    "v3.14-rc5",
    "v3.14-rc6",
    "v3.14-rc7",
    "v3.14-rc8",
    "v3.15",
    "v3.15-rc1",
    "v3.15-rc2",
    "v3.15-rc3",
    "v3.15-rc4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2014-0049",
      "CVE-2014-0049"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}