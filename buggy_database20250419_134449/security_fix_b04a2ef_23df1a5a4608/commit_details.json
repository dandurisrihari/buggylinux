{
  "hash": "b04a2eff9e9c6f8890d25dbb073fbf5c00892a9a",
  "hash_short": "b04a2eff",
  "subject": "scsi: bnx2fc: Replace deprecated strncpy() with strscpy()",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect hba->chip_num to be NUL-terminated based on its usage with format\nstrings:\n\n\tsnprintf(fc_host_symbolic_name(lport->host), 256,\n\t\t \"%s (QLogic %s) v%s over %s\",\n\t\tBNX2FC_NAME, hba->chip_num, BNX2FC_VERSION,\n\t\tinterface->netdev->name);\n\nMoreover, NUL-padding is not required as hba is zero-allocated from its\ncallsite:\n\n\thba = kzalloc(sizeof(*hba), GFP_KERNEL);\n\nConsidering the above, a suitable replacement is strscpy() [2] due to the\nfact that it guarantees NUL-termination on the destination buffer without\nunnecessarily NUL-padding.\n\nRegarding stats_addr->version, I've opted to also use strscpy() instead of\nstrscpy_pad() as I typically see these XYZ_get_strings() pass\nzero-allocated data. I couldn't track all of where bnx2fc_ulp_get_stats()\nis used and if required, we could opt for strscpy_pad().\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231023-strncpy-drivers-scsi-bnx2fc-bnx2fc_fcoe-c-v1-1-a3736943cde2@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: bnx2fc: Replace deprecated strncpy() with strscpy()\n\nstrncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect hba->chip_num to be NUL-terminated based on its usage with format\nstrings:\n\n\tsnprintf(fc_host_symbolic_name(lport->host), 256,\n\t\t \"%s (QLogic %s) v%s over %s\",\n\t\tBNX2FC_NAME, hba->chip_num, BNX2FC_VERSION,\n\t\tinterface->netdev->name);\n\nMoreover, NUL-padding is not required as hba is zero-allocated from its\ncallsite:\n\n\thba = kzalloc(sizeof(*hba), GFP_KERNEL);\n\nConsidering the above, a suitable replacement is strscpy() [2] due to the\nfact that it guarantees NUL-termination on the destination buffer without\nunnecessarily NUL-padding.\n\nRegarding stats_addr->version, I've opted to also use strscpy() instead of\nstrscpy_pad() as I typically see these XYZ_get_strings() pass\nzero-allocated data. I couldn't track all of where bnx2fc_ulp_get_stats()\nis used and if required, we could opt for strscpy_pad().\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231023-strncpy-drivers-scsi-bnx2fc-bnx2fc_fcoe-c-v1-1-a3736943cde2@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Mon Oct 23 20:12:22 2023 +0000",
  "author_date_iso": "2023-10-23T20:12:22+00:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Wed Nov 15 09:01:10 2023 -0500",
  "committer_date_iso": "2023-11-15T09:01:10-05:00",
  "files_changed": [
    "drivers/scsi/bnx2fc/bnx2fc_fcoe.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/bnx2fc/bnx2fc_fcoe.c",
      "insertions": 7,
      "deletions": 7
    }
  ],
  "total_insertions": 7,
  "total_deletions": 7,
  "total_changes": 14,
  "parents": [
    "7936a19e944b934d21d79f1b90d478d1f7081b63"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/bnx2fc/bnx2fc_fcoe.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}