{
  "hash": "611c9d88302cb9ac3b0f58f4a06c0ffb98345bd2",
  "hash_short": "611c9d88",
  "subject": "Merge tag 'loongarch-6.4' of git://git.kernel.org/pub/scm/linux/kernel/git/chenhuacai/linux-loongson",
  "body": "Pull LoongArch updates from Huacai Chen:\n\n - Better backtraces for humanization\n\n - Relay BCE exceptions to userland as SIGSEGV\n\n - Provide kernel fpu functions\n\n - Optimize memory ops (memset/memcpy/memmove)\n\n - Optimize checksum and crc32(c) calculation\n\n - Add ARCH_HAS_FORTIFY_SOURCE selection\n\n - Add function error injection support\n\n - Add ftrace with direct call support\n\n - Add basic perf tools support\n\n* tag 'loongarch-6.4' of git://git.kernel.org/pub/scm/linux/kernel/git/chenhuacai/linux-loongson: (24 commits)\n  tools/perf: Add basic support for LoongArch\n  LoongArch: ftrace: Add direct call trampoline samples support\n  LoongArch: ftrace: Add direct call support\n  LoongArch: ftrace: Implement ftrace_find_callable_addr() to simplify code\n  LoongArch: ftrace: Fix build error if DYNAMIC_FTRACE_WITH_REGS is not set\n  LoongArch: ftrace: Abstract DYNAMIC_FTRACE_WITH_ARGS accesses\n  LoongArch: Add support for function error injection\n  LoongArch: Add ARCH_HAS_FORTIFY_SOURCE selection\n  LoongArch: crypto: Add crc32 and crc32c hw acceleration\n  LoongArch: Add checksum optimization for 64-bit system\n  LoongArch: Optimize memory ops (memset/memcpy/memmove)\n  LoongArch: Provide kernel fpu functions\n  LoongArch: Relay BCE exceptions to userland as SIGSEGV with si_code=SEGV_BNDERR\n  LoongArch: Tweak the BADV and CPUCFG.PRID lines in show_regs()\n  LoongArch: Humanize the ESTAT line when showing registers\n  LoongArch: Humanize the ECFG line when showing registers\n  LoongArch: Humanize the EUEN line when showing registers\n  LoongArch: Humanize the PRMD line when showing registers\n  LoongArch: Humanize the CRMD line when showing registers\n  LoongArch: Fix format of CSR lines during show_regs()\n  ...",
  "full_message": "Merge tag 'loongarch-6.4' of git://git.kernel.org/pub/scm/linux/kernel/git/chenhuacai/linux-loongson\n\nPull LoongArch updates from Huacai Chen:\n\n - Better backtraces for humanization\n\n - Relay BCE exceptions to userland as SIGSEGV\n\n - Provide kernel fpu functions\n\n - Optimize memory ops (memset/memcpy/memmove)\n\n - Optimize checksum and crc32(c) calculation\n\n - Add ARCH_HAS_FORTIFY_SOURCE selection\n\n - Add function error injection support\n\n - Add ftrace with direct call support\n\n - Add basic perf tools support\n\n* tag 'loongarch-6.4' of git://git.kernel.org/pub/scm/linux/kernel/git/chenhuacai/linux-loongson: (24 commits)\n  tools/perf: Add basic support for LoongArch\n  LoongArch: ftrace: Add direct call trampoline samples support\n  LoongArch: ftrace: Add direct call support\n  LoongArch: ftrace: Implement ftrace_find_callable_addr() to simplify code\n  LoongArch: ftrace: Fix build error if DYNAMIC_FTRACE_WITH_REGS is not set\n  LoongArch: ftrace: Abstract DYNAMIC_FTRACE_WITH_ARGS accesses\n  LoongArch: Add support for function error injection\n  LoongArch: Add ARCH_HAS_FORTIFY_SOURCE selection\n  LoongArch: crypto: Add crc32 and crc32c hw acceleration\n  LoongArch: Add checksum optimization for 64-bit system\n  LoongArch: Optimize memory ops (memset/memcpy/memmove)\n  LoongArch: Provide kernel fpu functions\n  LoongArch: Relay BCE exceptions to userland as SIGSEGV with si_code=SEGV_BNDERR\n  LoongArch: Tweak the BADV and CPUCFG.PRID lines in show_regs()\n  LoongArch: Humanize the ESTAT line when showing registers\n  LoongArch: Humanize the ECFG line when showing registers\n  LoongArch: Humanize the EUEN line when showing registers\n  LoongArch: Humanize the PRMD line when showing registers\n  LoongArch: Humanize the CRMD line when showing registers\n  LoongArch: Fix format of CSR lines during show_regs()\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Thu May 4 12:40:16 2023 -0700",
  "author_date_iso": "2023-05-04T12:40:16-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu May 4 12:40:16 2023 -0700",
  "committer_date_iso": "2023-05-04T12:40:16-07:00",
  "files_changed": [
    "arch/loongarch/Kconfig",
    "samples/ftrace/ftrace-direct-modify.c",
    "samples/ftrace/ftrace-direct-multi-modify.c",
    "samples/ftrace/ftrace-direct-multi.c",
    "samples/ftrace/ftrace-direct-too.c",
    "samples/ftrace/ftrace-direct.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "arch/loongarch/Kconfig",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/crypto/Kconfig",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/crypto/Makefile",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/crypto/crc32-loongarch.c",
      "insertions": 304,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/checksum.h",
      "insertions": 66,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/fpu.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/ftrace.h",
      "insertions": 37,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/inst.h",
      "insertions": 26,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/loongarch.h",
      "insertions": 31,
      "deletions": 26
    },
    {
      "file": "arch/loongarch/include/asm/ptrace.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/kernel/Makefile",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/loongarch/kernel/ftrace_dyn.c",
      "insertions": 66,
      "deletions": 62
    },
    {
      "file": "arch/loongarch/kernel/genex.S",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/kernel/irq.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/loongarch/kernel/kfpu.c",
      "insertions": 43,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/kernel/mcount_dyn.S",
      "insertions": 12,
      "deletions": 1
    },
    {
      "file": "arch/loongarch/kernel/perf_event.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/loongarch/kernel/time.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/loongarch/kernel/traps.c",
      "insertions": 284,
      "deletions": 34
    },
    {
      "file": "arch/loongarch/lib/Makefile",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "arch/loongarch/lib/clear_user.S",
      "insertions": 121,
      "deletions": 15
    },
    {
      "file": "arch/loongarch/lib/copy_user.S",
      "insertions": 201,
      "deletions": 50
    },
    {
      "file": "arch/loongarch/lib/csum.c",
      "insertions": 141,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/lib/error-inject.c",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/lib/memcpy.S",
      "insertions": 121,
      "deletions": 26
    },
    {
      "file": "arch/loongarch/lib/memmove.S",
      "insertions": 68,
      "deletions": 52
    },
    {
      "file": "arch/loongarch/lib/memset.S",
      "insertions": 92,
      "deletions": 24
    },
    {
      "file": "crypto/Kconfig",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "samples/ftrace/ftrace-direct-modify.c",
      "insertions": 34,
      "deletions": 0
    },
    {
      "file": "samples/ftrace/ftrace-direct-multi-modify.c",
      "insertions": 41,
      "deletions": 0
    },
    {
      "file": "samples/ftrace/ftrace-direct-multi.c",
      "insertions": 25,
      "deletions": 0
    },
    {
      "file": "samples/ftrace/ftrace-direct-too.c",
      "insertions": 27,
      "deletions": 0
    },
    {
      "file": "samples/ftrace/ftrace-direct.c",
      "insertions": 23,
      "deletions": 0
    },
    {
      "file": "tools/arch/loongarch/include/uapi/asm/perf_regs.h",
      "insertions": 40,
      "deletions": 0
    },
    {
      "file": "tools/arch/loongarch/include/uapi/asm/unistd.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "tools/perf/Makefile.config",
      "insertions": 9,
      "deletions": 3
    },
    {
      "file": "tools/perf/arch/loongarch/Build",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/Makefile",
      "insertions": 28,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/annotate/instructions.c",
      "insertions": 45,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/entry/syscalls/mksyscalltbl",
      "insertions": 61,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/include/dwarf-regs-table.h",
      "insertions": 16,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/include/perf_regs.h",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/util/Build",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/util/dwarf-regs.c",
      "insertions": 44,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/util/perf_regs.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/util/unwind-libdw.c",
      "insertions": 56,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/util/unwind-libunwind.c",
      "insertions": 82,
      "deletions": 0
    },
    {
      "file": "tools/perf/check-headers.sh",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/annotate.c",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/dwarf-regs.c",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/env.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/genelf.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/perf_regs.c",
      "insertions": 76,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/syscalltbl.c",
      "insertions": 4,
      "deletions": 0
    }
  ],
  "total_insertions": 2337,
  "total_deletions": 298,
  "total_changes": 2635,
  "parents": [
    "a1f749de8a610096ca0dd9a40d89c8fa4098c8eb",
    "2fa5ebe3bc4e31e07a99196455498472417842f2"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "samples/ftrace/ftrace-direct-modify.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "samples/ftrace/ftrace-direct-multi.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "samples/ftrace/ftrace-direct-too.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "samples/ftrace/ftrace-direct-multi-modify.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/loongarch/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "samples/ftrace/ftrace-direct.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}