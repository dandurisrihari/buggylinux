commit 577bdc496614ced56d999bbb425e85adf2386490
Author: Avi Kivity <avi@qumranet.com>
Date:   Sat Jul 19 08:57:05 2008 +0300

    KVM: Avoid instruction emulation when event delivery is pending
    
    When an event (such as an interrupt) is injected, and the stack is
    shadowed (and therefore write protected), the guest will exit.  The
    current code will see that the stack is shadowed and emulate a few
    instructions, each time postponing the injection.  Eventually the
    injection may succeed, but at that time the guest may be unwilling
    to accept the interrupt (for example, the TPR may have changed).
    
    This occurs every once in a while during a Windows 2008 boot.
    
    Fix by unshadowing the fault address if the fault was due to an event
    injection.
    
    Signed-off-by: Avi Kivity <avi@qumranet.com>

diff --git a/arch/x86/kvm/mmu.c b/arch/x86/kvm/mmu.c
index d087d9c4f2d9..2fa231923cf7 100644
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@ -1814,6 +1814,7 @@ int kvm_mmu_unprotect_page_virt(struct kvm_vcpu *vcpu, gva_t gva)
 	spin_unlock(&vcpu->kvm->mmu_lock);
 	return r;
 }
+EXPORT_SYMBOL_GPL(kvm_mmu_unprotect_page_virt);
 
 void __kvm_mmu_free_some_pages(struct kvm_vcpu *vcpu)
 {