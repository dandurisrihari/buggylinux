{
  "hash": "2c9b3512402ed192d1f43f4531fb5da947e72bd0",
  "hash_short": "2c9b3512",
  "subject": "Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm",
  "body": "Pull kvm updates from Paolo Bonzini:\n \"ARM:\n\n   - Initial infrastructure for shadow stage-2 MMUs, as part of nested\n     virtualization enablement\n\n   - Support for userspace changes to the guest CTR_EL0 value, enabling\n     (in part) migration of VMs between heterogenous hardware\n\n   - Fixes + improvements to pKVM's FF-A proxy, adding support for v1.1\n     of the protocol\n\n   - FPSIMD/SVE support for nested, including merged trap configuration\n     and exception routing\n\n   - New command-line parameter to control the WFx trap behavior under\n     KVM\n\n   - Introduce kCFI hardening in the EL2 hypervisor\n\n   - Fixes + cleanups for handling presence/absence of FEAT_TCRX\n\n   - Miscellaneous fixes + documentation updates\n\n  LoongArch:\n\n   - Add paravirt steal time support\n\n   - Add support for KVM_DIRTY_LOG_INITIALLY_SET\n\n   - Add perf kvm-stat support for loongarch\n\n  RISC-V:\n\n   - Redirect AMO load/store access fault traps to guest\n\n   - perf kvm stat support\n\n   - Use guest files for IMSIC virtualization, when available\n\n  s390:\n\n   - Assortment of tiny fixes which are not time critical\n\n  x86:\n\n   - Fixes for Xen emulation\n\n   - Add a global struct to consolidate tracking of host values, e.g.\n     EFER\n\n   - Add KVM_CAP_X86_APIC_BUS_CYCLES_NS to allow configuring the\n     effective APIC bus frequency, because TDX\n\n   - Print the name of the APICv/AVIC inhibits in the relevant\n     tracepoint\n\n   - Clean up KVM's handling of vendor specific emulation to\n     consistently act on \"compatible with Intel/AMD\", versus checking\n     for a specific vendor\n\n   - Drop MTRR virtualization, and instead always honor guest PAT on\n     CPUs that support self-snoop\n\n   - Update to the newfangled Intel CPU FMS infrastructure\n\n   - Don't advertise IA32_PERF_GLOBAL_OVF_CTRL as an MSR-to-be-saved, as\n     it reads '0' and writes from userspace are ignored\n\n   - Misc cleanups\n\n  x86 - MMU:\n\n   - Small cleanups, renames and refactoring extracted from the upcoming\n     Intel TDX support\n\n   - Don't allocate kvm_mmu_page.shadowed_translation for shadow pages\n     that can't hold leafs SPTEs\n\n   - Unconditionally drop mmu_lock when allocating TDP MMU page tables\n     for eager page splitting, to avoid stalling vCPUs when splitting\n     huge pages\n\n   - Bug the VM instead of simply warning if KVM tries to split a SPTE\n     that is non-present or not-huge. KVM is guaranteed to end up in a\n     broken state because the callers fully expect a valid SPTE, it's\n     all but dangerous to let more MMU changes happen afterwards\n\n  x86 - AMD:\n\n   - Make per-CPU save_area allocations NUMA-aware\n\n   - Force sev_es_host_save_area() to be inlined to avoid calling into\n     an instrumentable function from noinstr code\n\n   - Base support for running SEV-SNP guests. API-wise, this includes a\n     new KVM_X86_SNP_VM type, encrypting/measure the initial image into\n     guest memory, and finalizing it before launching it. Internally,\n     there are some gmem/mmu hooks needed to prepare gmem-allocated\n     pages before mapping them into guest private memory ranges\n\n     This includes basic support for attestation guest requests, enough\n     to say that KVM supports the GHCB 2.0 specification\n\n     There is no support yet for loading into the firmware those signing\n     keys to be used for attestation requests, and therefore no need yet\n     for the host to provide certificate data for those keys.\n\n     To support fetching certificate data from userspace, a new KVM exit\n     type will be needed to handle fetching the certificate from\n     userspace.\n\n     An attempt to define a new KVM_EXIT_COCO / KVM_EXIT_COCO_REQ_CERTS\n     exit type to handle this was introduced in v1 of this patchset, but\n     is still being discussed by community, so for now this patchset\n     only implements a stub version of SNP Extended Guest Requests that\n     does not provide certificate data\n\n  x86 - Intel:\n\n   - Remove an unnecessary EPT TLB flush when enabling hardware\n\n   - Fix a series of bugs that cause KVM to fail to detect nested\n     pending posted interrupts as valid wake eents for a vCPU executing\n     HLT in L2 (with HLT-exiting disable by L1)\n\n   - KVM: x86: Suppress MMIO that is triggered during task switch\n     emulation\n\n     Explicitly suppress userspace emulated MMIO exits that are\n     triggered when emulating a task switch as KVM doesn't support\n     userspace MMIO during complex (multi-step) emulation\n\n     Silently ignoring the exit request can result in the\n     WARN_ON_ONCE(vcpu->mmio_needed) firing if KVM exits to userspace\n     for some other reason prior to purging mmio_needed\n\n     See commit 0dc902267cb3 (\"KVM: x86: Suppress pending MMIO write\n     exits if emulator detects exception\") for more details on KVM's\n     limitations with respect to emulated MMIO during complex emulator\n     flows\n\n  Generic:\n\n   - Rename the AS_UNMOVABLE flag that was introduced for KVM to\n     AS_INACCESSIBLE, because the special casing needed by these pages\n     is not due to just unmovability (and in fact they are only\n     unmovable because the CPU cannot access them)\n\n   - New ioctl to populate the KVM page tables in advance, which is\n     useful to mitigate KVM page faults during guest boot or after live\n     migration. The code will also be used by TDX, but (probably) not\n     through the ioctl\n\n   - Enable halt poll shrinking by default, as Intel found it to be a\n     clear win\n\n   - Setup empty IRQ routing when creating a VM to avoid having to\n     synchronize SRCU when creating a split IRQCHIP on x86\n\n   - Rework the sched_in/out() paths to replace kvm_arch_sched_in() with\n     a flag that arch code can use for hooking both sched_in() and\n     sched_out()\n\n   - Take the vCPU @id as an \"unsigned long\" instead of \"u32\" to avoid\n     truncating a bogus value from userspace, e.g. to help userspace\n     detect bugs\n\n   - Mark a vCPU as preempted if and only if it's scheduled out while in\n     the KVM_RUN loop, e.g. to avoid marking it preempted and thus\n     writing guest memory when retrieving guest state during live\n     migration blackout\n\n  Selftests:\n\n   - Remove dead code in the memslot modification stress test\n\n   - Treat \"branch instructions retired\" as supported on all AMD Family\n     17h+ CPUs\n\n   - Print the guest pseudo-RNG seed only when it changes, to avoid\n     spamming the log for tests that create lots of VMs\n\n   - Make the PMU counters test less flaky when counting LLC cache\n     misses by doing CLFLUSH{OPT} in every loop iteration\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (227 commits)\n  crypto: ccp: Add the SNP_VLEK_LOAD command\n  KVM: x86/pmu: Add kvm_pmu_call() to simplify static calls of kvm_pmu_ops\n  KVM: x86: Introduce kvm_x86_call() to simplify static calls of kvm_x86_ops\n  KVM: x86: Replace static_call_cond() with static_call()\n  KVM: SEV: Provide support for SNP_EXTENDED_GUEST_REQUEST NAE event\n  x86/sev: Move sev_guest.h into common SEV header\n  KVM: SEV: Provide support for SNP_GUEST_REQUEST NAE event\n  KVM: x86: Suppress MMIO that is triggered during task switch emulation\n  KVM: x86/mmu: Clean up make_huge_page_split_spte() definition and intro\n  KVM: x86/mmu: Bug the VM if KVM tries to split a !hugepage SPTE\n  KVM: selftests: x86: Add test for KVM_PRE_FAULT_MEMORY\n  KVM: x86: Implement kvm_arch_vcpu_pre_fault_memory()\n  KVM: x86/mmu: Make kvm_mmu_do_page_fault() return mapped level\n  KVM: x86/mmu: Account pf_{fixed,emulate,spurious} in callers of \"do page fault\"\n  KVM: x86/mmu: Bump pf_taken stat only in the \"real\" page fault handler\n  KVM: Add KVM_PRE_FAULT_MEMORY vcpu ioctl to pre-populate guest memory\n  KVM: Document KVM_PRE_FAULT_MEMORY ioctl\n  mm, virt: merge AS_UNMOVABLE and AS_INACCESSIBLE\n  perf kvm: Add kvm-stat for loongarch64\n  LoongArch: KVM: Add PV steal time support in guest side\n  ...",
  "full_message": "Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull kvm updates from Paolo Bonzini:\n \"ARM:\n\n   - Initial infrastructure for shadow stage-2 MMUs, as part of nested\n     virtualization enablement\n\n   - Support for userspace changes to the guest CTR_EL0 value, enabling\n     (in part) migration of VMs between heterogenous hardware\n\n   - Fixes + improvements to pKVM's FF-A proxy, adding support for v1.1\n     of the protocol\n\n   - FPSIMD/SVE support for nested, including merged trap configuration\n     and exception routing\n\n   - New command-line parameter to control the WFx trap behavior under\n     KVM\n\n   - Introduce kCFI hardening in the EL2 hypervisor\n\n   - Fixes + cleanups for handling presence/absence of FEAT_TCRX\n\n   - Miscellaneous fixes + documentation updates\n\n  LoongArch:\n\n   - Add paravirt steal time support\n\n   - Add support for KVM_DIRTY_LOG_INITIALLY_SET\n\n   - Add perf kvm-stat support for loongarch\n\n  RISC-V:\n\n   - Redirect AMO load/store access fault traps to guest\n\n   - perf kvm stat support\n\n   - Use guest files for IMSIC virtualization, when available\n\n  s390:\n\n   - Assortment of tiny fixes which are not time critical\n\n  x86:\n\n   - Fixes for Xen emulation\n\n   - Add a global struct to consolidate tracking of host values, e.g.\n     EFER\n\n   - Add KVM_CAP_X86_APIC_BUS_CYCLES_NS to allow configuring the\n     effective APIC bus frequency, because TDX\n\n   - Print the name of the APICv/AVIC inhibits in the relevant\n     tracepoint\n\n   - Clean up KVM's handling of vendor specific emulation to\n     consistently act on \"compatible with Intel/AMD\", versus checking\n     for a specific vendor\n\n   - Drop MTRR virtualization, and instead always honor guest PAT on\n     CPUs that support self-snoop\n\n   - Update to the newfangled Intel CPU FMS infrastructure\n\n   - Don't advertise IA32_PERF_GLOBAL_OVF_CTRL as an MSR-to-be-saved, as\n     it reads '0' and writes from userspace are ignored\n\n   - Misc cleanups\n\n  x86 - MMU:\n\n   - Small cleanups, renames and refactoring extracted from the upcoming\n     Intel TDX support\n\n   - Don't allocate kvm_mmu_page.shadowed_translation for shadow pages\n     that can't hold leafs SPTEs\n\n   - Unconditionally drop mmu_lock when allocating TDP MMU page tables\n     for eager page splitting, to avoid stalling vCPUs when splitting\n     huge pages\n\n   - Bug the VM instead of simply warning if KVM tries to split a SPTE\n     that is non-present or not-huge. KVM is guaranteed to end up in a\n     broken state because the callers fully expect a valid SPTE, it's\n     all but dangerous to let more MMU changes happen afterwards\n\n  x86 - AMD:\n\n   - Make per-CPU save_area allocations NUMA-aware\n\n   - Force sev_es_host_save_area() to be inlined to avoid calling into\n     an instrumentable function from noinstr code\n\n   - Base support for running SEV-SNP guests. API-wise, this includes a\n     new KVM_X86_SNP_VM type, encrypting/measure the initial image into\n     guest memory, and finalizing it before launching it. Internally,\n     there are some gmem/mmu hooks needed to prepare gmem-allocated\n     pages before mapping them into guest private memory ranges\n\n     This includes basic support for attestation guest requests, enough\n     to say that KVM supports the GHCB 2.0 specification\n\n     There is no support yet for loading into the firmware those signing\n     keys to be used for attestation requests, and therefore no need yet\n     for the host to provide certificate data for those keys.\n\n     To support fetching certificate data from userspace, a new KVM exit\n     type will be needed to handle fetching the certificate from\n     userspace.\n\n     An attempt to define a new KVM_EXIT_COCO / KVM_EXIT_COCO_REQ_CERTS\n     exit type to handle this was introduced in v1 of this patchset, but\n     is still being discussed by community, so for now this patchset\n     only implements a stub version of SNP Extended Guest Requests that\n     does not provide certificate data\n\n  x86 - Intel:\n\n   - Remove an unnecessary EPT TLB flush when enabling hardware\n\n   - Fix a series of bugs that cause KVM to fail to detect nested\n     pending posted interrupts as valid wake eents for a vCPU executing\n     HLT in L2 (with HLT-exiting disable by L1)\n\n   - KVM: x86: Suppress MMIO that is triggered during task switch\n     emulation\n\n     Explicitly suppress userspace emulated MMIO exits that are\n     triggered when emulating a task switch as KVM doesn't support\n     userspace MMIO during complex (multi-step) emulation\n\n     Silently ignoring the exit request can result in the\n     WARN_ON_ONCE(vcpu->mmio_needed) firing if KVM exits to userspace\n     for some other reason prior to purging mmio_needed\n\n     See commit 0dc902267cb3 (\"KVM: x86: Suppress pending MMIO write\n     exits if emulator detects exception\") for more details on KVM's\n     limitations with respect to emulated MMIO during complex emulator\n     flows\n\n  Generic:\n\n   - Rename the AS_UNMOVABLE flag that was introduced for KVM to\n     AS_INACCESSIBLE, because the special casing needed by these pages\n     is not due to just unmovability (and in fact they are only\n     unmovable because the CPU cannot access them)\n\n   - New ioctl to populate the KVM page tables in advance, which is\n     useful to mitigate KVM page faults during guest boot or after live\n     migration. The code will also be used by TDX, but (probably) not\n     through the ioctl\n\n   - Enable halt poll shrinking by default, as Intel found it to be a\n     clear win\n\n   - Setup empty IRQ routing when creating a VM to avoid having to\n     synchronize SRCU when creating a split IRQCHIP on x86\n\n   - Rework the sched_in/out() paths to replace kvm_arch_sched_in() with\n     a flag that arch code can use for hooking both sched_in() and\n     sched_out()\n\n   - Take the vCPU @id as an \"unsigned long\" instead of \"u32\" to avoid\n     truncating a bogus value from userspace, e.g. to help userspace\n     detect bugs\n\n   - Mark a vCPU as preempted if and only if it's scheduled out while in\n     the KVM_RUN loop, e.g. to avoid marking it preempted and thus\n     writing guest memory when retrieving guest state during live\n     migration blackout\n\n  Selftests:\n\n   - Remove dead code in the memslot modification stress test\n\n   - Treat \"branch instructions retired\" as supported on all AMD Family\n     17h+ CPUs\n\n   - Print the guest pseudo-RNG seed only when it changes, to avoid\n     spamming the log for tests that create lots of VMs\n\n   - Make the PMU counters test less flaky when counting LLC cache\n     misses by doing CLFLUSH{OPT} in every loop iteration\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (227 commits)\n  crypto: ccp: Add the SNP_VLEK_LOAD command\n  KVM: x86/pmu: Add kvm_pmu_call() to simplify static calls of kvm_pmu_ops\n  KVM: x86: Introduce kvm_x86_call() to simplify static calls of kvm_x86_ops\n  KVM: x86: Replace static_call_cond() with static_call()\n  KVM: SEV: Provide support for SNP_EXTENDED_GUEST_REQUEST NAE event\n  x86/sev: Move sev_guest.h into common SEV header\n  KVM: SEV: Provide support for SNP_GUEST_REQUEST NAE event\n  KVM: x86: Suppress MMIO that is triggered during task switch emulation\n  KVM: x86/mmu: Clean up make_huge_page_split_spte() definition and intro\n  KVM: x86/mmu: Bug the VM if KVM tries to split a !hugepage SPTE\n  KVM: selftests: x86: Add test for KVM_PRE_FAULT_MEMORY\n  KVM: x86: Implement kvm_arch_vcpu_pre_fault_memory()\n  KVM: x86/mmu: Make kvm_mmu_do_page_fault() return mapped level\n  KVM: x86/mmu: Account pf_{fixed,emulate,spurious} in callers of \"do page fault\"\n  KVM: x86/mmu: Bump pf_taken stat only in the \"real\" page fault handler\n  KVM: Add KVM_PRE_FAULT_MEMORY vcpu ioctl to pre-populate guest memory\n  KVM: Document KVM_PRE_FAULT_MEMORY ioctl\n  mm, virt: merge AS_UNMOVABLE and AS_INACCESSIBLE\n  perf kvm: Add kvm-stat for loongarch64\n  LoongArch: KVM: Add PV steal time support in guest side\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Sat Jul 20 12:41:03 2024 -0700",
  "author_date_iso": "2024-07-20T12:41:03-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Sat Jul 20 12:41:03 2024 -0700",
  "committer_date_iso": "2024-07-20T12:41:03-07:00",
  "files_changed": [
    "Documentation/admin-guide/kernel-parameters.txt",
    "Documentation/virt/coco/sev-guest.rst",
    "Documentation/virt/kvm/api.rst",
    "MAINTAINERS",
    "arch/arm64/include/asm/esr.h",
    "arch/arm64/include/asm/sysreg.h",
    "arch/arm64/kvm/pmu-emul.c",
    "arch/mips/kvm/mips.c",
    "arch/powerpc/include/asm/kvm_host.h",
    "arch/riscv/include/asm/kvm_host.h",
    "arch/riscv/kvm/vcpu.c",
    "arch/s390/include/asm/kvm_host.h",
    "arch/s390/kvm/kvm-s390.c",
    "arch/s390/kvm/vsie.c",
    "arch/x86/include/asm/sev-common.h",
    "arch/x86/include/asm/sev.h",
    "arch/x86/kvm/emulate.c",
    "drivers/crypto/ccp/sev-dev.c",
    "drivers/virt/coco/sev-guest/sev-guest.c",
    "include/linux/pagemap.h",
    "include/linux/srcu.h",
    "mm/migrate.c",
    "tools/perf/arch/loongarch/util/Build",
    "tools/perf/arch/riscv/util/Build"
  ],
  "files_changed_count": 24,
  "stats": [
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "insertions": 21,
      "deletions": 3
    },
    {
      "file": "Documentation/virt/coco/sev-guest.rst",
      "insertions": 19,
      "deletions": 0
    },
    {
      "file": "Documentation/virt/kvm/api.rst",
      "insertions": 138,
      "deletions": 31
    },
    {
      "file": "Documentation/virt/kvm/devices/arm-vgic.rst",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "Documentation/virt/kvm/halt-polling.rst",
      "insertions": 6,
      "deletions": 6
    },
    {
      "file": "Documentation/virt/kvm/x86/amd-memory-encryption.rst",
      "insertions": 109,
      "deletions": 1
    },
    {
      "file": "Documentation/virt/kvm/x86/errata.rst",
      "insertions": 18,
      "deletions": 0
    },
    {
      "file": "MAINTAINERS",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/esr.h",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/kvm_arm.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/kvm_asm.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/kvm_emulate.h",
      "insertions": 64,
      "deletions": 31
    },
    {
      "file": "arch/arm64/include/asm/kvm_host.h",
      "insertions": 64,
      "deletions": 5
    },
    {
      "file": "arch/arm64/include/asm/kvm_hyp.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/include/asm/kvm_mmu.h",
      "insertions": 26,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/kvm_nested.h",
      "insertions": 130,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/sysreg.h",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/asm-offsets.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/debug-monitors.c",
      "insertions": 1,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kernel/traps.c",
      "insertions": 3,
      "deletions": 5
    },
    {
      "file": "arch/arm64/kvm/arm.c",
      "insertions": 78,
      "deletions": 10
    },
    {
      "file": "arch/arm64/kvm/emulate-nested.c",
      "insertions": 104,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/fpsimd.c",
      "insertions": 14,
      "deletions": 5
    },
    {
      "file": "arch/arm64/kvm/handle_exit.c",
      "insertions": 34,
      "deletions": 9
    },
    {
      "file": "arch/arm64/kvm/hyp/entry.S",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/hyp/include/hyp/switch.h",
      "insertions": 26,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kvm/hyp/include/hyp/sysreg-sr.h",
      "insertions": 25,
      "deletions": 10
    },
    {
      "file": "arch/arm64/kvm/hyp/include/nvhe/ffa.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/Makefile",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/ffa.c",
      "insertions": 148,
      "deletions": 32
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/gen-hyprel.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/host.S",
      "insertions": 0,
      "deletions": 6
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/hyp-init.S",
      "insertions": 18,
      "deletions": 12
    },
    {
      "file": "arch/arm64/kvm/hyp/nvhe/setup.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kvm/hyp/vhe/switch.c",
      "insertions": 175,
      "deletions": 27
    },
    {
      "file": "arch/arm64/kvm/hyp/vhe/tlb.c",
      "insertions": 147,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/mmu.c",
      "insertions": 176,
      "deletions": 37
    },
    {
      "file": "arch/arm64/kvm/nested.c",
      "insertions": 882,
      "deletions": 120
    },
    {
      "file": "arch/arm64/kvm/pmu-emul.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kvm/reset.c",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kvm/sys_regs.c",
      "insertions": 543,
      "deletions": 50
    },
    {
      "file": "arch/loongarch/Kconfig",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/kvm_host.h",
      "insertions": 13,
      "deletions": 1
    },
    {
      "file": "arch/loongarch/include/asm/kvm_para.h",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/kvm_vcpu.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/loongarch.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/asm/paravirt.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/include/uapi/asm/kvm.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/kernel/paravirt.c",
      "insertions": 145,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/kernel/time.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/kvm/Kconfig",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/kvm/exit.c",
      "insertions": 36,
      "deletions": 2
    },
    {
      "file": "arch/loongarch/kvm/main.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/loongarch/kvm/mmu.c",
      "insertions": 51,
      "deletions": 21
    },
    {
      "file": "arch/loongarch/kvm/tlb.c",
      "insertions": 1,
      "deletions": 4
    },
    {
      "file": "arch/loongarch/kvm/vcpu.c",
      "insertions": 153,
      "deletions": 3
    },
    {
      "file": "arch/mips/include/asm/kvm_host.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/mips/kvm/mips.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/powerpc/include/asm/kvm_host.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/powerpc/kvm/powerpc.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/riscv/include/asm/kvm_aia_aplic.h",
      "insertions": 0,
      "deletions": 58
    },
    {
      "file": "arch/riscv/include/asm/kvm_aia_imsic.h",
      "insertions": 0,
      "deletions": 38
    },
    {
      "file": "arch/riscv/include/asm/kvm_host.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/riscv/kvm/aia.c",
      "insertions": 21,
      "deletions": 14
    },
    {
      "file": "arch/riscv/kvm/aia_aplic.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/riscv/kvm/aia_device.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/riscv/kvm/aia_imsic.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/riscv/kvm/trace.h",
      "insertions": 67,
      "deletions": 0
    },
    {
      "file": "arch/riscv/kvm/vcpu.c",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "arch/riscv/kvm/vcpu_exit.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/s390/include/asm/kvm_host.h",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "arch/s390/kvm/kvm-s390.c",
      "insertions": 6,
      "deletions": 8
    },
    {
      "file": "arch/s390/kvm/vsie.c",
      "insertions": 19,
      "deletions": 3
    },
    {
      "file": "arch/x86/include/asm/kvm-x86-ops.h",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "arch/x86/include/asm/kvm-x86-pmu-ops.h",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 55,
      "deletions": 35
    },
    {
      "file": "arch/x86/include/asm/sev-common.h",
      "insertions": 25,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/sev.h",
      "insertions": 51,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/svm.h",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "arch/x86/include/uapi/asm/kvm.h",
      "insertions": 49,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/Kconfig",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/cpuid.c",
      "insertions": 13,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/cpuid.h",
      "insertions": 0,
      "deletions": 18
    },
    {
      "file": "arch/x86/kvm/emulate.c",
      "insertions": 21,
      "deletions": 50
    },
    {
      "file": "arch/x86/kvm/hyperv.c",
      "insertions": 5,
      "deletions": 4
    },
    {
      "file": "arch/x86/kvm/irq.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/irq.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/irq_comm.c",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "arch/x86/kvm/kvm_cache_regs.h",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "arch/x86/kvm/kvm_emulate.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/lapic.c",
      "insertions": 26,
      "deletions": 22
    },
    {
      "file": "arch/x86/kvm/lapic.h",
      "insertions": 2,
      "deletions": 3
    },
    {
      "file": "arch/x86/kvm/mmu.h",
      "insertions": 5,
      "deletions": 37
    },
    {
      "file": "arch/x86/kvm/mmu/mmu.c",
      "insertions": 162,
      "deletions": 44
    },
    {
      "file": "arch/x86/kvm/mmu/mmu_internal.h",
      "insertions": 4,
      "deletions": 22
    },
    {
      "file": "arch/x86/kvm/mmu/paging_tmpl.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/mmu/spte.c",
      "insertions": 29,
      "deletions": 17
    },
    {
      "file": "arch/x86/kvm/mmu/spte.h",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "arch/x86/kvm/mmu/tdp_mmu.c",
      "insertions": 53,
      "deletions": 83
    },
    {
      "file": "arch/x86/kvm/mmu/tdp_mmu.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/mtrr.c",
      "insertions": 28,
      "deletions": 616
    },
    {
      "file": "arch/x86/kvm/pmu.c",
      "insertions": 37,
      "deletions": 36
    },
    {
      "file": "arch/x86/kvm/pmu.h",
      "insertions": 6,
      "deletions": 4
    },
    {
      "file": "arch/x86/kvm/smm.c",
      "insertions": 22,
      "deletions": 22
    },
    {
      "file": "arch/x86/kvm/svm/nested.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/svm/pmu.c",
      "insertions": 5,
      "deletions": 6
    },
    {
      "file": "arch/x86/kvm/svm/sev.c",
      "insertions": 1555,
      "deletions": 27
    },
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "insertions": 45,
      "deletions": 33
    },
    {
      "file": "arch/x86/kvm/svm/svm.h",
      "insertions": 66,
      "deletions": 4
    },
    {
      "file": "arch/x86/kvm/trace.h",
      "insertions": 46,
      "deletions": 9
    },
    {
      "file": "arch/x86/kvm/vmx/main.c",
      "insertions": 1,
      "deletions": 4
    },
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "insertions": 46,
      "deletions": 9
    },
    {
      "file": "arch/x86/kvm/vmx/pmu_intel.c",
      "insertions": 29,
      "deletions": 23
    },
    {
      "file": "arch/x86/kvm/vmx/posted_intr.h",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/vmx/vmcs12.h",
      "insertions": 8,
      "deletions": 6
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "insertions": 84,
      "deletions": 121
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.h",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/vmx/x86_ops.h",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 319,
      "deletions": 248
    },
    {
      "file": "arch/x86/kvm/x86.h",
      "insertions": 16,
      "deletions": 9
    },
    {
      "file": "arch/x86/kvm/xen.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "drivers/crypto/ccp/sev-dev.c",
      "insertions": 36,
      "deletions": 0
    },
    {
      "file": "drivers/virt/coco/sev-guest/sev-guest.c",
      "insertions": 0,
      "deletions": 2
    },
    {
      "file": "drivers/virt/coco/sev-guest/sev-guest.h",
      "insertions": 0,
      "deletions": 63
    },
    {
      "file": "include/linux/arm_ffa.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "include/linux/kvm_host.h",
      "insertions": 49,
      "deletions": 4
    },
    {
      "file": "include/linux/pagemap.h",
      "insertions": 7,
      "deletions": 6
    },
    {
      "file": "include/linux/psp-sev.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "include/linux/srcu.h",
      "insertions": 14,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/kvm.h",
      "insertions": 26,
      "deletions": 1
    },
    {
      "file": "include/uapi/linux/psp-sev.h",
      "insertions": 27,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/sev-guest.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "mm/compaction.c",
      "insertions": 6,
      "deletions": 6
    },
    {
      "file": "mm/migrate.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "mm/truncate.c",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "tools/include/uapi/linux/kvm.h",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/util/Build",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/util/header.c",
      "insertions": 96,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/loongarch/util/kvm-stat.c",
      "insertions": 139,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/riscv/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/riscv/util/Build",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/riscv/util/kvm-stat.c",
      "insertions": 78,
      "deletions": 0
    },
    {
      "file": "tools/perf/arch/riscv/util/riscv_exception_types.h",
      "insertions": 35,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/aarch64/set_id_regs.c",
      "insertions": 17,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/include/x86_64/apic.h",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/include/x86_64/processor.h",
      "insertions": 18,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/lib/kvm_util.c",
      "insertions": 7,
      "deletions": 2
    },
    {
      "file": "tools/testing/selftests/kvm/lib/x86_64/processor.c",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/memslot_modification_stress_test.c",
      "insertions": 0,
      "deletions": 6
    },
    {
      "file": "tools/testing/selftests/kvm/pre_fault_memory_test.c",
      "insertions": 146,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/x86_64/apic_bus_clock_test.c",
      "insertions": 194,
      "deletions": 0
    },
    {
      "file": "tools/testing/selftests/kvm/x86_64/max_vcpuid_cap_test.c",
      "insertions": 20,
      "deletions": 2
    },
    {
      "file": "tools/testing/selftests/kvm/x86_64/pmu_counters_test.c",
      "insertions": 29,
      "deletions": 15
    },
    {
      "file": "tools/testing/selftests/kvm/x86_64/pmu_event_filter_test.c",
      "insertions": 5,
      "deletions": 30
    },
    {
      "file": "tools/testing/selftests/kvm/x86_64/set_boot_cpu_id.c",
      "insertions": 16,
      "deletions": 0
    },
    {
      "file": "virt/kvm/Kconfig",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "virt/kvm/async_pf.c",
      "insertions": 1,
      "deletions": 12
    },
    {
      "file": "virt/kvm/guest_memfd.c",
      "insertions": 150,
      "deletions": 26
    },
    {
      "file": "virt/kvm/irqchip.c",
      "insertions": 24,
      "deletions": 0
    },
    {
      "file": "virt/kvm/kvm_main.c",
      "insertions": 93,
      "deletions": 13
    },
    {
      "file": "virt/kvm/pfncache.c",
      "insertions": 3,
      "deletions": 0
    }
  ],
  "total_insertions": 7757,
  "total_deletions": 2322,
  "total_changes": 10079,
  "parents": [
    "c43a20e4a520b37c2ef6d4f422de989992c9129f",
    "332d2c1d713e232e163386c35a3ba0c1b90df83f"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/virt/coco/sev-guest.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/esr.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/virt/kvm/api.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/sysreg.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/mips/kvm/mips.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/riscv/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kvm/pmu-emul.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/riscv/kvm/vcpu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "MAINTAINERS",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/s390/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/s390/kvm/vsie.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/sev.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/sev-common.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/s390/kvm/kvm-s390.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/crypto/ccp/sev-dev.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/emulate.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/virt/coco/sev-guest/sev-guest.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/pagemap.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/srcu.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/arch/riscv/util/Build",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "mm/migrate.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/arch/loongarch/util/Build",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}