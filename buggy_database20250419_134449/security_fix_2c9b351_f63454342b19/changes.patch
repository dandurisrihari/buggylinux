diff --cc arch/arm64/include/asm/esr.h
index 3f482500f71f,8eccf497894e..56c148890daf
--- a/arch/arm64/include/asm/esr.h
+++ b/arch/arm64/include/asm/esr.h
@@@ -394,15 -392,18 +400,21 @@@ static inline bool esr_is_data_abort(un
  	return ec == ESR_ELx_EC_DABT_LOW || ec == ESR_ELx_EC_DABT_CUR;
  }
  
+ static inline bool esr_is_cfi_brk(unsigned long esr)
+ {
+ 	return ESR_ELx_EC(esr) == ESR_ELx_EC_BRK64 &&
+ 	       (esr_brk_comment(esr) & ~CFI_BRK_IMM_MASK) == CFI_BRK_IMM_BASE;
+ }
+ 
  static inline bool esr_fsc_is_translation_fault(unsigned long esr)
  {
 -	/* Translation fault, level -1 */
 -	if ((esr & ESR_ELx_FSC) == 0b101011)
 -		return true;
 -	return (esr & ESR_ELx_FSC_TYPE) == ESR_ELx_FSC_FAULT;
 +	esr = esr & ESR_ELx_FSC;
 +
 +	return (esr == ESR_ELx_FSC_FAULT_L(3)) ||
 +	       (esr == ESR_ELx_FSC_FAULT_L(2)) ||
 +	       (esr == ESR_ELx_FSC_FAULT_L(1)) ||
 +	       (esr == ESR_ELx_FSC_FAULT_L(0)) ||
 +	       (esr == ESR_ELx_FSC_FAULT_L(-1));
  }
  
  static inline bool esr_fsc_is_permission_fault(unsigned long esr)
diff --cc arch/x86/include/asm/sev-common.h
index e90d403f2068,8647cc05e2f4..98726c2b04f8
--- a/arch/x86/include/asm/sev-common.h
+++ b/arch/x86/include/asm/sev-common.h
@@@ -98,19 -109,9 +109,22 @@@ enum psc_op 
  	/* GHCBData[63:32] */				\
  	(((u64)(val) & GENMASK_ULL(63, 32)) >> 32)
  
+ /* Set highest bit as a generic error response */
+ #define GHCB_MSR_PSC_RESP_ERROR (BIT_ULL(63) | GHCB_MSR_PSC_RESP)
+ 
 +/* GHCB Run at VMPL Request/Response */
 +#define GHCB_MSR_VMPL_REQ		0x016
 +#define GHCB_MSR_VMPL_REQ_LEVEL(v)			\
 +	/* GHCBData[39:32] */				\
 +	(((u64)(v) & GENMASK_ULL(7, 0) << 32) |		\
 +	/* GHCBDdata[11:0] */				\
 +	GHCB_MSR_VMPL_REQ)
 +
 +#define GHCB_MSR_VMPL_RESP		0x017
 +#define GHCB_MSR_VMPL_RESP_VAL(v)			\
 +	/* GHCBData[63:32] */				\
 +	(((u64)(v) & GENMASK_ULL(63, 32)) >> 32)
 +
  /* GHCB Hypervisor Feature Request/Response */
  #define GHCB_MSR_HV_FT_REQ		0x080
  #define GHCB_MSR_HV_FT_RESP		0x081
diff --cc tools/perf/arch/loongarch/util/Build
index 2386ebbf6dd4,b12d374d7096..b6b97de48233
--- a/tools/perf/arch/loongarch/util/Build
+++ b/tools/perf/arch/loongarch/util/Build
@@@ -1,5 -1,7 +1,7 @@@
 -perf-y += header.o
 -perf-y += perf_regs.o
++perf-util-y += header.o
 +perf-util-y += perf_regs.o
  
 -perf-$(CONFIG_DWARF)     += dwarf-regs.o
 -perf-$(CONFIG_LOCAL_LIBUNWIND) += unwind-libunwind.o
 -perf-$(CONFIG_LIBDW_DWARF_UNWIND) += unwind-libdw.o
 -perf-$(CONFIG_LIBTRACEEVENT) += kvm-stat.o
 +perf-util-$(CONFIG_DWARF)     += dwarf-regs.o
 +perf-util-$(CONFIG_LOCAL_LIBUNWIND) += unwind-libunwind.o
 +perf-util-$(CONFIG_LIBDW_DWARF_UNWIND) += unwind-libdw.o
++perf-util-$(CONFIG_LIBTRACEEVENT) += kvm-stat.o
diff --cc tools/perf/arch/riscv/util/Build
index 65ec3c66a375,d72b04f8d32b..f865cb0489ec
--- a/tools/perf/arch/riscv/util/Build
+++ b/tools/perf/arch/riscv/util/Build
@@@ -1,5 -1,6 +1,6 @@@
 -perf-y += perf_regs.o
 -perf-y += header.o
 +perf-util-y += perf_regs.o
 +perf-util-y += header.o
  
 -perf-$(CONFIG_LIBTRACEEVENT) += kvm-stat.o
 -perf-$(CONFIG_DWARF) += dwarf-regs.o
 -perf-$(CONFIG_LIBDW_DWARF_UNWIND) += unwind-libdw.o
++perf-util-$(CONFIG_LIBTRACEEVENT) += kvm-stat.o
 +perf-util-$(CONFIG_DWARF) += dwarf-regs.o
 +perf-util-$(CONFIG_LIBDW_DWARF_UNWIND) += unwind-libdw.o