Commit Hash: 1662cea4623f75d8251adf07370bbaa958f0355d
Subject: kset: fix memory leak when kset_register() returns error


Security Keywords:
- Inject

Full commit message:
kset: fix memory leak when kset_register() returns error

Inject fault while loading module, kset_register() may fail.
If it fails, the kset.kobj.name allocated by kobject_set_name()
which must be called before a call to kset_register() may be
leaked, since refcount of kobj was set in kset_init().

To mitigate this, we free the name in kset_register() when an
error is encountered, i.e. when kset_register() returns an error.

A kset may be embedded in a larger structure which may be dynamically
allocated in callers, it needs to be freed in ktype.release() or error
path in callers, in this case, we can not call kset_put() in kset_register(),
or it will cause double free, so just call kfree_const() to free the
name and set it to NULL to avoid accessing bad pointer in callers.

With this fix, the callers don't need care about freeing the name
and may call kset_put() if kset_register() fails.

Suggested-by: Luben Tuikov <luben.tuikov@amd.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Reviewed-by: <luben.tuikov@amd.com>
Link: https://lore.kernel.org/r/20221025071549.1280528-1-yangyingliang@huawei.com
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Metadata:
Author: Yang Yingliang <yangyingliang@huawei.com>
Author Date: Tue Oct 25 15:15:49 2022 +0800
Committer: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Commit Date: Tue Oct 25 18:57:09 2022 +0200

Files Changed: 1
Lines Added: 8
Lines Removed: 1
Total Changes: 9
