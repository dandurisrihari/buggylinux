{
  "hash": "867ed321f90d06aaba84e2c91de51cd3038825ef",
  "hash_short": "867ed321",
  "subject": "btrfs: abort the transaction if we fail to inc ref in btrfs_copy_root",
  "body": "While testing my error handling patches, I added a error injection site\nat btrfs_inc_extent_ref, to validate the error handling I added was\ndoing the correct thing.  However I hit a pretty ugly corruption while\ndoing this check, with the following error injection stack trace:\n\nbtrfs_inc_extent_ref\n  btrfs_copy_root\n    create_reloc_root\n      btrfs_init_reloc_root\n\tbtrfs_record_root_in_trans\n\t  btrfs_start_transaction\n\t    btrfs_update_inode\n\t      btrfs_update_time\n\t\ttouch_atime\n\t\t  file_accessed\n\t\t    btrfs_file_mmap\n\nThis is because we do not catch the error from btrfs_inc_extent_ref,\nwhich in practice would be ENOMEM, which means we lose the extent\nreferences for a root that has already been allocated and inserted,\nwhich is the problem.  Fix this by aborting the transaction if we fail\nto do the reference modification.\n\nCC: stable@vger.kernel.org # 4.4+\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "full_message": "btrfs: abort the transaction if we fail to inc ref in btrfs_copy_root\n\nWhile testing my error handling patches, I added a error injection site\nat btrfs_inc_extent_ref, to validate the error handling I added was\ndoing the correct thing.  However I hit a pretty ugly corruption while\ndoing this check, with the following error injection stack trace:\n\nbtrfs_inc_extent_ref\n  btrfs_copy_root\n    create_reloc_root\n      btrfs_init_reloc_root\n\tbtrfs_record_root_in_trans\n\t  btrfs_start_transaction\n\t    btrfs_update_inode\n\t      btrfs_update_time\n\t\ttouch_atime\n\t\t  file_accessed\n\t\t    btrfs_file_mmap\n\nThis is because we do not catch the error from btrfs_inc_extent_ref,\nwhich in practice would be ENOMEM, which means we lose the extent\nreferences for a root that has already been allocated and inserted,\nwhich is the problem.  Fix this by aborting the transaction if we fail\nto do the reference modification.\n\nCC: stable@vger.kernel.org # 4.4+\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "author_name": "Josef Bacik",
  "author_email": "josef@toxicpanda.com",
  "author_date": "Thu Jan 14 14:02:46 2021 -0500",
  "author_date_iso": "2021-01-14T14:02:46-05:00",
  "committer_name": "David Sterba",
  "committer_email": "dsterba@suse.com",
  "committer_date": "Mon Feb 8 22:58:56 2021 +0100",
  "committer_date_iso": "2021-02-08T22:58:56+01:00",
  "files_changed": [
    "fs/btrfs/ctree.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/btrfs/ctree.c",
      "insertions": 3,
      "deletions": 2
    }
  ],
  "total_insertions": 3,
  "total_deletions": 2,
  "total_changes": 5,
  "parents": [
    "eddda68d97732ce05ca145f8e85e8a447f65cdad"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/ctree.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}