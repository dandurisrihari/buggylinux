{
  "hash": "377a22d3caec3d2cda0cc996101121145ac43ff2",
  "hash_short": "377a22d3",
  "subject": "media: venus: don't abuse dma_alloc for non-DMA allocations",
  "body": "In venus_boot(), we pass a pointer to a phys_addr_t\ninto dmam_alloc_coherent, which the compiler warns about:\n\nplatform/qcom/venus/firmware.c: In function 'venus_boot':\nplatform/qcom/venus/firmware.c:63:49: error: passing argument 3 of 'dmam_alloc_coherent' from incompatible pointer type [-Werror=incompatible-pointer-types]\n\nTo avoid the error refactor venus_boot function by discard\ndma_alloc_coherent invocation because we don't want to map the\nmemory for the device.  Something more, the usage of\nDMA mapping API is actually wrong and the current\nimplementation relies on several bugs in DMA mapping code.\nWhen these bugs are fixed that will break firmware loading,\nso fix this now to avoid future troubles.\n\nThe meaning of venus_boot is to copy the content of the\nfirmware buffer into reserved (and memblock removed)\nblock of memory and pass that physical address to the\ntrusted zone for authentication and mapping through iommu\nform the secure world. After iommu mapping is done the iova\nis passed as ane entry point to the remote processor.\n\nAfter this change memory-region property is parsed manually\nand the physical address is memremap to CPU, call mdt_load to\nload firmware segments into proper places and unmap\nreserved memory.\n\nFixes: af2c3834c8ca (\"[media] media: venus: adding core part and helper functions\")\n\nSigned-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>\nReviewed-by: Arnd Bergmann <arnd@arndb.de>\nSigned-off-by: Hans Verkuil <hans.verkuil@cisco.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
  "full_message": "media: venus: don't abuse dma_alloc for non-DMA allocations\n\nIn venus_boot(), we pass a pointer to a phys_addr_t\ninto dmam_alloc_coherent, which the compiler warns about:\n\nplatform/qcom/venus/firmware.c: In function 'venus_boot':\nplatform/qcom/venus/firmware.c:63:49: error: passing argument 3 of 'dmam_alloc_coherent' from incompatible pointer type [-Werror=incompatible-pointer-types]\n\nTo avoid the error refactor venus_boot function by discard\ndma_alloc_coherent invocation because we don't want to map the\nmemory for the device.  Something more, the usage of\nDMA mapping API is actually wrong and the current\nimplementation relies on several bugs in DMA mapping code.\nWhen these bugs are fixed that will break firmware loading,\nso fix this now to avoid future troubles.\n\nThe meaning of venus_boot is to copy the content of the\nfirmware buffer into reserved (and memblock removed)\nblock of memory and pass that physical address to the\ntrusted zone for authentication and mapping through iommu\nform the secure world. After iommu mapping is done the iova\nis passed as ane entry point to the remote processor.\n\nAfter this change memory-region property is parsed manually\nand the physical address is memremap to CPU, call mdt_load to\nload firmware segments into proper places and unmap\nreserved memory.\n\nFixes: af2c3834c8ca (\"[media] media: venus: adding core part and helper functions\")\n\nSigned-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>\nReviewed-by: Arnd Bergmann <arnd@arndb.de>\nSigned-off-by: Hans Verkuil <hans.verkuil@cisco.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
  "author_name": "Stanimir Varbanov",
  "author_email": "stanimir.varbanov@linaro.org",
  "author_date": "Wed Jul 19 07:51:37 2017 -0400",
  "author_date_iso": "2017-07-19T07:51:37-04:00",
  "committer_name": "Mauro Carvalho Chehab",
  "committer_email": "mchehab@s-opensource.com",
  "committer_date": "Wed Jul 26 06:14:32 2017 -0400",
  "committer_date_iso": "2017-07-26T06:14:32-04:00",
  "files_changed": [
    "drivers/media/platform/qcom/venus/core.c",
    "drivers/media/platform/qcom/venus/core.h",
    "drivers/media/platform/qcom/venus/firmware.c",
    "drivers/media/platform/qcom/venus/firmware.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "drivers/media/platform/qcom/venus/core.c",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "drivers/media/platform/qcom/venus/core.h",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "drivers/media/platform/qcom/venus/firmware.c",
      "insertions": 32,
      "deletions": 42
    },
    {
      "file": "drivers/media/platform/qcom/venus/firmware.h",
      "insertions": 2,
      "deletions": 3
    }
  ],
  "total_insertions": 39,
  "total_deletions": 51,
  "total_changes": 90,
  "parents": [
    "3e7caae5f2853436153a7d5f253fd7e0e720f4b8"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.13",
    "v4.13-rc4",
    "v4.13-rc5",
    "v4.13-rc6",
    "v4.13-rc7",
    "v4.14",
    "v4.14-rc1",
    "v4.14-rc2",
    "v4.14-rc3",
    "v4.14-rc4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/media/platform/qcom/venus/core.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/media/platform/qcom/venus/core.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/media/platform/qcom/venus/firmware.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/media/platform/qcom/venus/firmware.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}