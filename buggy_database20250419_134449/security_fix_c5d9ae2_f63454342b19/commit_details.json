{
  "hash": "c5d9ae265b105d9a67575fb67bd4650a6fc08e25",
  "hash_short": "c5d9ae26",
  "subject": "Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm",
  "body": "Pull kvm fixes from Paolo Bonzini:\n \"ARM:\n\n   - Read HW interrupt pending state from the HW\n\n  x86:\n\n   - Don't truncate the performance event mask on AMD\n\n   - Fix Xen runstate updates to be atomic when preempting vCPU\n\n   - Fix for AMD AVIC interrupt injection race\n\n   - Several other AMD fixes\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: x86/pmu: Use AMD64_RAW_EVENT_MASK for PERF_TYPE_RAW\n  KVM: x86/pmu: Don't truncate the PerfEvtSeln MSR when creating a perf event\n  KVM: SVM: fix race between interrupt delivery and AVIC inhibition\n  KVM: SVM: set IRR in svm_deliver_interrupt\n  KVM: SVM: extract avic_ring_doorbell\n  selftests: kvm: Remove absent target file\n  KVM: arm64: vgic: Read HW interrupt pending state from the HW\n  KVM: x86/xen: Fix runstate updates to be atomic when preempting vCPU\n  KVM: x86: SVM: move avic definitions from AMD's spec to svm.h\n  KVM: x86: lapic: don't touch irr_pending in kvm_apic_update_apicv when inhibiting it\n  KVM: x86: nSVM: deal with L1 hypervisor that intercepts interrupts but lets L2 control them\n  KVM: x86: nSVM: expose clean bit support to the guest\n  KVM: x86: nSVM/nVMX: set nested_run_pending on VM entry which is a result of RSM\n  KVM: x86: nSVM: mark vmcb01 as dirty when restoring SMM saved state\n  KVM: x86: nSVM: fix potential NULL derefernce on nested migration\n  KVM: x86: SVM: don't passthrough SMAP/SMEP/PKE bits in !NPT && !gCR0.PG case\n  Revert \"svm: Add warning message for AVIC IPI invalid target\"",
  "full_message": "Merge tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm\n\nPull kvm fixes from Paolo Bonzini:\n \"ARM:\n\n   - Read HW interrupt pending state from the HW\n\n  x86:\n\n   - Don't truncate the performance event mask on AMD\n\n   - Fix Xen runstate updates to be atomic when preempting vCPU\n\n   - Fix for AMD AVIC interrupt injection race\n\n   - Several other AMD fixes\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/virt/kvm/kvm:\n  KVM: x86/pmu: Use AMD64_RAW_EVENT_MASK for PERF_TYPE_RAW\n  KVM: x86/pmu: Don't truncate the PerfEvtSeln MSR when creating a perf event\n  KVM: SVM: fix race between interrupt delivery and AVIC inhibition\n  KVM: SVM: set IRR in svm_deliver_interrupt\n  KVM: SVM: extract avic_ring_doorbell\n  selftests: kvm: Remove absent target file\n  KVM: arm64: vgic: Read HW interrupt pending state from the HW\n  KVM: x86/xen: Fix runstate updates to be atomic when preempting vCPU\n  KVM: x86: SVM: move avic definitions from AMD's spec to svm.h\n  KVM: x86: lapic: don't touch irr_pending in kvm_apic_update_apicv when inhibiting it\n  KVM: x86: nSVM: deal with L1 hypervisor that intercepts interrupts but lets L2 control them\n  KVM: x86: nSVM: expose clean bit support to the guest\n  KVM: x86: nSVM/nVMX: set nested_run_pending on VM entry which is a result of RSM\n  KVM: x86: nSVM: mark vmcb01 as dirty when restoring SMM saved state\n  KVM: x86: nSVM: fix potential NULL derefernce on nested migration\n  KVM: x86: SVM: don't passthrough SMAP/SMEP/PKE bits in !NPT && !gCR0.PG case\n  Revert \"svm: Add warning message for AVIC IPI invalid target\"",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Tue Feb 15 11:07:59 2022 -0800",
  "author_date_iso": "2022-02-15T11:07:59-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Tue Feb 15 11:07:59 2022 -0800",
  "committer_date_iso": "2022-02-15T11:07:59-08:00",
  "files_changed": [],
  "files_changed_count": 0,
  "stats": [
    {
      "file": "arch/arm64/kvm/vgic/vgic-mmio.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/msr-index.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/svm.h",
      "insertions": 36,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/lapic.c",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/pmu.c",
      "insertions": 4,
      "deletions": 3
    },
    {
      "file": "arch/x86/kvm/svm/avic.c",
      "insertions": 23,
      "deletions": 70
    },
    {
      "file": "arch/x86/kvm/svm/nested.c",
      "insertions": 14,
      "deletions": 12
    },
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "insertions": 72,
      "deletions": 13
    },
    {
      "file": "arch/x86/kvm/svm/svm.h",
      "insertions": 3,
      "deletions": 12
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/xen.c",
      "insertions": 67,
      "deletions": 30
    },
    {
      "file": "tools/testing/selftests/kvm/Makefile",
      "insertions": 0,
      "deletions": 1
    }
  ],
  "total_insertions": 232,
  "total_deletions": 143,
  "total_changes": 375,
  "parents": [
    "a254a9da455c171441ab3a76ed8f5d1e9412e15f",
    "710c476514313c74045c41c0571bb5178fd16e3d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": []
}