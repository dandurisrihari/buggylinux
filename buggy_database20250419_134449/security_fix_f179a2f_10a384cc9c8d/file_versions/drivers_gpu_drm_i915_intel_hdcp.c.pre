commit a01244967d4311afb1a8e068184c2a30202025f5
Author: Ramalingam C <ramalingam.c@intel.com>
Date:   Sat Feb 3 03:39:03 2018 +0530

    drm/i915: Handle failure from 2nd stage HDCP auth
    
    We enable the HDCP encryption as a part of first stage authentication.
    So when second stage authentication fails, we need to disable the HDCP
    encryption and signalling.
    
    This patch ensures that, when hdcp authentication fails, HDCP encryption
    and signalling is turned off.
    
    v2:
      Dropped connector ref passing to auth [Seanpaul]
      Moved the call to disable_hdcp() to enable_hdcp() [Seanpaul]
    
    v3:
      No Changes. Added the Reveiwed-by tag.
    
    Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1517609350-10698-2-git-send-email-ramalingam.c@intel.com

diff --git a/drivers/gpu/drm/i915/intel_hdcp.c b/drivers/gpu/drm/i915/intel_hdcp.c
index b97184eccd9c..de9a925c122d 100644
--- a/drivers/gpu/drm/i915/intel_hdcp.c
+++ b/drivers/gpu/drm/i915/intel_hdcp.c
@@ -562,6 +562,9 @@ static int _intel_hdcp_enable(struct intel_connector *connector)
 			      connector->hdcp_shim);
 	if (ret) {
 		DRM_ERROR("Failed to authenticate HDCP (%d)\n", ret);
+
+		/* Ensuring HDCP encryption and signalling are stopped. */
+		_intel_hdcp_disable(connector);
 		return ret;
 	}