commit ff77042296d0a54535ddf74412c5ae92cb4ec76a
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Wed Feb 12 23:23:20 2020 +0300

    null_blk: fix spurious IO errors after failed past-wp access
    
    Steps to reproduce:
    
            BLKRESETZONE zone 0
    
            // force EIO
            pwrite(fd, buf, 4096, 4096);
    
            [issue more IO including zone ioctls]
    
    It will start failing randomly including IO to unrelated zones because of
    ->error "reuse". Trigger can be partition detection as well if test is not
    run immediately which is even more entertaining.
    
    The fix is of course to clear ->error where necessary.
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Alexey Dobriyan (SK hynix) <adobriyan@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

diff --git a/drivers/block/null_blk_main.c b/drivers/block/null_blk_main.c
index 89bb16a99007..8060ffa4bc75 100644
--- a/drivers/block/null_blk_main.c
+++ b/drivers/block/null_blk_main.c
@@ -615,6 +615,7 @@ static struct nullb_cmd *__alloc_cmd(struct nullb_queue *nq)
 	if (tag != -1U) {
 		cmd = &nq->cmds[tag];
 		cmd->tag = tag;
+		cmd->error = BLK_STS_OK;
 		cmd->nq = nq;
 		if (nq->dev->irqmode == NULL_IRQ_TIMER) {
 			hrtimer_init(&cmd->timer, CLOCK_MONOTONIC,
@@ -1395,6 +1396,7 @@ static blk_status_t null_queue_rq(struct blk_mq_hw_ctx *hctx,
 		cmd->timer.function = null_cmd_timer_expired;
 	}
 	cmd->rq = bd->rq;
+	cmd->error = BLK_STS_OK;
 	cmd->nq = nq;
 
 	blk_mq_start_request(bd->rq);