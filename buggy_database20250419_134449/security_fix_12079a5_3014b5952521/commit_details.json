{
  "hash": "12079a59ce52e72a342c49cfacf0281213fd6f32",
  "hash_short": "12079a59",
  "subject": "net: Implement fault injection forcing skb reallocation",
  "body": "Introduce a fault injection mechanism to force skb reallocation. The\nprimary goal is to catch bugs related to pointer invalidation after\npotential skb reallocation.\n\nThe fault injection mechanism aims to identify scenarios where callers\nretain pointers to various headers in the skb but fail to reload these\npointers after calling a function that may reallocate the data. This\ntype of bug can lead to memory corruption or crashes if the old,\nnow-invalid pointers are used.\n\nBy forcing reallocation through fault injection, we can stress-test code\npaths and ensure proper pointer management after potential skb\nreallocations.\n\nAdd a hook for fault injection in the following functions:\n\n * pskb_trim_rcsum()\n * pskb_may_pull_reason()\n * pskb_trim()\n\nAs the other fault injection mechanism, protect it under a debug Kconfig\ncalled CONFIG_FAIL_SKB_REALLOC.\n\nThis patch was *heavily* inspired by Jakub's proposal from:\nhttps://lore.kernel.org/all/20240719174140.47a868e6@kernel.org/\n\nCC: Akinobu Mita <akinobu.mita@gmail.com>\nSuggested-by: Jakub Kicinski <kuba@kernel.org>\nSigned-off-by: Breno Leitao <leitao@debian.org>\nReviewed-by: Akinobu Mita <akinobu.mita@gmail.com>\nAcked-by: Paolo Abeni <pabeni@redhat.com>\nAcked-by: Guillaume Nault <gnault@redhat.com>\nLink: https://patch.msgid.link/20241107-fault_v6-v6-1-1b82cb6ecacd@debian.org\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "full_message": "net: Implement fault injection forcing skb reallocation\n\nIntroduce a fault injection mechanism to force skb reallocation. The\nprimary goal is to catch bugs related to pointer invalidation after\npotential skb reallocation.\n\nThe fault injection mechanism aims to identify scenarios where callers\nretain pointers to various headers in the skb but fail to reload these\npointers after calling a function that may reallocate the data. This\ntype of bug can lead to memory corruption or crashes if the old,\nnow-invalid pointers are used.\n\nBy forcing reallocation through fault injection, we can stress-test code\npaths and ensure proper pointer management after potential skb\nreallocations.\n\nAdd a hook for fault injection in the following functions:\n\n * pskb_trim_rcsum()\n * pskb_may_pull_reason()\n * pskb_trim()\n\nAs the other fault injection mechanism, protect it under a debug Kconfig\ncalled CONFIG_FAIL_SKB_REALLOC.\n\nThis patch was *heavily* inspired by Jakub's proposal from:\nhttps://lore.kernel.org/all/20240719174140.47a868e6@kernel.org/\n\nCC: Akinobu Mita <akinobu.mita@gmail.com>\nSuggested-by: Jakub Kicinski <kuba@kernel.org>\nSigned-off-by: Breno Leitao <leitao@debian.org>\nReviewed-by: Akinobu Mita <akinobu.mita@gmail.com>\nAcked-by: Paolo Abeni <pabeni@redhat.com>\nAcked-by: Guillaume Nault <gnault@redhat.com>\nLink: https://patch.msgid.link/20241107-fault_v6-v6-1-1b82cb6ecacd@debian.org\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
  "author_name": "Breno Leitao",
  "author_email": "leitao@debian.org",
  "author_date": "Thu Nov 7 08:11:44 2024 -0800",
  "author_date_iso": "2024-11-07T08:11:44-08:00",
  "committer_name": "Paolo Abeni",
  "committer_email": "pabeni@redhat.com",
  "committer_date": "Tue Nov 12 12:05:33 2024 +0100",
  "committer_date_iso": "2024-11-12T12:05:33+01:00",
  "files_changed": [
    "Documentation/admin-guide/kernel-parameters.txt",
    "Documentation/fault-injection/fault-injection.rst",
    "include/linux/skbuff.h",
    "lib/Kconfig.debug",
    "net/core/Makefile",
    "net/core/skb_fault_injection.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "Documentation/fault-injection/fault-injection.rst",
      "insertions": 40,
      "deletions": 0
    },
    {
      "file": "include/linux/skbuff.h",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "lib/Kconfig.debug",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "net/core/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "net/core/skb_fault_injection.c",
      "insertions": 106,
      "deletions": 0
    }
  ],
  "total_insertions": 167,
  "total_deletions": 0,
  "total_changes": 167,
  "parents": [
    "12f077a728faaf8d11c65a4724915527c9317f08"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/fault-injection/fault-injection.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/admin-guide/kernel-parameters.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/skbuff.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/core/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "lib/Kconfig.debug",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/core/skb_fault_injection.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}