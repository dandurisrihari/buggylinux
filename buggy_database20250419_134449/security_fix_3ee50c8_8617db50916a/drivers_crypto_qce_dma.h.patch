commit 3ee50c896d712dc2fc8f34c2cd1918d035e74045
Author: Eneas U de Queiroz <cotequeiroz@gmail.com>
Date:   Fri Dec 20 16:02:15 2019 -0300

    crypto: qce - save a sg table slot for result buf
    
    When ctr-aes-qce is used for gcm-mode, an extra sg entry for the
    authentication tag is present, causing trouble when the qce driver
    prepares the dst-results sg table for dma.
    
    It computes the number of entries needed with sg_nents_for_len, leaving
    out the tag entry.  Then it creates a sg table with that number plus
    one, used to store a result buffer.
    
    When copying the sg table, there's no limit to the number of entries
    copied, so the extra slot is filled with the authentication tag sg.
    When the driver tries to add the result sg, the list is full, and it
    returns EINVAL.
    
    By limiting the number of sg entries copied to the dest table, the slot
    for the result buffer is guaranteed to be unused.
    
    Signed-off-by: Eneas U de Queiroz <cotequeiroz@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

diff --git a/drivers/crypto/qce/dma.h b/drivers/crypto/qce/dma.h
index 1e25a9e0e6f8..ed25a0d9829e 100644
--- a/drivers/crypto/qce/dma.h
+++ b/drivers/crypto/qce/dma.h
@@ -42,6 +42,7 @@ int qce_dma_prep_sgs(struct qce_dma_data *dma, struct scatterlist *sg_in,
 void qce_dma_issue_pending(struct qce_dma_data *dma);
 int qce_dma_terminate_all(struct qce_dma_data *dma);
 struct scatterlist *
-qce_sgtable_add(struct sg_table *sgt, struct scatterlist *sg_add);
+qce_sgtable_add(struct sg_table *sgt, struct scatterlist *sg_add,
+		int max_ents);
 
 #endif /* _DMA_H_ */