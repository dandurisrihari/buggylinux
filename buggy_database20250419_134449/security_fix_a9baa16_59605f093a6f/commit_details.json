{
  "hash": "a9baa16b4fc11d07953b65298b05d5ee707f093a",
  "hash_short": "a9baa16b",
  "subject": "scsi: ibmvfc: Replace deprecated strncpy() with strscpy()",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect these fields to be NUL-terminated as the property names from\nwhich they are derived are also NUL-terminated.\n\nMoreover, NUL-padding is not required as our destination buffers are\nalready NUL-allocated and any future NUL-byte assignments are redundant\n(like the ones that strncpy() does).\nibmvfc_probe() ->\n|       struct ibmvfc_host *vhost;\n|       struct Scsi_Host *shost;\n...\n| \tshost = scsi_host_alloc(&driver_template, sizeof(*vhost));\n... **side note: is this a bug? Looks like a type to me   ^^^^^**\n...\n|\tvhost = shost_priv(shost);\n\n... where shost_priv() is:\n|       static inline void *shost_priv(struct Scsi_Host *shost)\n|       {\n|       \treturn (void *)shost->hostdata;\n|       }\n\n.. and:\nscsi_host_alloc() ->\n| \tshost = kzalloc(sizeof(struct Scsi_Host) + privsize, GFP_KERNEL);\n\nAnd for login_info->..., NUL-padding is also not required as it is\nexplicitly memset to 0:\n|\tmemset(login_info, 0, sizeof(*login_info));\n\nConsidering the above, a suitable replacement is strscpy() [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231030-strncpy-drivers-scsi-ibmvscsi-ibmvfc-c-v1-1-5a4909688435@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: ibmvfc: Replace deprecated strncpy() with strscpy()\n\nstrncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect these fields to be NUL-terminated as the property names from\nwhich they are derived are also NUL-terminated.\n\nMoreover, NUL-padding is not required as our destination buffers are\nalready NUL-allocated and any future NUL-byte assignments are redundant\n(like the ones that strncpy() does).\nibmvfc_probe() ->\n|       struct ibmvfc_host *vhost;\n|       struct Scsi_Host *shost;\n...\n| \tshost = scsi_host_alloc(&driver_template, sizeof(*vhost));\n... **side note: is this a bug? Looks like a type to me   ^^^^^**\n...\n|\tvhost = shost_priv(shost);\n\n... where shost_priv() is:\n|       static inline void *shost_priv(struct Scsi_Host *shost)\n|       {\n|       \treturn (void *)shost->hostdata;\n|       }\n\n.. and:\nscsi_host_alloc() ->\n| \tshost = kzalloc(sizeof(struct Scsi_Host) + privsize, GFP_KERNEL);\n\nAnd for login_info->..., NUL-padding is also not required as it is\nexplicitly memset to 0:\n|\tmemset(login_info, 0, sizeof(*login_info));\n\nConsidering the above, a suitable replacement is strscpy() [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231030-strncpy-drivers-scsi-ibmvscsi-ibmvfc-c-v1-1-5a4909688435@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Mon Oct 30 19:04:33 2023 +0000",
  "author_date_iso": "2023-10-30T19:04:33+00:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Tue Dec 5 21:01:52 2023 -0500",
  "committer_date_iso": "2023-12-05T21:01:52-05:00",
  "files_changed": [
    "drivers/scsi/ibmvscsi/ibmvfc.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/ibmvscsi/ibmvfc.c",
      "insertions": 7,
      "deletions": 5
    }
  ],
  "total_insertions": 7,
  "total_deletions": 5,
  "total_changes": 12,
  "parents": [
    "0d224b1088afef95f7069b7ca907cb199a5802ff"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/ibmvscsi/ibmvfc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}