{
  "hash": "4f7ff70c0599bd4b90fef787045901b394655f06",
  "hash_short": "4f7ff70c",
  "subject": "Merge tag 'kvm-x86-misc-6.14' of https://github.com/kvm-x86/linux into HEAD",
  "body": "KVM x86 misc changes for 6.14:\n\n - Overhaul KVM's CPUID feature infrastructure to track all vCPU capabilities\n   instead of just those where KVM needs to manage state and/or explicitly\n   enable the feature in hardware.  Along the way, refactor the code to make\n   it easier to add features, and to make it more self-documenting how KVM\n   is handling each feature.\n\n - Rework KVM's handling of VM-Exits during event vectoring; this plugs holes\n   where KVM unintentionally puts the vCPU into infinite loops in some scenarios\n   (e.g. if emulation is triggered by the exit), and brings parity between VMX\n   and SVM.\n\n - Add pending request and interrupt injection information to the kvm_exit and\n   kvm_entry tracepoints respectively.\n\n - Fix a relatively benign flaw where KVM would end up redoing RDPKRU when\n   loading guest/host PKRU, due to a refactoring of the kernel helpers that\n   didn't account for KVM's pre-checking of the need to do WRPKRU.",
  "full_message": "Merge tag 'kvm-x86-misc-6.14' of https://github.com/kvm-x86/linux into HEAD\n\nKVM x86 misc changes for 6.14:\n\n - Overhaul KVM's CPUID feature infrastructure to track all vCPU capabilities\n   instead of just those where KVM needs to manage state and/or explicitly\n   enable the feature in hardware.  Along the way, refactor the code to make\n   it easier to add features, and to make it more self-documenting how KVM\n   is handling each feature.\n\n - Rework KVM's handling of VM-Exits during event vectoring; this plugs holes\n   where KVM unintentionally puts the vCPU into infinite loops in some scenarios\n   (e.g. if emulation is triggered by the exit), and brings parity between VMX\n   and SVM.\n\n - Add pending request and interrupt injection information to the kvm_exit and\n   kvm_entry tracepoints respectively.\n\n - Fix a relatively benign flaw where KVM would end up redoing RDPKRU when\n   loading guest/host PKRU, due to a refactoring of the kernel helpers that\n   didn't account for KVM's pre-checking of the need to do WRPKRU.",
  "author_name": "Paolo Bonzini",
  "author_email": "pbonzini@redhat.com",
  "author_date": "Mon Jan 20 06:49:39 2025 -0500",
  "author_date_iso": "2025-01-20T06:49:39-05:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Mon Jan 20 06:49:39 2025 -0500",
  "committer_date_iso": "2025-01-20T06:49:39-05:00",
  "files_changed": [
    "Documentation/virt/kvm/api.rst",
    "arch/x86/include/asm/kvm-x86-ops.h",
    "arch/x86/include/asm/kvm_host.h",
    "arch/x86/kvm/lapic.c",
    "arch/x86/kvm/mmu/mmu.c",
    "arch/x86/kvm/svm/sev.c",
    "arch/x86/kvm/svm/svm.c",
    "arch/x86/kvm/svm/svm.h",
    "arch/x86/kvm/vmx/main.c",
    "arch/x86/kvm/vmx/nested.c",
    "arch/x86/kvm/vmx/vmx.c",
    "arch/x86/kvm/vmx/x86_ops.h",
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 13,
  "stats": [
    {
      "file": "Documentation/virt/kvm/api.rst",
      "insertions": 7,
      "deletions": 3
    },
    {
      "file": "arch/x86/include/asm/kvm-x86-ops.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "insertions": 44,
      "deletions": 21
    },
    {
      "file": "arch/x86/kvm/cpuid.c",
      "insertions": 662,
      "deletions": 309
    },
    {
      "file": "arch/x86/kvm/cpuid.h",
      "insertions": 56,
      "deletions": 72
    },
    {
      "file": "arch/x86/kvm/governed_features.h",
      "insertions": 0,
      "deletions": 22
    },
    {
      "file": "arch/x86/kvm/hyperv.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/kvm_emulate.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/lapic.c",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/x86/kvm/mmu.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/mmu/mmu.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/pmu.c",
      "insertions": 0,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/reverse_cpuid.h",
      "insertions": 4,
      "deletions": 19
    },
    {
      "file": "arch/x86/kvm/smm.c",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "arch/x86/kvm/svm/nested.c",
      "insertions": 11,
      "deletions": 11
    },
    {
      "file": "arch/x86/kvm/svm/pmu.c",
      "insertions": 4,
      "deletions": 4
    },
    {
      "file": "arch/x86/kvm/svm/sev.c",
      "insertions": 10,
      "deletions": 11
    },
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "insertions": 41,
      "deletions": 29
    },
    {
      "file": "arch/x86/kvm/svm/svm.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/trace.h",
      "insertions": 14,
      "deletions": 3
    },
    {
      "file": "arch/x86/kvm/vmx/hyperv.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/x86/kvm/vmx/main.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "insertions": 9,
      "deletions": 9
    },
    {
      "file": "arch/x86/kvm/vmx/pmu_intel.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/x86/kvm/vmx/sgx.c",
      "insertions": 7,
      "deletions": 7
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "insertions": 45,
      "deletions": 55
    },
    {
      "file": "arch/x86/kvm/vmx/x86_ops.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 102,
      "deletions": 86
    },
    {
      "file": "arch/x86/kvm/x86.h",
      "insertions": 5,
      "deletions": 1
    },
    {
      "file": "include/uapi/linux/kvm.h",
      "insertions": 0,
      "deletions": 4
    },
    {
      "file": "tools/testing/selftests/kvm/include/x86/processor.h",
      "insertions": 18,
      "deletions": 7
    },
    {
      "file": "tools/testing/selftests/kvm/set_memory_region_test.c",
      "insertions": 52,
      "deletions": 1
    },
    {
      "file": "tools/testing/selftests/kvm/x86/kvm_pv_test.c",
      "insertions": 33,
      "deletions": 5
    },
    {
      "file": "tools/testing/selftests/kvm/x86/set_sregs_test.c",
      "insertions": 40,
      "deletions": 23
    },
    {
      "file": "tools/testing/selftests/kvm/x86/sev_smoke_test.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1189,
  "total_deletions": 721,
  "total_changes": 1910,
  "parents": [
    "892e7b8c279a40dad047ec23d2efe51284e578df",
    "4c20cd4cee929aef89118ac8820cefab427c6ae1"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/svm/sev.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/kvm_host.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/include/asm/kvm-x86-ops.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/mmu/mmu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/lapic.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/svm/svm.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "Documentation/virt/kvm/api.rst",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/main.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/vmx.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/svm/svm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/x86_ops.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/vmx/nested.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}