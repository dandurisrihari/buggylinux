{
  "hash": "3b619e22c4601b444ed2d6a5458271f72625ac89",
  "hash_short": "3b619e22",
  "subject": "arm64: implement dynamic shadow call stack for Clang",
  "body": "Implement dynamic shadow call stack support on Clang, by parsing the\nunwind tables at init time to locate all occurrences of PACIASP/AUTIASP\ninstructions, and replacing them with the shadow call stack push and pop\ninstructions, respectively.\n\nThis is useful because the overhead of the shadow call stack is\ndifficult to justify on hardware that implements pointer authentication\n(PAC), and given that the PAC instructions are executed as NOPs on\nhardware that doesn't, we can just replace them without breaking\nanything. As PACIASP/AUTIASP are guaranteed to be paired with respect to\nmanipulations of the return address, replacing them 1:1 with shadow call\nstack pushes and pops is guaranteed to result in the desired behavior.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Sami Tolvanen <samitolvanen@google.com>\nTested-by: Sami Tolvanen <samitolvanen@google.com>\nLink: https://lore.kernel.org/r/20221027155908.1940624-4-ardb@kernel.org\nSigned-off-by: Will Deacon <will@kernel.org>",
  "full_message": "arm64: implement dynamic shadow call stack for Clang\n\nImplement dynamic shadow call stack support on Clang, by parsing the\nunwind tables at init time to locate all occurrences of PACIASP/AUTIASP\ninstructions, and replacing them with the shadow call stack push and pop\ninstructions, respectively.\n\nThis is useful because the overhead of the shadow call stack is\ndifficult to justify on hardware that implements pointer authentication\n(PAC), and given that the PAC instructions are executed as NOPs on\nhardware that doesn't, we can just replace them without breaking\nanything. As PACIASP/AUTIASP are guaranteed to be paired with respect to\nmanipulations of the return address, replacing them 1:1 with shadow call\nstack pushes and pops is guaranteed to result in the desired behavior.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Sami Tolvanen <samitolvanen@google.com>\nTested-by: Sami Tolvanen <samitolvanen@google.com>\nLink: https://lore.kernel.org/r/20221027155908.1940624-4-ardb@kernel.org\nSigned-off-by: Will Deacon <will@kernel.org>",
  "author_name": "Ard Biesheuvel",
  "author_email": "ardb@kernel.org",
  "author_date": "Thu Oct 27 17:59:08 2022 +0200",
  "author_date_iso": "2022-10-27T17:59:08+02:00",
  "committer_name": "Will Deacon",
  "committer_email": "will@kernel.org",
  "committer_date": "Wed Nov 9 18:06:35 2022 +0000",
  "committer_date_iso": "2022-11-09T18:06:35+00:00",
  "files_changed": [
    "arch/arm64/Kconfig",
    "arch/arm64/Makefile",
    "arch/arm64/include/asm/scs.h",
    "arch/arm64/kernel/Makefile",
    "arch/arm64/kernel/head.S",
    "arch/arm64/kernel/irq.c",
    "arch/arm64/kernel/module.c",
    "arch/arm64/kernel/patch-scs.c",
    "arch/arm64/kernel/sdei.c",
    "arch/arm64/kernel/setup.c"
  ],
  "files_changed_count": 10,
  "stats": [
    {
      "file": "arch/arm64/Kconfig",
      "insertions": 9,
      "deletions": 0
    },
    {
      "file": "arch/arm64/Makefile",
      "insertions": 8,
      "deletions": 2
    },
    {
      "file": "arch/arm64/include/asm/scs.h",
      "insertions": 49,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/head.S",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/irq.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/module.c",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/patch-scs.c",
      "insertions": 257,
      "deletions": 0
    },
    {
      "file": "arch/arm64/kernel/sdei.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/setup.c",
      "insertions": 4,
      "deletions": 0
    }
  ],
  "total_insertions": 342,
  "total_deletions": 4,
  "total_changes": 346,
  "parents": [
    "9beccca0984022a844850e32f0d7dd80d4a225de"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/include/asm/scs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/head.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/irq.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/module.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/patch-scs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/sdei.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/setup.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}