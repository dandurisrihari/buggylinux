commit 3b619e22c4601b444ed2d6a5458271f72625ac89
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Oct 27 17:59:08 2022 +0200

    arm64: implement dynamic shadow call stack for Clang
    
    Implement dynamic shadow call stack support on Clang, by parsing the
    unwind tables at init time to locate all occurrences of PACIASP/AUTIASP
    instructions, and replacing them with the shadow call stack push and pop
    instructions, respectively.
    
    This is useful because the overhead of the shadow call stack is
    difficult to justify on hardware that implements pointer authentication
    (PAC), and given that the PAC instructions are executed as NOPs on
    hardware that doesn't, we can just replace them without breaking
    anything. As PACIASP/AUTIASP are guaranteed to be paired with respect to
    manipulations of the return address, replacing them 1:1 with shadow call
    stack pushes and pops is guaranteed to result in the desired behavior.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Sami Tolvanen <samitolvanen@google.com>
    Tested-by: Sami Tolvanen <samitolvanen@google.com>
    Link: https://lore.kernel.org/r/20221027155908.1940624-4-ardb@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>

diff --git a/arch/arm64/kernel/module.c b/arch/arm64/kernel/module.c
index 76b41e4ca9fa..fa7b3228944b 100644
--- a/arch/arm64/kernel/module.c
+++ b/arch/arm64/kernel/module.c
@@ -15,9 +15,11 @@
 #include <linux/kernel.h>
 #include <linux/mm.h>
 #include <linux/moduleloader.h>
+#include <linux/scs.h>
 #include <linux/vmalloc.h>
 #include <asm/alternative.h>
 #include <asm/insn.h>
+#include <asm/scs.h>
 #include <asm/sections.h>
 
 void *module_alloc(unsigned long size)
@@ -514,5 +516,11 @@ int module_finalize(const Elf_Ehdr *hdr,
 	if (s)
 		apply_alternatives_module((void *)s->sh_addr, s->sh_size);
 
+	if (scs_is_dynamic()) {
+		s = find_section(hdr, sechdrs, ".init.eh_frame");
+		if (s)
+			scs_patch((void *)s->sh_addr, s->sh_size);
+	}
+
 	return module_init_ftrace_plt(hdr, sechdrs, me);
 }