{
  "hash": "258ad2fe5ede773625adfda88b173f4123e59f45",
  "hash_short": "258ad2fe",
  "subject": "wwan_hwsim: fix possible memory leak in wwan_hwsim_dev_new()",
  "body": "Inject fault while probing module, if device_register() fails,\nbut the refcount of kobject is not decreased to 0, the name\nallocated in dev_set_name() is leaked. Fix this by calling\nput_device(), so that name can be freed in callback function\nkobject_cleanup().\n\nunreferenced object 0xffff88810152ad20 (size 8):\n  comm \"modprobe\", pid 252, jiffies 4294849206 (age 22.713s)\n  hex dump (first 8 bytes):\n    68 77 73 69 6d 30 00 ff                          hwsim0..\n  backtrace:\n    [<000000009c3504ed>] __kmalloc_node_track_caller+0x44/0x1b0\n    [<00000000c0228a5e>] kvasprintf+0xb5/0x140\n    [<00000000cff8c21f>] kvasprintf_const+0x55/0x180\n    [<0000000055a1e073>] kobject_set_name_vargs+0x56/0x150\n    [<000000000a80b139>] dev_set_name+0xab/0xe0\n\nFixes: f36a111a74e7 (\"wwan_hwsim: WWAN device simulator\")\nSigned-off-by: Yang Yingliang <yangyingliang@huawei.com>\nReviewed-by: Loic Poulain <loic.poulain@linaro.org>\nAcked-by: Sergey Ryazanov <ryazanov.s.a@gmail.com>\nLink: https://lore.kernel.org/r/20221018131607.1901641-1-yangyingliang@huawei.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "wwan_hwsim: fix possible memory leak in wwan_hwsim_dev_new()\n\nInject fault while probing module, if device_register() fails,\nbut the refcount of kobject is not decreased to 0, the name\nallocated in dev_set_name() is leaked. Fix this by calling\nput_device(), so that name can be freed in callback function\nkobject_cleanup().\n\nunreferenced object 0xffff88810152ad20 (size 8):\n  comm \"modprobe\", pid 252, jiffies 4294849206 (age 22.713s)\n  hex dump (first 8 bytes):\n    68 77 73 69 6d 30 00 ff                          hwsim0..\n  backtrace:\n    [<000000009c3504ed>] __kmalloc_node_track_caller+0x44/0x1b0\n    [<00000000c0228a5e>] kvasprintf+0xb5/0x140\n    [<00000000cff8c21f>] kvasprintf_const+0x55/0x180\n    [<0000000055a1e073>] kobject_set_name_vargs+0x56/0x150\n    [<000000000a80b139>] dev_set_name+0xab/0xe0\n\nFixes: f36a111a74e7 (\"wwan_hwsim: WWAN device simulator\")\nSigned-off-by: Yang Yingliang <yangyingliang@huawei.com>\nReviewed-by: Loic Poulain <loic.poulain@linaro.org>\nAcked-by: Sergey Ryazanov <ryazanov.s.a@gmail.com>\nLink: https://lore.kernel.org/r/20221018131607.1901641-1-yangyingliang@huawei.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Yang Yingliang",
  "author_email": "yangyingliang@huawei.com",
  "author_date": "Tue Oct 18 21:16:07 2022 +0800",
  "author_date_iso": "2022-10-18T21:16:07+08:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Wed Oct 19 17:25:10 2022 -0700",
  "committer_date_iso": "2022-10-19T17:25:10-07:00",
  "files_changed": [
    "drivers/net/wwan/wwan_hwsim.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/wwan/wwan_hwsim.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "c2bf23e4a5af37a4d77901d9ff14c50a269f143d"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/wwan/wwan_hwsim.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}