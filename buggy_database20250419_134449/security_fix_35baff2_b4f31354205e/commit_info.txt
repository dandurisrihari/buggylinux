Commit Hash: 35baff256d8fe1eec0b8988fcb5cde80df7bfa1a
Subject: KVM: IOAPIC: Fix level-triggered irq injection hang


Security Keywords:
- injection

Full commit message:
KVM: IOAPIC: Fix level-triggered irq injection hang

The "remote_irr" variable is used to indicate an interrupt
which has been received by the LAPIC, but not acked.

In our EOI handler, we unset remote_irr and re-inject the
interrupt if the interrupt line is still asserted.

However, we do not set remote_irr here, leading to a
situation where if kvm_ioapic_set_irq() is called, then we go
ahead and call ioapic_service(). This means that IRR is
re-asserted even though the interrupt is currently in service
(i.e. LAPIC IRR is cleared and ISR/TMR set)

The issue with this is that when the currently executing
interrupt handler finishes and writes LAPIC EOI, then TMR is
unset and EOI sent to the IOAPIC. Since IRR is now asserted,
but TMR is not, then when the second interrupt is handled,
no EOI is sent and if there is any pending interrupt, it is
not re-injected.

This fixes a hang only seen while running mke2fs -j on an
8Gb virtio disk backed by a fully sparse raw file, with
aliguori "avoid fragmented virtio-blk transfers by copying"
changes.

Signed-off-by: Mark McLoughlin <markmc@redhat.com>
Acked-by: Marcelo Tosatti <mtosatti@redhat.com>
Signed-off-by: Avi Kivity <avi@qumranet.com>

Metadata:
Author: Mark McLoughlin <markmc@redhat.com>
Author Date: Fri Jul 4 18:23:15 2008 +0100
Committer: Avi Kivity <avi@qumranet.com>
Commit Date: Sun Jul 6 11:05:35 2008 +0300

Files Changed: 1
Lines Added: 1
Lines Removed: 1
Total Changes: 2
