{
  "hash": "35baff256d8fe1eec0b8988fcb5cde80df7bfa1a",
  "hash_short": "35baff25",
  "subject": "KVM: IOAPIC: Fix level-triggered irq injection hang",
  "body": "The \"remote_irr\" variable is used to indicate an interrupt\nwhich has been received by the LAPIC, but not acked.\n\nIn our EOI handler, we unset remote_irr and re-inject the\ninterrupt if the interrupt line is still asserted.\n\nHowever, we do not set remote_irr here, leading to a\nsituation where if kvm_ioapic_set_irq() is called, then we go\nahead and call ioapic_service(). This means that IRR is\nre-asserted even though the interrupt is currently in service\n(i.e. LAPIC IRR is cleared and ISR/TMR set)\n\nThe issue with this is that when the currently executing\ninterrupt handler finishes and writes LAPIC EOI, then TMR is\nunset and EOI sent to the IOAPIC. Since IRR is now asserted,\nbut TMR is not, then when the second interrupt is handled,\nno EOI is sent and if there is any pending interrupt, it is\nnot re-injected.\n\nThis fixes a hang only seen while running mke2fs -j on an\n8Gb virtio disk backed by a fully sparse raw file, with\naliguori \"avoid fragmented virtio-blk transfers by copying\"\nchanges.\n\nSigned-off-by: Mark McLoughlin <markmc@redhat.com>\nAcked-by: Marcelo Tosatti <mtosatti@redhat.com>\nSigned-off-by: Avi Kivity <avi@qumranet.com>",
  "full_message": "KVM: IOAPIC: Fix level-triggered irq injection hang\n\nThe \"remote_irr\" variable is used to indicate an interrupt\nwhich has been received by the LAPIC, but not acked.\n\nIn our EOI handler, we unset remote_irr and re-inject the\ninterrupt if the interrupt line is still asserted.\n\nHowever, we do not set remote_irr here, leading to a\nsituation where if kvm_ioapic_set_irq() is called, then we go\nahead and call ioapic_service(). This means that IRR is\nre-asserted even though the interrupt is currently in service\n(i.e. LAPIC IRR is cleared and ISR/TMR set)\n\nThe issue with this is that when the currently executing\ninterrupt handler finishes and writes LAPIC EOI, then TMR is\nunset and EOI sent to the IOAPIC. Since IRR is now asserted,\nbut TMR is not, then when the second interrupt is handled,\nno EOI is sent and if there is any pending interrupt, it is\nnot re-injected.\n\nThis fixes a hang only seen while running mke2fs -j on an\n8Gb virtio disk backed by a fully sparse raw file, with\naliguori \"avoid fragmented virtio-blk transfers by copying\"\nchanges.\n\nSigned-off-by: Mark McLoughlin <markmc@redhat.com>\nAcked-by: Marcelo Tosatti <mtosatti@redhat.com>\nSigned-off-by: Avi Kivity <avi@qumranet.com>",
  "author_name": "Mark McLoughlin",
  "author_email": "markmc@redhat.com",
  "author_date": "Fri Jul 4 18:23:15 2008 +0100",
  "author_date_iso": "2008-07-04T18:23:15+01:00",
  "committer_name": "Avi Kivity",
  "committer_email": "avi@qumranet.com",
  "committer_date": "Sun Jul 6 11:05:35 2008 +0300",
  "committer_date_iso": "2008-07-06T11:05:35+03:00",
  "files_changed": [
    "virt/kvm/ioapic.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "virt/kvm/ioapic.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "ca3739327b89bb4053a62ac41b67b106c1967ab0"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v2.6.26",
    "v2.6.27",
    "v2.6.27-rc1",
    "v2.6.27-rc2",
    "v2.6.27-rc3",
    "v2.6.27-rc4",
    "v2.6.27-rc5",
    "v2.6.27-rc6",
    "v2.6.27-rc7",
    "v2.6.27-rc8"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "virt/kvm/ioapic.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}