{
  "hash": "6a98bc4614de8fac8c6d520a6b20b194e23c9936",
  "hash_short": "6a98bc46",
  "subject": "ubifs: Add authentication nodes to journal",
  "body": "Nodes that are written to flash can only be authenticated through the\nindex after the next commit. When a journal replay is necessary the\nnodes are not yet referenced by the index and thus can't be\nauthenticated.\n\nThis patch overcomes this situation by creating a hash over all nodes\nbeginning from the commit start node over the reference node(s) and\nthe buds themselves. From\ntime to time we insert authentication nodes. Authentication nodes\ncontain a HMAC from the current hash state, so that they can be\nused to authenticate a journal replay up to the point where the\nauthentication node is. The hash is continued afterwards\nso that theoretically we would only have to check the HMAC of\nthe last authentication node we find.\n\nOverall we get this picture:\n\n,,,,,,,,\n,......,...........................................\n,. CS  ,               hash1.----.           hash2.----.\n,.  |  ,                    .    |hmac            .    |hmac\n,.  v  ,                    .    v                .    v\n,.REF#0,-> bud -> bud -> bud.-> auth -> bud -> bud.-> auth ...\n,..|...,...........................................\n,  |   ,\n,  |   ,,,,,,,,,,,,,,,\n.  |            hash3,----.\n,  |                 ,    |hmac\n,  v                 ,    v\n, REF#1 -> bud -> bud,-> auth ...\n,,,|,,,,,,,,,,,,,,,,,,\n   v\n  REF#2 -> ...\n   |\n   V\n  ...\n\nNote how hash3 covers CS, REF#0 and REF#1 so that it is not possible to\nexchange or skip any reference nodes. Unlike the picture suggests the\nauth nodes themselves are not hashed.\n\nWith this it is possible for an offline attacker to cut each journal\nhead or to drop the last reference node(s), but not to skip any journal\nheads or to reorder any operations.\n\nSigned-off-by: Sascha Hauer <s.hauer@pengutronix.de>\nSigned-off-by: Richard Weinberger <richard@nod.at>",
  "full_message": "ubifs: Add authentication nodes to journal\n\nNodes that are written to flash can only be authenticated through the\nindex after the next commit. When a journal replay is necessary the\nnodes are not yet referenced by the index and thus can't be\nauthenticated.\n\nThis patch overcomes this situation by creating a hash over all nodes\nbeginning from the commit start node over the reference node(s) and\nthe buds themselves. From\ntime to time we insert authentication nodes. Authentication nodes\ncontain a HMAC from the current hash state, so that they can be\nused to authenticate a journal replay up to the point where the\nauthentication node is. The hash is continued afterwards\nso that theoretically we would only have to check the HMAC of\nthe last authentication node we find.\n\nOverall we get this picture:\n\n,,,,,,,,\n,......,...........................................\n,. CS  ,               hash1.----.           hash2.----.\n,.  |  ,                    .    |hmac            .    |hmac\n,.  v  ,                    .    v                .    v\n,.REF#0,-> bud -> bud -> bud.-> auth -> bud -> bud.-> auth ...\n,..|...,...........................................\n,  |   ,\n,  |   ,,,,,,,,,,,,,,,\n.  |            hash3,----.\n,  |                 ,    |hmac\n,  v                 ,    v\n, REF#1 -> bud -> bud,-> auth ...\n,,,|,,,,,,,,,,,,,,,,,,\n   v\n  REF#2 -> ...\n   |\n   V\n  ...\n\nNote how hash3 covers CS, REF#0 and REF#1 so that it is not possible to\nexchange or skip any reference nodes. Unlike the picture suggests the\nauth nodes themselves are not hashed.\n\nWith this it is possible for an offline attacker to cut each journal\nhead or to drop the last reference node(s), but not to skip any journal\nheads or to reorder any operations.\n\nSigned-off-by: Sascha Hauer <s.hauer@pengutronix.de>\nSigned-off-by: Richard Weinberger <richard@nod.at>",
  "author_name": "Sascha Hauer",
  "author_email": "s.hauer@pengutronix.de",
  "author_date": "Fri Sep 7 14:36:36 2018 +0200",
  "author_date_iso": "2018-09-07T14:36:36+02:00",
  "committer_name": "Richard Weinberger",
  "committer_email": "richard@nod.at",
  "committer_date": "Tue Oct 23 13:48:39 2018 +0200",
  "committer_date_iso": "2018-10-23T13:48:39+02:00",
  "files_changed": [
    "fs/ubifs/gc.c",
    "fs/ubifs/journal.c",
    "fs/ubifs/log.c",
    "fs/ubifs/replay.c",
    "fs/ubifs/super.c",
    "fs/ubifs/ubifs.h"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "fs/ubifs/gc.c",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "fs/ubifs/journal.c",
      "insertions": 107,
      "deletions": 17
    },
    {
      "file": "fs/ubifs/log.c",
      "insertions": 24,
      "deletions": 0
    },
    {
      "file": "fs/ubifs/replay.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/ubifs/super.c",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "fs/ubifs/ubifs.h",
      "insertions": 8,
      "deletions": 0
    }
  ],
  "total_insertions": 153,
  "total_deletions": 18,
  "total_changes": 171,
  "parents": [
    "16a26b20d2afd0cf063816725b45b12e78d5bb31"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.20",
    "v4.20-rc1",
    "v4.20-rc2",
    "v4.20-rc3",
    "v4.20-rc4",
    "v4.20-rc5",
    "v4.20-rc6",
    "v4.20-rc7",
    "v5.0",
    "v5.0-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/ubifs/gc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ubifs/log.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ubifs/journal.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ubifs/ubifs.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ubifs/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/ubifs/replay.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}