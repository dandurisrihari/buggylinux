diff --cc fs/f2fs/segment.c
index e1065ba70207,e9e8b9bb3ce9..4fd76e867e0a
--- a/fs/f2fs/segment.c
+++ b/fs/f2fs/segment.c
@@@ -4916,13 -5021,11 +5028,13 @@@ static int check_zone_write_pointer(str
  	 * selected for write operation until it get discarded.
  	 */
  	f2fs_notice(sbi, "Valid blocks are not aligned with write "
- 		    "pointer: valid block[0x%x,0x%x] cond[0x%x]",
- 		    zone_segno, valid_block_cnt, zone->cond);
+ 		    "pointer: valid block[0x%x,0x%x] cond[%s]",
+ 		    zone_segno, valid_block_cnt, f2fs_zone_status[zone->cond]);
  
 +	nofs_flags = memalloc_nofs_save();
  	ret = blkdev_zone_mgmt(fdev->bdev, REQ_OP_ZONE_FINISH,
 -				zone->start, zone->len, GFP_NOFS);
 +				zone->start, zone->len);
 +	memalloc_nofs_restore(nofs_flags);
  	if (ret == -EOPNOTSUPP) {
  		ret = blkdev_issue_zeroout(fdev->bdev, zone->wp,
  					zone->len - (zone->wp - zone->start),
diff --cc fs/f2fs/super.c
index f6ffbfe75653,03f56a7c80fa..a6867f26f141
--- a/fs/f2fs/super.c
+++ b/fs/f2fs/super.c
@@@ -4265,9 -4201,9 +4201,9 @@@ static int f2fs_scan_devices(struct f2f
  			} else {
  				FDEV(i).start_blk = FDEV(i - 1).end_blk + 1;
  				FDEV(i).end_blk = FDEV(i).start_blk +
- 					(FDEV(i).total_segments <<
- 					sbi->log_blocks_per_seg) - 1;
+ 						SEGS_TO_BLKS(sbi,
+ 						FDEV(i).total_segments) - 1;
 -				FDEV(i).bdev_handle = bdev_open_by_path(
 +				FDEV(i).bdev_file = bdev_file_open_by_path(
  					FDEV(i).path, mode, sbi->sb, NULL);
  			}
  		}