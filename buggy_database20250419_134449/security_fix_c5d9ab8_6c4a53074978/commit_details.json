{
  "hash": "c5d9ab85ebf3a42d5127ffdedf9094325465e852",
  "hash_short": "c5d9ab85",
  "subject": "Merge tag 'f2fs-for-6.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs",
  "body": "Pull f2fs update from Jaegeuk Kim:\n \"In this round, there are a number of updates on mainly two areas:\n  Zoned block device support and Per-file compression. For example,\n  we've found several issues to support Zoned block device especially\n  having large sections regarding to GC and file pinning used for\n  Android devices. In compression side, we've fixed many corner race\n  conditions that had broken the design assumption.\n\n  Enhancements:\n   - Support file pinning for Zoned block device having large section\n   - Enhance the data recovery after sudden power cut on Zoned block\n     device\n   - Add more error injection cases to easily detect the kernel panics\n   - add a proc entry show the entire disk layout\n   - Improve various error paths paniced by BUG_ON in block allocation\n     and GC\n   - support SEEK_DATA and SEEK_HOLE for compression files\n\n  Bug fixes:\n   - avoid use-after-free issue in f2fs_filemap_fault\n   - fix some race conditions to break the atomic write design\n     assumption\n   - fix to truncate meta inode pages forcely\n   - resolve various per-file compression issues wrt the space\n     management and compression policies\n   - fix some swap-related bugs\n\n  In addition, we removed deprecated codes such as io_bits and\n  heap_allocation, and also fixed minor error handling routines with\n  neat debugging messages\"\n\n* tag 'f2fs-for-6.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (60 commits)\n  f2fs: fix to avoid use-after-free issue in f2fs_filemap_fault\n  f2fs: truncate page cache before clearing flags when aborting atomic write\n  f2fs: mark inode dirty for FI_ATOMIC_COMMITTED flag\n  f2fs: prevent atomic write on pinned file\n  f2fs: fix to handle error paths of {new,change}_curseg()\n  f2fs: unify the error handling of f2fs_is_valid_blkaddr\n  f2fs: zone: fix to remove pow2 check condition for zoned block device\n  f2fs: fix to truncate meta inode pages forcely\n  f2fs: compress: fix reserve_cblocks counting error when out of space\n  f2fs: compress: relocate some judgments in f2fs_reserve_compress_blocks\n  f2fs: add a proc entry show disk layout\n  f2fs: introduce SEGS_TO_BLKS/BLKS_TO_SEGS for cleanup\n  f2fs: fix to check return value of f2fs_gc_range\n  f2fs: fix to check return value __allocate_new_segment\n  f2fs: fix to do sanity check in update_sit_entry\n  f2fs: fix to reset fields for unloaded curseg\n  f2fs: clean up new_curseg()\n  f2fs: relocate f2fs_precache_extents() in f2fs_swap_activate()\n  f2fs: fix blkofs_end correctly in f2fs_migrate_blocks()\n  f2fs: ro: don't start discard thread for readonly image\n  ...",
  "full_message": "Merge tag 'f2fs-for-6.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs update from Jaegeuk Kim:\n \"In this round, there are a number of updates on mainly two areas:\n  Zoned block device support and Per-file compression. For example,\n  we've found several issues to support Zoned block device especially\n  having large sections regarding to GC and file pinning used for\n  Android devices. In compression side, we've fixed many corner race\n  conditions that had broken the design assumption.\n\n  Enhancements:\n   - Support file pinning for Zoned block device having large section\n   - Enhance the data recovery after sudden power cut on Zoned block\n     device\n   - Add more error injection cases to easily detect the kernel panics\n   - add a proc entry show the entire disk layout\n   - Improve various error paths paniced by BUG_ON in block allocation\n     and GC\n   - support SEEK_DATA and SEEK_HOLE for compression files\n\n  Bug fixes:\n   - avoid use-after-free issue in f2fs_filemap_fault\n   - fix some race conditions to break the atomic write design\n     assumption\n   - fix to truncate meta inode pages forcely\n   - resolve various per-file compression issues wrt the space\n     management and compression policies\n   - fix some swap-related bugs\n\n  In addition, we removed deprecated codes such as io_bits and\n  heap_allocation, and also fixed minor error handling routines with\n  neat debugging messages\"\n\n* tag 'f2fs-for-6.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (60 commits)\n  f2fs: fix to avoid use-after-free issue in f2fs_filemap_fault\n  f2fs: truncate page cache before clearing flags when aborting atomic write\n  f2fs: mark inode dirty for FI_ATOMIC_COMMITTED flag\n  f2fs: prevent atomic write on pinned file\n  f2fs: fix to handle error paths of {new,change}_curseg()\n  f2fs: unify the error handling of f2fs_is_valid_blkaddr\n  f2fs: zone: fix to remove pow2 check condition for zoned block device\n  f2fs: fix to truncate meta inode pages forcely\n  f2fs: compress: fix reserve_cblocks counting error when out of space\n  f2fs: compress: relocate some judgments in f2fs_reserve_compress_blocks\n  f2fs: add a proc entry show disk layout\n  f2fs: introduce SEGS_TO_BLKS/BLKS_TO_SEGS for cleanup\n  f2fs: fix to check return value of f2fs_gc_range\n  f2fs: fix to check return value __allocate_new_segment\n  f2fs: fix to do sanity check in update_sit_entry\n  f2fs: fix to reset fields for unloaded curseg\n  f2fs: clean up new_curseg()\n  f2fs: relocate f2fs_precache_extents() in f2fs_swap_activate()\n  f2fs: fix blkofs_end correctly in f2fs_migrate_blocks()\n  f2fs: ro: don't start discard thread for readonly image\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Mon Mar 18 11:26:00 2024 -0700",
  "author_date_iso": "2024-03-18T11:26:00-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Mon Mar 18 11:26:00 2024 -0700",
  "committer_date_iso": "2024-03-18T11:26:00-07:00",
  "files_changed": [
    "fs/f2fs/f2fs.h",
    "fs/f2fs/namei.c",
    "fs/f2fs/segment.c",
    "fs/f2fs/super.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-fs-f2fs",
      "insertions": 27,
      "deletions": 25
    },
    {
      "file": "Documentation/filesystems/f2fs.rst",
      "insertions": 26,
      "deletions": 28
    },
    {
      "file": "fs/f2fs/checkpoint.c",
      "insertions": 45,
      "deletions": 29
    },
    {
      "file": "fs/f2fs/compress.c",
      "insertions": 32,
      "deletions": 23
    },
    {
      "file": "fs/f2fs/data.c",
      "insertions": 66,
      "deletions": 125
    },
    {
      "file": "fs/f2fs/debug.c",
      "insertions": 5,
      "deletions": 6
    },
    {
      "file": "fs/f2fs/dir.c",
      "insertions": 5,
      "deletions": 5
    },
    {
      "file": "fs/f2fs/extent_cache.c",
      "insertions": 1,
      "deletions": 4
    },
    {
      "file": "fs/f2fs/f2fs.h",
      "insertions": 155,
      "deletions": 86
    },
    {
      "file": "fs/f2fs/file.c",
      "insertions": 106,
      "deletions": 65
    },
    {
      "file": "fs/f2fs/gc.c",
      "insertions": 71,
      "deletions": 58
    },
    {
      "file": "fs/f2fs/gc.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/namei.c",
      "insertions": 21,
      "deletions": 15
    },
    {
      "file": "fs/f2fs/node.c",
      "insertions": 17,
      "deletions": 9
    },
    {
      "file": "fs/f2fs/node.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "fs/f2fs/recovery.c",
      "insertions": 25,
      "deletions": 31
    },
    {
      "file": "fs/f2fs/segment.c",
      "insertions": 278,
      "deletions": 166
    },
    {
      "file": "fs/f2fs/segment.h",
      "insertions": 43,
      "deletions": 47
    },
    {
      "file": "fs/f2fs/super.c",
      "insertions": 67,
      "deletions": 141
    },
    {
      "file": "fs/f2fs/sysfs.c",
      "insertions": 49,
      "deletions": 3
    },
    {
      "file": "fs/f2fs/verity.c",
      "insertions": 9,
      "deletions": 7
    },
    {
      "file": "include/linux/f2fs_fs.h",
      "insertions": 2,
      "deletions": 6
    }
  ],
  "total_insertions": 1054,
  "total_deletions": 883,
  "total_changes": 1937,
  "parents": [
    "0d7ca657df77a3d97698d6ec392894362d2ad334",
    "eb70d5a6c932d9d23f4bb3e7b83782c21ac4b064"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/f2fs/f2fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/namei.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/segment.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/f2fs/super.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}