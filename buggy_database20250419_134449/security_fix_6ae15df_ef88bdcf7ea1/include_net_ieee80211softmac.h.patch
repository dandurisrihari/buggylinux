commit 6ae15df16ef3dc3f5f043e94bb2cd4aa6c7f2aa8
Author: Daniel Drake <dsd@gentoo.org>
Date:   Thu Jun 1 15:37:22 2006 +0100

    [PATCH] softmac: Fix handling of authentication failure
    
    My router blew up earlier, but exhibited some interesting behaviour during
    its dying moments. It was broadcasting beacons but wouldn't respond to
    any authentication requests.
    
    I noticed that softmac wasn't playing nice with this, as I couldn't make it try
    to connect to other networks after it had timed out authenticating to my ill
    router.
    
    To resolve this, I modified the softmac event/notify API to pass the event
    code to the callback, so that callbacks being notified from
    IEEE80211SOFTMAC_EVENT_ANY masks can make some judgement. In this case, the
    ieee80211softmac_assoc callback needs to make a decision based upon whether
    the association passed or failed.
    
    Signed-off-by: Daniel Drake <dsd@gentoo.org>
    Acked-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/net/ieee80211softmac.h b/include/net/ieee80211softmac.h
index 703463a8828b..7a483ab4022f 100644
--- a/include/net/ieee80211softmac.h
+++ b/include/net/ieee80211softmac.h
@@ -310,7 +310,7 @@ extern void ieee80211softmac_stop(struct net_device *dev);
  *	- context set to the context data you want passed
  * The return value is 0, or an error.
  */
-typedef void (*notify_function_ptr)(struct net_device *dev, void *context);
+typedef void (*notify_function_ptr)(struct net_device *dev, int event_type, void *context);
 
 #define ieee80211softmac_notify(dev, event, fun, context) ieee80211softmac_notify_gfp(dev, event, fun, context, GFP_KERNEL);
 #define ieee80211softmac_notify_atomic(dev, event, fun, context) ieee80211softmac_notify_gfp(dev, event, fun, context, GFP_ATOMIC);