Commit Hash: 8c7188b23474cca017b3ef354c4a58456f68303a
Subject: RDS: fix race condition when sending a message on unbound socket

CVE Identifiers:
- CVE-2015-6937

Full commit message:
RDS: fix race condition when sending a message on unbound socket

Sasha's found a NULL pointer dereference in the RDS connection code when
sending a message to an apparently unbound socket.  The problem is caused
by the code checking if the socket is bound in rds_sendmsg(), which checks
the rs_bound_addr field without taking a lock on the socket.  This opens a
race where rs_bound_addr is temporarily set but where the transport is not
in rds_bind(), leading to a NULL pointer dereference when trying to
dereference 'trans' in __rds_conn_create().

Vegard wrote a reproducer for this issue, so kindly ask him to share if
you're interested.

I cannot reproduce the NULL pointer dereference using Vegard's reproducer
with this patch, whereas I could without.

Complete earlier incomplete fix to CVE-2015-6937:

  74e98eb08588 ("RDS: verify the underlying transport exists before creating a connection")

Cc: David S. Miller <davem@davemloft.net>
Cc: stable@vger.kernel.org

Reviewed-by: Vegard Nossum <vegard.nossum@oracle.com>
Reviewed-by: Sasha Levin <sasha.levin@oracle.com>
Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
Signed-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Metadata:
Author: Quentin Casasnovas <quentin.casasnovas@oracle.com>
Author Date: Tue Nov 24 17:13:21 2015 -0500
Committer: David S. Miller <davem@davemloft.net>
Commit Date: Tue Nov 24 17:20:09 2015 -0500

Files Changed: 2
Lines Added: 3
Lines Removed: 7
Total Changes: 10
