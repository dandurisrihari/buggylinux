diff --cc fs/bcachefs/super-io.c
index 4c98d8cc2a79,5079436b0484..78013deda9df
--- a/fs/bcachefs/super-io.c
+++ b/fs/bcachefs/super-io.c
@@@ -164,10 -163,9 +164,10 @@@ void bch2_sb_field_delete(struct bch_sb
  void bch2_free_super(struct bch_sb_handle *sb)
  {
  	kfree(sb->bio);
- 	if (!IS_ERR_OR_NULL(sb->bdev))
- 		blkdev_put(sb->bdev, sb->holder);
+ 	if (!IS_ERR_OR_NULL(sb->bdev_handle))
+ 		bdev_release(sb->bdev_handle);
  	kfree(sb->holder);
 +	kfree(sb->sb_name);
  
  	kfree(sb->sb);
  	memset(sb, 0, sizeof(*sb));
diff --cc fs/bcachefs/super_types.h
index 9c1fd4ca2b10,65a294329681..b2119686e2e1
--- a/fs/bcachefs/super_types.h
+++ b/fs/bcachefs/super_types.h
@@@ -4,8 -4,8 +4,9 @@@
  
  struct bch_sb_handle {
  	struct bch_sb		*sb;
+ 	struct bdev_handle	*bdev_handle;
  	struct block_device	*bdev;
 +	char			*sb_name;
  	struct bio		*bio;
  	void			*holder;
  	size_t			buffer_size;
diff --cc include/linux/blk_types.h
index b29ebd53417d,52e264d5a830..7c2316c91cbd
--- a/include/linux/blk_types.h
+++ b/include/linux/blk_types.h
@@@ -70,7 -66,7 +67,8 @@@ struct block_device 
  #ifdef CONFIG_FAIL_MAKE_REQUEST
  	bool			bd_make_it_fail;
  #endif
 +	bool			bd_ro_warned;
+ 	int			bd_writers;
  	/*
  	 * keep this out-of-line as it's both big and not needed in the fast
  	 * path