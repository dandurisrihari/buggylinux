commit fd706c9b1674e2858766bfbf7430534c2b26fbef
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Apr 5 16:55:54 2024 -0700

    KVM: x86: Snapshot if a vCPU's vendor model is AMD vs. Intel compatible
    
    Add kvm_vcpu_arch.is_amd_compatible to cache if a vCPU's vendor model is
    compatible with AMD, i.e. if the vCPU vendor is AMD or Hygon, along with
    helpers to check if a vCPU is compatible AMD vs. Intel.  To handle Intel
    vs. AMD behavior related to masking the LVTPC entry, KVM will need to
    check for vendor compatibility on every PMI injection, i.e. querying for
    AMD will soon be a moderately hot path.
    
    Note!  This subtly (or maybe not-so-subtly) makes "Intel compatible" KVM's
    default behavior, both if userspace omits (or never sets) CPUID 0x0 and if
    userspace sets a completely unknown vendor.  One could argue that KVM
    should treat such vCPUs as not being compatible with Intel *or* AMD, but
    that would add useless complexity to KVM.
    
    KVM needs to do *something* in the face of vendor specific behavior, and
    so unless KVM conjured up a magic third option, choosing to treat unknown
    vendors as neither Intel nor AMD means that checks on AMD compatibility
    would yield Intel behavior, and checks for Intel compatibility would yield
    AMD behavior.  And that's far worse as it would effectively yield random
    behavior depending on whether KVM checked for AMD vs. Intel vs. !AMD vs.
    !Intel.  And practically speaking, all x86 CPUs follow either Intel or AMD
    architecture, i.e. "supporting" an unknown third architecture adds no
    value.
    
    Deliberately don't convert any of the existing guest_cpuid_is_intel()
    checks, as the Intel side of things is messier due to some flows explicitly
    checking for exactly vendor==Intel, versus some flows assuming anything
    that isn't "AMD compatible" gets Intel behavior.  The Intel code will be
    cleaned up in the future.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-ID: <20240405235603.1173076-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/x86/kvm/mmu/mmu.c b/arch/x86/kvm/mmu/mmu.c
index 992e651540e8..bf4de6d7e39c 100644
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@ -4935,7 +4935,7 @@ static void reset_guest_rsvds_bits_mask(struct kvm_vcpu *vcpu,
 				context->cpu_role.base.level, is_efer_nx(context),
 				guest_can_use(vcpu, X86_FEATURE_GBPAGES),
 				is_cr4_pse(context),
-				guest_cpuid_is_amd_or_hygon(vcpu));
+				guest_cpuid_is_amd_compatible(vcpu));
 }
 
 static void __reset_rsvds_bits_mask_ept(struct rsvd_bits_validate *rsvd_check,