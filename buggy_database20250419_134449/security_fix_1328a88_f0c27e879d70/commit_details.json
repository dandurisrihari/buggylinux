{
  "hash": "1328a883258b4507909090ed0a9ad63771f9f780",
  "hash_short": "1328a883",
  "subject": "net: dsa: felix: purge skb from TX timestamping queue if it cannot be sent",
  "body": "At present, when a PTP packet which requires TX timestamping gets\ndropped under congestion by the switch, things go downhill very fast.\nThe driver keeps a clone of that skb in a queue of packets awaiting TX\ntimestamp interrupts, but interrupts will never be raised for the\ndropped packets.\n\nMoreover, matching timestamped packets to timestamps is done by a 2-bit\ntimestamp ID, and this can wrap around and we can match on the wrong skb.\n\nSince with the default NPI-based tagging protocol, we get no notification\nabout packet drops, the best we can do is eventually recover from the\ndrop of a PTP frame: its skb will be dead memory until another skb which\nwas assigned the same timestamp ID happens to find it.\n\nHowever, with the ocelot-8021q tagger which injects packets using the\nmanual register interface, it appears that we can check for more\ninformation, such as:\n\n- whether the input queue has reached the high watermark or not\n- whether the injection group's FIFO can accept additional data or not\n\nso we know that a PTP frame is likely to get dropped before actually\nsending it, and drop it ourselves (because DSA uses NETIF_F_LLTX, so it\ncan't return NETDEV_TX_BUSY to ask the qdisc to requeue the packet).\n\nBut when we do that, we can also remove the skb from the timestamping\nqueue, because there surely won't be any timestamp that matches it.\n\nFixes: 0a6f17c6ae21 (\"net: dsa: tag_ocelot_8021q: add support for PTP timestamping\")\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "full_message": "net: dsa: felix: purge skb from TX timestamping queue if it cannot be sent\n\nAt present, when a PTP packet which requires TX timestamping gets\ndropped under congestion by the switch, things go downhill very fast.\nThe driver keeps a clone of that skb in a queue of packets awaiting TX\ntimestamp interrupts, but interrupts will never be raised for the\ndropped packets.\n\nMoreover, matching timestamped packets to timestamps is done by a 2-bit\ntimestamp ID, and this can wrap around and we can match on the wrong skb.\n\nSince with the default NPI-based tagging protocol, we get no notification\nabout packet drops, the best we can do is eventually recover from the\ndrop of a PTP frame: its skb will be dead memory until another skb which\nwas assigned the same timestamp ID happens to find it.\n\nHowever, with the ocelot-8021q tagger which injects packets using the\nmanual register interface, it appears that we can check for more\ninformation, such as:\n\n- whether the input queue has reached the high watermark or not\n- whether the injection group's FIFO can accept additional data or not\n\nso we know that a PTP frame is likely to get dropped before actually\nsending it, and drop it ourselves (because DSA uses NETIF_F_LLTX, so it\ncan't return NETDEV_TX_BUSY to ask the qdisc to requeue the packet).\n\nBut when we do that, we can also remove the skb from the timestamping\nqueue, because there surely won't be any timestamp that matches it.\n\nFixes: 0a6f17c6ae21 (\"net: dsa: tag_ocelot_8021q: add support for PTP timestamping\")\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
  "author_name": "Vladimir Oltean",
  "author_email": "vladimir.oltean@nxp.com",
  "author_date": "Tue Oct 12 14:40:42 2021 +0300",
  "author_date_iso": "2021-10-12T14:40:42+03:00",
  "committer_name": "Jakub Kicinski",
  "committer_email": "kuba@kernel.org",
  "committer_date": "Tue Oct 12 17:35:18 2021 -0700",
  "committer_date_iso": "2021-10-12T17:35:18-07:00",
  "files_changed": [
    "drivers/net/dsa/ocelot/felix.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/net/dsa/ocelot/felix.c",
      "insertions": 28,
      "deletions": 0
    }
  ],
  "total_insertions": 28,
  "total_deletions": 0,
  "total_changes": 28,
  "parents": [
    "49f885b2d97093451410e7279aa29d81e094e108"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/net/dsa/ocelot/felix.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}