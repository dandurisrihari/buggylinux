diff --cc tools/perf/arch/x86/include/arch-tests.h
index 93d3b8877baa,df133020d582..c0421a26b875
--- a/tools/perf/arch/x86/include/arch-tests.h
+++ b/tools/perf/arch/x86/include/arch-tests.h
@@@ -11,7 -13,7 +13,8 @@@ int test__intel_pt_pkt_decoder(struct t
  int test__intel_pt_hybrid_compat(struct test_suite *test, int subtest);
  int test__bp_modify(struct test_suite *test, int subtest);
  int test__x86_sample_parsing(struct test_suite *test, int subtest);
 +int test__amd_ibs_via_core_pmu(struct test_suite *test, int subtest);
+ int test__hybrid(struct test_suite *test, int subtest);
  
  extern struct test_suite *arch_tests[];
  
diff --cc tools/perf/arch/x86/tests/Build
index fd02d8181718,394771c00dca..b87f46e5feea
--- a/tools/perf/arch/x86/tests/Build
+++ b/tools/perf/arch/x86/tests/Build
@@@ -3,6 -3,9 +3,10 @@@ perf-$(CONFIG_DWARF_UNWIND) += dwarf-un
  
  perf-y += arch-tests.o
  perf-y += sample-parsing.o
- perf-$(CONFIG_AUXTRACE) += insn-x86.o intel-pt-test.o
+ perf-y += hybrid.o
+ perf-$(CONFIG_AUXTRACE) += intel-pt-test.o
+ ifeq ($(CONFIG_EXTRA_TESTS),y)
+ perf-$(CONFIG_AUXTRACE) += insn-x86.o
+ endif
  perf-$(CONFIG_X86_64) += bp-modify.o
 +perf-y += amd-ibs-via-core-pmu.o
diff --cc tools/perf/arch/x86/tests/amd-ibs-via-core-pmu.c
index 2902798ca5c1,000000000000..78b1902f6f59
mode 100644,000000..100644
--- a/tools/perf/arch/x86/tests/amd-ibs-via-core-pmu.c
+++ b/tools/perf/arch/x86/tests/amd-ibs-via-core-pmu.c
@@@ -1,71 -1,0 +1,68 @@@
 +// SPDX-License-Identifier: GPL-2.0
 +#include "arch-tests.h"
 +#include "linux/perf_event.h"
 +#include "tests/tests.h"
 +#include "pmu.h"
 +#include "pmus.h"
 +#include "../perf-sys.h"
 +#include "debug.h"
 +
 +#define NR_SUB_TESTS 5
 +
 +static struct sub_tests {
 +	int type;
 +	unsigned long config;
 +	bool valid;
 +} sub_tests[NR_SUB_TESTS] = {
 +	{ PERF_TYPE_HARDWARE, PERF_COUNT_HW_CPU_CYCLES, true },
 +	{ PERF_TYPE_HARDWARE, PERF_COUNT_HW_INSTRUCTIONS, false },
 +	{ PERF_TYPE_RAW, 0x076, true },
 +	{ PERF_TYPE_RAW, 0x0C1, true },
 +	{ PERF_TYPE_RAW, 0x012, false },
 +};
 +
 +static int event_open(int type, unsigned long config)
 +{
 +	struct perf_event_attr attr;
 +
 +	memset(&attr, 0, sizeof(struct perf_event_attr));
 +	attr.type = type;
 +	attr.size = sizeof(struct perf_event_attr);
 +	attr.config = config;
 +	attr.disabled = 1;
 +	attr.precise_ip = 1;
 +	attr.sample_type = PERF_SAMPLE_IP | PERF_SAMPLE_TID;
 +	attr.sample_period = 100000;
 +
 +	return sys_perf_event_open(&attr, -1, 0, -1, 0);
 +}
 +
 +int test__amd_ibs_via_core_pmu(struct test_suite *test __maybe_unused,
 +			       int subtest __maybe_unused)
 +{
 +	struct perf_pmu *ibs_pmu;
 +	int ret = TEST_OK;
 +	int fd, i;
 +
- 	if (list_empty(&pmus))
- 		perf_pmu__scan(NULL);
- 
- 	ibs_pmu = perf_pmu__find("ibs_op");
++	ibs_pmu = perf_pmus__find("ibs_op");
 +	if (!ibs_pmu)
 +		return TEST_SKIP;
 +
 +	for (i = 0; i < NR_SUB_TESTS; i++) {
 +		fd = event_open(sub_tests[i].type, sub_tests[i].config);
 +		pr_debug("type: 0x%x, config: 0x%lx, fd: %d  -  ", sub_tests[i].type,
 +			 sub_tests[i].config, fd);
 +		if ((sub_tests[i].valid && fd == -1) ||
 +		    (!sub_tests[i].valid && fd > 0)) {
 +			pr_debug("Fail\n");
 +			ret = TEST_FAIL;
 +		} else {
 +			pr_debug("Pass\n");
 +		}
 +
 +		if (fd > 0)
 +			close(fd);
 +	}
 +
 +	return ret;
 +}
diff --cc tools/perf/arch/x86/tests/arch-tests.c
index b5c85ab8d92e,3f2b90c59f92..a216a5d172ed
--- a/tools/perf/arch/x86/tests/arch-tests.c
+++ b/tools/perf/arch/x86/tests/arch-tests.c
@@@ -22,7 -24,15 +24,16 @@@ struct test_suite suite__intel_pt = 
  DEFINE_SUITE("x86 bp modify", bp_modify);
  #endif
  DEFINE_SUITE("x86 Sample parsing", x86_sample_parsing);
 +DEFINE_SUITE("AMD IBS via core pmu", amd_ibs_via_core_pmu);
+ static struct test_case hybrid_tests[] = {
+ 	TEST_CASE_REASON("x86 hybrid event parsing", hybrid, "not hybrid"),
+ 	{ .name = NULL, }
+ };
+ 
+ struct test_suite suite__hybrid = {
+ 	.desc = "x86 hybrid",
+ 	.test_cases = hybrid_tests,
+ };
  
  struct test_suite *arch_tests[] = {
  #ifdef HAVE_DWARF_UNWIND_SUPPORT
@@@ -36,6 -48,6 +49,7 @@@
  	&suite__bp_modify,
  #endif
  	&suite__x86_sample_parsing,
 +	&suite__amd_ibs_via_core_pmu,
+ 	&suite__hybrid,
  	NULL,
  };