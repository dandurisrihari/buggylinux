{
  "hash": "2546c60004309ede8e2d1d5341e0decd90e057bf",
  "hash_short": "2546c600",
  "subject": "platform/x86: Add Intel Software Defined Silicon driver",
  "body": "Intel Software Defined Silicon (SDSi) is a post manufacturing mechanism for\nactivating additional silicon features. Features are enabled through a\nlicense activation process.  The SDSi driver provides a per socket, sysfs\nattribute interface for applications to perform 3 main provisioning\nfunctions:\n\n1. Provision an Authentication Key Certificate (AKC), a key written to\n   internal NVRAM that is used to authenticate a capability specific\n   activation payload.\n\n2. Provision a Capability Activation Payload (CAP), a token authenticated\n   using the AKC and applied to the CPU configuration to activate a new\n   feature.\n\n3. Read the SDSi State Certificate, containing the CPU configuration\n   state.\n\nThe operations perform function specific mailbox commands that forward the\nrequests to SDSi hardware to perform authentication of the payloads and\nenable the silicon configuration (to be made available after power\ncycling).\n\nThe SDSi device itself is enumerated as an auxiliary device from the\nintel_vsec driver and as such has a build dependency on CONFIG_INTEL_VSEC.\n\nLink: https://github.com/intel/intel-sdsi\nSigned-off-by: David E. Box <david.e.box@linux.intel.com>\nReviewed-by: Mark Gross <markgross@kernel.org>\nLink: https://lore.kernel.org/r/20220212013252.1293396-2-david.e.box@linux.intel.com\nReviewed-by: Hans de Goede <hdegoede@redhat.com>\nSigned-off-by: Hans de Goede <hdegoede@redhat.com>",
  "full_message": "platform/x86: Add Intel Software Defined Silicon driver\n\nIntel Software Defined Silicon (SDSi) is a post manufacturing mechanism for\nactivating additional silicon features. Features are enabled through a\nlicense activation process.  The SDSi driver provides a per socket, sysfs\nattribute interface for applications to perform 3 main provisioning\nfunctions:\n\n1. Provision an Authentication Key Certificate (AKC), a key written to\n   internal NVRAM that is used to authenticate a capability specific\n   activation payload.\n\n2. Provision a Capability Activation Payload (CAP), a token authenticated\n   using the AKC and applied to the CPU configuration to activate a new\n   feature.\n\n3. Read the SDSi State Certificate, containing the CPU configuration\n   state.\n\nThe operations perform function specific mailbox commands that forward the\nrequests to SDSi hardware to perform authentication of the payloads and\nenable the silicon configuration (to be made available after power\ncycling).\n\nThe SDSi device itself is enumerated as an auxiliary device from the\nintel_vsec driver and as such has a build dependency on CONFIG_INTEL_VSEC.\n\nLink: https://github.com/intel/intel-sdsi\nSigned-off-by: David E. Box <david.e.box@linux.intel.com>\nReviewed-by: Mark Gross <markgross@kernel.org>\nLink: https://lore.kernel.org/r/20220212013252.1293396-2-david.e.box@linux.intel.com\nReviewed-by: Hans de Goede <hdegoede@redhat.com>\nSigned-off-by: Hans de Goede <hdegoede@redhat.com>",
  "author_name": "David E. Box",
  "author_email": "david.e.box@linux.intel.com",
  "author_date": "Fri Feb 11 17:32:50 2022 -0800",
  "author_date_iso": "2022-02-11T17:32:50-08:00",
  "committer_name": "Hans de Goede",
  "committer_email": "hdegoede@redhat.com",
  "committer_date": "Mon Feb 14 11:45:20 2022 +0100",
  "committer_date_iso": "2022-02-14T11:45:20+01:00",
  "files_changed": [
    "Documentation/ABI/testing/sysfs-driver-intel_sdsi",
    "MAINTAINERS",
    "drivers/platform/x86/intel/Kconfig",
    "drivers/platform/x86/intel/Makefile",
    "drivers/platform/x86/intel/sdsi.c",
    "drivers/platform/x86/intel/vsec.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "Documentation/ABI/testing/sysfs-driver-intel_sdsi",
      "insertions": 77,
      "deletions": 0
    },
    {
      "file": "MAINTAINERS",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "drivers/platform/x86/intel/Kconfig",
      "insertions": 12,
      "deletions": 0
    },
    {
      "file": "drivers/platform/x86/intel/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "drivers/platform/x86/intel/sdsi.c",
      "insertions": 574,
      "deletions": 0
    },
    {
      "file": "drivers/platform/x86/intel/vsec.c",
      "insertions": 11,
      "deletions": 1
    }
  ],
  "total_insertions": 681,
  "total_deletions": 1,
  "total_changes": 682,
  "parents": [
    "ae707d0eb707b5fc658e870dbd8b21887b0a5240"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "Authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/ABI/testing/sysfs-driver-intel_sdsi",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/platform/x86/intel/sdsi.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/platform/x86/intel/Kconfig",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/platform/x86/intel/Makefile",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/platform/x86/intel/vsec.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "MAINTAINERS",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}