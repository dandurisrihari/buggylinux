commit 296c81d89f4f14269f7346f81442910158c0a83a
Author: Balbir Singh <balbir@linux.vnet.ibm.com>
Date:   Wed Sep 23 15:56:36 2009 -0700

    memory controller: soft limit interface
    
    Add an interface to allow get/set of soft limits.  Soft limits for memory
    plus swap controller (memsw) is currently not supported.  Resource
    counters have been enhanced to support soft limits and new type
    RES_SOFT_LIMIT has been added.  Unlike hard limits, soft limits can be
    directly set and do not need any reclaim or checks before setting them to
    a newer value.
    
    Kamezawa-San raised a question as to whether soft limit should belong to
    res_counter.  Since all resources understand the basic concepts of hard
    and soft limits, it is justified to add soft limits here.  Soft limits are
    a generic resource usage feature, even file system quotas support soft
    limits.
    
    Signed-off-by: Balbir Singh <balbir@linux.vnet.ibm.com>
    Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Cc: Li Zefan <lizf@cn.fujitsu.com>
    Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/kernel/res_counter.c b/kernel/res_counter.c
index e1338f074314..bcdabf37c40b 100644
--- a/kernel/res_counter.c
+++ b/kernel/res_counter.c
@@ -19,6 +19,7 @@ void res_counter_init(struct res_counter *counter, struct res_counter *parent)
 {
 	spin_lock_init(&counter->lock);
 	counter->limit = RESOURCE_MAX;
+	counter->soft_limit = RESOURCE_MAX;
 	counter->parent = parent;
 }
 
@@ -101,6 +102,8 @@ res_counter_member(struct res_counter *counter, int member)
 		return &counter->limit;
 	case RES_FAILCNT:
 		return &counter->failcnt;
+	case RES_SOFT_LIMIT:
+		return &counter->soft_limit;
 	};
 
 	BUG();