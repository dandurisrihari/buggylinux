{
  "hash": "9cf514ccfacb301f3b1b4509a8ce25dffad55880",
  "hash_short": "9cf514cc",
  "subject": "nfsd: implement pNFS operations",
  "body": "Add support for the GETDEVICEINFO, LAYOUTGET, LAYOUTCOMMIT and\nLAYOUTRETURN NFSv4.1 operations, as well as backing code to manage\noutstanding layouts and devices.\n\nLayout management is very straight forward, with a nfs4_layout_stateid\nstructure that extends nfs4_stid to manage layout stateids as the\ntop-level structure.  It is linked into the nfs4_file and nfs4_client\nstructures like the other stateids, and contains a linked list of\nlayouts that hang of the stateid.  The actual layout operations are\nimplemented in layout drivers that are not part of this commit, but\nwill be added later.\n\nThe worst part of this commit is the management of the pNFS device IDs,\nwhich suffers from a specification that is not sanely implementable due\nto the fact that the device-IDs are global and not bound to an export,\nand have a small enough size so that we can't store the fsid portion of\na file handle, and must never be reused.  As we still do need perform all\nexport authentication and validation checks on a device ID passed to\nGETDEVICEINFO we are caught between a rock and a hard place.  To work\naround this issue we add a new hash that maps from a 64-bit integer to a\nfsid so that we can look up the export to authenticate against it,\na 32-bit integer as a generation that we can bump when changing the device,\nand a currently unused 32-bit integer that could be used in the future\nto handle more than a single device per export.  Entries in this hash\ntable are never deleted as we can't reuse the ids anyway, and would have\na severe lifetime problem anyway as Linux export structures are temporary\nstructures that can go away under load.\n\nParts of the XDR data, structures and marshaling/unmarshaling code, as\nwell as many concepts are derived from the old pNFS server implementation\nfrom Andy Adamson, Benny Halevy, Dean Hildebrand, Marc Eshel, Fred Isaman,\nMike Sager, Ricardo Labiaga and many others.\n\nSigned-off-by: Christoph Hellwig <hch@lst.de>",
  "full_message": "nfsd: implement pNFS operations\n\nAdd support for the GETDEVICEINFO, LAYOUTGET, LAYOUTCOMMIT and\nLAYOUTRETURN NFSv4.1 operations, as well as backing code to manage\noutstanding layouts and devices.\n\nLayout management is very straight forward, with a nfs4_layout_stateid\nstructure that extends nfs4_stid to manage layout stateids as the\ntop-level structure.  It is linked into the nfs4_file and nfs4_client\nstructures like the other stateids, and contains a linked list of\nlayouts that hang of the stateid.  The actual layout operations are\nimplemented in layout drivers that are not part of this commit, but\nwill be added later.\n\nThe worst part of this commit is the management of the pNFS device IDs,\nwhich suffers from a specification that is not sanely implementable due\nto the fact that the device-IDs are global and not bound to an export,\nand have a small enough size so that we can't store the fsid portion of\na file handle, and must never be reused.  As we still do need perform all\nexport authentication and validation checks on a device ID passed to\nGETDEVICEINFO we are caught between a rock and a hard place.  To work\naround this issue we add a new hash that maps from a 64-bit integer to a\nfsid so that we can look up the export to authenticate against it,\na 32-bit integer as a generation that we can bump when changing the device,\nand a currently unused 32-bit integer that could be used in the future\nto handle more than a single device per export.  Entries in this hash\ntable are never deleted as we can't reuse the ids anyway, and would have\na severe lifetime problem anyway as Linux export structures are temporary\nstructures that can go away under load.\n\nParts of the XDR data, structures and marshaling/unmarshaling code, as\nwell as many concepts are derived from the old pNFS server implementation\nfrom Andy Adamson, Benny Halevy, Dean Hildebrand, Marc Eshel, Fred Isaman,\nMike Sager, Ricardo Labiaga and many others.\n\nSigned-off-by: Christoph Hellwig <hch@lst.de>",
  "author_name": "Christoph Hellwig",
  "author_email": "hch@lst.de",
  "author_date": "Mon May 5 13:11:59 2014 +0200",
  "author_date_iso": "2014-05-05T13:11:59+02:00",
  "committer_name": "Christoph Hellwig",
  "committer_email": "hch@lst.de",
  "committer_date": "Mon Feb 2 18:09:42 2015 +0100",
  "committer_date_iso": "2015-02-02T18:09:42+01:00",
  "files_changed": [
    "fs/nfsd/Kconfig",
    "fs/nfsd/Makefile",
    "fs/nfsd/export.c",
    "fs/nfsd/export.h",
    "fs/nfsd/nfs4layouts.c",
    "fs/nfsd/nfs4proc.c",
    "fs/nfsd/nfs4state.c",
    "fs/nfsd/nfs4xdr.c",
    "fs/nfsd/nfsctl.c",
    "fs/nfsd/nfsd.h",
    "fs/nfsd/pnfs.h",
    "fs/nfsd/state.h",
    "fs/nfsd/xdr4.h",
    "include/linux/nfs4.h",
    "include/uapi/linux/nfsd/debug.h",
    "include/uapi/linux/nfsd/export.h"
  ],
  "files_changed_count": 16,
  "stats": [
    {
      "file": "fs/nfsd/Kconfig",
      "insertions": 10,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/export.c",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/export.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/nfs4layouts.c",
      "insertions": 487,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/nfs4proc.c",
      "insertions": 302,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/nfs4state.c",
      "insertions": 15,
      "deletions": 1
    },
    {
      "file": "fs/nfsd/nfs4xdr.c",
      "insertions": 312,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/nfsctl.c",
      "insertions": 8,
      "deletions": 1
    },
    {
      "file": "fs/nfsd/nfsd.h",
      "insertions": 14,
      "deletions": 2
    },
    {
      "file": "fs/nfsd/pnfs.h",
      "insertions": 80,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/state.h",
      "insertions": 21,
      "deletions": 0
    },
    {
      "file": "fs/nfsd/xdr4.h",
      "insertions": 59,
      "deletions": 0
    },
    {
      "file": "include/linux/nfs4.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/nfsd/debug.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/nfsd/export.h",
      "insertions": 3,
      "deletions": 1
    }
  ],
  "total_insertions": 1324,
  "total_deletions": 5,
  "total_changes": 1329,
  "parents": [
    "4d227fca1b32f95f1246894ebef879efccb2ec15"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.0",
    "v4.0-rc1",
    "v4.0-rc2",
    "v4.0-rc3",
    "v4.0-rc4",
    "v4.0-rc5",
    "v4.0-rc6",
    "v4.0-rc7",
    "v4.1",
    "v4.1-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/nfsd/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfs4state.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/export.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/export.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfs4xdr.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfs4layouts.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfsctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfsd.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/nfs4proc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/state.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/pnfs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/nfsd/xdr4.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/linux/nfsd/export.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/nfs4.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/linux/nfsd/debug.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}