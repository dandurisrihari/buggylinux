{
  "hash": "c1f7fec1eb6a2c86d01bc22afce772c743451d88",
  "hash_short": "c1f7fec1",
  "subject": "x86/speculation: Allow guests to use SSBD even if host does not",
  "body": "The bits set in x86_spec_ctrl_mask are used to calculate the guest's value\nof SPEC_CTRL that is written to the MSR before VMENTRY, and control which\nmitigations the guest can enable.  In the case of SSBD, unless the host has\nenabled SSBD always on mode (by passing \"spec_store_bypass_disable=on\" in\nthe kernel parameters), the SSBD bit is not set in the mask and the guest\ncan not properly enable the SSBD always on mitigation mode.\n\nThis has been confirmed by running the SSBD PoC on a guest using the SSBD\nalways on mitigation mode (booted with kernel parameter\n\"spec_store_bypass_disable=on\"), and verifying that the guest is vulnerable\nunless the host is also using SSBD always on mode. In addition, the guest\nOS incorrectly reports the SSB vulnerability as mitigated.\n\nAlways set the SSBD bit in x86_spec_ctrl_mask when the host CPU supports\nit, allowing the guest to use SSBD whether or not the host has chosen to\nenable the mitigation in any of its modes.\n\nFixes: be6fcb5478e9 (\"x86/bugs: Rework spec_ctrl base and mask logic\")\nSigned-off-by: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Liam Merwick <liam.merwick@oracle.com>\nReviewed-by: Mark Kanda <mark.kanda@oracle.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nCc: bp@alien8.de\nCc: rkrcmar@redhat.com\nCc: kvm@vger.kernel.org\nCc: stable@vger.kernel.org\nLink: https://lkml.kernel.org/r/1560187210-11054-1-git-send-email-alejandro.j.jimenez@oracle.com",
  "full_message": "x86/speculation: Allow guests to use SSBD even if host does not\n\nThe bits set in x86_spec_ctrl_mask are used to calculate the guest's value\nof SPEC_CTRL that is written to the MSR before VMENTRY, and control which\nmitigations the guest can enable.  In the case of SSBD, unless the host has\nenabled SSBD always on mode (by passing \"spec_store_bypass_disable=on\" in\nthe kernel parameters), the SSBD bit is not set in the mask and the guest\ncan not properly enable the SSBD always on mitigation mode.\n\nThis has been confirmed by running the SSBD PoC on a guest using the SSBD\nalways on mitigation mode (booted with kernel parameter\n\"spec_store_bypass_disable=on\"), and verifying that the guest is vulnerable\nunless the host is also using SSBD always on mode. In addition, the guest\nOS incorrectly reports the SSB vulnerability as mitigated.\n\nAlways set the SSBD bit in x86_spec_ctrl_mask when the host CPU supports\nit, allowing the guest to use SSBD whether or not the host has chosen to\nenable the mitigation in any of its modes.\n\nFixes: be6fcb5478e9 (\"x86/bugs: Rework spec_ctrl base and mask logic\")\nSigned-off-by: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Liam Merwick <liam.merwick@oracle.com>\nReviewed-by: Mark Kanda <mark.kanda@oracle.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nCc: bp@alien8.de\nCc: rkrcmar@redhat.com\nCc: kvm@vger.kernel.org\nCc: stable@vger.kernel.org\nLink: https://lkml.kernel.org/r/1560187210-11054-1-git-send-email-alejandro.j.jimenez@oracle.com",
  "author_name": "Alejandro Jimenez",
  "author_email": "alejandro.j.jimenez@oracle.com",
  "author_date": "Mon Jun 10 13:20:10 2019 -0400",
  "author_date_iso": "2019-06-10T13:20:10-04:00",
  "committer_name": "Thomas Gleixner",
  "committer_email": "tglx@linutronix.de",
  "committer_date": "Wed Jun 26 16:38:36 2019 +0200",
  "committer_date_iso": "2019-06-26T16:38:36+02:00",
  "files_changed": [
    "arch/x86/kernel/cpu/bugs.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kernel/cpu/bugs.c",
      "insertions": 10,
      "deletions": 1
    }
  ],
  "total_insertions": 10,
  "total_deletions": 1,
  "total_changes": 11,
  "parents": [
    "432c833218dd0f75e7b56bd5e8658b72073158d2"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.2",
    "v5.2-rc7",
    "v5.3",
    "v5.3-rc1",
    "v5.3-rc2",
    "v5.3-rc3",
    "v5.3-rc4",
    "v5.3-rc5",
    "v5.3-rc6",
    "v5.3-rc7"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kernel/cpu/bugs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}