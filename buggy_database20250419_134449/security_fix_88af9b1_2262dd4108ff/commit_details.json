{
  "hash": "88af9b164c7a25a71b1a1a699872b869e2e84c77",
  "hash_short": "88af9b16",
  "subject": "Merge tag 'acpi-6.3-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm",
  "body": "Pull ACPI updates from Rafael Wysocki:\n \"These fix a frequency limit issue in the ACPI processor performance\n  library code, fix a few issues in the ACPICA code, improve Crystal\n  Cove support in the ACPI PMIC driver, fix string handling in the ACPI\n  battery driver, add IRQ override quirks for a few machines more, fix\n  other assorted problems and clean up code and documentation.\n\n  Specifics:\n\n   - Drop port I/O validation for some regions to avoid AML failures due\n     to rejections of legitimate port I/O writes (Mario Limonciello)\n\n   - Constify acpi_get_handle() pathname argument to allow its callers\n     to pass const pathnames to it (Sakari Ailus)\n\n   - Prevent acpi_ns_simple_repair() from crashing in some cases when\n     AE_AML_NO_RETURN_VALUE should be returned (Daniil Tatianin)\n\n   - Fix typo in CDAT DSMAS struct definition (Lukas Wunner)\n\n   - Drop an unnecessary (void *) conversion from the ACPI processor\n     driver (Zhou jie)\n\n   - Modify the ACPI processor performance library code to use the \"no\n     limit\" frequency QoS as appropriate and adjust the intel_pstate\n     driver accordingly (Rafael Wysocki)\n\n   - Add support for NBFT to the ACPI table parser (Stuart Hayes)\n\n   - Introduce list of known non-PNP devices to avoid enumerating some\n     of them as PNP devices (Rafael Wysocki)\n\n   - Add x86 ACPI paths to the ACPI entry in MAINTAINERS to allow\n     scripts to report the actual maintainers information (Rafael\n     Wysocki)\n\n   - Add two more entries to the ACPI IRQ override quirk list (Adam\n     Niederer, Werner Sembach)\n\n   - Add a pmic_i2c_address entry for Intel Bay Trail Crystal Cove to\n     allow intel_soc_pmic_exec_mipi_pmic_seq_element() to be used with\n     the Bay Trail Crystal Cove PMIC OpRegion driver (Hans de Goede)\n\n   - Add comments with DSDT power OpRegion field names to the ACPI PMIC\n     driver (Hans de Goede)\n\n   - Fix string termination handling in the ACPI battery driver (Armin\n     Wolf)\n\n   - Limit error type to 32-bit width in the ACPI APEI error injection\n     code (Shuai Xue)\n\n   - Fix Lenovo Ideapad Z570 DMI match in the ACPI backlight driver\n     (Hans de Goede)\n\n   - Silence missing prototype warnings in some places in the\n     ACPI-related code (Ammar Faizi)\n\n   - Make kobj_type structures used in the ACPI code constant (Thomas\n     Wei\u00dfschuh)\n\n   - Correct spelling in firmware-guide/ACPI (Randy Dunlap)\n\n   - Clarify the meaning of Explicit and Implicit in the _DSD GPIO\n     properties documentation (Andy Shevchenko)\n\n   - Fix some kernel-doc comments in the ACPI CPPC library code (Yang\n     Li)\"\n\n* tag 'acpi-6.3-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (25 commits)\n  ACPI: make kobj_type structures constant\n  Documentation: firmware-guide: gpio-properties: Clarify Explicit and Implicit\n  ACPICA: Fix typo in CDAT DSMAS struct definition\n  ACPI: resource: Do IRQ override on all TongFang GMxRGxx\n  ACPI: resource: Add IRQ overrides for MAINGEAR Vector Pro 2 models\n  ACPI: CPPC: Fix some kernel-doc comments\n  ACPI: video: Fix Lenovo Ideapad Z570 DMI match\n  Documentation: firmware-guide/ACPI: correct spelling\n  ACPI: PMIC: Add comments with DSDT power opregion field names\n  ACPI: battery: Increase maximum string length\n  ACPI: battery: Fix buffer overread if not NUL-terminated\n  ACPI: APEI: EINJ: Limit error type to 32-bit width\n  MAINTAINERS: Add x86 ACPI paths to the ACPI entry\n  ACPI: battery: Fix missing NUL-termination with large strings\n  ACPI: PNP: Introduce list of known non-PNP devices\n  ACPICA: nsrepair: handle cases without a return value correctly\n  ACPI: Silence missing prototype warnings\n  cpufreq: intel_pstate: Drop ACPI _PSS states table patching\n  ACPI: processor: perflib: Avoid updating frequency QoS unnecessarily\n  ACPI: processor: perflib: Use the \"no limit\" frequency QoS\n  ...",
  "full_message": "Merge tag 'acpi-6.3-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm\n\nPull ACPI updates from Rafael Wysocki:\n \"These fix a frequency limit issue in the ACPI processor performance\n  library code, fix a few issues in the ACPICA code, improve Crystal\n  Cove support in the ACPI PMIC driver, fix string handling in the ACPI\n  battery driver, add IRQ override quirks for a few machines more, fix\n  other assorted problems and clean up code and documentation.\n\n  Specifics:\n\n   - Drop port I/O validation for some regions to avoid AML failures due\n     to rejections of legitimate port I/O writes (Mario Limonciello)\n\n   - Constify acpi_get_handle() pathname argument to allow its callers\n     to pass const pathnames to it (Sakari Ailus)\n\n   - Prevent acpi_ns_simple_repair() from crashing in some cases when\n     AE_AML_NO_RETURN_VALUE should be returned (Daniil Tatianin)\n\n   - Fix typo in CDAT DSMAS struct definition (Lukas Wunner)\n\n   - Drop an unnecessary (void *) conversion from the ACPI processor\n     driver (Zhou jie)\n\n   - Modify the ACPI processor performance library code to use the \"no\n     limit\" frequency QoS as appropriate and adjust the intel_pstate\n     driver accordingly (Rafael Wysocki)\n\n   - Add support for NBFT to the ACPI table parser (Stuart Hayes)\n\n   - Introduce list of known non-PNP devices to avoid enumerating some\n     of them as PNP devices (Rafael Wysocki)\n\n   - Add x86 ACPI paths to the ACPI entry in MAINTAINERS to allow\n     scripts to report the actual maintainers information (Rafael\n     Wysocki)\n\n   - Add two more entries to the ACPI IRQ override quirk list (Adam\n     Niederer, Werner Sembach)\n\n   - Add a pmic_i2c_address entry for Intel Bay Trail Crystal Cove to\n     allow intel_soc_pmic_exec_mipi_pmic_seq_element() to be used with\n     the Bay Trail Crystal Cove PMIC OpRegion driver (Hans de Goede)\n\n   - Add comments with DSDT power OpRegion field names to the ACPI PMIC\n     driver (Hans de Goede)\n\n   - Fix string termination handling in the ACPI battery driver (Armin\n     Wolf)\n\n   - Limit error type to 32-bit width in the ACPI APEI error injection\n     code (Shuai Xue)\n\n   - Fix Lenovo Ideapad Z570 DMI match in the ACPI backlight driver\n     (Hans de Goede)\n\n   - Silence missing prototype warnings in some places in the\n     ACPI-related code (Ammar Faizi)\n\n   - Make kobj_type structures used in the ACPI code constant (Thomas\n     Wei\u00dfschuh)\n\n   - Correct spelling in firmware-guide/ACPI (Randy Dunlap)\n\n   - Clarify the meaning of Explicit and Implicit in the _DSD GPIO\n     properties documentation (Andy Shevchenko)\n\n   - Fix some kernel-doc comments in the ACPI CPPC library code (Yang\n     Li)\"\n\n* tag 'acpi-6.3-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (25 commits)\n  ACPI: make kobj_type structures constant\n  Documentation: firmware-guide: gpio-properties: Clarify Explicit and Implicit\n  ACPICA: Fix typo in CDAT DSMAS struct definition\n  ACPI: resource: Do IRQ override on all TongFang GMxRGxx\n  ACPI: resource: Add IRQ overrides for MAINGEAR Vector Pro 2 models\n  ACPI: CPPC: Fix some kernel-doc comments\n  ACPI: video: Fix Lenovo Ideapad Z570 DMI match\n  Documentation: firmware-guide/ACPI: correct spelling\n  ACPI: PMIC: Add comments with DSDT power opregion field names\n  ACPI: battery: Increase maximum string length\n  ACPI: battery: Fix buffer overread if not NUL-terminated\n  ACPI: APEI: EINJ: Limit error type to 32-bit width\n  MAINTAINERS: Add x86 ACPI paths to the ACPI entry\n  ACPI: battery: Fix missing NUL-termination with large strings\n  ACPI: PNP: Introduce list of known non-PNP devices\n  ACPICA: nsrepair: handle cases without a return value correctly\n  ACPI: Silence missing prototype warnings\n  cpufreq: intel_pstate: Drop ACPI _PSS states table patching\n  ACPI: processor: perflib: Avoid updating frequency QoS unnecessarily\n  ACPI: processor: perflib: Use the \"no limit\" frequency QoS\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Tue Feb 21 12:23:24 2023 -0800",
  "author_date_iso": "2023-02-21T12:23:24-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Tue Feb 21 12:23:24 2023 -0800",
  "committer_date_iso": "2023-02-21T12:23:24-08:00",
  "files_changed": [
    "MAINTAINERS",
    "drivers/acpi/cppc_acpi.c",
    "drivers/acpi/processor_idle.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "Documentation/firmware-guide/acpi/acpi-lid.rst",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "Documentation/firmware-guide/acpi/gpio-properties.rst",
      "insertions": 24,
      "deletions": 11
    },
    {
      "file": "Documentation/firmware-guide/acpi/namespace.rst",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "MAINTAINERS",
      "insertions": 4,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/acpi_lpit.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/acpi_pnp.c",
      "insertions": 13,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/acpica/hwvalid.c",
      "insertions": 4,
      "deletions": 3
    },
    {
      "file": "drivers/acpi/acpica/nsrepair.c",
      "insertions": 7,
      "deletions": 5
    },
    {
      "file": "drivers/acpi/acpica/nsxfname.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/apei/einj.c",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/battery.c",
      "insertions": 23,
      "deletions": 12
    },
    {
      "file": "drivers/acpi/cppc_acpi.c",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/device_sysfs.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/ioapic.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/pmic/intel_pmic_bytcrc.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/pmic/intel_pmic_chtdc_ti.c",
      "insertions": 13,
      "deletions": 13
    },
    {
      "file": "drivers/acpi/processor_idle.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/processor_perflib.c",
      "insertions": 30,
      "deletions": 8
    },
    {
      "file": "drivers/acpi/resource.c",
      "insertions": 22,
      "deletions": 4
    },
    {
      "file": "drivers/acpi/sysfs.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/tables.c",
      "insertions": 2,
      "deletions": 1
    },
    {
      "file": "drivers/acpi/video_detect.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/cpufreq/intel_pstate.c",
      "insertions": 0,
      "deletions": 14
    },
    {
      "file": "include/acpi/acpixf.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "include/acpi/actbl1.h",
      "insertions": 3,
      "deletions": 1
    }
  ],
  "total_insertions": 163,
  "total_deletions": 83,
  "total_changes": 246,
  "parents": [
    "2504ba8b01634319a6f95b7fa9bf9c101437e158",
    "f32309c4d08dbac74d3253ac8310bfcad4e21606"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "MAINTAINERS",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/acpi/cppc_acpi.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/acpi/processor_idle.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}