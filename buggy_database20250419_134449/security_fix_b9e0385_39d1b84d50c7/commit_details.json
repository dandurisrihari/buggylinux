{
  "hash": "b9e03857f2e22788db6ccb67512a6604a6b4f6db",
  "hash_short": "b9e03857",
  "subject": "nvme: Add fault injection feature",
  "body": "Linux's fault injection framework provides a systematic way to support\nerror injection via debugfs in the /sys/kernel/debug directory. This\npatch uses the framework to add error injection to NVMe driver. The\nfault injection source code is stored in a separate file and only linked\nif CONFIG_FAULT_INJECTION_DEBUG_FS kernel config is selected.\n\nOnce the error injection is enabled, NVME_SC_INVALID_OPCODE with no\nretry will be injected into the nvme_end_request. Users can change\nthe default status code and no retry flag via debufs. Following example\nshows how to enable and inject an error. For more examples, refer to\nDocumentation/fault-injection/nvme-fault-injection.txt\n\nHow to enable nvme fault injection:\n\nFirst, enable CONFIG_FAULT_INJECTION_DEBUG_FS kernel config,\nrecompile the kernel. After booting up the kernel, do the\nfollowing.\n\nHow to inject an error:\n\nmount /dev/nvme0n1 /mnt\necho 1 > /sys/kernel/debug/nvme0n1/fault_inject/times\necho 100 > /sys/kernel/debug/nvme0n1/fault_inject/probability\ncp a.file /mnt\n\nExpected Result:\n\ncp: cannot stat \u2018/mnt/a.file\u2019: Input/output error\n\nMessage from dmesg:\n\nFAULT_INJECTION: forcing a failure.\nname fault_inject, interval 1, probability 100, space 0, times 1\nCPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.15.0-rc8+ #2\nHardware name: innotek GmbH VirtualBox/VirtualBox,\nBIOS VirtualBox 12/01/2006\nCall Trace:\n  <IRQ>\n  dump_stack+0x5c/0x7d\n  should_fail+0x148/0x170\n  nvme_should_fail+0x2f/0x50 [nvme_core]\n  nvme_process_cq+0xe7/0x1d0 [nvme]\n  nvme_irq+0x1e/0x40 [nvme]\n  __handle_irq_event_percpu+0x3a/0x190\n  handle_irq_event_percpu+0x30/0x70\n  handle_irq_event+0x36/0x60\n  handle_fasteoi_irq+0x78/0x120\n  handle_irq+0xa7/0x130\n  ? tick_irq_enter+0xa8/0xc0\n  do_IRQ+0x43/0xc0\n  common_interrupt+0xa2/0xa2\n  </IRQ>\nRIP: 0010:native_safe_halt+0x2/0x10\nRSP: 0018:ffffffff82003e90 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffdd\nRAX: ffffffff817a10c0 RBX: ffffffff82012480 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: 0000000000000000 R08: 000000008e38ce64 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: ffffffff82012480\nR13: ffffffff82012480 R14: 0000000000000000 R15: 0000000000000000\n  ? __sched_text_end+0x4/0x4\n  default_idle+0x18/0xf0\n  do_idle+0x150/0x1d0\n  cpu_startup_entry+0x6f/0x80\n  start_kernel+0x4c4/0x4e4\n  ? set_init_arg+0x55/0x55\n  secondary_startup_64+0xa5/0xb0\n  print_req_error: I/O error, dev nvme0n1, sector 9240\nEXT4-fs error (device nvme0n1): ext4_find_entry:1436:\ninode #2: comm cp: reading directory lblock 0\n\nSigned-off-by: Thomas Tai <thomas.tai@oracle.com>\nReviewed-by: Eric Saint-Etienne <eric.saint.etienne@oracle.com>\nSigned-off-by: Karl Volz <karl.volz@oracle.com>\nReviewed-by: Keith Busch <keith.busch@intel.com>\nSigned-off-by: Sagi Grimberg <sagi@grimberg.me>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "full_message": "nvme: Add fault injection feature\n\nLinux's fault injection framework provides a systematic way to support\nerror injection via debugfs in the /sys/kernel/debug directory. This\npatch uses the framework to add error injection to NVMe driver. The\nfault injection source code is stored in a separate file and only linked\nif CONFIG_FAULT_INJECTION_DEBUG_FS kernel config is selected.\n\nOnce the error injection is enabled, NVME_SC_INVALID_OPCODE with no\nretry will be injected into the nvme_end_request. Users can change\nthe default status code and no retry flag via debufs. Following example\nshows how to enable and inject an error. For more examples, refer to\nDocumentation/fault-injection/nvme-fault-injection.txt\n\nHow to enable nvme fault injection:\n\nFirst, enable CONFIG_FAULT_INJECTION_DEBUG_FS kernel config,\nrecompile the kernel. After booting up the kernel, do the\nfollowing.\n\nHow to inject an error:\n\nmount /dev/nvme0n1 /mnt\necho 1 > /sys/kernel/debug/nvme0n1/fault_inject/times\necho 100 > /sys/kernel/debug/nvme0n1/fault_inject/probability\ncp a.file /mnt\n\nExpected Result:\n\ncp: cannot stat \u2018/mnt/a.file\u2019: Input/output error\n\nMessage from dmesg:\n\nFAULT_INJECTION: forcing a failure.\nname fault_inject, interval 1, probability 100, space 0, times 1\nCPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.15.0-rc8+ #2\nHardware name: innotek GmbH VirtualBox/VirtualBox,\nBIOS VirtualBox 12/01/2006\nCall Trace:\n  <IRQ>\n  dump_stack+0x5c/0x7d\n  should_fail+0x148/0x170\n  nvme_should_fail+0x2f/0x50 [nvme_core]\n  nvme_process_cq+0xe7/0x1d0 [nvme]\n  nvme_irq+0x1e/0x40 [nvme]\n  __handle_irq_event_percpu+0x3a/0x190\n  handle_irq_event_percpu+0x30/0x70\n  handle_irq_event+0x36/0x60\n  handle_fasteoi_irq+0x78/0x120\n  handle_irq+0xa7/0x130\n  ? tick_irq_enter+0xa8/0xc0\n  do_IRQ+0x43/0xc0\n  common_interrupt+0xa2/0xa2\n  </IRQ>\nRIP: 0010:native_safe_halt+0x2/0x10\nRSP: 0018:ffffffff82003e90 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffdd\nRAX: ffffffff817a10c0 RBX: ffffffff82012480 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: 0000000000000000 R08: 000000008e38ce64 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: ffffffff82012480\nR13: ffffffff82012480 R14: 0000000000000000 R15: 0000000000000000\n  ? __sched_text_end+0x4/0x4\n  default_idle+0x18/0xf0\n  do_idle+0x150/0x1d0\n  cpu_startup_entry+0x6f/0x80\n  start_kernel+0x4c4/0x4e4\n  ? set_init_arg+0x55/0x55\n  secondary_startup_64+0xa5/0xb0\n  print_req_error: I/O error, dev nvme0n1, sector 9240\nEXT4-fs error (device nvme0n1): ext4_find_entry:1436:\ninode #2: comm cp: reading directory lblock 0\n\nSigned-off-by: Thomas Tai <thomas.tai@oracle.com>\nReviewed-by: Eric Saint-Etienne <eric.saint.etienne@oracle.com>\nSigned-off-by: Karl Volz <karl.volz@oracle.com>\nReviewed-by: Keith Busch <keith.busch@intel.com>\nSigned-off-by: Sagi Grimberg <sagi@grimberg.me>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "author_name": "Thomas Tai",
  "author_email": "thomas.tai@oracle.com",
  "author_date": "Thu Feb 8 13:38:29 2018 -0500",
  "author_date_iso": "2018-02-08T13:38:29-05:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Mon Mar 26 08:53:43 2018 -0600",
  "committer_date_iso": "2018-03-26T08:53:43-06:00",
  "files_changed": [
    "drivers/nvme/host/Makefile",
    "drivers/nvme/host/core.c",
    "drivers/nvme/host/fault_inject.c",
    "drivers/nvme/host/nvme.h"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "drivers/nvme/host/Makefile",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/nvme/host/core.c",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "drivers/nvme/host/fault_inject.c",
      "insertions": 79,
      "deletions": 0
    },
    {
      "file": "drivers/nvme/host/nvme.h",
      "insertions": 27,
      "deletions": 0
    }
  ],
  "total_insertions": 109,
  "total_deletions": 0,
  "total_changes": 109,
  "parents": [
    "42595eb7d0095897823b89344e497b69d08d91c1"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.17",
    "v4.17-rc1",
    "v4.17-rc2",
    "v4.17-rc3",
    "v4.17-rc4",
    "v4.17-rc5",
    "v4.17-rc6",
    "v4.17-rc7",
    "v4.18",
    "v4.18-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/nvme/host/Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/nvme/host/core.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/nvme/host/fault_inject.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/nvme/host/nvme.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}