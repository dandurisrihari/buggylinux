{
  "hash": "b6541db1395298b326ae1bf59fae6fbb2c6e8f77",
  "hash_short": "b6541db1",
  "subject": "powerpc/eeh: Block PCI config access upon frozen PE",
  "body": "The problem was found when I tried to inject PCI config error by\nPHB3 PAPR error injection registers into Broadcom Austin 4-ports\nNIC adapter. The frozen PE was reported successfully and EEH core\nstarted to recover it. However, I run into fenced PHB when dumping\nPCI config space as EEH logs. I was told that PCI config requests\nshould not be progagated to the adapter until PE reset is done\nsuccessfully. Otherise, we would run out of PHB internal credits\nand trigger PCT (PCIE Completion Timeout), which leads to the\nfenced PHB.\n\nThe patch introduces another PE flag EEH_PE_CFG_RESTRICTED, which\nis set during PE initialization time if the PE includes the specific\nPCI devices that need block PCI config access until PE reset is done.\nWhen the PE becomes frozen for the first time, EEH_PE_CFG_BLOCKED is\nset if the PE has flag EEH_PE_CFG_RESTRICTED. Then the PCI config\naccess to the PE will be dropped by platform PCI accessors until\nPE reset is done successfully. The mechanism is shared by PowerNV\nplatform owned PE or userland owned ones. It's not used on pSeries\nplatform yet.\n\nSigned-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "full_message": "powerpc/eeh: Block PCI config access upon frozen PE\n\nThe problem was found when I tried to inject PCI config error by\nPHB3 PAPR error injection registers into Broadcom Austin 4-ports\nNIC adapter. The frozen PE was reported successfully and EEH core\nstarted to recover it. However, I run into fenced PHB when dumping\nPCI config space as EEH logs. I was told that PCI config requests\nshould not be progagated to the adapter until PE reset is done\nsuccessfully. Otherise, we would run out of PHB internal credits\nand trigger PCT (PCIE Completion Timeout), which leads to the\nfenced PHB.\n\nThe patch introduces another PE flag EEH_PE_CFG_RESTRICTED, which\nis set during PE initialization time if the PE includes the specific\nPCI devices that need block PCI config access until PE reset is done.\nWhen the PE becomes frozen for the first time, EEH_PE_CFG_BLOCKED is\nset if the PE has flag EEH_PE_CFG_RESTRICTED. Then the PCI config\naccess to the PE will be dropped by platform PCI accessors until\nPE reset is done successfully. The mechanism is shared by PowerNV\nplatform owned PE or userland owned ones. It's not used on pSeries\nplatform yet.\n\nSigned-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>",
  "author_name": "Gavin Shan",
  "author_email": "gwshan@linux.vnet.ibm.com",
  "author_date": "Wed Oct 1 17:07:53 2014 +1000",
  "author_date_iso": "2014-10-01T17:07:53+10:00",
  "committer_name": "Michael Ellerman",
  "committer_email": "mpe@ellerman.id.au",
  "committer_date": "Wed Oct 15 11:27:20 2014 +1100",
  "committer_date_iso": "2014-10-15T11:27:20+11:00",
  "files_changed": [
    "arch/powerpc/include/asm/eeh.h",
    "arch/powerpc/kernel/eeh_pe.c",
    "arch/powerpc/platforms/powernv/eeh-powernv.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "arch/powerpc/include/asm/eeh.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/kernel/eeh_pe.c",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "arch/powerpc/platforms/powernv/eeh-powernv.c",
      "insertions": 19,
      "deletions": 0
    }
  ],
  "total_insertions": 28,
  "total_deletions": 0,
  "total_changes": 28,
  "parents": [
    "3409eb4e69e1150202bc4ec61801115da32aa380"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.18",
    "v3.18-rc2",
    "v3.18-rc3",
    "v3.18-rc4",
    "v3.18-rc5",
    "v3.18-rc6",
    "v3.18-rc7",
    "v3.19",
    "v3.19-rc1",
    "v3.19-rc2"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/powerpc/include/asm/eeh.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/kernel/eeh_pe.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/powerpc/platforms/powernv/eeh-powernv.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}