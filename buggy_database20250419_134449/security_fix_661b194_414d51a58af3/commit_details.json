{
  "hash": "661b19473bf3ac0924560f0cbf84c15458b3c8de",
  "hash_short": "661b1947",
  "subject": "thunderbolt: Perform USB4 router NVM upgrade in two phases",
  "body": "The currect code expects that the router returns back the status of the\nNVM authentication immediately. When tested against a real USB4 device\nwhat happens is that the router is reset and only after that the result\nis updated in the ROUTER_CS_26 register status field. This also seems to\nalign better what the spec suggests.\n\nFor this reason do the same what we already do with the Thunderbolt 3\ndevices and perform the NVM upgrade in two phases. First start the\nNVM_AUTH router operation and once the router is added back after the\nreset read the status in ROUTER_CS_26 and expose it to the userspace\naccordingly.\n\nSigned-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>",
  "full_message": "thunderbolt: Perform USB4 router NVM upgrade in two phases\n\nThe currect code expects that the router returns back the status of the\nNVM authentication immediately. When tested against a real USB4 device\nwhat happens is that the router is reset and only after that the result\nis updated in the ROUTER_CS_26 register status field. This also seems to\nalign better what the spec suggests.\n\nFor this reason do the same what we already do with the Thunderbolt 3\ndevices and perform the NVM upgrade in two phases. First start the\nNVM_AUTH router operation and once the router is added back after the\nreset read the status in ROUTER_CS_26 and expose it to the userspace\naccordingly.\n\nSigned-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>",
  "author_name": "Mika Westerberg",
  "author_email": "mika.westerberg@linux.intel.com",
  "author_date": "Tue Nov 10 11:34:07 2020 +0300",
  "author_date_iso": "2020-11-10T11:34:07+03:00",
  "committer_name": "Mika Westerberg",
  "committer_email": "mika.westerberg@linux.intel.com",
  "committer_date": "Mon Nov 30 14:39:24 2020 +0300",
  "committer_date_iso": "2020-11-30T14:39:24+03:00",
  "files_changed": [
    "drivers/thunderbolt/switch.c",
    "drivers/thunderbolt/tb.h",
    "drivers/thunderbolt/tb_regs.h",
    "drivers/thunderbolt/usb4.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "drivers/thunderbolt/switch.c",
      "insertions": 17,
      "deletions": 3
    },
    {
      "file": "drivers/thunderbolt/tb.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/thunderbolt/tb_regs.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/thunderbolt/usb4.c",
      "insertions": 58,
      "deletions": 17
    }
  ],
  "total_insertions": 77,
  "total_deletions": 20,
  "total_changes": 97,
  "parents": [
    "463e48fa544826898791085508459de246fc4c09"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/thunderbolt/switch.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/thunderbolt/tb.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/thunderbolt/tb_regs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/thunderbolt/usb4.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}