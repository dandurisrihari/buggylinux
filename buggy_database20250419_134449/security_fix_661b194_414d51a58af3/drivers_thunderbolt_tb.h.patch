commit 661b19473bf3ac0924560f0cbf84c15458b3c8de
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Tue Nov 10 11:34:07 2020 +0300

    thunderbolt: Perform USB4 router NVM upgrade in two phases
    
    The currect code expects that the router returns back the status of the
    NVM authentication immediately. When tested against a real USB4 device
    what happens is that the router is reset and only after that the result
    is updated in the ROUTER_CS_26 register status field. This also seems to
    align better what the spec suggests.
    
    For this reason do the same what we already do with the Thunderbolt 3
    devices and perform the NVM upgrade in two phases. First start the
    NVM_AUTH router operation and once the router is added back after the
    reset read the status in ROUTER_CS_26 and expose it to the userspace
    accordingly.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>

diff --git a/drivers/thunderbolt/tb.h b/drivers/thunderbolt/tb.h
index a21000649009..3885f2515aae 100644
--- a/drivers/thunderbolt/tb.h
+++ b/drivers/thunderbolt/tb.h
@@ -972,6 +972,7 @@ int usb4_switch_nvm_read(struct tb_switch *sw, unsigned int address, void *buf,
 int usb4_switch_nvm_write(struct tb_switch *sw, unsigned int address,
 			  const void *buf, size_t size);
 int usb4_switch_nvm_authenticate(struct tb_switch *sw);
+int usb4_switch_nvm_authenticate_status(struct tb_switch *sw, u32 *status);
 bool usb4_switch_query_dp_resource(struct tb_switch *sw, struct tb_port *in);
 int usb4_switch_alloc_dp_resource(struct tb_switch *sw, struct tb_port *in);
 int usb4_switch_dealloc_dp_resource(struct tb_switch *sw, struct tb_port *in);