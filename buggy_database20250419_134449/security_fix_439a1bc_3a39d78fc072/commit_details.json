{
  "hash": "439a1bcac648fe9b59210cde8991fb2acf37bdab",
  "hash_short": "439a1bca",
  "subject": "fortify: Use __builtin_dynamic_object_size() when available",
  "body": "Since the commits starting with c37495d6254c (\"slab: add __alloc_size\nattributes for better bounds checking\"), the compilers have runtime\nallocation size hints available in some places. This was immediately\navailable to CONFIG_UBSAN_BOUNDS, but CONFIG_FORTIFY_SOURCE needed\nupdating to explicitly make use of the hints via the associated\n__builtin_dynamic_object_size() helper. Detect and use the builtin when\nit is available, increasing the accuracy of the mitigation. When runtime\nsizes are not available, __builtin_dynamic_object_size() falls back to\n__builtin_object_size(), leaving the existing bounds checking unchanged.\n\nAdditionally update the VMALLOC_LINEAR_OVERFLOW LKDTM test to make the\nhint invisible, otherwise the architectural defense is not exercised\n(the buffer overflow is detected in the memset() rather than when it\ncrosses the edge of the allocation).\n\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nCc: Nick Desaulniers <ndesaulniers@google.com>\nCc: Nathan Chancellor <nathan@kernel.org>\nCc: Tom Rix <trix@redhat.com>\nCc: linux-hardening@vger.kernel.org\nCc: llvm@lists.linux.dev\nReviewed-by: Miguel Ojeda <ojeda@kernel.org> # include/linux/compiler_attributes.h\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "full_message": "fortify: Use __builtin_dynamic_object_size() when available\n\nSince the commits starting with c37495d6254c (\"slab: add __alloc_size\nattributes for better bounds checking\"), the compilers have runtime\nallocation size hints available in some places. This was immediately\navailable to CONFIG_UBSAN_BOUNDS, but CONFIG_FORTIFY_SOURCE needed\nupdating to explicitly make use of the hints via the associated\n__builtin_dynamic_object_size() helper. Detect and use the builtin when\nit is available, increasing the accuracy of the mitigation. When runtime\nsizes are not available, __builtin_dynamic_object_size() falls back to\n__builtin_object_size(), leaving the existing bounds checking unchanged.\n\nAdditionally update the VMALLOC_LINEAR_OVERFLOW LKDTM test to make the\nhint invisible, otherwise the architectural defense is not exercised\n(the buffer overflow is detected in the memset() rather than when it\ncrosses the edge of the allocation).\n\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nCc: Nick Desaulniers <ndesaulniers@google.com>\nCc: Nathan Chancellor <nathan@kernel.org>\nCc: Tom Rix <trix@redhat.com>\nCc: linux-hardening@vger.kernel.org\nCc: llvm@lists.linux.dev\nReviewed-by: Miguel Ojeda <ojeda@kernel.org> # include/linux/compiler_attributes.h\nSigned-off-by: Kees Cook <keescook@chromium.org>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Mon Sep 19 15:53:13 2022 -0700",
  "author_date_iso": "2022-09-19T15:53:13-07:00",
  "committer_name": "Kees Cook",
  "committer_email": "keescook@chromium.org",
  "committer_date": "Thu Jan 5 12:08:29 2023 -0800",
  "committer_date_iso": "2023-01-05T12:08:29-08:00",
  "files_changed": [
    "drivers/misc/lkdtm/heap.c",
    "include/linux/compiler_attributes.h",
    "include/linux/fortify-string.h"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "drivers/misc/lkdtm/heap.c",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/compiler_attributes.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "include/linux/fortify-string.h",
      "insertions": 7,
      "deletions": 0
    }
  ],
  "total_insertions": 13,
  "total_deletions": 0,
  "total_changes": 13,
  "parents": [
    "b2ba00c2a51793d916b662cb049b8f01c55d9e82"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/misc/lkdtm/heap.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/compiler_attributes.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/fortify-string.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}