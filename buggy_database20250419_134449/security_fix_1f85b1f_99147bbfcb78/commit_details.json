{
  "hash": "1f85b1f5e1f5541272abedc19ba7b6c5b564c228",
  "hash_short": "1f85b1f5",
  "subject": "genirq: Add return value to check_irq_resend()",
  "body": "In preparation for an interrupt injection interface which can be used\nsafely by error injection mechanisms. e.g. PCI-E/ AER, add a return value\nto check_irq_resend() so errors can be propagated to the caller.\n\nSplit out the software resend code so the ugly #ifdef in check_irq_resend()\ngoes away and the whole thing becomes readable.\n\nFix up the caller in debugfs. The caller in irq_startup() does not care\nabout the return value as this is unconditionally invoked for all\ninterrupts and the resend is best effort anyway.\n\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nAcked-by: Marc Zyngier <maz@kernel.org>\nLink: https://lkml.kernel.org/r/20200306130623.775200917@linutronix.de",
  "full_message": "genirq: Add return value to check_irq_resend()\n\nIn preparation for an interrupt injection interface which can be used\nsafely by error injection mechanisms. e.g. PCI-E/ AER, add a return value\nto check_irq_resend() so errors can be propagated to the caller.\n\nSplit out the software resend code so the ugly #ifdef in check_irq_resend()\ngoes away and the whole thing becomes readable.\n\nFix up the caller in debugfs. The caller in irq_startup() does not care\nabout the return value as this is unconditionally invoked for all\ninterrupts and the resend is best effort anyway.\n\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nAcked-by: Marc Zyngier <maz@kernel.org>\nLink: https://lkml.kernel.org/r/20200306130623.775200917@linutronix.de",
  "author_name": "Thomas Gleixner",
  "author_email": "tglx@linutronix.de",
  "author_date": "Fri Mar 6 14:03:45 2020 +0100",
  "author_date_iso": "2020-03-06T14:03:45+01:00",
  "committer_name": "Thomas Gleixner",
  "committer_email": "tglx@linutronix.de",
  "committer_date": "Sun Mar 8 11:06:41 2020 +0100",
  "committer_date_iso": "2020-03-08T11:06:41+01:00",
  "files_changed": [
    "kernel/irq/debugfs.c",
    "kernel/irq/internals.h",
    "kernel/irq/resend.c"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "kernel/irq/debugfs.c",
      "insertions": 1,
      "deletions": 2
    },
    {
      "file": "kernel/irq/internals.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "kernel/irq/resend.c",
      "insertions": 49,
      "deletions": 34
    }
  ],
  "total_insertions": 51,
  "total_deletions": 37,
  "total_changes": 88,
  "parents": [
    "008f1d60fe25810d4554916744b0975d76601b64"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.7-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "kernel/irq/debugfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/irq/internals.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/irq/resend.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}