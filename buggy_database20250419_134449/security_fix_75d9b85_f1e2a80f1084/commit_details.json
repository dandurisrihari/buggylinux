{
  "hash": "75d9b8559ac36e059238ee4f8e33cd86086586ba",
  "hash_short": "75d9b855",
  "subject": "Bluetooth: Fix memory leak of hci device",
  "body": "Fault injection test reported memory leak of hci device as follows:\n\nunreferenced object 0xffff88800b858000 (size 8192):\n  comm \"kworker/0:2\", pid 167, jiffies 4294955747 (age 557.148s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 ad 4e ad de  .............N..\n  backtrace:\n    [<0000000070eb1059>] kmem_cache_alloc_trace mm/slub.c:3208\n    [<00000000015eb521>] hci_alloc_dev_priv include/linux/slab.h:591\n    [<00000000dcfc1e21>] bpa10x_probe include/net/bluetooth/hci_core.h:1240\n    [<000000005d3028c7>] usb_probe_interface drivers/usb/core/driver.c:397\n    [<00000000cbac9243>] really_probe drivers/base/dd.c:517\n    [<0000000024cab3f0>] __driver_probe_device drivers/base/dd.c:751\n    [<00000000202135cb>] driver_probe_device drivers/base/dd.c:782\n    [<000000000761f2bc>] __device_attach_driver drivers/base/dd.c:899\n    [<00000000f7d63134>] bus_for_each_drv drivers/base/bus.c:427\n    [<00000000c9551f0b>] __device_attach drivers/base/dd.c:971\n    [<000000007f79bd16>] bus_probe_device drivers/base/bus.c:487\n    [<000000007bb8b95a>] device_add drivers/base/core.c:3364\n    [<000000009564d9ea>] usb_set_configuration drivers/usb/core/message.c:2171\n    [<00000000e4657087>] usb_generic_driver_probe drivers/usb/core/generic.c:239\n    [<0000000071ede518>] usb_probe_device drivers/usb/core/driver.c:294\n    [<00000000cbac9243>] really_probe drivers/base/dd.c:517\n\nhci_alloc_dev() do not init the device's flag. And hci_free_dev()\nusing put_device() to free the memory allocated for this device,\nbut it calls just put_device(dev) only in case of HCI_UNREGISTER\nflag is set, So any error handing before hci_register_dev() success\nwill cause memory leak.\n\nTo avoid this behaviour we can using kfree() to release dev before\nhci_register_dev() success.\n\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>",
  "full_message": "Bluetooth: Fix memory leak of hci device\n\nFault injection test reported memory leak of hci device as follows:\n\nunreferenced object 0xffff88800b858000 (size 8192):\n  comm \"kworker/0:2\", pid 167, jiffies 4294955747 (age 557.148s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 ad 4e ad de  .............N..\n  backtrace:\n    [<0000000070eb1059>] kmem_cache_alloc_trace mm/slub.c:3208\n    [<00000000015eb521>] hci_alloc_dev_priv include/linux/slab.h:591\n    [<00000000dcfc1e21>] bpa10x_probe include/net/bluetooth/hci_core.h:1240\n    [<000000005d3028c7>] usb_probe_interface drivers/usb/core/driver.c:397\n    [<00000000cbac9243>] really_probe drivers/base/dd.c:517\n    [<0000000024cab3f0>] __driver_probe_device drivers/base/dd.c:751\n    [<00000000202135cb>] driver_probe_device drivers/base/dd.c:782\n    [<000000000761f2bc>] __device_attach_driver drivers/base/dd.c:899\n    [<00000000f7d63134>] bus_for_each_drv drivers/base/bus.c:427\n    [<00000000c9551f0b>] __device_attach drivers/base/dd.c:971\n    [<000000007f79bd16>] bus_probe_device drivers/base/bus.c:487\n    [<000000007bb8b95a>] device_add drivers/base/core.c:3364\n    [<000000009564d9ea>] usb_set_configuration drivers/usb/core/message.c:2171\n    [<00000000e4657087>] usb_generic_driver_probe drivers/usb/core/generic.c:239\n    [<0000000071ede518>] usb_probe_device drivers/usb/core/driver.c:294\n    [<00000000cbac9243>] really_probe drivers/base/dd.c:517\n\nhci_alloc_dev() do not init the device's flag. And hci_free_dev()\nusing put_device() to free the memory allocated for this device,\nbut it calls just put_device(dev) only in case of HCI_UNREGISTER\nflag is set, So any error handing before hci_register_dev() success\nwill cause memory leak.\n\nTo avoid this behaviour we can using kfree() to release dev before\nhci_register_dev() success.\n\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>",
  "author_name": "Wei Yongjun",
  "author_email": "weiyongjun1@huawei.com",
  "author_date": "Wed Oct 13 16:55:01 2021 +0800",
  "author_date_iso": "2021-10-13T16:55:01+08:00",
  "committer_name": "Marcel Holtmann",
  "committer_email": "marcel@holtmann.org",
  "committer_date": "Wed Oct 13 14:31:50 2021 +0200",
  "committer_date_iso": "2021-10-13T14:31:50+02:00",
  "files_changed": [
    "net/bluetooth/hci_sysfs.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/bluetooth/hci_sysfs.c",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 2,
  "total_deletions": 0,
  "total_changes": 2,
  "parents": [
    "893505319c74cf3faa45a5ed9d5338ff03b66949"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/bluetooth/hci_sysfs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}