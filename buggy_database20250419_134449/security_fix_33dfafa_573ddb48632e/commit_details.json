{
  "hash": "33dfafa90285c0873a24d633877d505ab8e3fc20",
  "hash_short": "33dfafa9",
  "subject": "bcachefs: Fix safe errors by default",
  "body": "i.e. the start of automatic self healing:\n\nIf errors=continue or fix_safe, we now automatically fix simple errors\nwithout user intervention.\n\nNew error action option: fix_safe\n\nThis replaces the existing errors=ro option, which gets a new slot, i.e.\nexisting errors=ro users now get errors=fix_safe.\n\nThis is currently only enabled for a limited set of errors - initially\njust disk accounting; errors we would never not want to fix, and we\ndon't want to require user intervention (i.e. to make sure a bug report\ngets filed).\n\nErrors will still be counted in the superblock, so we (developers) will\nstill know they've been occuring if a bug report gets filed (as bug\nreports typically include the errors superblock section).\n\nEventually we'll be enabling this for a much wider set of errors, after\nwe've done thorough error injection testing.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
  "full_message": "bcachefs: Fix safe errors by default\n\ni.e. the start of automatic self healing:\n\nIf errors=continue or fix_safe, we now automatically fix simple errors\nwithout user intervention.\n\nNew error action option: fix_safe\n\nThis replaces the existing errors=ro option, which gets a new slot, i.e.\nexisting errors=ro users now get errors=fix_safe.\n\nThis is currently only enabled for a limited set of errors - initially\njust disk accounting; errors we would never not want to fix, and we\ndon't want to require user intervention (i.e. to make sure a bug report\ngets filed).\n\nErrors will still be counted in the superblock, so we (developers) will\nstill know they've been occuring if a bug report gets filed (as bug\nreports typically include the errors superblock section).\n\nEventually we'll be enabling this for a much wider set of errors, after\nwe've done thorough error injection testing.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
  "author_name": "Kent Overstreet",
  "author_email": "kent.overstreet@linux.dev",
  "author_date": "Wed Jun 19 09:55:48 2024 -0400",
  "author_date_iso": "2024-06-19T09:55:48-04:00",
  "committer_name": "Kent Overstreet",
  "committer_email": "kent.overstreet@linux.dev",
  "committer_date": "Thu Jun 20 09:13:09 2024 -0400",
  "committer_date_iso": "2024-06-20T09:13:09-04:00",
  "files_changed": [
    "fs/bcachefs/bcachefs_format.h",
    "fs/bcachefs/error.c",
    "fs/bcachefs/error.h",
    "fs/bcachefs/opts.h",
    "fs/bcachefs/sb-errors_format.h"
  ],
  "files_changed_count": 5,
  "stats": [
    {
      "file": "fs/bcachefs/bcachefs_format.h",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "fs/bcachefs/error.c",
      "insertions": 18,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/error.h",
      "insertions": 0,
      "deletions": 7
    },
    {
      "file": "fs/bcachefs/opts.h",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "fs/bcachefs/sb-errors_format.h",
      "insertions": 286,
      "deletions": 278
    }
  ],
  "total_insertions": 308,
  "total_deletions": 289,
  "total_changes": 597,
  "parents": [
    "a56da69799bd5f0c72bdc0fb64c3e3d8c1b1bb36"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/bcachefs/bcachefs_format.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/bcachefs/error.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/bcachefs/error.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/bcachefs/opts.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/bcachefs/sb-errors_format.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}