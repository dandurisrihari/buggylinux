Commit Hash: 9f36e2c448007b54851e7e4fa48da97d1477a175
Subject: printk: use %pK for /proc/kallsyms and /proc/modules


Security Keywords:
- privilege escalation

Full commit message:
printk: use %pK for /proc/kallsyms and /proc/modules

In an effort to reduce kernel address leaks that might be used to help
target kernel privilege escalation exploits, this patch uses %pK when
displaying addresses in /proc/kallsyms, /proc/modules, and
/sys/module/*/sections/*.

Note that this changes %x to %p, so some legitimately 0 values in
/proc/kallsyms would have changed from 00000000 to "(null)".  To avoid
this, "(null)" is not used when using the "K" format.  Anything that was
already successfully parsing "(null)" in addition to full hex digits
should have no problem with this change.  (Thanks to Joe Perches for the
suggestion.) Due to the %x to %p, "void *" casts are needed since these
addresses are already "unsigned long" everywhere internally, due to their
starting life as ELF section offsets.

Signed-off-by: Kees Cook <kees.cook@canonical.com>
Cc: Eugene Teo <eugene@redhat.com>
Cc: Dan Rosenberg <drosenberg@vsecurity.com>
Cc: Rusty Russell <rusty@rustcorp.com.au>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Metadata:
Author: Kees Cook <kees.cook@canonical.com>
Author Date: Tue Mar 22 16:34:22 2011 -0700
Committer: Linus Torvalds <torvalds@linux-foundation.org>
Commit Date: Tue Mar 22 17:44:12 2011 -0700

Files Changed: 3
Lines Added: 7
Lines Removed: 9
Total Changes: 16
