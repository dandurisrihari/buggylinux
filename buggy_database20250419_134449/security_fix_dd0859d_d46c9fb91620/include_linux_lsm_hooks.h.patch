commit dd0859dccbe291cf8179a96390f5c0e45cb9af1d
Author: James Morris <jmorris@namei.org>
Date:   Wed Feb 15 00:17:24 2017 +1100

    security: introduce CONFIG_SECURITY_WRITABLE_HOOKS
    
    Subsequent patches will add RO hardening to LSM hooks, however, SELinux
    still needs to be able to perform runtime disablement after init to handle
    architectures where init-time disablement via boot parameters is not feasible.
    
    Introduce a new kernel configuration parameter CONFIG_SECURITY_WRITABLE_HOOKS,
    and a helper macro __lsm_ro_after_init, to handle this case.
    
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Acked-by: Stephen Smalley <sds@tycho.nsa.gov>
    Acked-by: Casey Schaufler <casey@schaufler-ca.com>
    Acked-by: Kees Cook <keescook@chromium.org>

diff --git a/include/linux/lsm_hooks.h b/include/linux/lsm_hooks.h
index ba3049f05aea..1aa63335de9e 100644
--- a/include/linux/lsm_hooks.h
+++ b/include/linux/lsm_hooks.h
@@ -1920,6 +1920,13 @@ static inline void security_delete_hooks(struct security_hook_list *hooks,
 }
 #endif /* CONFIG_SECURITY_SELINUX_DISABLE */
 
+/* Currently required to handle SELinux runtime hook disable. */
+#ifdef CONFIG_SECURITY_WRITABLE_HOOKS
+#define __lsm_ro_after_init
+#else
+#define __lsm_ro_after_init	__ro_after_init
+#endif /* CONFIG_SECURITY_WRITABLE_HOOKS */
+
 extern int __init security_module_enable(const char *module);
 extern void __init capability_add_hooks(void);
 #ifdef CONFIG_SECURITY_YAMA