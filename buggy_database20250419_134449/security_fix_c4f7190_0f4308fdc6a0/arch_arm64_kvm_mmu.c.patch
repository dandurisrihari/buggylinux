commit c4f71901d53b6d8a4703389459d9f99fbd80ffd2
Merge: fd49e8ee70b3 9a8aae605b80
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Apr 23 07:41:17 2021 -0400

    Merge tag 'kvmarm-5.13' of git://git.kernel.org/pub/scm/linux/kernel/git/kvmarm/kvmarm into HEAD
    
    KVM/arm64 updates for Linux 5.13
    
    New features:
    
    - Stage-2 isolation for the host kernel when running in protected mode
    - Guest SVE support when running in nVHE mode
    - Force W^X hypervisor mappings in nVHE mode
    - ITS save/restore for guests using direct injection with GICv4.1
    - nVHE panics now produce readable backtraces
    - Guest support for PTP using the ptp_kvm driver
    - Performance improvements in the S2 fault handler
    - Alexandru is now a reviewer (not really a new feature...)
    
    Fixes:
    - Proper emulation of the GICR_TYPER register
    - Handle the complete set of relocation in the nVHE EL2 object
    - Get rid of the oprofile dependency in the PMU code (and of the
      oprofile body parts at the same time)
    - Debug and SPE fixes
    - Fix vcpu reset

diff --cc arch/arm64/kvm/mmu.c
index 35728231e9a0,cd4d51ae3d4a..c5d1f3c87dbd
--- a/arch/arm64/kvm/mmu.c
+++ b/arch/arm64/kvm/mmu.c
@@@ -839,9 -923,13 +923,13 @@@ static int user_mem_abort(struct kvm_vc
  	 * gfn_to_pfn_prot (which calls get_user_pages), so that we don't risk
  	 * the page we just got a reference to gets unmapped before we have a
  	 * chance to grab the mmu_lock, which ensure that if the page gets
 -	 * unmapped afterwards, the call to kvm_unmap_hva will take it away
 +	 * unmapped afterwards, the call to kvm_unmap_gfn will take it away
  	 * from us again properly. This smp_rmb() interacts with the smp_wmb()
  	 * in kvm_mmu_notifier_invalidate_<page|range_end>.
+ 	 *
+ 	 * Besides, __gfn_to_pfn_memslot() instead of gfn_to_pfn_prot() is
+ 	 * used to avoid unnecessary overhead introduced to locate the memory
+ 	 * slot because it's always fixed even @gfn is adjusted for huge pages.
  	 */
  	smp_rmb();