commit c4f71901d53b6d8a4703389459d9f99fbd80ffd2
Merge: fd49e8ee70b3 9a8aae605b80
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Apr 23 07:41:17 2021 -0400

    Merge tag 'kvmarm-5.13' of git://git.kernel.org/pub/scm/linux/kernel/git/kvmarm/kvmarm into HEAD
    
    KVM/arm64 updates for Linux 5.13
    
    New features:
    
    - Stage-2 isolation for the host kernel when running in protected mode
    - Guest SVE support when running in nVHE mode
    - Force W^X hypervisor mappings in nVHE mode
    - ITS save/restore for guests using direct injection with GICv4.1
    - nVHE panics now produce readable backtraces
    - Guest support for PTP using the ptp_kvm driver
    - Performance improvements in the S2 fault handler
    - Alexandru is now a reviewer (not really a new feature...)
    
    Fixes:
    - Proper emulation of the GICR_TYPER register
    - Handle the complete set of relocation in the nVHE EL2 object
    - Get rid of the oprofile dependency in the PMU code (and of the
      oprofile body parts at the same time)
    - Debug and SPE fixes
    - Fix vcpu reset

diff --cc Documentation/virt/kvm/api.rst
index 56c6fca6219f,3f210953c135..94804c2f45ac
--- a/Documentation/virt/kvm/api.rst
+++ b/Documentation/virt/kvm/api.rst
@@@ -6844,28 -6738,12 +6857,37 @@@ The KVM_XEN_HVM_CONFIG_RUNSTATE flag in
  features KVM_XEN_VCPU_ATTR_TYPE_RUNSTATE_ADDR/_CURRENT/_DATA/_ADJUST are
  supported by the KVM_XEN_VCPU_SET_ATTR/KVM_XEN_VCPU_GET_ATTR ioctls.
  
 -8.31 KVM_CAP_PTP_KVM
 +8.31 KVM_CAP_PPC_MULTITCE
 +-------------------------
 +
 +:Capability: KVM_CAP_PPC_MULTITCE
 +:Architectures: ppc
 +:Type: vm
 +
 +This capability means the kernel is capable of handling hypercalls
 +H_PUT_TCE_INDIRECT and H_STUFF_TCE without passing those into the user
 +space. This significantly accelerates DMA operations for PPC KVM guests.
 +User space should expect that its handlers for these hypercalls
 +are not going to be called if user space previously registered LIOBN
 +in KVM (via KVM_CREATE_SPAPR_TCE or similar calls).
 +
 +In order to enable H_PUT_TCE_INDIRECT and H_STUFF_TCE use in the guest,
 +user space might have to advertise it for the guest. For example,
 +IBM pSeries (sPAPR) guest starts using them if "hcall-multi-tce" is
 +present in the "ibm,hypertas-functions" device-tree property.
 +
 +The hypercalls mentioned above may or may not be processed successfully
 +in the kernel based fast path. If they can not be handled by the kernel,
 +they will get passed on to user space. So user space still has to have
 +an implementation for these despite the in kernel acceleration.
 +
 +This capability is always enabled.
++
++8.32 KVM_CAP_PTP_KVM
+ --------------------
+ 
+ :Architectures: arm64
+ 
+ This capability indicates that the KVM virtual PTP service is
+ supported in the host. A VMM can check whether the service is
+ available to the guest on migration.
 -