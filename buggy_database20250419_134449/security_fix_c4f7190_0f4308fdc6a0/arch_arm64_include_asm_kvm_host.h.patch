commit c4f71901d53b6d8a4703389459d9f99fbd80ffd2
Merge: fd49e8ee70b3 9a8aae605b80
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Apr 23 07:41:17 2021 -0400

    Merge tag 'kvmarm-5.13' of git://git.kernel.org/pub/scm/linux/kernel/git/kvmarm/kvmarm into HEAD
    
    KVM/arm64 updates for Linux 5.13
    
    New features:
    
    - Stage-2 isolation for the host kernel when running in protected mode
    - Guest SVE support when running in nVHE mode
    - Force W^X hypervisor mappings in nVHE mode
    - ITS save/restore for guests using direct injection with GICv4.1
    - nVHE panics now produce readable backtraces
    - Guest support for PTP using the ptp_kvm driver
    - Performance improvements in the S2 fault handler
    - Alexandru is now a reviewer (not really a new feature...)
    
    Fixes:
    - Proper emulation of the GICR_TYPER register
    - Handle the complete set of relocation in the nVHE EL2 object
    - Get rid of the oprofile dependency in the PMU code (and of the
      oprofile body parts at the same time)
    - Debug and SPE fixes
    - Fix vcpu reset

diff --cc arch/arm64/include/asm/kvm_host.h
index 3a708be3ed71,0b926f027895..7cd7d5c8c4bc
--- a/arch/arm64/include/asm/kvm_host.h
+++ b/arch/arm64/include/asm/kvm_host.h
@@@ -400,11 -404,9 +404,13 @@@ struct kvm_vcpu_arch 
  #define KVM_ARM64_GUEST_HAS_PTRAUTH	(1 << 7) /* PTRAUTH exposed to guest */
  #define KVM_ARM64_PENDING_EXCEPTION	(1 << 8) /* Exception pending */
  #define KVM_ARM64_EXCEPT_MASK		(7 << 9) /* Target EL/MODE */
+ #define KVM_ARM64_DEBUG_STATE_SAVE_SPE	(1 << 12) /* Save SPE context if active  */
+ #define KVM_ARM64_DEBUG_STATE_SAVE_TRBE	(1 << 13) /* Save TRBE context if active  */
  
 +#define KVM_GUESTDBG_VALID_MASK (KVM_GUESTDBG_ENABLE | \
 +				 KVM_GUESTDBG_USE_SW_BP | \
 +				 KVM_GUESTDBG_USE_HW | \
 +				 KVM_GUESTDBG_SINGLESTEP)
  /*
   * When KVM_ARM64_PENDING_EXCEPTION is set, KVM_ARM64_EXCEPT_MASK can
   * take the following values: