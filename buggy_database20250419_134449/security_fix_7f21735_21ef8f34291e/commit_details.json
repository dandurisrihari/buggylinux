{
  "hash": "7f21735ffb2648a29e0fc79c4bdcb1b9ed8602cd",
  "hash_short": "7f21735f",
  "subject": "rbd: fix possible memory leak in rbd_sysfs_init()",
  "body": "If device_register() returns error in rbd_sysfs_init(), name of kobject\nwhich is allocated in dev_set_name() called in device_add() is leaked.\n\nAs comment of device_add() says, it should call put_device() to drop\nthe reference count that was set in device_initialize() when it fails,\nso the name can be freed in kobject_cleanup().\n\nFault injection test can trigger this problem:\n\nunreferenced object 0xffff88810173aa78 (size 8):\n  comm \"modprobe\", pid 247, jiffies 4294714278 (age 31.789s)\n  hex dump (first 8 bytes):\n    72 62 64 00 81 88 ff ff                          rbd.....\n  backtrace:\n    [<00000000f58fae56>] __kmalloc_node_track_caller+0x44/0x1b0\n    [<00000000bdd44fe7>] kstrdup+0x3a/0x70\n    [<00000000f7844d0b>] kstrdup_const+0x63/0x80\n    [<000000001b0a0eeb>] kvasprintf_const+0x10b/0x190\n    [<00000000a47bd894>] kobject_set_name_vargs+0x56/0x150\n    [<00000000d5edbf18>] dev_set_name+0xab/0xe0\n    [<00000000f5153e80>] device_add+0x106/0x1f20\n\nFixes: dfc5606dc513 (\"rbd: replace the rbd sysfs interface\")\nSigned-off-by: Yang Yingliang <yangyingliang@huawei.com>\nReviewed-by: Alex Elder <elder@linaro.org>\nLink: https://lore.kernel.org/r/20221027091918.2294132-1-yangyingliang@huawei.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "full_message": "rbd: fix possible memory leak in rbd_sysfs_init()\n\nIf device_register() returns error in rbd_sysfs_init(), name of kobject\nwhich is allocated in dev_set_name() called in device_add() is leaked.\n\nAs comment of device_add() says, it should call put_device() to drop\nthe reference count that was set in device_initialize() when it fails,\nso the name can be freed in kobject_cleanup().\n\nFault injection test can trigger this problem:\n\nunreferenced object 0xffff88810173aa78 (size 8):\n  comm \"modprobe\", pid 247, jiffies 4294714278 (age 31.789s)\n  hex dump (first 8 bytes):\n    72 62 64 00 81 88 ff ff                          rbd.....\n  backtrace:\n    [<00000000f58fae56>] __kmalloc_node_track_caller+0x44/0x1b0\n    [<00000000bdd44fe7>] kstrdup+0x3a/0x70\n    [<00000000f7844d0b>] kstrdup_const+0x63/0x80\n    [<000000001b0a0eeb>] kvasprintf_const+0x10b/0x190\n    [<00000000a47bd894>] kobject_set_name_vargs+0x56/0x150\n    [<00000000d5edbf18>] dev_set_name+0xab/0xe0\n    [<00000000f5153e80>] device_add+0x106/0x1f20\n\nFixes: dfc5606dc513 (\"rbd: replace the rbd sysfs interface\")\nSigned-off-by: Yang Yingliang <yangyingliang@huawei.com>\nReviewed-by: Alex Elder <elder@linaro.org>\nLink: https://lore.kernel.org/r/20221027091918.2294132-1-yangyingliang@huawei.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
  "author_name": "Yang Yingliang",
  "author_email": "yangyingliang@huawei.com",
  "author_date": "Thu Oct 27 17:19:18 2022 +0800",
  "author_date_iso": "2022-10-27T17:19:18+08:00",
  "committer_name": "Jens Axboe",
  "committer_email": "axboe@kernel.dk",
  "committer_date": "Thu Oct 27 07:15:30 2022 -0600",
  "committer_date_iso": "2022-10-27T07:15:30-06:00",
  "files_changed": [
    "drivers/block/rbd.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/block/rbd.c",
      "insertions": 3,
      "deletions": 1
    }
  ],
  "total_insertions": 3,
  "total_deletions": 1,
  "total_changes": 4,
  "parents": [
    "02341a08c9dec5a88527981b0bdf0fb6f7499cbf"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/block/rbd.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}