{
  "hash": "f50f9aabf32db7414551ffdfdccc71be5f3d6e7d",
  "hash_short": "f50f9aab",
  "subject": "HID: wiimote: fix FF deadlock",
  "body": "The input core has an internal spinlock that is acquired during event\ninjection via input_event() and friends but also held during FF callbacks.\nThat means, there is no way to share a lock between event-injection and FF\nhandling. Unfortunately, this is what is required for wiimote state\ntracking and what we do with state.lock and input->lock.\n\nThis deadlock can be triggered when using continuous data reporting and FF\non a wiimote device at the same time. I takes me at least 30m of\nstress-testing to trigger it but users reported considerably shorter\ntimes (http://bpaste.net/show/132504/) when using some gaming-console\nemulators.\n\nThe real problem is that we have two copies of internal state, one in the\nwiimote objects and the other in the input device. As the input-lock is\nnot supposed to be accessed from outside of input-core, we have no other\nchance than offloading FF handling into a worker. This actually works\npretty nice and also allows to implictly merge fast rumble changes into a\nsingle request.\n\nDue to the 3-layered workers (rumble+queue+l2cap) this might reduce FF\nresponsiveness. Initial tests were fine so lets fix the race first and if\nit turns out to be too slow we can always handle FF out-of-band and skip\nthe queue-worker.\n\nCc: <stable@vger.kernel.org> # 3.11+\nReported-by: Thomas Schneider\nSigned-off-by: David Herrmann <dh.herrmann@gmail.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
  "full_message": "HID: wiimote: fix FF deadlock\n\nThe input core has an internal spinlock that is acquired during event\ninjection via input_event() and friends but also held during FF callbacks.\nThat means, there is no way to share a lock between event-injection and FF\nhandling. Unfortunately, this is what is required for wiimote state\ntracking and what we do with state.lock and input->lock.\n\nThis deadlock can be triggered when using continuous data reporting and FF\non a wiimote device at the same time. I takes me at least 30m of\nstress-testing to trigger it but users reported considerably shorter\ntimes (http://bpaste.net/show/132504/) when using some gaming-console\nemulators.\n\nThe real problem is that we have two copies of internal state, one in the\nwiimote objects and the other in the input device. As the input-lock is\nnot supposed to be accessed from outside of input-core, we have no other\nchance than offloading FF handling into a worker. This actually works\npretty nice and also allows to implictly merge fast rumble changes into a\nsingle request.\n\nDue to the 3-layered workers (rumble+queue+l2cap) this might reduce FF\nresponsiveness. Initial tests were fine so lets fix the race first and if\nit turns out to be too slow we can always handle FF out-of-band and skip\nthe queue-worker.\n\nCc: <stable@vger.kernel.org> # 3.11+\nReported-by: Thomas Schneider\nSigned-off-by: David Herrmann <dh.herrmann@gmail.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
  "author_name": "David Herrmann",
  "author_email": "dh.herrmann@gmail.com",
  "author_date": "Wed Oct 2 13:47:28 2013 +0200",
  "author_date_iso": "2013-10-02T13:47:28+02:00",
  "committer_name": "Jiri Kosina",
  "committer_email": "jkosina@suse.cz",
  "committer_date": "Mon Oct 7 17:08:26 2013 +0200",
  "committer_date_iso": "2013-10-07T17:08:26+02:00",
  "files_changed": [
    "drivers/hid/hid-wiimote-modules.c",
    "drivers/hid/hid-wiimote.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/hid/hid-wiimote-modules.c",
      "insertions": 29,
      "deletions": 11
    },
    {
      "file": "drivers/hid/hid-wiimote.h",
      "insertions": 3,
      "deletions": 1
    }
  ],
  "total_insertions": 32,
  "total_deletions": 12,
  "total_changes": 44,
  "parents": [
    "7da7cbbbeb60e0939fecdf9723b388136c175e5c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.12",
    "v3.12-rc5",
    "v3.12-rc6",
    "v3.12-rc7",
    "v3.13",
    "v3.13-rc1",
    "v3.13-rc2",
    "v3.13-rc3",
    "v3.13-rc4",
    "v3.13-rc5"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/hid/hid-wiimote-modules.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/hid/hid-wiimote.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}