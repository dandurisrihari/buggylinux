{
  "hash": "9b07e27f88b9cd785cdb23f9a2231c12521dda94",
  "hash_short": "9b07e27f",
  "subject": "perf inject: Add jitdump mmap injection support",
  "body": "This patch adds a --jit/-j option to perf inject.\n\nThis options injects MMAP records into the perf.data file to cover the\njitted code mmaps. It also emits ELF images for each function in the\njidump file.  Those images are created where the jitdump file is.  The\nMMAP records point to that location as well.\n\nTypical flow:\n\n  $ perf record -k mono -- java -agentpath:libpjvmti.so java_class\n  $ perf inject --jit -i perf.data -o perf.data.jitted\n  $ perf report -i perf.data.jitted\n\nNote that jitdump.h support is not limited to Java, it works with any\njitted environment modified to emit the jitdump file format, include\nthose where code can be jitted multiple times and moved around.\n\nThe jitdump.h format is adapted from the Oprofile project.\n\nThe genelf.c (ELF binary generation) depends on MD5 hash encoding for\nthe buildid. To enable this, libssl-dev must be installed. If not, then\ngenelf.c defaults to using urandom to generate the buildid, which is not\nideal.  The Makefile auto-detects the presence on libssl-dev.\n\nThis version mmaps the jitdump file to create a marker MMAP record in\nthe perf.data file. The marker is used to detect jitdump and cause perf\ninject to inject the jitted mmaps and generate ELF images for jitted\nfunctions.\n\nIn V8, the following fixes and changes were made among other things:\n\n  -  the jidump header format include a new flags field to be used\n     to carry information about the configuration of the runtime agent.\n     Contributed by: Adrian Hunter <adrian.hunter@intel.com>\n\n  - Fix mmap pgoff: MMAP event pgoff must be the offset within the ELF file\n    at which the code resides.\n    Contributed by: Adrian Hunter <adrian.hunter@intel.com>\n\n  - Fix ELF virtual addresses: perf tools expect the ELF virtual addresses of dynamic\n    objects to match the file offset.\n    Contributed by: Adrian Hunter <adrian.hunter@intel.com>\n\n  - JIT MMAP injection does not obey finished_round semantics. JIT MMAP injection injects all\n    MMAP events in one go, so it does not obey finished_round semantics, so drop the\n    finished_round events from the output perf.data file.\n    Contributed by: Adrian Hunter <adrian.hunter@intel.com>\n\nSigned-off-by: Stephane Eranian <eranian@google.com>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: Carl Love <cel@us.ibm.com>\nCc: David Ahern <dsahern@gmail.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: John McCutchan <johnmccutchan@google.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Pawel Moll <pawel.moll@arm.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Sonny Rao <sonnyrao@chromium.org>\nCc: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>\nLink: http://lkml.kernel.org/r/1448874143-7269-3-git-send-email-eranian@google.com\n[ Moved inject.build_ids ordering bits to a separate patch, fixed the NO_LIBELF=1 build ]\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
  "full_message": "perf inject: Add jitdump mmap injection support\n\nThis patch adds a --jit/-j option to perf inject.\n\nThis options injects MMAP records into the perf.data file to cover the\njitted code mmaps. It also emits ELF images for each function in the\njidump file.  Those images are created where the jitdump file is.  The\nMMAP records point to that location as well.\n\nTypical flow:\n\n  $ perf record -k mono -- java -agentpath:libpjvmti.so java_class\n  $ perf inject --jit -i perf.data -o perf.data.jitted\n  $ perf report -i perf.data.jitted\n\nNote that jitdump.h support is not limited to Java, it works with any\njitted environment modified to emit the jitdump file format, include\nthose where code can be jitted multiple times and moved around.\n\nThe jitdump.h format is adapted from the Oprofile project.\n\nThe genelf.c (ELF binary generation) depends on MD5 hash encoding for\nthe buildid. To enable this, libssl-dev must be installed. If not, then\ngenelf.c defaults to using urandom to generate the buildid, which is not\nideal.  The Makefile auto-detects the presence on libssl-dev.\n\nThis version mmaps the jitdump file to create a marker MMAP record in\nthe perf.data file. The marker is used to detect jitdump and cause perf\ninject to inject the jitted mmaps and generate ELF images for jitted\nfunctions.\n\nIn V8, the following fixes and changes were made among other things:\n\n  -  the jidump header format include a new flags field to be used\n     to carry information about the configuration of the runtime agent.\n     Contributed by: Adrian Hunter <adrian.hunter@intel.com>\n\n  - Fix mmap pgoff: MMAP event pgoff must be the offset within the ELF file\n    at which the code resides.\n    Contributed by: Adrian Hunter <adrian.hunter@intel.com>\n\n  - Fix ELF virtual addresses: perf tools expect the ELF virtual addresses of dynamic\n    objects to match the file offset.\n    Contributed by: Adrian Hunter <adrian.hunter@intel.com>\n\n  - JIT MMAP injection does not obey finished_round semantics. JIT MMAP injection injects all\n    MMAP events in one go, so it does not obey finished_round semantics, so drop the\n    finished_round events from the output perf.data file.\n    Contributed by: Adrian Hunter <adrian.hunter@intel.com>\n\nSigned-off-by: Stephane Eranian <eranian@google.com>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: Carl Love <cel@us.ibm.com>\nCc: David Ahern <dsahern@gmail.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: John McCutchan <johnmccutchan@google.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Pawel Moll <pawel.moll@arm.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Sonny Rao <sonnyrao@chromium.org>\nCc: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>\nLink: http://lkml.kernel.org/r/1448874143-7269-3-git-send-email-eranian@google.com\n[ Moved inject.build_ids ordering bits to a separate patch, fixed the NO_LIBELF=1 build ]\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
  "author_name": "Stephane Eranian",
  "author_email": "eranian@google.com",
  "author_date": "Mon Nov 30 10:02:21 2015 +0100",
  "author_date_iso": "2015-11-30T10:02:21+01:00",
  "committer_name": "Arnaldo Carvalho de Melo",
  "committer_email": "acme@redhat.com",
  "committer_date": "Fri Feb 5 09:46:45 2016 -0300",
  "committer_date_iso": "2016-02-05T09:46:45-03:00",
  "files_changed": [
    "tools/perf/Documentation/perf-inject.txt",
    "tools/perf/builtin-inject.c",
    "tools/perf/util/Build",
    "tools/perf/util/genelf.c",
    "tools/perf/util/genelf.h",
    "tools/perf/util/jit.h",
    "tools/perf/util/jitdump.c",
    "tools/perf/util/jitdump.h"
  ],
  "files_changed_count": 8,
  "stats": [
    {
      "file": "tools/perf/Documentation/perf-inject.txt",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "tools/perf/builtin-inject.c",
      "insertions": 95,
      "deletions": 3
    },
    {
      "file": "tools/perf/util/Build",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/genelf.c",
      "insertions": 442,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/genelf.h",
      "insertions": 63,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/jit.h",
      "insertions": 15,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/jitdump.c",
      "insertions": 670,
      "deletions": 0
    },
    {
      "file": "tools/perf/util/jitdump.h",
      "insertions": 124,
      "deletions": 0
    }
  ],
  "total_insertions": 1418,
  "total_deletions": 3,
  "total_changes": 1421,
  "parents": [
    "921f3fadbc48c7c3799b415b895297cd476cf7f1"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "tools/perf/util/Build",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/util/genelf.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/util/jitdump.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/util/jit.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/util/genelf.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/Documentation/perf-inject.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/builtin-inject.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "tools/perf/util/jitdump.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}