commit 257edce66d31a345dff8ca9f1fd30c46e0f14058
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Dec 5 16:38:35 2018 +0900

    kbuild: exploit parallel building for CONFIG_HEADERS_CHECK
    
    When CONFIG_HEADERS_CHECK is enabled, the headers_check is executed
    as a serialized task in the vmlinux recipe.
    
    Make it independent of vmlinux so that parallel building can process
    the headers_check and other build targets simultaneously.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>

diff --git a/Makefile b/Makefile
index d4ac3cb9256c..00630cf04d84 100644
--- a/Makefile
+++ b/Makefile
@@ -1035,9 +1035,6 @@ cmd_link-vmlinux =                                                 \
 	$(if $(ARCH_POSTLINK), $(MAKE) -f $(ARCH_POSTLINK) $@, true)
 
 vmlinux: scripts/link-vmlinux.sh autoksyms_recursive $(vmlinux-deps) FORCE
-ifdef CONFIG_HEADERS_CHECK
-	$(Q)$(MAKE) -f $(srctree)/Makefile headers_check
-endif
 ifdef CONFIG_GDB_SCRIPTS
 	$(Q)ln -fsn $(abspath $(srctree)/scripts/gdb/vmlinux-gdb.py)
 endif
@@ -1208,6 +1205,10 @@ headers_check: headers_install
 	$(Q)$(MAKE) $(hdr-inst)=include/uapi dst=include HDRCHECK=1
 	$(Q)$(MAKE) $(hdr-inst)=arch/$(SRCARCH)/include/uapi $(hdr-dst) HDRCHECK=1
 
+ifdef CONFIG_HEADERS_CHECK
+all: headers_check
+endif
+
 # ---------------------------------------------------------------------------
 # Kernel selftest