{
  "hash": "f0c0d4b74d59809568f560001c8f88e8211334a4",
  "hash_short": "f0c0d4b7",
  "subject": "arm64: entry: unmask IRQ in el0_sp()",
  "body": "Currently, the EL0 SP alignment handler masks IRQs unnecessarily. It\ndoes so due to historic code sharing of the EL0 SP and PC alignment\nhandlers, and branch predictor hardening applicable to the EL0 SP\nhandler.\n\nWe began masking IRQs in the EL0 SP alignment handler in commit:\n\n  5dfc6ed27710c42c (\"arm64: entry: Apply BP hardening for high-priority synchronous exception\")\n\n... as this shared code with the EL0 PC alignment handler, and branch\npredictor hardening made it necessary to disable IRQs for early parts of\nthe EL0 PC alignment handler. It was not necessary to mask IRQs during\nEL0 SP alignment exceptions, but it was not considered harmful to do so.\n\nThis masking was carried forward into C code in commit:\n\n  582f95835a8fc812 (\"arm64: entry: convert el0_sync to C\")\n\n... where the SP/PC cases were split into separate handlers, and the\nmasking duplicated.\n\nSubsequently the EL0 PC alignment handler was refactored to perform\nbranch predictor hardening before unmasking IRQs, in commit:\n\n  bfe298745afc9548 (\"arm64: entry-common: don't touch daif before bp-hardening\")\n\n... but the redundant masking of IRQs was not removed from the EL0 SP\nalignment handler.\n\nLet's do so now, and make it interruptible as with most other\nsynchronous exception handlers.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com>\nCc: Will Deacon <will@kernel.org>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>\nReviewed-by: James Morse <james.morse@arm.com>",
  "full_message": "arm64: entry: unmask IRQ in el0_sp()\n\nCurrently, the EL0 SP alignment handler masks IRQs unnecessarily. It\ndoes so due to historic code sharing of the EL0 SP and PC alignment\nhandlers, and branch predictor hardening applicable to the EL0 SP\nhandler.\n\nWe began masking IRQs in the EL0 SP alignment handler in commit:\n\n  5dfc6ed27710c42c (\"arm64: entry: Apply BP hardening for high-priority synchronous exception\")\n\n... as this shared code with the EL0 PC alignment handler, and branch\npredictor hardening made it necessary to disable IRQs for early parts of\nthe EL0 PC alignment handler. It was not necessary to mask IRQs during\nEL0 SP alignment exceptions, but it was not considered harmful to do so.\n\nThis masking was carried forward into C code in commit:\n\n  582f95835a8fc812 (\"arm64: entry: convert el0_sync to C\")\n\n... where the SP/PC cases were split into separate handlers, and the\nmasking duplicated.\n\nSubsequently the EL0 PC alignment handler was refactored to perform\nbranch predictor hardening before unmasking IRQs, in commit:\n\n  bfe298745afc9548 (\"arm64: entry-common: don't touch daif before bp-hardening\")\n\n... but the redundant masking of IRQs was not removed from the EL0 SP\nalignment handler.\n\nLet's do so now, and make it interruptible as with most other\nsynchronous exception handlers.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com>\nCc: Will Deacon <will@kernel.org>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>\nReviewed-by: James Morse <james.morse@arm.com>",
  "author_name": "Mark Rutland",
  "author_email": "mark.rutland@arm.com",
  "author_date": "Fri Feb 28 14:59:42 2020 +0000",
  "author_date_iso": "2020-02-28T14:59:42+00:00",
  "committer_name": "Catalin Marinas",
  "committer_email": "catalin.marinas@arm.com",
  "committer_date": "Wed Mar 11 14:34:28 2020 +0000",
  "committer_date_iso": "2020-03-11T14:34:28+00:00",
  "files_changed": [
    "arch/arm64/kernel/entry-common.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/arm64/kernel/entry-common.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "b8f58ac7c38af1e22db125622a3a3e9bb9fb9fa2"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.7-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/kernel/entry-common.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}