{
  "hash": "b617158dc096709d8600c53b6052144d12b89fab",
  "hash_short": "b617158d",
  "subject": "tcp: be more careful in tcp_fragment()",
  "body": "Some applications set tiny SO_SNDBUF values and expect\nTCP to just work. Recent patches to address CVE-2019-11478\nbroke them in case of losses, since retransmits might\nbe prevented.\n\nWe should allow these flows to make progress.\n\nThis patch allows the first and last skb in retransmit queue\nto be split even if memory limits are hit.\n\nIt also adds the some room due to the fact that tcp_sendmsg()\nand tcp_sendpage() might overshoot sk_wmem_queued by about one full\nTSO skb (64KB size). Note this allowance was already present\nin stable backports for kernels < 4.15\n\nNote for < 4.15 backports :\n tcp_rtx_queue_tail() will probably look like :\n\nstatic inline struct sk_buff *tcp_rtx_queue_tail(const struct sock *sk)\n{\n\tstruct sk_buff *skb = tcp_send_head(sk);\n\n\treturn skb ? tcp_write_queue_prev(sk, skb) : tcp_write_queue_tail(sk);\n}\n\nFixes: f070ef2ac667 (\"tcp: tcp_fragment() should apply sane memory limits\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Andrew Prout <aprout@ll.mit.edu>\nTested-by: Andrew Prout <aprout@ll.mit.edu>\nTested-by: Jonathan Lemon <jonathan.lemon@gmail.com>\nTested-by: Michal Kubecek <mkubecek@suse.cz>\nAcked-by: Neal Cardwell <ncardwell@google.com>\nAcked-by: Yuchung Cheng <ycheng@google.com>\nAcked-by: Christoph Paasch <cpaasch@apple.com>\nCc: Jonathan Looney <jtl@netflix.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "tcp: be more careful in tcp_fragment()\n\nSome applications set tiny SO_SNDBUF values and expect\nTCP to just work. Recent patches to address CVE-2019-11478\nbroke them in case of losses, since retransmits might\nbe prevented.\n\nWe should allow these flows to make progress.\n\nThis patch allows the first and last skb in retransmit queue\nto be split even if memory limits are hit.\n\nIt also adds the some room due to the fact that tcp_sendmsg()\nand tcp_sendpage() might overshoot sk_wmem_queued by about one full\nTSO skb (64KB size). Note this allowance was already present\nin stable backports for kernels < 4.15\n\nNote for < 4.15 backports :\n tcp_rtx_queue_tail() will probably look like :\n\nstatic inline struct sk_buff *tcp_rtx_queue_tail(const struct sock *sk)\n{\n\tstruct sk_buff *skb = tcp_send_head(sk);\n\n\treturn skb ? tcp_write_queue_prev(sk, skb) : tcp_write_queue_tail(sk);\n}\n\nFixes: f070ef2ac667 (\"tcp: tcp_fragment() should apply sane memory limits\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Andrew Prout <aprout@ll.mit.edu>\nTested-by: Andrew Prout <aprout@ll.mit.edu>\nTested-by: Jonathan Lemon <jonathan.lemon@gmail.com>\nTested-by: Michal Kubecek <mkubecek@suse.cz>\nAcked-by: Neal Cardwell <ncardwell@google.com>\nAcked-by: Yuchung Cheng <ycheng@google.com>\nAcked-by: Christoph Paasch <cpaasch@apple.com>\nCc: Jonathan Looney <jtl@netflix.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Eric Dumazet",
  "author_email": "edumazet@google.com",
  "author_date": "Fri Jul 19 11:52:33 2019 -0700",
  "author_date_iso": "2019-07-19T11:52:33-07:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Sun Jul 21 20:41:24 2019 -0700",
  "committer_date_iso": "2019-07-21T20:41:24-07:00",
  "files_changed": [
    "include/net/tcp.h",
    "net/ipv4/tcp_output.c"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "include/net/tcp.h",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "net/ipv4/tcp_output.c",
      "insertions": 11,
      "deletions": 2
    }
  ],
  "total_insertions": 16,
  "total_deletions": 2,
  "total_changes": 18,
  "parents": [
    "be4363bdf0ce9530f15aa0a03d1060304d116b15"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.3",
    "v5.3-rc2",
    "v5.3-rc3",
    "v5.3-rc4",
    "v5.3-rc5",
    "v5.3-rc6",
    "v5.3-rc7",
    "v5.3-rc8",
    "v5.4",
    "v5.4-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2019-11478"
    ],
    "security_keywords": []
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "include/net/tcp.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "net/ipv4/tcp_output.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}