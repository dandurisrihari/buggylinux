commit 3dc9dc8969dc738285cb7d43e852c98459c8f0a9
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Tue Sep 1 17:39:58 2020 +0300

    btrfs: eliminate total_size parameter from setup_items_for_insert
    
    The value of this argument can be derived from the total_data as it's
    simply the value of the data size + size of btrfs_items being touched.
    Move the parameter calculation inside the function. This results in a
    simpler interface and also a minor size reduction:
    
    ./scripts/bloat-o-meter ctree.original fs/btrfs/ctree.o
    add/remove: 0/0 grow/shrink: 0/3 up/down: 0/-34 (-34)
    Function                                     old     new   delta
    btrfs_duplicate_item                         260     259      -1
    setup_items_for_insert                      1200    1190     -10
    btrfs_insert_empty_items                     177     154     -23
    
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>

diff --git a/fs/btrfs/ctree.h b/fs/btrfs/ctree.h
index 5ab55f678465..c4f9c1985ad1 100644
--- a/fs/btrfs/ctree.h
+++ b/fs/btrfs/ctree.h
@@ -2744,7 +2744,7 @@ static inline int btrfs_del_item(struct btrfs_trans_handle *trans,
 
 void setup_items_for_insert(struct btrfs_root *root, struct btrfs_path *path,
 			    const struct btrfs_key *cpu_key, u32 *data_size,
-			    u32 total_data, u32 total_size, int nr);
+			    u32 total_data, int nr);
 int btrfs_insert_item(struct btrfs_trans_handle *trans, struct btrfs_root *root,
 		      const struct btrfs_key *key, void *data, u32 data_size);
 int btrfs_insert_empty_items(struct btrfs_trans_handle *trans,