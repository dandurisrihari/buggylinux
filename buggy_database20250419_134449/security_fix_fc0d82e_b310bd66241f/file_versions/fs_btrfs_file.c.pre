commit 3dc9dc8969dc738285cb7d43e852c98459c8f0a9
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Tue Sep 1 17:39:58 2020 +0300

    btrfs: eliminate total_size parameter from setup_items_for_insert
    
    The value of this argument can be derived from the total_data as it's
    simply the value of the data size + size of btrfs_items being touched.
    Move the parameter calculation inside the function. This results in a
    simpler interface and also a minor size reduction:
    
    ./scripts/bloat-o-meter ctree.original fs/btrfs/ctree.o
    add/remove: 0/0 grow/shrink: 0/3 up/down: 0/-34 (-34)
    Function                                     old     new   delta
    btrfs_duplicate_item                         260     259      -1
    setup_items_for_insert                      1200    1190     -10
    btrfs_insert_empty_items                     177     154     -23
    
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>

diff --git a/fs/btrfs/file.c b/fs/btrfs/file.c
index 32ceda264b7d..fefe152884fa 100644
--- a/fs/btrfs/file.c
+++ b/fs/btrfs/file.c
@@ -1057,10 +1057,7 @@ int __btrfs_drop_extents(struct btrfs_trans_handle *trans,
 			if (btrfs_comp_cpu_keys(&key, &slot_key) > 0)
 				path->slots[0]++;
 		}
-		setup_items_for_insert(root, path, &key,
-				       &extent_item_size,
-				       extent_item_size,
-				       sizeof(struct btrfs_item) +
+		setup_items_for_insert(root, path, &key, &extent_item_size,
 				       extent_item_size, 1);
 		*key_inserted = 1;
 	}