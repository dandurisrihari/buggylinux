{
  "hash": "47a66eed99e6f231f4a1d261a9d493f4eee94829",
  "hash_short": "47a66eed",
  "subject": "KVM: x86: Fix nmi injection failure when vcpu got blocked",
  "body": "When spin_lock_irqsave() deadlock occurs inside the guest, vcpu threads,\nother than the lock-holding one, would enter into S state because of\npvspinlock. Then inject NMI via libvirt API \"inject-nmi\", the NMI could\nnot be injected into vm.\n\nThe reason is:\n1 It sets nmi_queued to 1 when calling ioctl KVM_NMI in qemu, and sets\ncpu->kvm_vcpu_dirty to true in do_inject_external_nmi() meanwhile.\n2 It sets nmi_queued to 0 in process_nmi(), before entering guest, because\ncpu->kvm_vcpu_dirty is true.\n\nIt's not enough just to check nmi_queued to decide whether to stay in\nvcpu_block() or not. NMI should be injected immediately at any situation.\nAdd checking nmi_pending, and testing KVM_REQ_NMI replaces nmi_queued\nin vm_vcpu_has_events().\n\nDo the same change for SMIs.\n\nSigned-off-by: Zhuang Yanying <ann.zhuangyanying@huawei.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "full_message": "KVM: x86: Fix nmi injection failure when vcpu got blocked\n\nWhen spin_lock_irqsave() deadlock occurs inside the guest, vcpu threads,\nother than the lock-holding one, would enter into S state because of\npvspinlock. Then inject NMI via libvirt API \"inject-nmi\", the NMI could\nnot be injected into vm.\n\nThe reason is:\n1 It sets nmi_queued to 1 when calling ioctl KVM_NMI in qemu, and sets\ncpu->kvm_vcpu_dirty to true in do_inject_external_nmi() meanwhile.\n2 It sets nmi_queued to 0 in process_nmi(), before entering guest, because\ncpu->kvm_vcpu_dirty is true.\n\nIt's not enough just to check nmi_queued to decide whether to stay in\nvcpu_block() or not. NMI should be injected immediately at any situation.\nAdd checking nmi_pending, and testing KVM_REQ_NMI replaces nmi_queued\nin vm_vcpu_has_events().\n\nDo the same change for SMIs.\n\nSigned-off-by: Zhuang Yanying <ann.zhuangyanying@huawei.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
  "author_name": "ZhuangYanying",
  "author_email": "ann.zhuangyanying@huawei.com",
  "author_date": "Fri May 26 13:16:48 2017 +0800",
  "author_date_iso": "2017-05-26T13:16:48+08:00",
  "committer_name": "Paolo Bonzini",
  "committer_email": "pbonzini@redhat.com",
  "committer_date": "Thu Jun 1 11:23:10 2017 +0200",
  "committer_date_iso": "2017-06-01T11:23:10+02:00",
  "files_changed": [
    "arch/x86/kvm/x86.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/x86/kvm/x86.c",
      "insertions": 5,
      "deletions": 2
    }
  ],
  "total_insertions": 5,
  "total_deletions": 2,
  "total_changes": 7,
  "parents": [
    "d9c1b5431d5f0e07575db785a022bce91051ac1d"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.12",
    "v4.12-rc4",
    "v4.12-rc5",
    "v4.12-rc6",
    "v4.12-rc7",
    "v4.13",
    "v4.13-rc1",
    "v4.13-rc2",
    "v4.13-rc3",
    "v4.13-rc4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/x86/kvm/x86.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}