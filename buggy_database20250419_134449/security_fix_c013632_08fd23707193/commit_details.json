{
  "hash": "c0136321924dd338bb8fc5661c4b0e27441a8d04",
  "hash_short": "c0136321",
  "subject": "Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux",
  "body": "Pull more arm64 updates from Catalin Marinas:\n \"As I mentioned in the last pull request, there's a second batch of\n  security updates for arm64 with mitigations for Spectre/v1 and an\n  improved one for Spectre/v2 (via a newly defined firmware interface\n  API).\n\n  Spectre v1 mitigation:\n\n   - back-end version of array_index_mask_nospec()\n\n   - masking of the syscall number to restrict speculation through the\n     syscall table\n\n   - masking of __user pointers prior to deference in uaccess routines\n\n  Spectre v2 mitigation update:\n\n   - using the new firmware SMC calling convention specification update\n\n   - removing the current PSCI GET_VERSION firmware call mitigation as\n     vendors are deploying new SMCCC-capable firmware\n\n   - additional branch predictor hardening for synchronous exceptions\n     and interrupts while in user mode\n\n  Meltdown v3 mitigation update:\n\n    - Cavium Thunder X is unaffected but a hardware erratum gets in the\n      way. The kernel now starts with the page tables mapped as global\n      and switches to non-global if kpti needs to be enabled.\n\n  Other:\n\n   - Theoretical trylock bug fixed\"\n\n* tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (38 commits)\n  arm64: Kill PSCI_GET_VERSION as a variant-2 workaround\n  arm64: Add ARM_SMCCC_ARCH_WORKAROUND_1 BP hardening support\n  arm/arm64: smccc: Implement SMCCC v1.1 inline primitive\n  arm/arm64: smccc: Make function identifiers an unsigned quantity\n  firmware/psci: Expose SMCCC version through psci_ops\n  firmware/psci: Expose PSCI conduit\n  arm64: KVM: Add SMCCC_ARCH_WORKAROUND_1 fast handling\n  arm64: KVM: Report SMCCC_ARCH_WORKAROUND_1 BP hardening support\n  arm/arm64: KVM: Turn kvm_psci_version into a static inline\n  arm/arm64: KVM: Advertise SMCCC v1.1\n  arm/arm64: KVM: Implement PSCI 1.0 support\n  arm/arm64: KVM: Add smccc accessors to PSCI code\n  arm/arm64: KVM: Add PSCI_VERSION helper\n  arm/arm64: KVM: Consolidate the PSCI include files\n  arm64: KVM: Increment PC after handling an SMC trap\n  arm: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls\n  arm64: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls\n  arm64: entry: Apply BP hardening for suspicious interrupts from EL0\n  arm64: entry: Apply BP hardening for high-priority synchronous exceptions\n  arm64: futex: Mask __user pointers prior to dereference\n  ...",
  "full_message": "Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull more arm64 updates from Catalin Marinas:\n \"As I mentioned in the last pull request, there's a second batch of\n  security updates for arm64 with mitigations for Spectre/v1 and an\n  improved one for Spectre/v2 (via a newly defined firmware interface\n  API).\n\n  Spectre v1 mitigation:\n\n   - back-end version of array_index_mask_nospec()\n\n   - masking of the syscall number to restrict speculation through the\n     syscall table\n\n   - masking of __user pointers prior to deference in uaccess routines\n\n  Spectre v2 mitigation update:\n\n   - using the new firmware SMC calling convention specification update\n\n   - removing the current PSCI GET_VERSION firmware call mitigation as\n     vendors are deploying new SMCCC-capable firmware\n\n   - additional branch predictor hardening for synchronous exceptions\n     and interrupts while in user mode\n\n  Meltdown v3 mitigation update:\n\n    - Cavium Thunder X is unaffected but a hardware erratum gets in the\n      way. The kernel now starts with the page tables mapped as global\n      and switches to non-global if kpti needs to be enabled.\n\n  Other:\n\n   - Theoretical trylock bug fixed\"\n\n* tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (38 commits)\n  arm64: Kill PSCI_GET_VERSION as a variant-2 workaround\n  arm64: Add ARM_SMCCC_ARCH_WORKAROUND_1 BP hardening support\n  arm/arm64: smccc: Implement SMCCC v1.1 inline primitive\n  arm/arm64: smccc: Make function identifiers an unsigned quantity\n  firmware/psci: Expose SMCCC version through psci_ops\n  firmware/psci: Expose PSCI conduit\n  arm64: KVM: Add SMCCC_ARCH_WORKAROUND_1 fast handling\n  arm64: KVM: Report SMCCC_ARCH_WORKAROUND_1 BP hardening support\n  arm/arm64: KVM: Turn kvm_psci_version into a static inline\n  arm/arm64: KVM: Advertise SMCCC v1.1\n  arm/arm64: KVM: Implement PSCI 1.0 support\n  arm/arm64: KVM: Add smccc accessors to PSCI code\n  arm/arm64: KVM: Add PSCI_VERSION helper\n  arm/arm64: KVM: Consolidate the PSCI include files\n  arm64: KVM: Increment PC after handling an SMC trap\n  arm: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls\n  arm64: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls\n  arm64: entry: Apply BP hardening for suspicious interrupts from EL0\n  arm64: entry: Apply BP hardening for high-priority synchronous exceptions\n  arm64: futex: Mask __user pointers prior to dereference\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Thu Feb 8 10:44:25 2018 -0800",
  "author_date_iso": "2018-02-08T10:44:25-08:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Thu Feb 8 10:44:25 2018 -0800",
  "committer_date_iso": "2018-02-08T10:44:25-08:00",
  "files_changed": [
    "arch/arm64/include/asm/processor.h",
    "arch/arm64/kernel/cpufeature.c",
    "arch/arm64/kernel/entry.S",
    "arch/arm64/mm/fault.c",
    "arch/arm64/mm/mmu.c",
    "virt/kvm/arm/arm.c"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "arch/arm/include/asm/kvm_host.h",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "arch/arm/include/asm/kvm_psci.h",
      "insertions": 0,
      "deletions": 27
    },
    {
      "file": "arch/arm/kvm/handle_exit.c",
      "insertions": 13,
      "deletions": 4
    },
    {
      "file": "arch/arm64/include/asm/assembler.h",
      "insertions": 42,
      "deletions": 1
    },
    {
      "file": "arch/arm64/include/asm/barrier.h",
      "insertions": 22,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/futex.h",
      "insertions": 6,
      "deletions": 3
    },
    {
      "file": "arch/arm64/include/asm/kernel-pgtable.h",
      "insertions": 2,
      "deletions": 10
    },
    {
      "file": "arch/arm64/include/asm/kvm_host.h",
      "insertions": 6,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/kvm_psci.h",
      "insertions": 0,
      "deletions": 27
    },
    {
      "file": "arch/arm64/include/asm/pgtable-prot.h",
      "insertions": 14,
      "deletions": 16
    },
    {
      "file": "arch/arm64/include/asm/processor.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "arch/arm64/include/asm/spinlock.h",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/include/asm/uaccess.h",
      "insertions": 107,
      "deletions": 48
    },
    {
      "file": "arch/arm64/kernel/arm64ksyms.c",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kernel/bpi.S",
      "insertions": 20,
      "deletions": 24
    },
    {
      "file": "arch/arm64/kernel/cpu-reset.S",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kernel/cpu_errata.c",
      "insertions": 62,
      "deletions": 15
    },
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "insertions": 39,
      "deletions": 3
    },
    {
      "file": "arch/arm64/kernel/entry.S",
      "insertions": 16,
      "deletions": 13
    },
    {
      "file": "arch/arm64/kernel/head.S",
      "insertions": 5,
      "deletions": 25
    },
    {
      "file": "arch/arm64/kernel/hibernate-asm.S",
      "insertions": 2,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kernel/sleep.S",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kvm/handle_exit.c",
      "insertions": 12,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kvm/hyp-init.S",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "arch/arm64/kvm/hyp/hyp-entry.S",
      "insertions": 18,
      "deletions": 2
    },
    {
      "file": "arch/arm64/kvm/hyp/switch.c",
      "insertions": 2,
      "deletions": 12
    },
    {
      "file": "arch/arm64/lib/clear_user.S",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "arch/arm64/lib/copy_in_user.S",
      "insertions": 3,
      "deletions": 2
    },
    {
      "file": "arch/arm64/mm/fault.c",
      "insertions": 17,
      "deletions": 2
    },
    {
      "file": "arch/arm64/mm/mmu.c",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "arch/arm64/mm/proc.S",
      "insertions": 200,
      "deletions": 12
    },
    {
      "file": "drivers/firmware/psci.c",
      "insertions": 50,
      "deletions": 5
    },
    {
      "file": "include/kvm/arm_psci.h",
      "insertions": 51,
      "deletions": 0
    },
    {
      "file": "include/linux/arm-smccc.h",
      "insertions": 163,
      "deletions": 2
    },
    {
      "file": "include/linux/psci.h",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/psci.h",
      "insertions": 3,
      "deletions": 0
    },
    {
      "file": "virt/kvm/arm/arm.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "virt/kvm/arm/psci.c",
      "insertions": 119,
      "deletions": 24
    }
  ],
  "total_insertions": 1032,
  "total_deletions": 292,
  "total_changes": 1324,
  "parents": [
    "846ade7dd2e630a309a8c57302046e8c4037b8df",
    "3a0a397ff5ff8b56ca9f7908b75dee6bf0b5fabb"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.16",
    "v4.16-rc1",
    "v4.16-rc2",
    "v4.16-rc3",
    "v4.16-rc4",
    "v4.16-rc5",
    "v4.16-rc6",
    "v4.16-rc7",
    "v4.17",
    "v4.17-rc1"
  ],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/kernel/cpufeature.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/include/asm/processor.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/mm/mmu.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/kernel/entry.S",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/arm64/mm/fault.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "virt/kvm/arm/arm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}