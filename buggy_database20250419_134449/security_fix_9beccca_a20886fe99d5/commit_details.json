{
  "hash": "9beccca0984022a844850e32f0d7dd80d4a225de",
  "hash_short": "9beccca0",
  "subject": "scs: add support for dynamic shadow call stacks",
  "body": "In order to allow arches to use code patching to conditionally emit the\nshadow stack pushes and pops, rather than always taking the performance\nhit even on CPUs that implement alternatives such as stack pointer\nauthentication on arm64, add a Kconfig symbol that can be set by the\narch to omit the SCS codegen itself, without otherwise affecting how\nsupport code for SCS and compiler options (for register reservation, for\ninstance) are emitted.\n\nAlso, add a static key and some plumbing to omit the allocation of\nshadow call stack for dynamic SCS configurations if SCS is disabled at\nruntime.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Nick Desaulniers <ndesaulniers@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Sami Tolvanen <samitolvanen@google.com>\nTested-by: Sami Tolvanen <samitolvanen@google.com>\nLink: https://lore.kernel.org/r/20221027155908.1940624-3-ardb@kernel.org\nSigned-off-by: Will Deacon <will@kernel.org>",
  "full_message": "scs: add support for dynamic shadow call stacks\n\nIn order to allow arches to use code patching to conditionally emit the\nshadow stack pushes and pops, rather than always taking the performance\nhit even on CPUs that implement alternatives such as stack pointer\nauthentication on arm64, add a Kconfig symbol that can be set by the\narch to omit the SCS codegen itself, without otherwise affecting how\nsupport code for SCS and compiler options (for register reservation, for\ninstance) are emitted.\n\nAlso, add a static key and some plumbing to omit the allocation of\nshadow call stack for dynamic SCS configurations if SCS is disabled at\nruntime.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Nick Desaulniers <ndesaulniers@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Sami Tolvanen <samitolvanen@google.com>\nTested-by: Sami Tolvanen <samitolvanen@google.com>\nLink: https://lore.kernel.org/r/20221027155908.1940624-3-ardb@kernel.org\nSigned-off-by: Will Deacon <will@kernel.org>",
  "author_name": "Ard Biesheuvel",
  "author_email": "ardb@kernel.org",
  "author_date": "Thu Oct 27 17:59:07 2022 +0200",
  "author_date_iso": "2022-10-27T17:59:07+02:00",
  "committer_name": "Will Deacon",
  "committer_email": "will@kernel.org",
  "committer_date": "Wed Nov 9 18:06:35 2022 +0000",
  "committer_date_iso": "2022-11-09T18:06:35+00:00",
  "files_changed": [
    "Makefile",
    "arch/Kconfig",
    "include/linux/scs.h",
    "kernel/scs.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "arch/Kconfig",
      "insertions": 7,
      "deletions": 0
    },
    {
      "file": "include/linux/scs.h",
      "insertions": 18,
      "deletions": 0
    },
    {
      "file": "kernel/scs.c",
      "insertions": 12,
      "deletions": 2
    }
  ],
  "total_insertions": 39,
  "total_deletions": 2,
  "total_changes": 41,
  "parents": [
    "68c76ad4a9571a2b603665c85cf8229bcf04982a"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "authentication"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Makefile",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/Kconfig",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/scs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/scs.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}