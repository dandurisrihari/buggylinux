{
  "hash": "3761baae908a7b5012be08d70fa553cc2eb82305",
  "hash_short": "3761baae",
  "subject": "Revert \"drm/i915: Propagate errors on awaiting already signaled fences\"",
  "body": "This reverts commit 9e31c1fe45d555a948ff66f1f0e3fe1f83ca63f7.  Ever\nsince that commit, we've been having issues where a hang in one client\ncan propagate to another.  In particular, a hang in an app can propagate\nto the X server which causes the whole desktop to lock up.\n\nError propagation along fences sound like a good idea, but as your bug\nshows, surprising consequences, since propagating errors across security\nboundaries is not a good thing.\n\nWhat we do have is track the hangs on the ctx, and report information to\nuserspace using RESET_STATS. That's how arb_robustness works. Also, if my\nunderstanding is still correct, the EIO from execbuf is when your context\nis banned (because not recoverable or too many hangs). And in all these\ncases it's up to userspace to figure out what is all impacted and should\nbe reported to the application, that's not on the kernel to guess and\nautomatically propagate.\n\nWhat's more, we're also building more features on top of ctx error\nreporting with RESET_STATS ioctl: Encrypted buffers use the same, and the\nuserspace fence wait also relies on that mechanism. So it is the path\ngoing forward for reporting gpu hangs and resets to userspace.\n\nSo all together that's why I think we should just bury this idea again as\nnot quite the direction we want to go to, hence why I think the revert is\nthe right option here.\n\nFor backporters: Please note that you _must_ have a backport of\nhttps://lore.kernel.org/dri-devel/20210602164149.391653-2-jason@jlekstrand.net/\nfor otherwise backporting just this patch opens up a security bug.\n\nv2: Augment commit message. Also restore Jason's sob that I\naccidentally lost.\n\nv3: Add a note for backporters\n\nSigned-off-by: Jason Ekstrand <jason@jlekstrand.net>\nReported-by: Marcin Slusarz <marcin.slusarz@intel.com>\nCc: <stable@vger.kernel.org> # v5.6+\nCc: Jason Ekstrand <jason.ekstrand@intel.com>\nCc: Marcin Slusarz <marcin.slusarz@intel.com>\nCloses: https://gitlab.freedesktop.org/drm/intel/-/issues/3080\nFixes: 9e31c1fe45d5 (\"drm/i915: Propagate errors on awaiting already signaled fences\")\nAcked-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nReviewed-by: Jon Bloomfield <jon.bloomfield@intel.com>\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nLink: https://patchwork.freedesktop.org/patch/msgid/20210714193419.1459723-3-jason@jlekstrand.net\n(cherry picked from commit 93a2711cddd5760e2f0f901817d71c93183c3b87)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>",
  "full_message": "Revert \"drm/i915: Propagate errors on awaiting already signaled fences\"\n\nThis reverts commit 9e31c1fe45d555a948ff66f1f0e3fe1f83ca63f7.  Ever\nsince that commit, we've been having issues where a hang in one client\ncan propagate to another.  In particular, a hang in an app can propagate\nto the X server which causes the whole desktop to lock up.\n\nError propagation along fences sound like a good idea, but as your bug\nshows, surprising consequences, since propagating errors across security\nboundaries is not a good thing.\n\nWhat we do have is track the hangs on the ctx, and report information to\nuserspace using RESET_STATS. That's how arb_robustness works. Also, if my\nunderstanding is still correct, the EIO from execbuf is when your context\nis banned (because not recoverable or too many hangs). And in all these\ncases it's up to userspace to figure out what is all impacted and should\nbe reported to the application, that's not on the kernel to guess and\nautomatically propagate.\n\nWhat's more, we're also building more features on top of ctx error\nreporting with RESET_STATS ioctl: Encrypted buffers use the same, and the\nuserspace fence wait also relies on that mechanism. So it is the path\ngoing forward for reporting gpu hangs and resets to userspace.\n\nSo all together that's why I think we should just bury this idea again as\nnot quite the direction we want to go to, hence why I think the revert is\nthe right option here.\n\nFor backporters: Please note that you _must_ have a backport of\nhttps://lore.kernel.org/dri-devel/20210602164149.391653-2-jason@jlekstrand.net/\nfor otherwise backporting just this patch opens up a security bug.\n\nv2: Augment commit message. Also restore Jason's sob that I\naccidentally lost.\n\nv3: Add a note for backporters\n\nSigned-off-by: Jason Ekstrand <jason@jlekstrand.net>\nReported-by: Marcin Slusarz <marcin.slusarz@intel.com>\nCc: <stable@vger.kernel.org> # v5.6+\nCc: Jason Ekstrand <jason.ekstrand@intel.com>\nCc: Marcin Slusarz <marcin.slusarz@intel.com>\nCloses: https://gitlab.freedesktop.org/drm/intel/-/issues/3080\nFixes: 9e31c1fe45d5 (\"drm/i915: Propagate errors on awaiting already signaled fences\")\nAcked-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nReviewed-by: Jon Bloomfield <jon.bloomfield@intel.com>\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nLink: https://patchwork.freedesktop.org/patch/msgid/20210714193419.1459723-3-jason@jlekstrand.net\n(cherry picked from commit 93a2711cddd5760e2f0f901817d71c93183c3b87)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>",
  "author_name": "Jason Ekstrand",
  "author_email": "jason@jlekstrand.net",
  "author_date": "Wed Jul 14 14:34:16 2021 -0500",
  "author_date_iso": "2021-07-14T14:34:16-05:00",
  "committer_name": "Rodrigo Vivi",
  "committer_email": "rodrigo.vivi@intel.com",
  "committer_date": "Mon Jul 19 09:55:24 2021 -0400",
  "committer_date_iso": "2021-07-19T09:55:24-04:00",
  "files_changed": [
    "drivers/gpu/drm/i915/i915_request.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/gpu/drm/i915/i915_request.c",
      "insertions": 2,
      "deletions": 6
    }
  ],
  "total_insertions": 2,
  "total_deletions": 6,
  "total_changes": 8,
  "parents": [
    "c9d9fdbc108af8915d3f497bbdf3898bf8f321b8"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security bug"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/gpu/drm/i915/i915_request.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}