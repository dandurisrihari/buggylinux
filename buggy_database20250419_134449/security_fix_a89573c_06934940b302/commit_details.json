{
  "hash": "a89573ce4ad32f19f43ec669771726817e185be0",
  "hash_short": "a89573ce",
  "subject": "jbd2: fix outstanding credits assert in jbd2_journal_commit_transaction()",
  "body": "We catch an assert problem in jbd2_journal_commit_transaction() when\ndoing fsstress and request falut injection tests. The problem is\nhappened in a race condition between jbd2_journal_commit_transaction()\nand ext4_end_io_end(). Firstly, ext4_writepages() writeback dirty pages\nand start reserved handle, and then the journal was aborted due to some\nprevious metadata IO error, jbd2_journal_abort() start to commit current\nrunning transaction, the committing procedure could be raced by\next4_end_io_end() and lead to subtract j_reserved_credits twice from\ncommit_transaction->t_outstanding_credits, finally the\nt_outstanding_credits is mistakenly smaller than t_nr_buffers and\ntrigger assert.\n\nkjournald2           kworker\n\njbd2_journal_commit_transaction()\n write_unlock(&journal->j_state_lock);\n atomic_sub(j_reserved_credits, t_outstanding_credits); //sub once\n\n     \t             jbd2_journal_start_reserved()\n     \t              start_this_handle()  //detect aborted journal\n     \t              jbd2_journal_free_reserved()  //get running transaction\n                       read_lock(&journal->j_state_lock)\n     \t                __jbd2_journal_unreserve_handle()\n     \t               atomic_sub(j_reserved_credits, t_outstanding_credits);\n                       //sub again\n                       read_unlock(&journal->j_state_lock);\n\n journal->j_running_transaction = NULL;\n J_ASSERT(t_nr_buffers <= t_outstanding_credits) //bomb!!!\n\nFix this issue by using journal->j_state_lock to protect the subtraction\nin jbd2_journal_commit_transaction().\n\nFixes: 96f1e0974575 (\"jbd2: avoid long hold times of j_state_lock while committing a transaction\")\nSigned-off-by: Zhang Yi <yi.zhang@huawei.com>\nReviewed-by: Jan Kara <jack@suse.cz>\nLink: https://lore.kernel.org/r/20220611130426.2013258-1-yi.zhang@huawei.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
  "full_message": "jbd2: fix outstanding credits assert in jbd2_journal_commit_transaction()\n\nWe catch an assert problem in jbd2_journal_commit_transaction() when\ndoing fsstress and request falut injection tests. The problem is\nhappened in a race condition between jbd2_journal_commit_transaction()\nand ext4_end_io_end(). Firstly, ext4_writepages() writeback dirty pages\nand start reserved handle, and then the journal was aborted due to some\nprevious metadata IO error, jbd2_journal_abort() start to commit current\nrunning transaction, the committing procedure could be raced by\next4_end_io_end() and lead to subtract j_reserved_credits twice from\ncommit_transaction->t_outstanding_credits, finally the\nt_outstanding_credits is mistakenly smaller than t_nr_buffers and\ntrigger assert.\n\nkjournald2           kworker\n\njbd2_journal_commit_transaction()\n write_unlock(&journal->j_state_lock);\n atomic_sub(j_reserved_credits, t_outstanding_credits); //sub once\n\n     \t             jbd2_journal_start_reserved()\n     \t              start_this_handle()  //detect aborted journal\n     \t              jbd2_journal_free_reserved()  //get running transaction\n                       read_lock(&journal->j_state_lock)\n     \t                __jbd2_journal_unreserve_handle()\n     \t               atomic_sub(j_reserved_credits, t_outstanding_credits);\n                       //sub again\n                       read_unlock(&journal->j_state_lock);\n\n journal->j_running_transaction = NULL;\n J_ASSERT(t_nr_buffers <= t_outstanding_credits) //bomb!!!\n\nFix this issue by using journal->j_state_lock to protect the subtraction\nin jbd2_journal_commit_transaction().\n\nFixes: 96f1e0974575 (\"jbd2: avoid long hold times of j_state_lock while committing a transaction\")\nSigned-off-by: Zhang Yi <yi.zhang@huawei.com>\nReviewed-by: Jan Kara <jack@suse.cz>\nLink: https://lore.kernel.org/r/20220611130426.2013258-1-yi.zhang@huawei.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
  "author_name": "Zhang Yi",
  "author_email": "yi.zhang@huawei.com",
  "author_date": "Sat Jun 11 21:04:26 2022 +0800",
  "author_date_iso": "2022-06-11T21:04:26+08:00",
  "committer_name": "Theodore Ts'o",
  "committer_email": "tytso@mit.edu",
  "committer_date": "Tue Aug 2 23:52:19 2022 -0400",
  "committer_date_iso": "2022-08-02T23:52:19-04:00",
  "files_changed": [
    "fs/jbd2/commit.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/jbd2/commit.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "d1324958567da957385d8d555a8b840b3bf8e6e3"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/jbd2/commit.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}