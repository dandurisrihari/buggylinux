{
  "hash": "02c163e959b72059ce409a8516170dc40193001f",
  "hash_short": "02c163e9",
  "subject": "Merge tag 'cxl-for-6.9' of git://git.kernel.org/pub/scm/linux/kernel/git/cxl/cxl",
  "body": "Pull CXL updates from Dan Williams:\n \"CXL has mechanisms to enumerate the performance characteristics of\n  memory devices. Those mechanisms allow Linux to build the equivalent\n  of ACPI SRAT, SLIT, and HMAT tables dynamically at runtime. That\n  capability is necessary because static ACPI can not represent dynamic\n  CXL configurations (and reconfigurations).\n\n  So, building on the v6.8 work to add \"Quality of Service\" enumeration,\n  this update plumbs CXL \"access coordinates\" (read/write access latency\n  and bandwidth) in all the same places that ACPI HMAT feeds similar\n  data. Follow-on patches from the -mm side can then use that data to\n  feed mechanisms like mm/memory-tiers.c. Greg has acked the touch to\n  drivers/base/.\n\n  The other feature update this cycle is support for CXL error injection\n  via the ACPI EINJ module. That facility enables injection of bus\n  protocol errors provided the user knows the magic address values to\n  insert in the interface. To hide that magic, and make this easier to\n  use, new error injection attributes were added to CXL debugfs. That\n  interface injects the errors relative to a CXL object rather than\n  require user tooling to know how to lookup and inject RCRB (Root\n  Complex Register Block) addresses into the raw EINJ debugfs interface.\n  It received some helpful review comments from Tony, but no explicit\n  acks from the ACPI side. The primary user visible change for existing\n  EINJ users is that they may find that einj.ko was already loaded by\n  cxl_core.ko. Previously, einj.ko was only loaded on demand.\n\n  The usual collection of miscellaneous cleanups are also present this\n  cycle.\n\n  Summary:\n\n   - Supplement ACPI HMAT reported memory performance with native CXL\n     memory performance enumeration\n\n   - Add support for CXL error injection via the ACPI EINJ mechanism\n\n   - Cleanup CXL DOE and CDAT integration\n\n   - Miscellaneous cleanups and fixes\"\n\n* tag 'cxl-for-6.9' of git://git.kernel.org/pub/scm/linux/kernel/git/cxl/cxl: (21 commits)\n  Documentation/ABI/testing/debugfs-cxl: Fix \"Unexpected indentation\"\n  lib/firmware_table: Provide buffer length argument to cdat_table_parse()\n  cxl/pci: Get rid of pointer arithmetic reading CDAT table\n  cxl/pci: Rename DOE mailbox handle to doe_mb\n  cxl: Fix the incorrect assignment of SSLBIS entry pointer initial location\n  cxl/core: Add CXL EINJ debugfs files\n  EINJ, Documentation: Update EINJ kernel doc\n  EINJ: Add CXL error type support\n  EINJ: Migrate to a platform driver\n  cxl/region: Deal with numa nodes not enumerated by SRAT\n  cxl/region: Add memory hotplug notifier for cxl region\n  cxl/region: Add sysfs attribute for locality attributes of CXL regions\n  cxl/region: Calculate performance data for a region\n  cxl: Set cxlmd->endpoint before adding port device\n  cxl: Move QoS class to be calculated from the nearest CPU\n  cxl: Split out host bridge access coordinates\n  cxl: Split out combine_coordinates() for common shared usage\n  ACPI: HMAT / cxl: Add retrieval of generic port coordinates for both access classes\n  ACPI: HMAT: Introduce 2 levels of generic port access class\n  base/node / ACPI: Enumerate node access class for 'struct access_coordinate'\n  ...",
  "full_message": "Merge tag 'cxl-for-6.9' of git://git.kernel.org/pub/scm/linux/kernel/git/cxl/cxl\n\nPull CXL updates from Dan Williams:\n \"CXL has mechanisms to enumerate the performance characteristics of\n  memory devices. Those mechanisms allow Linux to build the equivalent\n  of ACPI SRAT, SLIT, and HMAT tables dynamically at runtime. That\n  capability is necessary because static ACPI can not represent dynamic\n  CXL configurations (and reconfigurations).\n\n  So, building on the v6.8 work to add \"Quality of Service\" enumeration,\n  this update plumbs CXL \"access coordinates\" (read/write access latency\n  and bandwidth) in all the same places that ACPI HMAT feeds similar\n  data. Follow-on patches from the -mm side can then use that data to\n  feed mechanisms like mm/memory-tiers.c. Greg has acked the touch to\n  drivers/base/.\n\n  The other feature update this cycle is support for CXL error injection\n  via the ACPI EINJ module. That facility enables injection of bus\n  protocol errors provided the user knows the magic address values to\n  insert in the interface. To hide that magic, and make this easier to\n  use, new error injection attributes were added to CXL debugfs. That\n  interface injects the errors relative to a CXL object rather than\n  require user tooling to know how to lookup and inject RCRB (Root\n  Complex Register Block) addresses into the raw EINJ debugfs interface.\n  It received some helpful review comments from Tony, but no explicit\n  acks from the ACPI side. The primary user visible change for existing\n  EINJ users is that they may find that einj.ko was already loaded by\n  cxl_core.ko. Previously, einj.ko was only loaded on demand.\n\n  The usual collection of miscellaneous cleanups are also present this\n  cycle.\n\n  Summary:\n\n   - Supplement ACPI HMAT reported memory performance with native CXL\n     memory performance enumeration\n\n   - Add support for CXL error injection via the ACPI EINJ mechanism\n\n   - Cleanup CXL DOE and CDAT integration\n\n   - Miscellaneous cleanups and fixes\"\n\n* tag 'cxl-for-6.9' of git://git.kernel.org/pub/scm/linux/kernel/git/cxl/cxl: (21 commits)\n  Documentation/ABI/testing/debugfs-cxl: Fix \"Unexpected indentation\"\n  lib/firmware_table: Provide buffer length argument to cdat_table_parse()\n  cxl/pci: Get rid of pointer arithmetic reading CDAT table\n  cxl/pci: Rename DOE mailbox handle to doe_mb\n  cxl: Fix the incorrect assignment of SSLBIS entry pointer initial location\n  cxl/core: Add CXL EINJ debugfs files\n  EINJ, Documentation: Update EINJ kernel doc\n  EINJ: Add CXL error type support\n  EINJ: Migrate to a platform driver\n  cxl/region: Deal with numa nodes not enumerated by SRAT\n  cxl/region: Add memory hotplug notifier for cxl region\n  cxl/region: Add sysfs attribute for locality attributes of CXL regions\n  cxl/region: Calculate performance data for a region\n  cxl: Set cxlmd->endpoint before adding port device\n  cxl: Move QoS class to be calculated from the nearest CPU\n  cxl: Split out host bridge access coordinates\n  cxl: Split out combine_coordinates() for common shared usage\n  ACPI: HMAT / cxl: Add retrieval of generic port coordinates for both access classes\n  ACPI: HMAT: Introduce 2 levels of generic port access class\n  base/node / ACPI: Enumerate node access class for 'struct access_coordinate'\n  ...",
  "author_name": "Linus Torvalds",
  "author_email": "torvalds@linux-foundation.org",
  "author_date": "Sat Mar 16 10:04:12 2024 -0700",
  "author_date_iso": "2024-03-16T10:04:12-07:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Sat Mar 16 10:04:12 2024 -0700",
  "committer_date_iso": "2024-03-16T10:04:12-07:00",
  "files_changed": [
    "MAINTAINERS",
    "include/linux/acpi.h",
    "include/linux/memory.h"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "Documentation/ABI/testing/debugfs-cxl",
      "insertions": 34,
      "deletions": 0
    },
    {
      "file": "Documentation/ABI/testing/sysfs-bus-cxl",
      "insertions": 34,
      "deletions": 0
    },
    {
      "file": "Documentation/firmware-guide/acpi/apei/einj.rst",
      "insertions": 34,
      "deletions": 0
    },
    {
      "file": "MAINTAINERS",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/apei/Kconfig",
      "insertions": 13,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/apei/Makefile",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/apei/apei-internal.h",
      "insertions": 18,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/apei/{einj.c => einj-core.c}",
      "insertions": 101,
      "deletions": 21
    },
    {
      "file": "drivers/acpi/apei/einj-cxl.c",
      "insertions": 113,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/numa/hmat.c",
      "insertions": 64,
      "deletions": 19
    },
    {
      "file": "drivers/acpi/numa/srat.c",
      "insertions": 11,
      "deletions": 0
    },
    {
      "file": "drivers/acpi/tables.c",
      "insertions": 1,
      "deletions": 1
    },
    {
      "file": "drivers/base/node.c",
      "insertions": 4,
      "deletions": 3
    },
    {
      "file": "drivers/cxl/acpi.c",
      "insertions": 5,
      "deletions": 3
    },
    {
      "file": "drivers/cxl/core/cdat.c",
      "insertions": 138,
      "deletions": 32
    },
    {
      "file": "drivers/cxl/core/core.h",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "drivers/cxl/core/pci.c",
      "insertions": 55,
      "deletions": 44
    },
    {
      "file": "drivers/cxl/core/port.c",
      "insertions": 71,
      "deletions": 15
    },
    {
      "file": "drivers/cxl/core/region.c",
      "insertions": 169,
      "deletions": 0
    },
    {
      "file": "drivers/cxl/cxl.h",
      "insertions": 14,
      "deletions": 1
    },
    {
      "file": "drivers/cxl/cxlpci.h",
      "insertions": 24,
      "deletions": 0
    },
    {
      "file": "include/linux/acpi.h",
      "insertions": 21,
      "deletions": 0
    },
    {
      "file": "include/linux/einj-cxl.h",
      "insertions": 44,
      "deletions": 0
    },
    {
      "file": "include/linux/fw_table.h",
      "insertions": 3,
      "deletions": 1
    },
    {
      "file": "include/linux/memory.h",
      "insertions": 1,
      "deletions": 0
    },
    {
      "file": "include/linux/node.h",
      "insertions": 15,
      "deletions": 3
    },
    {
      "file": "lib/fw_table.c",
      "insertions": 10,
      "deletions": 5
    }
  ],
  "total_insertions": 1004,
  "total_deletions": 148,
  "total_changes": 1152,
  "parents": [
    "5c84b051bd4e777cf37aaff983277e58c99618d5",
    "ed1ff2fba7afa7baca7ceb93824a4699130b8377"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": true,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "MAINTAINERS",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/acpi.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/memory.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}