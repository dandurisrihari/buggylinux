{
  "hash": "5474bf400f16bd1f930627ea65b698bca09dcfc6",
  "hash_short": "5474bf40",
  "subject": "btrfs: check whether fsgid/fsuid are mapped during subvolume creation",
  "body": "When a new subvolume is created btrfs currently doesn't check whether\nthe fsgid/fsuid of the caller actually have a mapping in the user\nnamespace attached to the filesystem. The VFS always checks this to make\nsure that the caller's fsgid/fsuid can be represented on-disk. This is\nmost relevant for filesystems that can be mounted inside user namespaces\nbut it is in general a good hardening measure to prevent unrepresentable\ngid/uid from being written to disk.\n\nSince we want to support idmapped mounts for btrfs ioctls to create\nsubvolumes in follow-up patches this becomes important since we want to\nmake sure the fsgid/fsuid of the caller as mapped according to the\nidmapped mount can be represented on-disk. Simply add the missing\nfsuidgid_has_mapping() line from the VFS may_create() version to\nbtrfs_may_create().\n\nReviewed-by: Josef Bacik <josef@toxicpanda.com>\nSigned-off-by: Christian Brauner <christian.brauner@ubuntu.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "full_message": "btrfs: check whether fsgid/fsuid are mapped during subvolume creation\n\nWhen a new subvolume is created btrfs currently doesn't check whether\nthe fsgid/fsuid of the caller actually have a mapping in the user\nnamespace attached to the filesystem. The VFS always checks this to make\nsure that the caller's fsgid/fsuid can be represented on-disk. This is\nmost relevant for filesystems that can be mounted inside user namespaces\nbut it is in general a good hardening measure to prevent unrepresentable\ngid/uid from being written to disk.\n\nSince we want to support idmapped mounts for btrfs ioctls to create\nsubvolumes in follow-up patches this becomes important since we want to\nmake sure the fsgid/fsuid of the caller as mapped according to the\nidmapped mount can be represented on-disk. Simply add the missing\nfsuidgid_has_mapping() line from the VFS may_create() version to\nbtrfs_may_create().\n\nReviewed-by: Josef Bacik <josef@toxicpanda.com>\nSigned-off-by: Christian Brauner <christian.brauner@ubuntu.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
  "author_name": "Christian Brauner",
  "author_email": "christian.brauner@ubuntu.com",
  "author_date": "Tue Jul 27 12:48:51 2021 +0200",
  "author_date_iso": "2021-07-27T12:48:51+02:00",
  "committer_name": "David Sterba",
  "committer_email": "dsterba@suse.com",
  "committer_date": "Mon Aug 23 13:19:14 2021 +0200",
  "committer_date_iso": "2021-08-23T13:19:14+02:00",
  "files_changed": [
    "fs/btrfs/ioctl.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "fs/btrfs/ioctl.c",
      "insertions": 2,
      "deletions": 0
    }
  ],
  "total_insertions": 2,
  "total_deletions": 0,
  "total_changes": 2,
  "parents": [
    "3bc71ba02cf5376b390289bef8c9f5d6049f1866"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "fs/btrfs/ioctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}