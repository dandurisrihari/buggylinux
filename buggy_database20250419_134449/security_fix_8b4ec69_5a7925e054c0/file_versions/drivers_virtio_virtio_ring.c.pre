commit be83f04d2529e8dc4273efdd1ccf7b7502741071
Author: Jason Wang <jasowang@redhat.com>
Date:   Fri May 27 14:01:18 2022 +0800

    virtio: allow to unbreak virtqueue
    
    This patch allows the new introduced __virtio_break_device() to
    unbreak the virtqueue.
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: "Paul E. McKenney" <paulmck@kernel.org>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Halil Pasic <pasic@linux.ibm.com>
    Cc: Cornelia Huck <cohuck@redhat.com>
    Cc: Vineeth Vijayan <vneethv@linux.ibm.com>
    Cc: Peter Oberparleiter <oberpar@linux.ibm.com>
    Cc: linux-s390@vger.kernel.org
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Message-Id: <20220527060120.20964-8-jasowang@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>

diff --git a/drivers/virtio/virtio_ring.c b/drivers/virtio/virtio_ring.c
index 9d0bae4293be..9c231e1fded7 100644
--- a/drivers/virtio/virtio_ring.c
+++ b/drivers/virtio/virtio_ring.c
@@ -2395,6 +2395,28 @@ void virtio_break_device(struct virtio_device *dev)
 }
 EXPORT_SYMBOL_GPL(virtio_break_device);
 
+/*
+ * This should allow the device to be used by the driver. You may
+ * need to grab appropriate locks to flush the write to
+ * vq->broken. This should only be used in some specific case e.g
+ * (probing and restoring). This function should only be called by the
+ * core, not directly by the driver.
+ */
+void __virtio_unbreak_device(struct virtio_device *dev)
+{
+	struct virtqueue *_vq;
+
+	spin_lock(&dev->vqs_list_lock);
+	list_for_each_entry(_vq, &dev->vqs, list) {
+		struct vring_virtqueue *vq = to_vvq(_vq);
+
+		/* Pairs with READ_ONCE() in virtqueue_is_broken(). */
+		WRITE_ONCE(vq->broken, false);
+	}
+	spin_unlock(&dev->vqs_list_lock);
+}
+EXPORT_SYMBOL_GPL(__virtio_unbreak_device);
+
 dma_addr_t virtqueue_get_desc_addr(struct virtqueue *_vq)
 {
 	struct vring_virtqueue *vq = to_vvq(_vq);