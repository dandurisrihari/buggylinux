{
  "hash": "8b4ec69d7e098a7ddf832e1e7840de53ed474c77",
  "hash_short": "8b4ec69d",
  "subject": "virtio: harden vring IRQ",
  "body": "This is a rework on the previous IRQ hardening that is done for\nvirtio-pci where several drawbacks were found and were reverted:\n\n1) try to use IRQF_NO_AUTOEN which is not friendly to affinity managed IRQ\n   that is used by some device such as virtio-blk\n2) done only for PCI transport\n\nThe vq->broken is re-used in this patch for implementing the IRQ\nhardening. The vq->broken is set to true during both initialization\nand reset. And the vq->broken is set to false in\nvirtio_device_ready(). Then vring_interrupt() can check and return\nwhen vq->broken is true. And in this case, switch to return IRQ_NONE\nto let the interrupt core aware of such invalid interrupt to prevent\nIRQ storm.\n\nThe reason of using a per queue variable instead of a per device one\nis that we may need it for per queue reset hardening in the future.\n\nNote that the hardening is only done for vring interrupt since the\nconfig interrupt hardening is already done in commit 22b7050a024d7\n(\"virtio: defer config changed notifications\"). But the method that is\nused by config interrupt can't be reused by the vring interrupt\nhandler because it uses spinlock to do the synchronization which is\nexpensive.\n\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: \"Paul E. McKenney\" <paulmck@kernel.org>\nCc: Marc Zyngier <maz@kernel.org>\nCc: Halil Pasic <pasic@linux.ibm.com>\nCc: Cornelia Huck <cohuck@redhat.com>\nCc: Vineeth Vijayan <vneethv@linux.ibm.com>\nCc: Peter Oberparleiter <oberpar@linux.ibm.com>\nCc: linux-s390@vger.kernel.org\nSigned-off-by: Jason Wang <jasowang@redhat.com>\nMessage-Id: <20220527060120.20964-9-jasowang@redhat.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>",
  "full_message": "virtio: harden vring IRQ\n\nThis is a rework on the previous IRQ hardening that is done for\nvirtio-pci where several drawbacks were found and were reverted:\n\n1) try to use IRQF_NO_AUTOEN which is not friendly to affinity managed IRQ\n   that is used by some device such as virtio-blk\n2) done only for PCI transport\n\nThe vq->broken is re-used in this patch for implementing the IRQ\nhardening. The vq->broken is set to true during both initialization\nand reset. And the vq->broken is set to false in\nvirtio_device_ready(). Then vring_interrupt() can check and return\nwhen vq->broken is true. And in this case, switch to return IRQ_NONE\nto let the interrupt core aware of such invalid interrupt to prevent\nIRQ storm.\n\nThe reason of using a per queue variable instead of a per device one\nis that we may need it for per queue reset hardening in the future.\n\nNote that the hardening is only done for vring interrupt since the\nconfig interrupt hardening is already done in commit 22b7050a024d7\n(\"virtio: defer config changed notifications\"). But the method that is\nused by config interrupt can't be reused by the vring interrupt\nhandler because it uses spinlock to do the synchronization which is\nexpensive.\n\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: \"Paul E. McKenney\" <paulmck@kernel.org>\nCc: Marc Zyngier <maz@kernel.org>\nCc: Halil Pasic <pasic@linux.ibm.com>\nCc: Cornelia Huck <cohuck@redhat.com>\nCc: Vineeth Vijayan <vneethv@linux.ibm.com>\nCc: Peter Oberparleiter <oberpar@linux.ibm.com>\nCc: linux-s390@vger.kernel.org\nSigned-off-by: Jason Wang <jasowang@redhat.com>\nMessage-Id: <20220527060120.20964-9-jasowang@redhat.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>",
  "author_name": "Jason Wang",
  "author_email": "jasowang@redhat.com",
  "author_date": "Fri May 27 14:01:19 2022 +0800",
  "author_date_iso": "2022-05-27T14:01:19+08:00",
  "committer_name": "Michael S. Tsirkin",
  "committer_email": "mst@redhat.com",
  "committer_date": "Tue May 31 12:45:10 2022 -0400",
  "committer_date_iso": "2022-05-31T12:45:10-04:00",
  "files_changed": [
    "drivers/s390/virtio/virtio_ccw.c",
    "drivers/virtio/virtio.c",
    "drivers/virtio/virtio_mmio.c",
    "drivers/virtio/virtio_pci_modern_dev.c",
    "drivers/virtio/virtio_ring.c",
    "include/linux/virtio_config.h"
  ],
  "files_changed_count": 6,
  "stats": [
    {
      "file": "drivers/s390/virtio/virtio_ccw.c",
      "insertions": 4,
      "deletions": 0
    },
    {
      "file": "drivers/virtio/virtio.c",
      "insertions": 12,
      "deletions": 3
    },
    {
      "file": "drivers/virtio/virtio_mmio.c",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "drivers/virtio/virtio_pci_modern_dev.c",
      "insertions": 5,
      "deletions": 0
    },
    {
      "file": "drivers/virtio/virtio_ring.c",
      "insertions": 7,
      "deletions": 4
    },
    {
      "file": "include/linux/virtio_config.h",
      "insertions": 20,
      "deletions": 0
    }
  ],
  "total_insertions": 53,
  "total_deletions": 7,
  "total_changes": 60,
  "parents": [
    "be83f04d2529e8dc4273efdd1ccf7b7502741071"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/virtio/virtio.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/s390/virtio/virtio_ccw.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/virtio/virtio_mmio.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/virtio_config.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/virtio/virtio_pci_modern_dev.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "drivers/virtio/virtio_ring.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    }
  ]
}