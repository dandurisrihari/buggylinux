{
  "hash": "712b3f43ba0e5f86db69cf601ffb06085c606642",
  "hash_short": "712b3f43",
  "subject": "scsi: ibmvscsi: Replace deprecated strncpy() with strscpy()",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect partition_name to be NUL-terminated based on its usage with\nformat strings:\n|       dev_info(hostdata->dev, \"host srp version: %s, \"\n|                \"host partition %s (%d), OS %d, max io %u\\n\",\n|                hostdata->madapter_info.srp_version,\n|                hostdata->madapter_info.partition_name,\n|                be32_to_cpu(hostdata->madapter_info.partition_number),\n|                be32_to_cpu(hostdata->madapter_info.os_type),\n|                be32_to_cpu(hostdata->madapter_info.port_max_txu[0]));\n...\n|       len = snprintf(buf, PAGE_SIZE, \"%s\\n\",\n|                hostdata->madapter_info.partition_name);\n\nMoreover, NUL-padding is not required as madapter_info is explicitly\nmemset to 0:\n|       memset(&hostdata->madapter_info, 0x00,\n|                       sizeof(hostdata->madapter_info));\n\nConsidering the above, a suitable replacement is strscpy() [2] due to the\nfact that it guarantees NUL-termination on the destination buffer without\nunnecessarily NUL-padding.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231030-strncpy-drivers-scsi-ibmvscsi-ibmvscsi-c-v1-1-f8b06ae9e3d5@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nTested-by: Michael Ellerman <mpe@ellerman.id.au>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "full_message": "scsi: ibmvscsi: Replace deprecated strncpy() with strscpy()\n\nstrncpy() is deprecated for use on NUL-terminated destination strings [1]\nand as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect partition_name to be NUL-terminated based on its usage with\nformat strings:\n|       dev_info(hostdata->dev, \"host srp version: %s, \"\n|                \"host partition %s (%d), OS %d, max io %u\\n\",\n|                hostdata->madapter_info.srp_version,\n|                hostdata->madapter_info.partition_name,\n|                be32_to_cpu(hostdata->madapter_info.partition_number),\n|                be32_to_cpu(hostdata->madapter_info.os_type),\n|                be32_to_cpu(hostdata->madapter_info.port_max_txu[0]));\n...\n|       len = snprintf(buf, PAGE_SIZE, \"%s\\n\",\n|                hostdata->madapter_info.partition_name);\n\nMoreover, NUL-padding is not required as madapter_info is explicitly\nmemset to 0:\n|       memset(&hostdata->madapter_info, 0x00,\n|                       sizeof(hostdata->madapter_info));\n\nConsidering the above, a suitable replacement is strscpy() [2] due to the\nfact that it guarantees NUL-termination on the destination buffer without\nunnecessarily NUL-padding.\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: <linux-hardening@vger.kernel.org>\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nLink: https://lore.kernel.org/r/20231030-strncpy-drivers-scsi-ibmvscsi-ibmvscsi-c-v1-1-f8b06ae9e3d5@google.com\nReviewed-by: Kees Cook <keescook@chromium.org>\nTested-by: Michael Ellerman <mpe@ellerman.id.au>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Mon Oct 30 20:40:48 2023 +0000",
  "author_date_iso": "2023-10-30T20:40:48+00:00",
  "committer_name": "Martin K. Petersen",
  "committer_email": "martin.petersen@oracle.com",
  "committer_date": "Tue Dec 5 21:01:52 2023 -0500",
  "committer_date_iso": "2023-12-05T21:01:52-05:00",
  "files_changed": [
    "drivers/scsi/ibmvscsi/ibmvscsi.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/scsi/ibmvscsi/ibmvscsi.c",
      "insertions": 1,
      "deletions": 1
    }
  ],
  "total_insertions": 1,
  "total_deletions": 1,
  "total_changes": 2,
  "parents": [
    "a9baa16b4fc11d07953b65298b05d5ee707f093a"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/scsi/ibmvscsi/ibmvscsi.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}