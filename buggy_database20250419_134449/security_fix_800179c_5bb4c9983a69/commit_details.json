{
  "hash": "800179c9b8a1e796e441674776d11cd4c05d61d7",
  "hash_short": "800179c9",
  "subject": "fs: add link restrictions",
  "body": "This adds symlink and hardlink restrictions to the Linux VFS.\n\nSymlinks:\n\nA long-standing class of security issues is the symlink-based\ntime-of-check-time-of-use race, most commonly seen in world-writable\ndirectories like /tmp. The common method of exploitation of this flaw\nis to cross privilege boundaries when following a given symlink (i.e. a\nroot process follows a symlink belonging to another user). For a likely\nincomplete list of hundreds of examples across the years, please see:\nhttp://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=/tmp\n\nThe solution is to permit symlinks to only be followed when outside\na sticky world-writable directory, or when the uid of the symlink and\nfollower match, or when the directory owner matches the symlink's owner.\n\nSome pointers to the history of earlier discussion that I could find:\n\n 1996 Aug, Zygo Blaxell\n  http://marc.info/?l=bugtraq&m=87602167419830&w=2\n 1996 Oct, Andrew Tridgell\n  http://lkml.indiana.edu/hypermail/linux/kernel/9610.2/0086.html\n 1997 Dec, Albert D Cahalan\n  http://lkml.org/lkml/1997/12/16/4\n 2005 Feb, Lorenzo Hern\u00e1ndez Garc\u00eda-Hierro\n  http://lkml.indiana.edu/hypermail/linux/kernel/0502.0/1896.html\n 2010 May, Kees Cook\n  https://lkml.org/lkml/2010/5/30/144\n\nPast objections and rebuttals could be summarized as:\n\n - Violates POSIX.\n   - POSIX didn't consider this situation and it's not useful to follow\n     a broken specification at the cost of security.\n - Might break unknown applications that use this feature.\n   - Applications that break because of the change are easy to spot and\n     fix. Applications that are vulnerable to symlink ToCToU by not having\n     the change aren't. Additionally, no applications have yet been found\n     that rely on this behavior.\n - Applications should just use mkstemp() or O_CREATE|O_EXCL.\n   - True, but applications are not perfect, and new software is written\n     all the time that makes these mistakes; blocking this flaw at the\n     kernel is a single solution to the entire class of vulnerability.\n - This should live in the core VFS.\n   - This should live in an LSM. (https://lkml.org/lkml/2010/5/31/135)\n - This should live in an LSM.\n   - This should live in the core VFS. (https://lkml.org/lkml/2010/8/2/188)\n\nHardlinks:\n\nOn systems that have user-writable directories on the same partition\nas system files, a long-standing class of security issues is the\nhardlink-based time-of-check-time-of-use race, most commonly seen in\nworld-writable directories like /tmp. The common method of exploitation\nof this flaw is to cross privilege boundaries when following a given\nhardlink (i.e. a root process follows a hardlink created by another\nuser). Additionally, an issue exists where users can \"pin\" a potentially\nvulnerable setuid/setgid file so that an administrator will not actually\nupgrade a system fully.\n\nThe solution is to permit hardlinks to only be created when the user is\nalready the existing file's owner, or if they already have read/write\naccess to the existing file.\n\nMany Linux users are surprised when they learn they can link to files\nthey have no access to, so this change appears to follow the doctrine\nof \"least surprise\". Additionally, this change does not violate POSIX,\nwhich states \"the implementation may require that the calling process\nhas permission to access the existing file\"[1].\n\nThis change is known to break some implementations of the \"at\" daemon,\nthough the version used by Fedora and Ubuntu has been fixed[2] for\na while. Otherwise, the change has been undisruptive while in use in\nUbuntu for the last 1.5 years.\n\n[1] http://pubs.opengroup.org/onlinepubs/9699919799/functions/linkat.html\n[2] http://anonscm.debian.org/gitweb/?p=collab-maint/at.git;a=commitdiff;h=f4114656c3a6c6f6070e315ffdf940a49eda3279\n\nThis patch is based on the patches in Openwall and grsecurity, along with\nsuggestions from Al Viro. I have added a sysctl to enable the protected\nbehavior, and documentation.\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Ingo Molnar <mingo@elte.hu>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
  "full_message": "fs: add link restrictions\n\nThis adds symlink and hardlink restrictions to the Linux VFS.\n\nSymlinks:\n\nA long-standing class of security issues is the symlink-based\ntime-of-check-time-of-use race, most commonly seen in world-writable\ndirectories like /tmp. The common method of exploitation of this flaw\nis to cross privilege boundaries when following a given symlink (i.e. a\nroot process follows a symlink belonging to another user). For a likely\nincomplete list of hundreds of examples across the years, please see:\nhttp://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=/tmp\n\nThe solution is to permit symlinks to only be followed when outside\na sticky world-writable directory, or when the uid of the symlink and\nfollower match, or when the directory owner matches the symlink's owner.\n\nSome pointers to the history of earlier discussion that I could find:\n\n 1996 Aug, Zygo Blaxell\n  http://marc.info/?l=bugtraq&m=87602167419830&w=2\n 1996 Oct, Andrew Tridgell\n  http://lkml.indiana.edu/hypermail/linux/kernel/9610.2/0086.html\n 1997 Dec, Albert D Cahalan\n  http://lkml.org/lkml/1997/12/16/4\n 2005 Feb, Lorenzo Hern\u00e1ndez Garc\u00eda-Hierro\n  http://lkml.indiana.edu/hypermail/linux/kernel/0502.0/1896.html\n 2010 May, Kees Cook\n  https://lkml.org/lkml/2010/5/30/144\n\nPast objections and rebuttals could be summarized as:\n\n - Violates POSIX.\n   - POSIX didn't consider this situation and it's not useful to follow\n     a broken specification at the cost of security.\n - Might break unknown applications that use this feature.\n   - Applications that break because of the change are easy to spot and\n     fix. Applications that are vulnerable to symlink ToCToU by not having\n     the change aren't. Additionally, no applications have yet been found\n     that rely on this behavior.\n - Applications should just use mkstemp() or O_CREATE|O_EXCL.\n   - True, but applications are not perfect, and new software is written\n     all the time that makes these mistakes; blocking this flaw at the\n     kernel is a single solution to the entire class of vulnerability.\n - This should live in the core VFS.\n   - This should live in an LSM. (https://lkml.org/lkml/2010/5/31/135)\n - This should live in an LSM.\n   - This should live in the core VFS. (https://lkml.org/lkml/2010/8/2/188)\n\nHardlinks:\n\nOn systems that have user-writable directories on the same partition\nas system files, a long-standing class of security issues is the\nhardlink-based time-of-check-time-of-use race, most commonly seen in\nworld-writable directories like /tmp. The common method of exploitation\nof this flaw is to cross privilege boundaries when following a given\nhardlink (i.e. a root process follows a hardlink created by another\nuser). Additionally, an issue exists where users can \"pin\" a potentially\nvulnerable setuid/setgid file so that an administrator will not actually\nupgrade a system fully.\n\nThe solution is to permit hardlinks to only be created when the user is\nalready the existing file's owner, or if they already have read/write\naccess to the existing file.\n\nMany Linux users are surprised when they learn they can link to files\nthey have no access to, so this change appears to follow the doctrine\nof \"least surprise\". Additionally, this change does not violate POSIX,\nwhich states \"the implementation may require that the calling process\nhas permission to access the existing file\"[1].\n\nThis change is known to break some implementations of the \"at\" daemon,\nthough the version used by Fedora and Ubuntu has been fixed[2] for\na while. Otherwise, the change has been undisruptive while in use in\nUbuntu for the last 1.5 years.\n\n[1] http://pubs.opengroup.org/onlinepubs/9699919799/functions/linkat.html\n[2] http://anonscm.debian.org/gitweb/?p=collab-maint/at.git;a=commitdiff;h=f4114656c3a6c6f6070e315ffdf940a49eda3279\n\nThis patch is based on the patches in Openwall and grsecurity, along with\nsuggestions from Al Viro. I have added a sysctl to enable the protected\nbehavior, and documentation.\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Ingo Molnar <mingo@elte.hu>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
  "author_name": "Kees Cook",
  "author_email": "keescook@chromium.org",
  "author_date": "Wed Jul 25 17:29:07 2012 -0700",
  "author_date_iso": "2012-07-25T17:29:07-07:00",
  "committer_name": "Al Viro",
  "committer_email": "viro@zeniv.linux.org.uk",
  "committer_date": "Sun Jul 29 21:37:58 2012 +0400",
  "committer_date_iso": "2012-07-29T21:37:58+04:00",
  "files_changed": [
    "Documentation/sysctl/fs.txt",
    "fs/namei.c",
    "include/linux/fs.h",
    "kernel/sysctl.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "Documentation/sysctl/fs.txt",
      "insertions": 42,
      "deletions": 0
    },
    {
      "file": "fs/namei.c",
      "insertions": 122,
      "deletions": 0
    },
    {
      "file": "include/linux/fs.h",
      "insertions": 2,
      "deletions": 0
    },
    {
      "file": "kernel/sysctl.c",
      "insertions": 18,
      "deletions": 0
    }
  ],
  "total_insertions": 184,
  "total_deletions": 0,
  "total_changes": 184,
  "parents": [
    "3134f37e931d75931bdf6d4eacd82a3fd26eca7c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.10",
    "v3.10-rc1",
    "v3.10-rc2",
    "v3.10-rc3",
    "v3.10-rc4",
    "v3.10-rc5",
    "v3.10-rc6",
    "v3.10-rc7",
    "v3.11",
    "v3.11-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "vulnerability"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/sysctl/fs.txt",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "fs/namei.c",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/fs.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/sysctl.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}