{
  "hash": "0ec8ce07394442d722806fe61b901a5b2b17249d",
  "hash_short": "0ec8ce07",
  "subject": "dmaengine: idxd: Do not enable user type Work Queue without Shared Virtual Addressing",
  "body": "When the idxd_user_drv driver is bound to a Work Queue (WQ) device\nwithout IOMMU or with IOMMU Passthrough without Shared Virtual\nAddressing (SVA), the application gains direct access to physical\nmemory via the device by programming physical address to a submitted\ndescriptor. This allows direct userspace read and write access to\narbitrary physical memory. This is inconsistent with the security\ngoals of a good kernel API.\n\nUnlike vfio_pci driver, the IDXD char device driver does not provide any\nways to pin user pages and translate the address from user VA to IOVA or\nPA without IOMMU SVA. Therefore the application has no way to instruct the\ndevice to perform DMA function. This makes the char device not usable for\nnormal application usage.\n\nSince user type WQ without SVA cannot be used for normal application usage\nand presents the security issue, bind idxd_user_drv driver and enable user\ntype WQ only when SVA is enabled (i.e. user PASID is enabled).\n\nFixes: 448c3de8ac83 (\"dmaengine: idxd: create user driver for wq 'device'\")\nCc: stable@vger.kernel.org\nSuggested-by: Arjan Van De Ven <arjan.van.de.ven@intel.com>\nSigned-off-by: Fenghua Yu <fenghua.yu@intel.com>\nReviewed-by: Dave Jiang <dave.jiang@intel.com>\nReviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>\nLink: https://lore.kernel.org/r/20221014222541.3912195-1-fenghua.yu@intel.com\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
  "full_message": "dmaengine: idxd: Do not enable user type Work Queue without Shared Virtual Addressing\n\nWhen the idxd_user_drv driver is bound to a Work Queue (WQ) device\nwithout IOMMU or with IOMMU Passthrough without Shared Virtual\nAddressing (SVA), the application gains direct access to physical\nmemory via the device by programming physical address to a submitted\ndescriptor. This allows direct userspace read and write access to\narbitrary physical memory. This is inconsistent with the security\ngoals of a good kernel API.\n\nUnlike vfio_pci driver, the IDXD char device driver does not provide any\nways to pin user pages and translate the address from user VA to IOVA or\nPA without IOMMU SVA. Therefore the application has no way to instruct the\ndevice to perform DMA function. This makes the char device not usable for\nnormal application usage.\n\nSince user type WQ without SVA cannot be used for normal application usage\nand presents the security issue, bind idxd_user_drv driver and enable user\ntype WQ only when SVA is enabled (i.e. user PASID is enabled).\n\nFixes: 448c3de8ac83 (\"dmaengine: idxd: create user driver for wq 'device'\")\nCc: stable@vger.kernel.org\nSuggested-by: Arjan Van De Ven <arjan.van.de.ven@intel.com>\nSigned-off-by: Fenghua Yu <fenghua.yu@intel.com>\nReviewed-by: Dave Jiang <dave.jiang@intel.com>\nReviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>\nLink: https://lore.kernel.org/r/20221014222541.3912195-1-fenghua.yu@intel.com\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
  "author_name": "Fenghua Yu",
  "author_email": "fenghua.yu@intel.com",
  "author_date": "Fri Oct 14 15:25:41 2022 -0700",
  "author_date_iso": "2022-10-14T15:25:41-07:00",
  "committer_name": "Vinod Koul",
  "committer_email": "vkoul@kernel.org",
  "committer_date": "Wed Oct 19 19:02:10 2022 +0530",
  "committer_date_iso": "2022-10-19T19:02:10+05:30",
  "files_changed": [
    "drivers/dma/idxd/cdev.c",
    "include/uapi/linux/idxd.h"
  ],
  "files_changed_count": 2,
  "stats": [
    {
      "file": "drivers/dma/idxd/cdev.c",
      "insertions": 18,
      "deletions": 0
    },
    {
      "file": "include/uapi/linux/idxd.h",
      "insertions": 1,
      "deletions": 0
    }
  ],
  "total_insertions": 19,
  "total_deletions": 0,
  "total_changes": 19,
  "parents": [
    "5a637f83d96fc9f27e93385924e7253a5f5187bc"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "security issue"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/dma/idxd/cdev.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/uapi/linux/idxd.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}