commit b6ddf05ff68d81a7c1736717faf492b70e9bf4f9
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Tue Apr 24 16:40:17 2012 +0200

    KVM: x86: Run PIT work in own kthread
    
    We can't run PIT IRQ injection work in the interrupt context of the host
    timer. This would allow the user to influence the handler complexity by
    asking for a broadcast to a large number of VCPUs. Therefore, this work
    was pushed into workqueue context in 9d244caf2e. However, this prevents
    prioritizing the PIT injection over other task as workqueues share
    kernel threads.
    
    This replaces the workqueue with a kthread worker and gives that thread
    a name in the format "kvm-pit/<owner-process-pid>". That allows to
    identify and adjust the kthread priority according to the VM process
    parameters.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

diff --git a/Documentation/virtual/kvm/api.txt b/Documentation/virtual/kvm/api.txt
index a7cb93cb2154..eb62761b7683 100644
--- a/Documentation/virtual/kvm/api.txt
+++ b/Documentation/virtual/kvm/api.txt
@@ -1810,6 +1810,14 @@ Valid flags are:
 
 #define KVM_PIT_SPEAKER_DUMMY     1 /* emulate speaker port stub */
 
+PIT timer interrupts may use a per-VM kernel thread for injection. If it
+exists, this thread will have a name of the following pattern:
+
+kvm-pit/<owner-process-pid>
+
+When running a guest with elevated priorities, the scheduling parameters of
+this thread may have to be adjusted accordingly.
+
 This IOCTL replaces the obsolete KVM_CREATE_PIT.