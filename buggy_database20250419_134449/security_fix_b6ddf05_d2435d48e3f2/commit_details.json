{
  "hash": "b6ddf05ff68d81a7c1736717faf492b70e9bf4f9",
  "hash_short": "b6ddf05f",
  "subject": "KVM: x86: Run PIT work in own kthread",
  "body": "We can't run PIT IRQ injection work in the interrupt context of the host\ntimer. This would allow the user to influence the handler complexity by\nasking for a broadcast to a large number of VCPUs. Therefore, this work\nwas pushed into workqueue context in 9d244caf2e. However, this prevents\nprioritizing the PIT injection over other task as workqueues share\nkernel threads.\n\nThis replaces the workqueue with a kthread worker and gives that thread\na name in the format \"kvm-pit/<owner-process-pid>\". That allows to\nidentify and adjust the kthread priority according to the VM process\nparameters.\n\nSigned-off-by: Jan Kiszka <jan.kiszka@siemens.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
  "full_message": "KVM: x86: Run PIT work in own kthread\n\nWe can't run PIT IRQ injection work in the interrupt context of the host\ntimer. This would allow the user to influence the handler complexity by\nasking for a broadcast to a large number of VCPUs. Therefore, this work\nwas pushed into workqueue context in 9d244caf2e. However, this prevents\nprioritizing the PIT injection over other task as workqueues share\nkernel threads.\n\nThis replaces the workqueue with a kthread worker and gives that thread\na name in the format \"kvm-pit/<owner-process-pid>\". That allows to\nidentify and adjust the kthread priority according to the VM process\nparameters.\n\nSigned-off-by: Jan Kiszka <jan.kiszka@siemens.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>",
  "author_name": "Jan Kiszka",
  "author_email": "jan.kiszka@siemens.com",
  "author_date": "Tue Apr 24 16:40:17 2012 +0200",
  "author_date_iso": "2012-04-24T16:40:17+02:00",
  "committer_name": "Marcelo Tosatti",
  "committer_email": "mtosatti@redhat.com",
  "committer_date": "Fri Apr 27 19:40:29 2012 -0300",
  "committer_date_iso": "2012-04-27T19:40:29-03:00",
  "files_changed": [
    "Documentation/virtual/kvm/api.txt",
    "arch/x86/kvm/i8254.c",
    "arch/x86/kvm/i8254.h"
  ],
  "files_changed_count": 3,
  "stats": [
    {
      "file": "Documentation/virtual/kvm/api.txt",
      "insertions": 8,
      "deletions": 0
    },
    {
      "file": "arch/x86/kvm/i8254.c",
      "insertions": 19,
      "deletions": 12
    },
    {
      "file": "arch/x86/kvm/i8254.h",
      "insertions": 5,
      "deletions": 2
    }
  ],
  "total_insertions": 32,
  "total_deletions": 14,
  "total_changes": 46,
  "parents": [
    "0589ff6c11d8128cf053c3ddc75b0f6d8b71c62b"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.10",
    "v3.10-rc1",
    "v3.10-rc2",
    "v3.10-rc3",
    "v3.10-rc4",
    "v3.10-rc5",
    "v3.10-rc6",
    "v3.10-rc7",
    "v3.11",
    "v3.11-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "Documentation/virtual/kvm/api.txt",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/i8254.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "arch/x86/kvm/i8254.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}