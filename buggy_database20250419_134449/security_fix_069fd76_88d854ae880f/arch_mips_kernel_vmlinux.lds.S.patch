commit 069fd766271de65ec4dc2eb8d15f7f44727b1ea1
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Thu Mar 31 10:05:34 2016 +0100

    MIPS: Reserve space for relocation table
    
    When CONFIG_RELOCATABLE is enabled, add a new section in the memory map
    to be filled with relocation data.
    
    CONFIG_RELOCATION_TABLE_SIZE allows the amount of space reserved to be
    adjusted if necessary.
    
    The relocs tool will populate this reserved space with relocation
    information. The space is reserved within the elf by filling it with
    0's, and an invalid entry is left at the start of the space such that
    kernel relocation will be aborted if the table is empty.
    
    Signed-off-by: Matt Redfearn <matt.redfearn@imgtec.com>
    Cc: Aaro Koskinen <aaro.koskinen@nokia.com>
    Cc: David Daney <ddaney@caviumnetworks.com>
    Cc: Jonas Gorski <jogo@openwrt.org>
    Cc: linux-mips@linux-mips.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/12982/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/kernel/vmlinux.lds.S b/arch/mips/kernel/vmlinux.lds.S
index 54d653ee17e1..a82c178d0bb9 100644
--- a/arch/mips/kernel/vmlinux.lds.S
+++ b/arch/mips/kernel/vmlinux.lds.S
@@ -136,6 +136,27 @@ SECTIONS
 #ifdef CONFIG_SMP
 	PERCPU_SECTION(1 << CONFIG_MIPS_L1_CACHE_SHIFT)
 #endif
+
+#ifdef CONFIG_RELOCATABLE
+	. = ALIGN(4);
+
+	.data.reloc : {
+		_relocation_start = .;
+		/*
+		 * Space for relocation table
+		 * This needs to be filled so that the
+		 * relocs tool can overwrite the content.
+		 * An invalid value is left at the start of the
+		 * section to abort relocation if the table
+		 * has not been filled in.
+		 */
+		LONG(0xFFFFFFFF);
+		FILL(0);
+		. += CONFIG_RELOCATION_TABLE_SIZE - 4;
+		_relocation_end = .;
+	}
+#endif
+
 #ifdef CONFIG_MIPS_RAW_APPENDED_DTB
 	__appended_dtb = .;
 	/* leave space for appended DTB */