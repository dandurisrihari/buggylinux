{
  "hash": "d01f858c78b0a67218d73b17ec1e494e014ab52a",
  "hash_short": "d01f858c",
  "subject": "mac80211: release channel on auth failure",
  "body": "There were a few rare cases when upon\nauthentication failure channel wasn't released.\nThis could cause stale pointers to remain in\nchanctx assigned_vifs after interface removal and\ntrigger general protection fault later.\n\nThis could be triggered, e.g. on ath10k with the\nfollowing steps:\n\n 1. start an AP\n 2. create 2 extra vifs on ath10k host\n 3. connect vif1 to the AP\n 4. connect vif2 to the AP\n    (auth fails because ath10k firmware isn't able\n     to maintain 2 peers with colliding AP mac\n     addresses across vifs and consequently\n     refuses sta_info_insert() in\n     ieee80211_prep_connection())\n 5. remove the 2 extra vifs\n 6. goto step 2; at step 3 kernel was crashing:\n\n general protection fault: 0000 [#1] SMP DEBUG_PAGEALLOC\n Modules linked in: ath10k_pci ath10k_core ath\n ...\n Call Trace:\n  [<ffffffff81a2dabb>] ieee80211_check_combinations+0x22b/0x290\n  [<ffffffff819fb825>] ? ieee80211_check_concurrent_iface+0x125/0x220\n  [<ffffffff8180f664>] ? netpoll_poll_disable+0x84/0x100\n  [<ffffffff819fb833>] ieee80211_check_concurrent_iface+0x133/0x220\n  [<ffffffff81a0029e>] ieee80211_open+0x3e/0x80\n  [<ffffffff817f2d26>] __dev_open+0xb6/0x130\n  [<ffffffff817f3051>] __dev_change_flags+0xa1/0x170\n ...\n RIP  [<ffffffff81a23140>] ieee80211_chanctx_radar_detect+0xa0/0x170\n\n (gdb) l * ieee80211_chanctx_radar_detect+0xa0\n 0xffffffff81a23140 is in ieee80211_chanctx_radar_detect (/devel/src/linux/net/mac80211/util.c:3182).\n 3177             */\n 3178            WARN_ON(ctx->replace_state == IEEE80211_CHANCTX_REPLACES_OTHER &&\n 3179                    !list_empty(&ctx->assigned_vifs));\n 3180\n 3181            list_for_each_entry(sdata, &ctx->assigned_vifs, assigned_chanctx_list)\n 3182                    if (sdata->radar_required)\n 3183                            radar_detect |= BIT(sdata->vif.bss_conf.chandef.width);\n 3184\n 3185            return radar_detect;\n\nSigned-off-by: Michal Kazior <michal.kazior@tieto.com>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "full_message": "mac80211: release channel on auth failure\n\nThere were a few rare cases when upon\nauthentication failure channel wasn't released.\nThis could cause stale pointers to remain in\nchanctx assigned_vifs after interface removal and\ntrigger general protection fault later.\n\nThis could be triggered, e.g. on ath10k with the\nfollowing steps:\n\n 1. start an AP\n 2. create 2 extra vifs on ath10k host\n 3. connect vif1 to the AP\n 4. connect vif2 to the AP\n    (auth fails because ath10k firmware isn't able\n     to maintain 2 peers with colliding AP mac\n     addresses across vifs and consequently\n     refuses sta_info_insert() in\n     ieee80211_prep_connection())\n 5. remove the 2 extra vifs\n 6. goto step 2; at step 3 kernel was crashing:\n\n general protection fault: 0000 [#1] SMP DEBUG_PAGEALLOC\n Modules linked in: ath10k_pci ath10k_core ath\n ...\n Call Trace:\n  [<ffffffff81a2dabb>] ieee80211_check_combinations+0x22b/0x290\n  [<ffffffff819fb825>] ? ieee80211_check_concurrent_iface+0x125/0x220\n  [<ffffffff8180f664>] ? netpoll_poll_disable+0x84/0x100\n  [<ffffffff819fb833>] ieee80211_check_concurrent_iface+0x133/0x220\n  [<ffffffff81a0029e>] ieee80211_open+0x3e/0x80\n  [<ffffffff817f2d26>] __dev_open+0xb6/0x130\n  [<ffffffff817f3051>] __dev_change_flags+0xa1/0x170\n ...\n RIP  [<ffffffff81a23140>] ieee80211_chanctx_radar_detect+0xa0/0x170\n\n (gdb) l * ieee80211_chanctx_radar_detect+0xa0\n 0xffffffff81a23140 is in ieee80211_chanctx_radar_detect (/devel/src/linux/net/mac80211/util.c:3182).\n 3177             */\n 3178            WARN_ON(ctx->replace_state == IEEE80211_CHANCTX_REPLACES_OTHER &&\n 3179                    !list_empty(&ctx->assigned_vifs));\n 3180\n 3181            list_for_each_entry(sdata, &ctx->assigned_vifs, assigned_chanctx_list)\n 3182                    if (sdata->radar_required)\n 3183                            radar_detect |= BIT(sdata->vif.bss_conf.chandef.width);\n 3184\n 3185            return radar_detect;\n\nSigned-off-by: Michal Kazior <michal.kazior@tieto.com>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
  "author_name": "Michal Kazior",
  "author_email": "michal.kazior@tieto.com",
  "author_date": "Wed Jun 3 08:36:13 2015 +0200",
  "author_date_iso": "2015-06-03T08:36:13+02:00",
  "committer_name": "Johannes Berg",
  "committer_email": "johannes.berg@intel.com",
  "committer_date": "Tue Jun 9 21:51:01 2015 +0200",
  "committer_date_iso": "2015-06-09T21:51:01+02:00",
  "files_changed": [
    "net/mac80211/mlme.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/mac80211/mlme.c",
      "insertions": 3,
      "deletions": 0
    }
  ],
  "total_insertions": 3,
  "total_deletions": 0,
  "total_changes": 3,
  "parents": [
    "c2d3955ba322471181ba0e6636ea9bdd9f521239"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.10",
    "v4.10-rc1",
    "v4.10-rc2",
    "v4.10-rc3",
    "v4.10-rc4",
    "v4.10-rc5",
    "v4.10-rc6",
    "v4.10-rc7",
    "v4.10-rc8",
    "v4.11"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "auth"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/mac80211/mlme.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}