{
  "hash": "c55b51a06b01d67a99457bb82a8c31081c7faa23",
  "hash_short": "c55b51a0",
  "subject": "cpuidle: Allow idle injection to apply exit latency limit",
  "body": "In some cases it may be useful to specify an exit latency limit for\nthe idle state to be used during CPU idle time injection.\n\nInstead of duplicating the information in struct cpuidle_device\nor propagating the latency limit in the call stack, replace the\nuse_deepest_state field with forced_latency_limit_ns to represent\nthat limit, so that the deepest idle state with exit latency within\nthat limit is forced (i.e. no governors) when it is set.\n\nA zero exit latency limit for forced idle means to use governors in\nthe usual way (analogous to use_deepest_state equal to \"false\" before\nthis change).\n\nAdditionally, add play_idle_precise() taking two arguments, the\nduration of forced idle and the idle state exit latency limit, both\nin nanoseconds, and redefine play_idle() as a wrapper around that\nnew function.\n\nThis change is preparatory, no functional impact is expected.\n\nSuggested-by: Rafael J. Wysocki <rafael@kernel.org>\nSigned-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>\n[ rjw: Subject, changelog, cpuidle_use_deepest_state() kerneldoc, whitespace ]\nSigned-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>",
  "full_message": "cpuidle: Allow idle injection to apply exit latency limit\n\nIn some cases it may be useful to specify an exit latency limit for\nthe idle state to be used during CPU idle time injection.\n\nInstead of duplicating the information in struct cpuidle_device\nor propagating the latency limit in the call stack, replace the\nuse_deepest_state field with forced_latency_limit_ns to represent\nthat limit, so that the deepest idle state with exit latency within\nthat limit is forced (i.e. no governors) when it is set.\n\nA zero exit latency limit for forced idle means to use governors in\nthe usual way (analogous to use_deepest_state equal to \"false\" before\nthis change).\n\nAdditionally, add play_idle_precise() taking two arguments, the\nduration of forced idle and the idle state exit latency limit, both\nin nanoseconds, and redefine play_idle() as a wrapper around that\nnew function.\n\nThis change is preparatory, no functional impact is expected.\n\nSuggested-by: Rafael J. Wysocki <rafael@kernel.org>\nSigned-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>\n[ rjw: Subject, changelog, cpuidle_use_deepest_state() kerneldoc, whitespace ]\nSigned-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>",
  "author_name": "Daniel Lezcano",
  "author_email": "daniel.lezcano@linaro.org",
  "author_date": "Sat Nov 16 14:16:12 2019 +0100",
  "author_date_iso": "2019-11-16T14:16:12+01:00",
  "committer_name": "Rafael J. Wysocki",
  "committer_email": "rafael.j.wysocki@intel.com",
  "committer_date": "Wed Nov 20 11:32:55 2019 +0100",
  "committer_date_iso": "2019-11-20T11:32:55+01:00",
  "files_changed": [
    "drivers/cpuidle/cpuidle.c",
    "include/linux/cpu.h",
    "include/linux/cpuidle.h",
    "kernel/sched/idle.c"
  ],
  "files_changed_count": 4,
  "stats": [
    {
      "file": "drivers/cpuidle/cpuidle.c",
      "insertions": 7,
      "deletions": 6
    },
    {
      "file": "include/linux/cpu.h",
      "insertions": 6,
      "deletions": 1
    },
    {
      "file": "include/linux/cpuidle.h",
      "insertions": 3,
      "deletions": 3
    },
    {
      "file": "kernel/sched/idle.c",
      "insertions": 7,
      "deletions": 7
    }
  ],
  "total_insertions": 23,
  "total_deletions": 17,
  "total_changes": 40,
  "parents": [
    "cbda56d5fefcebc01448982a55836c88a825b34c"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v5.5",
    "v5.5-rc1",
    "v5.5-rc2",
    "v5.5-rc3",
    "v5.5-rc4",
    "v5.5-rc5",
    "v5.5-rc6",
    "v5.5-rc7",
    "v5.6",
    "v5.6-rc1"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/cpuidle/cpuidle.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/cpu.h",
      "pre_version": false,
      "post_version": true,
      "patch": true
    },
    {
      "file": "include/linux/cpuidle.h",
      "pre_version": true,
      "post_version": true,
      "patch": true
    },
    {
      "file": "kernel/sched/idle.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}