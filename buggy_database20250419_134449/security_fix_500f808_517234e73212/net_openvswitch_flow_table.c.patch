commit 500f80872645ac8c1d81c206004bf5b4daeaf825
Author: Francesco Fusco <ffusco@redhat.com>
Date:   Thu Dec 12 16:09:06 2013 +0100

    net: ovs: use CRC32 accelerated flow hash if available
    
    Currently OVS uses jhash2() for calculating flow hashes in its
    internal flow_hash() function. The performance of the flow_hash()
    function is critical, as the input data can be hundreds of bytes
    long.
    
    OVS is largely deployed in x86_64 based datacenters.  Therefore,
    we argue that the performance critical fast path of OVS should
    exploit underlying CPU features in order to reduce the per packet
    processing costs. We replace jhash2 with the hash implementation
    provided by the kernel hash lib, which exploits the crc32l
    instruction to achieve high performance
    
    Our patch greatly reduces the hash footprint from ~200 cycles of
    jhash2() to around ~90 cycles in case of ovs_flow_hash_crc()
    (measured with rdtsc over maximum length flow keys on an i7 Intel
    CPU).
    
    Additionally, we wrote a microbenchmark to stress the flow table
    performance. The benchmark inserts random flows into the flow
    hash and then performs lookups. Our hash deployed on a CRC32
    capable CPU reduces the lookup for 1000 flows, 100 masks from
    ~10,100us to ~6,700us, for example.
    
    Thus, simply use the newly introduced arch_fast_hash2() as a
    drop-in replacement.
    
    Signed-off-by: Francesco Fusco <ffusco@redhat.com>
    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Signed-off-by: Thomas Graf <tgraf@redhat.com>
    Acked-by: Jesse Gross <jesse@nicira.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/openvswitch/flow_table.c b/net/openvswitch/flow_table.c
index e42542706087..0e720c316070 100644
--- a/net/openvswitch/flow_table.c
+++ b/net/openvswitch/flow_table.c
@@ -25,7 +25,7 @@
 #include <linux/if_vlan.h>
 #include <net/llc_pdu.h>
 #include <linux/kernel.h>
-#include <linux/jhash.h>
+#include <linux/hash.h>
 #include <linux/jiffies.h>
 #include <linux/llc.h>
 #include <linux/module.h>
@@ -362,7 +362,7 @@ static u32 flow_hash(const struct sw_flow_key *key, int key_start,
 	/* Make sure number of hash bytes are multiple of u32. */
 	BUILD_BUG_ON(sizeof(long) % sizeof(u32));
 
-	return jhash2(hash_key, hash_u32s, 0);
+	return arch_fast_hash2(hash_key, hash_u32s, 0);
 }
 
 static int flow_key_start(const struct sw_flow_key *key)