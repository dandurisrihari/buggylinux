{
  "hash": "500f80872645ac8c1d81c206004bf5b4daeaf825",
  "hash_short": "500f8087",
  "subject": "net: ovs: use CRC32 accelerated flow hash if available",
  "body": "Currently OVS uses jhash2() for calculating flow hashes in its\ninternal flow_hash() function. The performance of the flow_hash()\nfunction is critical, as the input data can be hundreds of bytes\nlong.\n\nOVS is largely deployed in x86_64 based datacenters.  Therefore,\nwe argue that the performance critical fast path of OVS should\nexploit underlying CPU features in order to reduce the per packet\nprocessing costs. We replace jhash2 with the hash implementation\nprovided by the kernel hash lib, which exploits the crc32l\ninstruction to achieve high performance\n\nOur patch greatly reduces the hash footprint from ~200 cycles of\njhash2() to around ~90 cycles in case of ovs_flow_hash_crc()\n(measured with rdtsc over maximum length flow keys on an i7 Intel\nCPU).\n\nAdditionally, we wrote a microbenchmark to stress the flow table\nperformance. The benchmark inserts random flows into the flow\nhash and then performs lookups. Our hash deployed on a CRC32\ncapable CPU reduces the lookup for 1000 flows, 100 masks from\n~10,100us to ~6,700us, for example.\n\nThus, simply use the newly introduced arch_fast_hash2() as a\ndrop-in replacement.\n\nSigned-off-by: Francesco Fusco <ffusco@redhat.com>\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nSigned-off-by: Thomas Graf <tgraf@redhat.com>\nAcked-by: Jesse Gross <jesse@nicira.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "full_message": "net: ovs: use CRC32 accelerated flow hash if available\n\nCurrently OVS uses jhash2() for calculating flow hashes in its\ninternal flow_hash() function. The performance of the flow_hash()\nfunction is critical, as the input data can be hundreds of bytes\nlong.\n\nOVS is largely deployed in x86_64 based datacenters.  Therefore,\nwe argue that the performance critical fast path of OVS should\nexploit underlying CPU features in order to reduce the per packet\nprocessing costs. We replace jhash2 with the hash implementation\nprovided by the kernel hash lib, which exploits the crc32l\ninstruction to achieve high performance\n\nOur patch greatly reduces the hash footprint from ~200 cycles of\njhash2() to around ~90 cycles in case of ovs_flow_hash_crc()\n(measured with rdtsc over maximum length flow keys on an i7 Intel\nCPU).\n\nAdditionally, we wrote a microbenchmark to stress the flow table\nperformance. The benchmark inserts random flows into the flow\nhash and then performs lookups. Our hash deployed on a CRC32\ncapable CPU reduces the lookup for 1000 flows, 100 masks from\n~10,100us to ~6,700us, for example.\n\nThus, simply use the newly introduced arch_fast_hash2() as a\ndrop-in replacement.\n\nSigned-off-by: Francesco Fusco <ffusco@redhat.com>\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nSigned-off-by: Thomas Graf <tgraf@redhat.com>\nAcked-by: Jesse Gross <jesse@nicira.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
  "author_name": "Francesco Fusco",
  "author_email": "ffusco@redhat.com",
  "author_date": "Thu Dec 12 16:09:06 2013 +0100",
  "author_date_iso": "2013-12-12T16:09:06+01:00",
  "committer_name": "David S. Miller",
  "committer_email": "davem@davemloft.net",
  "committer_date": "Tue Dec 17 14:27:17 2013 -0500",
  "committer_date_iso": "2013-12-17T14:27:17-05:00",
  "files_changed": [
    "net/openvswitch/flow_table.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/openvswitch/flow_table.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 2,
  "total_deletions": 2,
  "total_changes": 4,
  "parents": [
    "71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v3.14",
    "v3.14-rc1",
    "v3.14-rc2",
    "v3.14-rc3",
    "v3.14-rc4",
    "v3.14-rc5",
    "v3.14-rc6",
    "v3.14-rc7",
    "v3.14-rc8",
    "v3.15"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "exploit"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "net/openvswitch/flow_table.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}