{
  "hash": "a0d7e2fc61ab54f1be817c9300231a1b48432628",
  "hash_short": "a0d7e2fc",
  "subject": "KVM: arm64: vgic-v4: Only attempt vLPI mapping for actual MSIs",
  "body": "Some 'creative' VMMs out there may assign a VFIO MSI eventfd to an SPI\nrouting entry.\n\nAnd yes, I can already hear you shouting about possibly driving a level\ninterrupt with an edge-sensitive one. You know who you are.\n\nThis works for the most part, and interrupt injection winds up taking\nthe software path. However, when running on GICv4-enabled hardware, KVM\nerroneously attempts to setup LPI forwarding, even though the KVM\nrouting isn't an MSI.\n\nThanks to misuse of a union, the MSI destination is unlikely to match any\nITS in the VM and kvm_vgic_v4_set_forwarding() bails early. Later on when\nthe VM is being torn down, this half-configured state triggers the\nWARN_ON() in kvm_vgic_v4_unset_forwarding() due to the fact that no HW\nIRQ was ever assigned.\n\nAvoid the whole mess by preventing SPI routing entries from getting into\nthe LPI forwarding helpers.\n\nReported-by: Sudheer Dantuluri <dantuluris@google.com>\nTested-by: Sudheer Dantuluri <dantuluris@google.com>\nFixes: 196b136498b3 (\"KVM: arm/arm64: GICv4: Wire mapping/unmapping of VLPIs in VFIO irq bypass\")\nAcked-by: Marc Zyngier <maz@kernel.org>\nLink: https://lore.kernel.org/r/20250226183124.82094-2-oliver.upton@linux.dev\nSigned-off-by: Oliver Upton <oliver.upton@linux.dev>",
  "full_message": "KVM: arm64: vgic-v4: Only attempt vLPI mapping for actual MSIs\n\nSome 'creative' VMMs out there may assign a VFIO MSI eventfd to an SPI\nrouting entry.\n\nAnd yes, I can already hear you shouting about possibly driving a level\ninterrupt with an edge-sensitive one. You know who you are.\n\nThis works for the most part, and interrupt injection winds up taking\nthe software path. However, when running on GICv4-enabled hardware, KVM\nerroneously attempts to setup LPI forwarding, even though the KVM\nrouting isn't an MSI.\n\nThanks to misuse of a union, the MSI destination is unlikely to match any\nITS in the VM and kvm_vgic_v4_set_forwarding() bails early. Later on when\nthe VM is being torn down, this half-configured state triggers the\nWARN_ON() in kvm_vgic_v4_unset_forwarding() due to the fact that no HW\nIRQ was ever assigned.\n\nAvoid the whole mess by preventing SPI routing entries from getting into\nthe LPI forwarding helpers.\n\nReported-by: Sudheer Dantuluri <dantuluris@google.com>\nTested-by: Sudheer Dantuluri <dantuluris@google.com>\nFixes: 196b136498b3 (\"KVM: arm/arm64: GICv4: Wire mapping/unmapping of VLPIs in VFIO irq bypass\")\nAcked-by: Marc Zyngier <maz@kernel.org>\nLink: https://lore.kernel.org/r/20250226183124.82094-2-oliver.upton@linux.dev\nSigned-off-by: Oliver Upton <oliver.upton@linux.dev>",
  "author_name": "Oliver Upton",
  "author_email": "oliver.upton@linux.dev",
  "author_date": "Wed Feb 26 10:31:21 2025 -0800",
  "author_date_iso": "2025-02-26T10:31:21-08:00",
  "committer_name": "Oliver Upton",
  "committer_email": "oliver.upton@linux.dev",
  "committer_date": "Wed Feb 26 13:22:48 2025 -0800",
  "committer_date_iso": "2025-02-26T13:22:48-08:00",
  "files_changed": [
    "arch/arm64/kvm/arm.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "arch/arm64/kvm/arm.c",
      "insertions": 12,
      "deletions": 0
    }
  ],
  "total_insertions": 12,
  "total_deletions": 0,
  "total_changes": 12,
  "parents": [
    "0ad2507d5d93f39619fc42372c347d6006b64319"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "injection",
      "bypass"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "arch/arm64/kvm/arm.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}