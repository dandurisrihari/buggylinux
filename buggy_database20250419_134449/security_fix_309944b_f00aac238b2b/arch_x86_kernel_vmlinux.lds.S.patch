commit 309944be296efbb3ca4737d12ef49d2ba97cbecc
Author: Andy Lutomirski <luto@amacapital.net>
Date:   Mon Mar 17 23:22:11 2014 +0100

    x86, vdso: Zero-pad the VVAR page
    
    By coincidence, the VVAR page is at the end of an ELF segment.  As a
    result, if it ends up being a partial page, the kernel loader will
    leave garbage behind at the end of the vvar page.  Zero-pad it to a
    full page to fix this issue.
    
    This has probably been broken since the VVAR page was introduced.
    On QEMU, if you dump the run-time contents of the VVAR page, you can
    find entertaining strings from seabios left behind.
    
    It's remotely possible that this is a security bug -- conceivably
    there's some BIOS out there that leaves something sensitive in the
    few K of memory that is exposed to userspace.
    
    Signed-off-by: Stefani Seibold <stefani@seibold.net>
    Link: http://lkml.kernel.org/r/1395094933-14252-12-git-send-email-stefani@seibold.net
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

diff --git a/arch/x86/kernel/vmlinux.lds.S b/arch/x86/kernel/vmlinux.lds.S
index 1d4897baf1cc..49edf2dd3613 100644
--- a/arch/x86/kernel/vmlinux.lds.S
+++ b/arch/x86/kernel/vmlinux.lds.S
@@ -164,6 +164,11 @@ SECTIONS
 #undef __VVAR_KERNEL_LDS
 #undef EMIT_VVAR
 
+		/*
+		 * Pad the rest of the page with zeros.  Otherwise the loader
+		 * can leave garbage here.
+		 */
+		. = __vvar_beginning_hack + PAGE_SIZE;
 	} :data
 
        . = ALIGN(__vvar_page + PAGE_SIZE, PAGE_SIZE);