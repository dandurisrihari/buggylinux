{
  "hash": "991a211aa99f468cd291a97b8dcb448ebc77f6c4",
  "hash_short": "991a211a",
  "subject": "s390/cio: replace deprecated strncpy with strscpy",
  "body": "strncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect both `params` and `id` to be NUL-terminated based on their\nusage with format strings:\n\n\tformat_node_data(iuparams, iunodeid, &lir->incident_node);\n\tformat_node_data(auparams, aunodeid, &lir->attached_node);\n\n\tswitch (lir->iq.class) {\n\tcase LIR_IQ_CLASS_DEGRADED:\n\t\tpr_warn(\"Link degraded: RS=%02x RSID=%04x IC=%02x \"\n\t\t\t\"IUPARAMS=%s IUNODEID=%s AUPARAMS=%s AUNODEID=%s\\n\",\n\t\t\tsei_area->rs, sei_area->rsid, lir->ic, iuparams,\n\t\t\tiunodeid, auparams, aunodeid);\n\nNUL-padding is not required as both `params` and `id` have been memset\nto 0:\n\n\tmemset(params, 0, PARAMS_LEN);\n\tmemset(id, 0, NODEID_LEN);\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nNote that there's no overread bugs in the current implementation as the\nstring literal \"n/a\" has a size much smaller than PARAMS_LEN or\nNODEID_LEN. Nonetheless, let's favor strscpy().\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Vineeth Vijayan <vneethv@linux.ibm.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20231023-strncpy-drivers-s390-cio-chsc-c-v1-1-8b76a7b83260@google.com\nSigned-off-by: Vasily Gorbik <gor@linux.ibm.com>",
  "full_message": "s390/cio: replace deprecated strncpy with strscpy\n\nstrncpy() is deprecated for use on NUL-terminated destination strings\n[1] and as such we should prefer more robust and less ambiguous string\ninterfaces.\n\nWe expect both `params` and `id` to be NUL-terminated based on their\nusage with format strings:\n\n\tformat_node_data(iuparams, iunodeid, &lir->incident_node);\n\tformat_node_data(auparams, aunodeid, &lir->attached_node);\n\n\tswitch (lir->iq.class) {\n\tcase LIR_IQ_CLASS_DEGRADED:\n\t\tpr_warn(\"Link degraded: RS=%02x RSID=%04x IC=%02x \"\n\t\t\t\"IUPARAMS=%s IUNODEID=%s AUPARAMS=%s AUNODEID=%s\\n\",\n\t\t\tsei_area->rs, sei_area->rsid, lir->ic, iuparams,\n\t\t\tiunodeid, auparams, aunodeid);\n\nNUL-padding is not required as both `params` and `id` have been memset\nto 0:\n\n\tmemset(params, 0, PARAMS_LEN);\n\tmemset(id, 0, NODEID_LEN);\n\nConsidering the above, a suitable replacement is `strscpy` [2] due to\nthe fact that it guarantees NUL-termination on the destination buffer\nwithout unnecessarily NUL-padding.\n\nNote that there's no overread bugs in the current implementation as the\nstring literal \"n/a\" has a size much smaller than PARAMS_LEN or\nNODEID_LEN. Nonetheless, let's favor strscpy().\n\nLink: https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings [1]\nLink: https://manpages.debian.org/testing/linux-manual-4.8/strscpy.9.en.html [2]\nLink: https://github.com/KSPP/linux/issues/90\nCc: linux-hardening@vger.kernel.org\nSigned-off-by: Justin Stitt <justinstitt@google.com>\nReviewed-by: Vineeth Vijayan <vneethv@linux.ibm.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nLink: https://lore.kernel.org/r/20231023-strncpy-drivers-s390-cio-chsc-c-v1-1-8b76a7b83260@google.com\nSigned-off-by: Vasily Gorbik <gor@linux.ibm.com>",
  "author_name": "Justin Stitt",
  "author_email": "justinstitt@google.com",
  "author_date": "Mon Oct 23 19:24:38 2023 +0000",
  "author_date_iso": "2023-10-23T19:24:38+00:00",
  "committer_name": "Vasily Gorbik",
  "committer_email": "gor@linux.ibm.com",
  "committer_date": "Wed Oct 25 15:08:30 2023 +0200",
  "committer_date_iso": "2023-10-25T15:08:30+02:00",
  "files_changed": [
    "drivers/s390/cio/chsc.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "drivers/s390/cio/chsc.c",
      "insertions": 2,
      "deletions": 2
    }
  ],
  "total_insertions": 2,
  "total_deletions": 2,
  "total_changes": 4,
  "parents": [
    "e37988bcd1fddb726cf08e4f04a1b8dc4a2f80aa"
  ],
  "branches": [
    "* development",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [],
  "is_merge": false,
  "security_info": {
    "cve_ids": [],
    "security_keywords": [
      "hardening"
    ]
  },
  "fix_type": "security",
  "file_results": [
    {
      "file": "drivers/s390/cio/chsc.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}