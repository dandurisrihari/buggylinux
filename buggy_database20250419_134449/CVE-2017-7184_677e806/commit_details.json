{
  "hash": "677e806da4d916052585301785d847c3b3e6186a",
  "hash_short": "677e806d",
  "subject": "xfrm_user: validate XFRM_MSG_NEWAE XFRMA_REPLAY_ESN_VAL replay_window",
  "body": "When a new xfrm state is created during an XFRM_MSG_NEWSA call we\nvalidate the user supplied replay_esn to ensure that the size is valid\nand to ensure that the replay_window size is within the allocated\nbuffer.  However later it is possible to update this replay_esn via a\nXFRM_MSG_NEWAE call.  There we again validate the size of the supplied\nbuffer matches the existing state and if so inject the contents.  We do\nnot at this point check that the replay_window is within the allocated\nmemory.  This leads to out-of-bounds reads and writes triggered by\nnetlink packets.  This leads to memory corruption and the potential for\npriviledge escalation.\n\nWe already attempt to validate the incoming replay information in\nxfrm_new_ae() via xfrm_replay_verify_len().  This confirms that the user\nis not trying to change the size of the replay state buffer which\nincludes the replay_esn.  It however does not check the replay_window\nremains within that buffer.  Add validation of the contained\nreplay_window.\n\nCVE-2017-7184\nSigned-off-by: Andy Whitcroft <apw@canonical.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "full_message": "xfrm_user: validate XFRM_MSG_NEWAE XFRMA_REPLAY_ESN_VAL replay_window\n\nWhen a new xfrm state is created during an XFRM_MSG_NEWSA call we\nvalidate the user supplied replay_esn to ensure that the size is valid\nand to ensure that the replay_window size is within the allocated\nbuffer.  However later it is possible to update this replay_esn via a\nXFRM_MSG_NEWAE call.  There we again validate the size of the supplied\nbuffer matches the existing state and if so inject the contents.  We do\nnot at this point check that the replay_window is within the allocated\nmemory.  This leads to out-of-bounds reads and writes triggered by\nnetlink packets.  This leads to memory corruption and the potential for\npriviledge escalation.\n\nWe already attempt to validate the incoming replay information in\nxfrm_new_ae() via xfrm_replay_verify_len().  This confirms that the user\nis not trying to change the size of the replay state buffer which\nincludes the replay_esn.  It however does not check the replay_window\nremains within that buffer.  Add validation of the contained\nreplay_window.\n\nCVE-2017-7184\nSigned-off-by: Andy Whitcroft <apw@canonical.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
  "author_name": "Andy Whitcroft",
  "author_email": "apw@canonical.com",
  "author_date": "Wed Mar 22 07:29:31 2017 +0000",
  "author_date_iso": "2017-03-22T07:29:31+00:00",
  "committer_name": "Linus Torvalds",
  "committer_email": "torvalds@linux-foundation.org",
  "committer_date": "Wed Mar 29 08:40:06 2017 -0700",
  "committer_date_iso": "2017-03-29T08:40:06-07:00",
  "files_changed": [
    "net/xfrm/xfrm_user.c"
  ],
  "files_changed_count": 1,
  "stats": [
    {
      "file": "net/xfrm/xfrm_user.c",
      "insertions": 3,
      "deletions": 0
    }
  ],
  "total_insertions": 3,
  "total_deletions": 0,
  "total_changes": 3,
  "parents": [
    "c470abd4fde40ea6a0846a2beab642a578c0b8cd"
  ],
  "branches": [
    "* development",
    "master",
    "remotes/origin/HEAD -> origin/master",
    "remotes/origin/master"
  ],
  "tags": [
    "v4.11",
    "v4.11-rc5",
    "v4.11-rc6",
    "v4.11-rc7",
    "v4.11-rc8",
    "v4.12",
    "v4.12-rc1",
    "v4.12-rc2",
    "v4.12-rc3",
    "v4.12-rc4"
  ],
  "is_merge": false,
  "security_info": {
    "cve_ids": [
      "CVE-2017-7184"
    ],
    "security_keywords": [
      "inject"
    ]
  },
  "fix_type": "cve",
  "file_results": [
    {
      "file": "net/xfrm/xfrm_user.c",
      "pre_version": false,
      "post_version": true,
      "patch": true
    }
  ]
}